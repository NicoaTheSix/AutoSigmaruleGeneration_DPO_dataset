1. **Identify Initial Access via Spearphishing Email**  
   - Monitor for the creation of processes related to Outlook that involve email interactions. Specifically, look for emails with attachments named "invoice.docx" or links to malicious scripts.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\OUTLOOK.EXE" (or similar path for Outlook)  
     - `dstNode.Type`: "File"  
     - `dstNode.Name`: "invoice.docx" (or similar for other attachments)  

2. **Monitor Opening of Malicious Attachments**  
   - Track the execution of Microsoft Word or Excel when a user opens a document containing a macro.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE" (for Word) or "C:\\Program Files\\Microsoft Office\\root\\Office16\\EXCEL.EXE" (for Excel)  
     - `dstNode.Type`: "File"  
     - `dstNode.Name`: "invoice.docx" (or "report.xlsm")  

3. **Capture Execution of the Macro**  
   - Detect when a macro in Word or Excel invokes PowerShell to execute commands.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE" (or "EXCEL.EXE")  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  

4. **Identify UAC Bypass via COM Interface**  
   - Monitor for the use of the CMSTPLUA COM object invoked by PowerShell to bypass UAC.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "C:\\Windows\\System32\\CMSTPLUA.exe"  

5. **Track Execution of Malicious Payload**  
   - Look for the execution of a malicious executable that establishes a reverse shell or installs additional malware.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\CMSTPLUA.exe" (or similar)  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "C:\\Users\\User\\Downloads\\payload.exe"  

6. **Monitor Registry Key Manipulation for UAC Bypass**  
   - Detect modifications to the registry key that suppress UAC prompts.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Type`: "Registry"  
     - `dstNode.Key`: "HKCU\\Software\\Classes\\ms-settings\\shell\\open\\command"  

7. **Capture Scheduled Task Creation for Malicious Payload**  
   - Monitor for the creation of scheduled tasks that execute malicious payloads with elevated privileges.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Type`: "Registry"  
     - `dstNode.Key`: "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks"  

8. **Identify Use of Legitimate Tools for Malicious Purposes**  
   - Track the execution of legitimate Windows utilities (e.g., fodhelper.exe) used to run malicious payloads without triggering UAC.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\fodhelper.exe"  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "C:\\Path\\To\\Malware.exe"  

9. **Monitor DLL Hijacking for UAC Bypass**  
   - Detect the loading of malicious DLLs that exploit DLL hijacking vulnerabilities to bypass UAC.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "C:\\Path\\To\\MaliciousDLL\\malicious.dll"  