1. **Identify Initial Access via Spearphishing Email**  
   - Monitor for the creation of processes related to Outlook that involve email interactions. Specifically, look for emails with attachments named "Update_Document.docx" and subject lines containing "Important Update".  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\OUTLOOK.EXE" (or similar path for Outlook)  
     - `dstNode.Type`: "File"  
     - `dstNode.Name`: "Update_Document.docx"  

2. **Identify Opening the Malicious Attachment**  
   - Monitor for the execution of Microsoft Word processes that open documents containing macros. Specifically, look for the execution of macros with the code `AutoOpen()`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE" (or similar path for Word)  
     - `relation`: "Process Create"  

3. **Identify Downloading the Payload**  
   - Monitor for PowerShell commands executed as a child process of Word that download files from the internet. Specifically, look for commands that include `Invoke-WebRequest` with a URI pointing to a malicious server.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Type`: "File"  
     - `dstNode.Name`: "payload.exe"  
     - `relation`: "Process Create"  

4. **Identify Executing the Malicious Payload**  
   - Monitor for the execution of executables from the TEMP directory, particularly those initiated by Office applications. Specifically, look for commands that execute `start /B "$env:TEMP\\payload.exe"`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\cmd.exe"  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "$env:TEMP\\payload.exe"  
     - `relation`: "Process Create"  

5. **Identify Establishing Persistence**  
   - Monitor for registry modifications that create new services resembling legitimate services. Specifically, look for changes to the registry key `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MaliciousService`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\svchost.exe" (or similar for service creation)  
     - `dstNode.Type`: "Registry"  
     - `dstNode.Key`: "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MaliciousService"  
     - `relation`: "RegCreateKey"  

6. **Identify Command and Control Communication**  
   - Monitor for outbound network connections initiated by the malicious payload to known malicious IP addresses or domains. Specifically, look for connections to `http://malicious-server.com`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\cmd.exe" (or similar for network activity)  
     - `dstNode.Type`: "Network"  
     - `dstNode.Dstaddress`: "malicious-server.com"  
     - `relation`: "TCP Connect"  

7. **Identify Data Exfiltration**  
   - Monitor for PowerShell commands that exfiltrate data to external servers, particularly those involving sensitive file paths. Specifically, look for commands that include `Invoke-WebRequest` with a POST method to `http://malicious-server.com/exfiltrate`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Type`: "Network"  
     - `dstNode.Dstaddress`: "malicious-server.com"  
     - `relation`: "TCP Send"  