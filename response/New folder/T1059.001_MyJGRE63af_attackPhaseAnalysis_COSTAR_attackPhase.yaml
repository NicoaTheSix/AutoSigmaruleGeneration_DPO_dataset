1. **Framework Section**  
   Phase 1: *Execution*  
   - Monitor for the use of PowerShell commands and scripts, particularly those that invoke `Start-Process`, `Invoke-Command`, and other cmdlets.  
   - Analyze command-line arguments for encoded or obfuscated PowerShell commands, especially those using `-EncodedCommand` or `-ExecutionPolicy Bypass`.  
   - Detect the execution of PowerShell scripts from unusual locations or through non-standard methods (e.g., via .LNK files or batch scripts).  

   Phase 2: *Discovery*  
   - Identify PowerShell commands that query system information, such as `Get-ChildItem`, `Get-Process`, and `Get-Command`.  
   - Monitor for the use of PowerShell to access sensitive data, including credential harvesting techniques and Active Directory queries.  
   - Track the use of PowerShell modules that facilitate reconnaissance, such as `DSInternals` or `BloodHound`.  

   Phase 3: *Persistence*  
   - Look for PowerShell scripts that create scheduled tasks or modify startup items to ensure execution on system boot.  
   - Monitor for registry modifications that enable PowerShell scripts to run at startup, particularly under `HKCU\Software\Microsoft\Windows\CurrentVersion\Run`.  
   - Detect the use of PowerShell to establish persistence through WMI or Group Policy modifications.  

2. **Behavioral Patterns Section**  
   - **Pattern Name**: PowerShell Command Execution  
     - Examples: "During the 2016 Ukraine Electric Power Attack, Sandworm Team used PowerShell scripts to run a credential harvesting tool in memory to evade defenses."  
     - Associated Phase: Execution  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: Credential Harvesting via PowerShell  
     - Examples: "Akira has used PowerShell scripts for credential harvesting and privilege escalation."  
     - Associated Phase: Discovery  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: Use of Encoded PowerShell Commands  
     - Examples: "During C0018, the threat actors used encoded PowerShell scripts for execution."  
     - Associated Phase: Execution  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: PowerShell for Lateral Movement  
     - Examples: "Cobalt Strike can execute a payload on a remote host with PowerShell."  
     - Associated Phase: Execution  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: PowerShell for System Discovery  
     - Examples: "BloodHound can use PowerShell to pull Active Directory information from the target environment."  
     - Associated Phase: Discovery  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: PowerShell Script for Persistence  
     - Examples: "ComRAT can execute PowerShell scripts loaded into memory or from the file system."  
     - Associated Phase: Persistence  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: PowerShell for Remote Command Execution  
     - Examples: "APT28 downloads and executes PowerShell scripts and performs PowerShell commands."  
     - Associated Phase: Execution  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: PowerShell for Malware Deployment  
     - Examples: "Gootloader can use an encoded PowerShell stager to write to the Registry for persistence."  
     - Associated Phase: Persistence  
     - Mapping to TTP ID: T1059.001  

   - **Pattern Name**: PowerShell for Data Exfiltration  
     - Examples: "During Operation Dream Job, Lazarus Group used PowerShell commands to explore the environment of compromised victims."  
     - Associated Phase: Discovery  
     - Mapping to TTP ID: T1059.001  