1. **Identify Initial Email Delivery**  
   - Monitor for email events where the subject line contains "Invoice Attached" and the attachment is named "Invoice_2023.xlsx".  
   - Reference the `srcNode` as the email application (e.g., Outlook) and the `dstNode` as the attachment file.  
   - Use the schema fields:  
     - `srcNode.Name`: "Outlook"  
     - `dstNode.Name`: "Invoice_2023.xlsx"  
     - `relation`: "Email Received" (custom relation for email events)  
     - `timestamp`: [timestamp of the email event]  

2. **Track User Interaction with Malicious Attachment**  
   - Monitor for events where the user opens the Excel file, triggering macros.  
   - Reference the `srcNode` as the Excel application and the `dstNode` as the malicious Excel file.  
   - Use the schema fields:  
     - `srcNode.Image`: "C:\\Program Files\\Microsoft Office\\root\\Office16\\EXCEL.EXE"  
     - `dstNode.Image`: "C:\\Path\\To\\Invoice_2023.xlsx"  
     - `relation`: "Process Create"  
     - `timestamp`: [timestamp of the macro execution event]  

3. **Log Payload Execution**  
   - Monitor for PowerShell commands executed by the Excel macro that download a payload from a suspicious URL.  
   - Reference the `srcNode` as PowerShell and the `dstNode` as the downloaded executable.  
   - Use the schema fields:  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Image`: [path to the downloaded executable]  
     - `relation`: "Process Create"  
     - `timestamp`: [timestamp of the PowerShell command execution]  

4. **Establish Command and Control Monitoring**  
   - Monitor for outbound HTTP POST requests to the attacker's C2 server.  
   - Reference the `srcNode` as PowerShell and the `dstNode` as the C2 server.  
   - Use the schema fields:  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Dstaddress`: [malicious IP address]  
     - `relation`: "TCP Connect"  
     - `timestamp`: [timestamp of the C2 connection event]  

5. **Track Data Exfiltration**  
   - Monitor for outbound traffic that indicates data exfiltration, specifically HTTP POST requests with sensitive data.  
   - Reference the `srcNode` as PowerShell and the `dstNode` as the destination server.  
   - Use the schema fields:  
     - `srcNode.Image`: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"  
     - `dstNode.Dstaddress`: [C2 server IP]  
     - `relation`: "TCP Send"  
     - `timestamp`: [timestamp of the data exfiltration event]  