1. **Title**: Detect Use of Legitimate Cloud Services for Data Exfiltration  
   **Details**:  
   - Identify events where `srcNode` is a process related to Outlook (e.g., `Image` contains "outlook.exe") and the `relation` is "Process Create".  
   - Map to `dstNode` where `Image` is PowerShell (e.g., `Image` contains "powershell.exe") and `Cmdline` includes `-ExecutionPolicy Bypass -File`.  
   - Look for `dstNode` where `Image` is a web service (e.g., `Uri` contains "googleapis.com") indicating data upload.  
   - Validate that the `relation` is "Process Create" and the `timestamp` indicates a sequence of events.

2. **Title**: Detect Email-Based Data Exfiltration  
   **Details**:  
   - Identify events where `srcNode` is Outlook (e.g., `Image` contains "outlook.exe") and the `relation` is "Process Create".  
   - Map to `dstNode` where `Image` is a web browser (e.g., `Image` contains "chrome.exe") and `Cmdline` includes the URL of a phishing site.  
   - Look for `dstNode` where `Image` is Outlook and the `Cmdline` indicates sending an email to an external address.  
   - Validate that the `relation` is "Process Create" and the `timestamp` indicates a sequence of events.

3. **Title**: Detect API Utilization for Data Exfiltration  
   **Details**:  
   - Identify events where `srcNode` is a web browser (e.g., `Image` contains "chrome.exe") and the `relation` is "Process Create".  
   - Map to `dstNode` where `Image` is PowerShell and `Cmdline` includes EWS API calls (e.g., `Uri` contains "EWS/Exchange.asmx").  
   - Look for `dstNode` where `Image` is PowerShell and `Cmdline` indicates downloading files from emails.  
   - Validate that the `relation` is "Process Create" and the `timestamp` indicates a sequence of events.

4. **Title**: Detect Encrypted Traffic for Covert Exfiltration  
   **Details**:  
   - Identify events where `srcNode` is Outlook (e.g., `Image` contains "outlook.exe") and the `relation` is "Process Create".  
   - Map to `dstNode` where `Image` is PowerShell and `Cmdline` indicates data collection (e.g., `Get-ChildItem`).  
   - Look for `dstNode` where `Image` is PowerShell and `Cmdline` includes API calls to an encrypted service (e.g., `Uri` contains "anonymfiles.com").  
   - Validate that the `relation` is "Process Create" and the `timestamp` indicates a sequence of events.

5. **Title**: Detect Use of Tunneling Services for Data Exfiltration  
   **Details**:  
   - Identify events where `srcNode` is Outlook (e.g., `Image` contains "outlook.exe") and the `relation` is "Process Create".  
   - Map to `dstNode` where `Image` is PowerShell and `Cmdline` indicates setting up a tunneling service (e.g., `ngrok.exe`).  
   - Look for `dstNode` where `Image` is PowerShell and `Cmdline` indicates sending data through a tunnel (e.g., `Invoke-WebRequest` with `ngrok_url`).  
   - Validate that the `relation` is "Process Create" and the `timestamp` indicates a sequence of events.