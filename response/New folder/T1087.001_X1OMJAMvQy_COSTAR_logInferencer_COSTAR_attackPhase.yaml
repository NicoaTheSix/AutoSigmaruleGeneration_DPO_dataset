1. **Identify Initial Access via Email**  
   - Monitor for events where the `srcNode` is an email client (e.g., Outlook) and the `dstNode` is a file (e.g., `malicious_document.docx`).  
   - Set detection conditions to capture emails from unknown senders with attachments that may contain executable macros.

2. **Map Opening the Malicious Attachment**  
   - Look for `Process Create` events where the `srcNode` is Microsoft Word and the `dstNode` is a file that indicates a macro execution (e.g., `malicious_document.docx`).  
   - Validate that the `Cmdline` of the `srcNode` includes parameters that suggest macro execution.

3. **Validate Execution of the Downloaded Payload**  
   - Detect `Process Create` events where the `srcNode` is a process like `cmd.exe` or `explorer.exe` and the `dstNode` is the `payload.exe` file created in the temp directory.  
   - Ensure that the `relation` indicates a direct execution of the newly created file.

4. **Monitor for Establishing Persistence**  
   - Track `RegSetValue` or `RegCreateKey` events where the `srcNode` is a process that modifies the registry to add an entry under `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` for `payload.exe`.  
   - Confirm that the `dstNode` reflects the registry key being modified.

5. **Detect Data Exfiltration**  
   - Identify `TCP Connect` events where the `srcNode` is a web browser (e.g., Chrome) and the `dstNode` is a known malicious IP address or domain.  
   - Ensure that the `relation` indicates outbound network traffic that aligns with data exfiltration patterns.

6. **Capture Cleanup and Evasion**  
   - Monitor for `Process Create` events where the `srcNode` is a command line process (e.g., `cmd.exe`) executing a deletion command for `payload.exe` in the temp directory.  
   - Validate that the `relation` indicates a file deletion action shortly after the payload execution.